{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/fields/field.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/child-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/partial-field.js","webpack://muze/webpack://DataModel/src/fields/measure.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/fields/dimension.js","webpack://muze/webpack://DataModel/src/fields/categorical.js","webpack://muze/webpack://DataModel/src/fields/datetime.js","webpack://muze/webpack://DataModel/src/fields/discreteMeasure.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","MeasureSubtype","DISCRETE","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","rowDiffsetIterator","rowDiffset","callback","length","split","forEach","diffStr","diffStsArr","end","Field","partialFeild","rowDiff","_classCallCheck","this","_ref","_rowDiff","sanitize","val","parsed","data","getData","fieldType","subType","domain","Set","Math","min","apply","max","parse","datas","clone","fieldName","getMinDiff","unit","scale","defAggFn","push","_this","bins","schema","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","year","getFullYear","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","token","formatAs","nDate","formattedStr","String","formattedVal","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","store","fields","Array","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","g","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","arr","uniqueVals","diff","unique","concat","k","abs","len","isArrEqual","arr1","arr2","formatNumber","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","retObj","field","getMeasure","getDimension","Value","value_classCallCheck","configurable","writable","_value","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","childIterator","datamodel","operation","_children","child","_derivation","op","criteria","meta","actualProjField","groupByString","reducer","params","config","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","prepareJoinData","dm2Fields","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","sum","allNulls","isNestedArray","sumVal","carry","x","avg","arrSum","fnList","Infinity","every","first","last","count","std","sqrt","mean","pow","num","defaultReducerName","re","ReducerStore","TypeError","defReducer","entries","_this2","__unregister","delete","reducerStore","oe","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","PartialField","partial_field_classCallCheck","fieldDescription","constructor","Measure","measure_classCallCheck","fieldUnit","fieldScale","fieldDefAggFn","fieldNumberformat","numberFormat","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","parseFloat","isNaN","Dimension","trim","_unique","Categorical","categorical_classCallCheck","subtype","DateTime","datetime_classCallCheck","minDiff","_dtf","DiscreteMeasure","bin","discreteMeasure_classCallCheck","createFields","dataColumn","headers","headersObj","header","default_config","dataFormat","DSVArr","assign","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","Me","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converter","prepareSelectionData","resp","_iteratorNormalCompletion","persistDerivation","model","_model$_derivation","criteriaFn","derivative","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","fieldsConfig","getFieldsConfig","fieldsSpace","values","v","def","some","propField","valueOf","select","fn","saveChild","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","newRowDiffSet","lastInsertedValue","li","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","cloneWithProject","projField","allFields","projectionSet","filter","updateData","relation","defaultConfig","converterFn","Ue","formattedData","nameSpace","_partialFieldspace","_","fieldInSchema","propagateIdentifiers","nonTraversingModel","grouped","forwardPropagation","targetDM","propagationData","hasGrouped","handlePropagation","payload","sourceIdentifiers","sourceId","propagationSourceId","groupedPropModel","selectionModel","rejectionModel","projModel","project","rejectionProjModel","conf","selectionGroupedModel","groupBy","rejectionGroupedModel","entryModel","_propModel$0$clone","calculateVariable","replaceVar","exitModel","_propModel$1$clone","getRootDataModel","_parent","propagateToAllDataModels","identifiers","rootModels","propagationNameSpace","filteredCriteria","mutableActions","action","_ref3","rootGroupByModel","groupByModel","rootModel","propConfig","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","$e","_fieldspace","partialFieldspace","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","sortingDetails","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","existingDataModel","sFieldArr","dimensions","measures","reducerObj","pReducers","defaultReducer","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","hash","rawData","dataInCSVArr","sortedDm","fieldinst","dependency","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","et","addField","isMutableAction","getRootGroupByModel","find","actions","criteriaModel","sourceNamespace","actionName","eventName","measureName","binFieldName","dataSet","createBinnedFieldData","buckets","binCount","binSize","dataStore","binnedData","oriMax","stops","binEnd","prevEndpoint","extraBinELm","endPoint","add","currfield","binField","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","naturalJoin","fullOuterJoin","Stats","enums","pkg","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","entry","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","_this3","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","undefined","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","reverse","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","proto","implicit","ordinal","unknown","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","path","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","domArr","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","serialize","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","resetted","getModelFromSet","condition","Firebolt","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","models","behaviour","entryExitSet","existingModel","getSchema","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","propagationInf","xFields","yFields","xMeasures","yMeasures","filteredModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","CONTINUOUS","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","formatters","strategy_defineProperty","nearestInterval","getNearestInterval","getDefaultTooltipFormatterFn","buildTooltipData","fieldValues","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","setContinousAxisDomain","_context$config6","userDom","_domain","PROPS","axisComponentDimensions","oldConfig","createAxis","_renderConfig","logicalSpace","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_scale","_axis","_animationDonePromises","setAxisComponentDimensions","axisClass","getTickFormatter","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","setOffset","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","_this$config2","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","measureField","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","propagateInterpolatedValues","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","filterImmutableAction","actionInf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","_len4","_key4","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","colData","colIdx","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","_sanitize","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,sbClFA,SAAAC,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAO,EAAAX,GAGA,GAAAI,EAAAJ,GACA,OAAAI,EAAAJ,GAAAtB,QAGA,IAAA4C,EAAAlB,EAAAJ,IACAd,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGA2C,EAAA5C,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAAT,EAAAS,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAApB,EAAAJ,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAE,KAAAF,EAAAT,EAAAnB,EAAAQ,EAAAsB,EAAA,SAAAlB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAV,GAIAhB,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIA2B,IAAAQ,EAAA,GDxEA,ECwEA,SAAAC,KAAA1C,SAAAe,KAAA,YAAA+B,YAAA,4DAAAC,SAAA,wCAAAC,QAAA,QAAAC,QAAA,MAAAC,KAAA,oBAAAC,OAAA,kCAAAC,UAAA,uGAAAC,YAAAC,KAAA,MAAAC,IAAA,6CAAAC,eAAAzC,KAAA,gBAAA0C,MAAA,qBAAA1C,KAAA,iBAAA0C,MAAA,uBAAA1C,KAAA,aAAA0C,MAAA,oBAAAF,IAAA,sBAAAxC,KAAA,oBAAA0C,MAAA,qBAAAC,cAAAC,SAAA,UAAAC,iBAAAC,YAAA,SAAAC,aAAA,UAAAC,eAAA,QAAAC,eAAA,SAAAC,iCAAA,UAAAC,mBAAA,SAAAC,sBAAA,UAAAC,oBAAA,UAAAC,KAAA,QAAAC,YAAA,SAAAC,OAAA,SAAAC,uBAAA,SAAAC,uBAAA,QAAAC,yBAAA,QAAAC,sBAAA,QAAAC,+BAAA,SAAAC,MAAA,QAAAC,UAAA,SAAAC,MAAA,QAAAC,aAAA,QAAAC,wBAAA,QAAAC,mCAAA,SAAAC,cAAA,QAAAC,sBAAA,SAAAC,gBAAA,QAAAC,OAAA,SAAAC,MAAA,QAAAC,gBAAA,QAAAC,oBAAA,QAAAC,QAAA,UAAAC,cAAA,SAAAC,qBAAA,UAAAC,SAAAC,KAAA,6BAAAC,GAAA,4BAAAC,IAAA,kEAAAC,MAAA,4BAAAC,MAAA,8EAAAC,KAAA,eAAAC,cAAA,uBAAAC,KAAA,oEAAA3D,EAAAhB,EAAAO,GClFA,IAAMqE,EAAYC,EAAQ,GAE1BtG,EAAOD,QAAUsG,EAAUzD,QAAUyD,EAAUzD,QAAUyD,ouBCKzD,IAOeE,GANXC,UAAW,WACXC,QAAS,SACTC,QAAS,SACTC,KAAM,QCCKC,GALXC,YAAa,cACbC,SAAU,WACVC,IAAK,OCCMC,GAHXC,SAAU,YCKCC,GAJXC,QAAS,UACTC,UAAW,aCGAC,GALXC,OAAQ,SACRC,QAAS,UACTC,IAAK,OCFF,SAASC,EAAoBC,EAAYC,GACxCD,EAAWE,OAAS,GACDF,EAAWG,MAAM,KACzBC,QAAQ,SAACC,GAChB,IAAMC,EAAaD,EAAQF,MAAM,KAC3B5B,GAAU+B,EAAW,GACrBC,IAAQD,EAAW,IAAMA,EAAW,IAC1C,GAAIC,GAAOhC,EACP,IAAK,IAAI1F,EAAI0F,EAAO1F,GAAK0H,EAAK1H,GAAK,EAC/BoH,EAASpH,8PCMR2H,aACjB,SAAAzF,EAAY0F,EAAcC,iGAASC,QAC/BC,KAAKC,KAAOJ,EACZG,KAAKE,SAAWJ,qDAIhB,OAAOE,KAAKC,KAAKE,gDAGbC,GACJ,OAAOJ,KAAKC,KAAKI,OAAOD,0CAIxB,IAAIE,EAWJ,OATAA,EAAON,KAAKO,UACgB,cAAxBP,KAAKC,KAAKO,WAA6BR,KAAKC,KAAKQ,YAAcnC,EAAiBE,YAChFkC,8HAAa,IAAIC,IAAIL,MAEVM,KAAKC,IAAIC,MAAM,KAAMR,GACrBM,KAAKG,IAAID,MAAM,KAAMR,OAI7BI,iCAGJN,GACH,OAAOJ,KAAKC,KAAKe,MAAMZ,uCAIrBa,GACF,OAAOjB,KAAKC,KAAKiB,MAAMD,6CAIvB,OAAOjB,KAAKC,KAAKkB,iDAIjB,OAAOnB,KAAKC,KAAKlF,mDAIjB,OAAOiF,KAAKC,KAAK1F,sDA4BjB,OAAOyF,KAAKC,KAAKQ,qDAIjB,OAAOT,KAAKC,KAAKmB,kDASjB,OAAOpB,KAAKC,KAAKoB,6CASjB,OAAOrB,KAAKC,KAAKqB,iDASjB,OAAOtB,KAAKC,KAAKsB,mDAGX,IAAApH,EAAA6F,KACFM,KAIJ,OAHAnB,EAAmBa,KAAKE,SAAU,SAACjI,GAC/BqI,EAAKkB,KAAKC,EAAKxB,KAAKK,KAAKrI,MAEtBqI,uCAIP,OAAON,KAAKC,KAAKyB,wCAnEjB,OAAO1B,KAAKC,KAAKzH,wCAQjB,OAAOwH,KAAKC,KAAK0B,wCAQjB,OAAO3B,KAAKC,KAAKK,WAnEJV,GChBrB,SAASgC,EAAqBC,GAC1B,OAAIA,aAAgBC,KACTD,EAGJ,IAAIC,KAAKD,GASpB,SAASE,EAAKrI,GACV,OAAQA,EAAI,GAAL,IAAgBA,EAAOA,EA8BP,SAASsI,EAAmBC,GACnDjC,KAAKiC,OAASA,EACdjC,KAAKkC,gBACLlC,KAAKmC,kBAfTC,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAKC,QAAQ,2BAA4B,SAkBpDP,EAAkBQ,aAAe,IAIjCR,EAAkBS,yBACdC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAUjBhB,EAAkBiB,oBAAsB,SAAUC,GAC9C,OAAO,SAAU9C,GACb,IAAI+C,EACJ,OAAIC,SAASD,EAAYE,SAASjD,EAAK,KAC5B+C,EAGJD,IAYflB,EAAkBsB,mBAAqB,SAAUC,EAAOL,GACpD,OAAO,SAAC9C,GACJ,IACIlI,EADAD,SAGJ,IAAKmI,EAAO,OAAO8C,EAEnB,IAAMM,EAAOpD,EAAIqD,cAEjB,IAAKxL,EAAI,EAAGC,EAAIqL,EAAMjE,OAAQrH,EAAIC,EAAGD,IACjC,GAAIsL,EAAMtL,GAAGwL,gBAAkBD,EAC3B,OAAOvL,EAIf,gBAAIA,EACOiL,EAEJ,OAqBflB,EAAkB0B,oBAAsB,WACpC,IAAMC,GACFC,OACI,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,SACA,SACA,UACA,YACA,WACA,SACA,aAGFC,GACFF,OACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6OR,OAxOIE,GAEIvL,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAGP,OAFUwB,EAAoBxB,GAErBgE,WAAWC,aAG5BnM,GAEIM,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GACP,IACMkE,EADI1C,EAAoBxB,GACdgE,WAAa,GAE7B,OAAkB,IAAVE,EAAc,GAAKA,GAAOD,aAG1CpK,GAEIzB,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAAC9D,GACL,OAAIA,EACOA,EAAIqD,cAER,MAEXU,UAAW,SAAAA,UAAC/D,GAIR,OAHUwB,EAAoBxB,GACdgE,WAEA,GAAK,KAAO,OAGpCG,GAEI/L,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAAC9D,GACL,OAAIA,EACOA,EAAIqD,cAER,MAEXU,UAAW,SAAAA,UAAC/D,GAIR,OAHUwB,EAAoBxB,GACdgE,WAEA,GAAK,KAAO,OAGpCI,GAEIhM,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAAO2B,EAHGH,EAAoBxB,GACfqE,gBAKvBC,GAEIlM,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAAO2B,EAHGH,EAAoBxB,GACZuE,gBAK1BC,GAEIpM,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAHUwB,EAAoBxB,GACjByE,kBAEHR,aAGlBhK,GAEI7B,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQC,MAAMkB,KAAK,KAA9B,KACbZ,OAAQlC,EAAkBsB,mBAAmBK,EAAQC,OACrDO,UAND,SAAAA,UAMY/D,GACP,IACM2E,EADInD,EAAoBxB,GAChB4E,SAEd,OAAQrB,EAAQC,MAAMmB,GAAMV,aAGpCY,GAEIzM,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQE,KAAKiB,KAAK,KAA7B,KACbZ,OAAQlC,EAAkBsB,mBAAmBK,EAAQE,MACrDM,UAND,SAAAA,UAMY/D,GACP,IACM2E,EADInD,EAAoBxB,GAChB4E,SAEd,OAAQrB,EAAQE,KAAKkB,GAAMV,aAGnClK,GAEI3B,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAHUwB,EAAoBxB,GAChB8E,UAEHb,aAGnB9L,GAEIC,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAAO2B,EAHGH,EAAoBxB,GAChB8E,aAKtBC,GAEI3M,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUF,MAAMkB,KAAK,KAAhC,KACbZ,OAAQlC,EAAkBsB,mBAAmBQ,EAAUF,OACvDO,UAND,SAAAA,UAMY/D,GACP,IACMgF,EADIxD,EAAoBxB,GACdiF,WAEhB,OAAQvB,EAAUF,MAAMwB,GAAQf,aAGxCiB,GAEI9M,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUD,KAAKiB,KAAK,KAA/B,KACbZ,OAAQlC,EAAkBiB,oBAAoBa,EAAUD,MACxDM,UAND,SAAAA,UAMY/D,GACP,IACMgF,EADIxD,EAAoBxB,GACdiF,WAEhB,OAAQvB,EAAUD,KAAKuB,GAAQf,aAGvChM,GAEIG,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OALD,SAAAA,OAKS9D,GAAO,OAAO4B,wBAAwC5B,GAAO,GACrE+D,UAND,SAAAA,UAMY/D,GAIP,OAAO2B,EAHGH,EAAoBxB,GACdiF,WAEG,KAG3BE,GAEI/M,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OALD,SAAAA,OAKS9D,GACJ,GAAIA,EAAK,CACL,IAAMlI,EAAIkI,EAAId,OACdc,EAAMA,EAAIoF,UAAUtN,EAAI,EAAGA,GAG/B,OAAO8J,wBAAwC5B,IAEnD+D,UAbD,SAAAA,UAaY/D,GACP,IACIqF,EADM7D,EAAoBxB,GACjBsF,cAAcrB,WACvBnM,SAOJ,OALIuN,IACAvN,EAAIuN,EAAKnG,OACTmG,EAAOA,EAAKD,UAAUtN,EAAI,EAAGA,IAG1BuN,IAGfE,GAEInN,KAAM,IACNwL,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OAAQlC,EAAkBiB,sBAC1BkB,UAND,SAAAA,UAMY/D,GAIP,OAHUwB,EAAoBxB,GACfsF,cAAcrB,eAgB7CrC,EAAkB4D,oBAAsB,WACpC,IAAMC,EAAc7D,EAAkB0B,sBAEtC,OACIb,KAAMgD,EAAY9B,EAClB+B,QAASD,EAAY3N,EACrB6N,eAAgBF,EAAY5L,EAC5B+L,eAAgBH,EAAYtB,EAC5BzB,OAAQ+C,EAAYrB,EACpBzB,OAAQ8C,EAAYnB,EACpBuB,UAAWJ,EAAYxL,EACvB6L,SAAUL,EAAYZ,EACtBkB,aAAcN,EAAY1L,EAC1BiM,4BAA6BP,EAAYtN,EACzC8N,YAAaR,EAAYV,EACzBmB,WAAYT,EAAYP,EACxBiB,cAAeV,EAAYxN,EAC3BmO,WAAYX,EAAYN,EACxBkB,UAAWZ,EAAYF,IAW/B3D,EAAkB0E,cAAgB,WAC9B,IAAMb,EAAc7D,EAAkB0B,sBAChCiD,EAAkB,SAAAxN,IAMpB,IALA,IAAIlB,EAAI,EACJ2O,SACAC,SACE3O,EAAI4O,UAAKxH,OAERrH,EAAIC,EAAGD,IACV2O,oBAAW3O,SAAX2O,UAAW3O,IACX6O,kBAAS7O,SAAT6O,UAAS7O,MACL4O,EAAcD,GAItB,OAAKC,EAEEA,EAAY,GAAG3C,OAAO2C,EAAY,IAFd,MAK/B,OACInE,MAAOmD,EAAYN,EAAGM,EAAYF,EAC9BgB,GAEJhE,OAAQkD,EAAYV,EAAGU,EAAYP,EAAGO,EAAYxN,EAC9CsO,GAEJ/D,KAAMiD,EAAYxL,EAAGwL,EAAYZ,EAAGY,EAAY1L,EAAG0L,EAAYtN,EAC3DoO,GAEJ9D,MAAOgD,EAAY9B,EAAG8B,EAAY3N,EAAG2N,EAAY5L,EAAG4L,EAAYtB,EAC5D,SAAUwC,EAAcC,EAAcC,EAAWC,GAC7C,IAAIL,SACAM,SACAC,SACAhH,SAcJ,OAZI4G,IAAiBG,EAAUF,GAAaC,IACJ,OAAhCC,EAAO,GAAGjD,OAAOiD,EAAO,MACxBC,MAGJP,EAAcG,GAEdH,EADOG,GAGOD,EAGbF,GAELzG,EAAMyG,EAAY,GAAG3C,OAAO2C,EAAY,IACpCO,IACAhH,GAAO,IAEJA,GANoB,OASnC0C,QAAS+C,EAAYrB,EACjBmC,GAEJ5D,QAAS8C,EAAYnB,EACjBiC,KAUZ3E,EAAkBqF,WAAa,SAAUpF,GAQrC,IAPA,IAAMqF,EAActF,EAAkBQ,aAChCqD,EAAc7D,EAAkB0B,sBAChC6D,EAAgB5O,OAAO6O,KAAK3B,GAC5B4B,KACFxP,SACAyP,UAEIzP,EAAIgK,EAAO0F,QAAQL,EAAarP,EAAI,KAAO,GAC/CyP,EAAczF,EAAOhK,EAAI,IACmB,IAAxCsP,EAAcI,QAAQD,IAE1BD,EAAWjG,MACPwC,MAAO/L,EACP2P,MAAOF,IAIf,OAAOD,GASXzF,EAAkB6F,SAAW,SAAUhG,EAAMI,GACzC,IAQI/J,EARE4P,EAAQlG,EAAoBC,GAC5B4F,EAAazF,EAAkBqF,WAAWpF,GAC1C4D,EAAc7D,EAAkB0B,sBAClCqE,EAAeC,OAAO/F,GACpBqF,EAActF,EAAkBQ,aAClCoF,SACAK,SACAhQ,SAGJ,IAAKA,EAAI,EAAGC,EAAIuP,EAAWnI,OAAQrH,EAAIC,EAAGD,IAEtCgQ,EAAepC,EADf+B,EAAQH,EAAWxP,GAAG2P,OACYzD,UAAU2D,GAC5CC,EAAeA,EAAaxF,QAAQ,IAAIH,OAAOkF,EAAcM,EAAO,KAAMK,GAG9E,OAAOF,GAQX/F,EAAkBjI,UAAUiH,MAAQ,SAAUkH,EAAeC,GACzD,IAAMzB,EAAgB1E,EAAkB0E,gBAClCxE,EAAWlC,KAAKoI,kBAAkBF,GAClCG,EAAarG,EAAkBS,wBAC/B6F,EAAUH,GAAWA,EAAQG,QAC7BC,KACAC,KACFC,SACAC,SACAC,SACAvI,SACAnI,SACA2Q,SACAC,SACA3Q,SAEJ,IAAKuQ,KAAe/B,EAChB,MAAQ1M,eAAe5B,KAAKsO,EAAe+B,GAA3C,CAMA,IAJAD,EAAKlJ,OAAS,EAEdqJ,GADAD,EAAiBhC,EAAc+B,IACHK,OAAOJ,EAAepJ,OAAS,EAAG,GAAG,GAE5DrH,EAAI,EAAGC,EAAIwQ,EAAepJ,OAAQrH,EAAIC,EAAGD,cAE1CmI,EAAM8B,GADN0G,EAAQF,EAAezQ,IACFO,OAGjBgQ,EAAKhH,KAAK,MAEVgH,EAAKhH,MAAMoH,EAAOxI,IAM1B,GAAI,OAFJyI,EAAcF,EAAW7H,MAAMd,KAAMwI,MAEuBF,EACxD,MAGJC,EAAWF,EAAWI,IAAgBI,EAG1C,OAAON,GAQXvG,EAAkBjI,UAAUqO,kBAAoB,SAAUF,GACtD,IAYIhQ,EAZE+J,EAASjC,KAAKiC,OACd4D,EAAc7D,EAAkB0B,sBAChC4D,EAActF,EAAkBQ,aAChCiF,EAAazF,EAAkBqF,WAAWpF,GAC1C8G,KAEFC,SACAC,SACAC,SACAC,SACAC,SAGAnR,SAEJmR,EAAcpB,OAAO/F,GAErB,IAAMoH,EAAW5B,EAAW6B,IAAI,SAAAnP,GAAA,OAAOoP,EAAI3B,QACrC4B,EAAmB/B,EAAWnI,OACpC,IAAKrH,EAAIuR,EAAmB,EAAGvR,GAAK,EAAGA,KACnCiR,EAAWzB,EAAWxP,GAAG+L,OAEV,IAAMoF,EAAY9J,OAAS,YAKtC0J,IACAA,EAAsBI,EAAY9J,QAGtC6J,EAAaC,EAAY5D,UAAU0D,EAAW,EAAGF,GACjDI,EAAcA,EAAY5D,UAAU,EAAG0D,EAAW,GAC9C9G,OAAOC,OAAO8G,GACdC,EAAY5D,UAAUwD,EAAqBI,EAAY9J,QAE3D0J,EAAsBE,GAblBF,EAAsBE,EAgB9B,IAAKjR,EAAI,EAAGA,EAAIuR,EAAkBvR,IAC9BgR,EAASxB,EAAWxP,GACpBmR,EAAcA,EAAY7G,QAAQ+E,EAAc2B,EAAOrB,MAAO/B,EAAYoD,EAAOrB,OAAO3D,WAG5F,IAAMwF,EAAgBvB,EAAcwB,MAAM,IAAItH,OAAOgH,QAGrD,IAFAK,EAAcE,QAET1R,EAAI,EAAGC,EAAImR,EAAS/J,OAAQrH,EAAIC,EAAGD,IACpC8Q,EAASM,EAASpR,IAAMwR,EAAcxR,GAE1C,OAAO8Q,GAQX/G,EAAkBjI,UAAU6P,cAAgB,SAAU1B,GAClD,GAAIA,aAAyBpG,KACzB,OAAOoG,EACJ,GAAI9E,SAAS8E,IAAoBlI,KAAKiC,OACzC,OAAO,IAAIH,KAAKoG,GAGpB,IAAMhG,EAAWlC,KAAKkC,SAAWlC,KAAKgB,MAAMkH,GAI5C,OAFAhG,EAAS2H,QAAQ,MACjB7J,KAAKmC,WAAa,IAAK2H,SAAS/P,UAAUN,KAAKqH,MAAMgB,KAAMI,IACpDlC,KAAKmC,YAShBH,EAAkBjI,UAAU8N,SAAW,SAAU5F,EAAQiG,GACrD,IAAI/F,SAQJ,OANI+F,EACA/F,EAAanC,KAAKmC,WAAanC,KAAK4J,cAAc1B,IACzC/F,EAAanC,KAAKmC,cAC3BA,EAAanC,KAAK4J,cAAc1B,IAG7BlG,EAAkB6F,SAAS1F,EAAYF,IC7sBnC,IAAAsD,EAAA,SAAAA,EAACwE,GACZ,IAAI9R,EAAI,EACR,OAAO,WAAe,QAAAyB,EAAAoN,UAAAxH,OAAX0K,EAAWC,MAAAvQ,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAX2P,EAAW3P,GAAAyM,UAAAzM,GAClB2P,EAAOxK,QAAQ,SAACY,EAAK8J,GACXH,EAAMG,aAAuBD,QAC/BF,EAAMG,GAAcD,MAAME,MAAO7K,OAAQrH,KAE7C8R,EAAMG,GAAY1I,KAAKpB,KAE3BnI,wNCdFmS,EAAe,SACfC,EAAgB1R,OAAOoB,UAAUsK,SACjCiG,EAAc,kBACdC,EAAa,iBAEnB,SAASC,EAAejB,EAAKkB,GAIzB,IAHA,IAAIxS,EAAIwS,EAAUnL,OACdoL,GAAU,EAEPzS,GAAG,CACN,GAAIsR,IAAQkB,EAAUxS,GAElB,OADSA,EAGbA,GAAK,EAGT,OAAOyS,EA2GX,SAASC,EAASC,EAAMC,EAAMC,GAE1B,gBAAWF,EAAP,YAAAG,EAAOH,MAASR,aAAuBS,EAAP,YAAAE,EAAOF,MAAST,EACzC,eAGAS,EAAP,YAAAE,EAAOF,MAAST,GAAyB,OAATS,EACzBD,aAGAA,EAAP,YAAAG,EAAOH,MAASR,IAChBQ,EAAOC,aAAgBZ,aAnH/B,SAASe,EAAMJ,EAAMC,EAAMC,EAAWG,EAAQC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EAcJ,GATKL,GAKDD,EAAOzJ,KAAKoJ,GACZM,EAAO1J,KAAKqJ,KALZI,GAAUL,GACVM,GAAUL,IAOVA,aAAgBZ,MAChB,IAAKkB,EAAO,EAAGA,EAAON,EAAKvL,OAAQ6L,GAAQ,EAAG,CAC1C,IACIC,EAASR,EAAKO,GACdE,EAASR,EAAKM,GAElB,MAAOhR,GACH,mBAGOkR,EAAP,YAAAN,EAAOM,MAAWjB,EACZU,YAAaO,IACfT,EAAKO,GAAQE,IAIF,OAAXD,aAA0BA,EAAP,YAAAL,EAAOK,MAAWhB,IACrCgB,EAASR,EAAKO,GAAQE,aAAkBpB,cAG9B,KADdsB,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,SAMrD,IAAKC,KAAQN,EAAM,CACf,IACIO,EAASR,EAAKO,GACdE,EAASR,EAAKM,GAElB,MAAOhR,GACH,SAGJ,GAAe,OAAXkR,aAA0BA,EAAP,YAAAN,EAAOM,MAAWjB,GAKrCkB,EAAMjB,EAAcjS,KAAKiT,MACbf,GACO,OAAXc,aAA0BA,EAAP,YAAAL,EAAOK,MAAWhB,IACrCgB,EAASR,EAAKO,QAGJ,KADdI,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,IAGxCI,IAAQf,GACE,OAAXa,GAAqBA,aAAkBnB,QACvCmB,EAASR,EAAKO,QAGJ,KADdI,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,IAI7CN,EAAKO,GAAQE,MAGhB,CACD,GAAIP,YAAaO,EACb,SAEJT,EAAKO,GAAQE,GAIzB,OAAOT,EApGX,CAqHUA,EAAMC,EAAMC,GACXF,2HCrIJ,SAASY,EAASpL,GACrB,OAAO6J,MAAMuB,QAAQpL,GA2ClB,IAAMqL,EAAc,SAAdA,IAAc,aAAY,IAAI3J,MAAO4J,UAAY9K,KAAK+K,MAAsB,IAAhB/K,KAAKgL,WAUjExK,EAAa,SAAbA,EAAcyK,EAAK7H,GAC5B,IACI8H,EADAC,SAOJ,IAJID,EAZO,SAATE,EAAS7R,GAAA,SAAA8R,OAAAC,EAAY,IAAIvL,IAAIkL,KAYdG,UADbhI,EACoB6H,EAAIvC,IAAI,SAAAnP,GAAA,OAAK5B,EAAEyL,KAEf6H,IAETvM,OAAS,EAAG,CACvByM,EAAOnL,KAAKuL,IAAIL,EAAW,GAAKA,EAAW,IAC3C,IAAK,IAAI7T,EAAI,EAAGmU,EAAMN,EAAWxM,OAAQrH,EAAImU,EAAKnU,IAC9C8T,EAAOnL,KAAKC,IAAIkL,EAAMnL,KAAKuL,IAAIL,EAAW7T,GAAK6T,EAAW7T,EAAI,UAGlE8T,EAAOD,EAAW,GAGtB,OAAOC,GAUJ,SAASM,EAAWC,EAAMC,GAC7B,IAAKf,EAAQc,KAAUd,EAAQe,GAC3B,OAAOD,IAASC,EAGpB,GAAID,EAAKhN,SAAWiN,EAAKjN,OACrB,SAGJ,IAAK,IAAIrH,EAAI,EAAGA,EAAIqU,EAAKhN,OAAQrH,IAC7B,GAAIqU,EAAKrU,KAAOsU,EAAKtU,GACjB,SAIR,SAUG,SAASuU,EAAapM,GACzB,OAAOA,EC9GX,IAsCeqM,GArCXnM,QAEAoM,gBAHe,SAAAA,gBAGEC,EAAUnU,GACvB,IAAMoU,EAASpU,GAAQiT,IA8BvB,OA7BAzL,KAAKM,KAAKsM,IACNpU,KAAMoU,EACN5C,OAAQ2C,EACRE,UAHgB,SAAAA,YAIZ,IAAMC,KAIN,OAHA9M,KAAKgK,OAAOxK,QAAQ,SAACuN,GACjBD,EAAOC,EAAMvU,MAAQuU,IAElBD,GAEXE,WAVgB,SAAAA,aAWZ,IAAMF,KAMN,OALA9M,KAAKgK,OAAOxK,QAAQ,SAACuN,GACbA,EAAMpL,OAAO5G,OAAS6D,EAAUC,UAChCiO,EAAOC,EAAMvU,MAAQuU,KAGtBD,GAEXG,aAnBgB,SAAAA,eAoBZ,IAAMH,KAMN,OALA9M,KAAKgK,OAAOxK,QAAQ,SAACuN,GACbA,EAAMpL,OAAO5G,OAAS6D,EAAUE,YAChCgO,EAAOC,EAAMvU,MAAQuU,KAGtBD,IAGR9M,KAAKM,KAAKsM,0PCmBVM,aA1CX,SAAA/S,EAAaiG,EAAK2M,iGAAOI,QACrBxU,OAAOC,eAAeoH,KAAM,UACxBnH,cACAuU,gBACAC,YACAnU,MAAOkH,IAGXJ,KAAK+M,MAAQA,qDAoBb,OAAO/E,OAAOhI,KAAK9G,+CAUnB,OAAO8G,KAAK9G,wCArBZ,OAAO8G,KAAKsN,aAyBLJ,GAzBKI,8YC3Bb,IAUMC,GACTC,OAAQ,SACRC,QAAS,UACTC,QAAS,QACTC,QAAS,UACTC,QAAS,qBACTC,IAAK,OAGIC,GACTC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTC,UAAW,aClBf,SAASC,EAAeC,EAAWhP,EAAUiP,GACxBD,EAAUE,UAClB/O,QAAQ,SAACgP,GACd,GAAIA,EAAMC,aAC0B,IAA7BD,EAAMC,YAAYnP,OACrB,OAAQgP,GACR,KAAKf,EAAeC,OACZgB,EAAMC,YAAY,GAAGC,KAAOnB,EAAeC,QAC3CnO,EAASmP,EAAOA,EAAMC,YAAY,GAAGE,UAEzC,MACJ,KAAKpB,EAAeE,QACZe,EAAMC,YAAY,GAAGC,KAAOnB,EAAeE,SAC3CpO,EAASmP,EAAOA,EAAMC,YAAY,GAAGG,KAAKC,iBAE9C,MACJ,KAAKtB,EAAeG,QACZc,EAAMC,YAAY,GAAGC,KAAOnB,EAAeG,SAC3CrO,EAASmP,GACHM,cAAeN,EAAMC,YAAY,GAAGG,KAAKE,cACvCC,QAASP,EAAMC,YAAY,GAAGE,WAE1C,MACJ,KAAKpB,EAAeK,QAChB,GAAIY,EAAMC,YAAY,GAAGC,KAAOnB,EAAeK,QAAS,CACpD,IAAIoB,GAAUR,EAAMC,YAAY,GAAGG,KAAKK,QAAST,EAAMC,YAAY,GAAGG,KAAK5E,OACvEwE,EAAMC,YAAY,GAAGE,WACzBtP,gBAASmP,GAATnP,OAAmB2P,QC7BhC,SAASE,EAAiBC,EAAKC,GAClC,IAAMC,KACAC,KASN,OARAH,EAAInF,OAAOxK,QAAQ,SAACuN,GAChBuC,EAAO9N,KAAKuL,EAAMpL,OAAOnJ,QAE7B4W,EAAIpF,OAAOxK,QAAQ,SAACuN,IAC2B,IAAvCuC,EAAO3H,QAAQoF,EAAMpL,OAAOnJ,OAC5B6W,EAAO7N,KAAKuL,EAAMpL,OAAOnJ,QAG1B6W,ECRX,SAASE,IAAoB,SAYtB,SAASC,EAAcC,EAAKC,EAAKC,GAA+D,IAArDC,EAAqD9I,UAAAxH,OAAA,YAAAwH,UAAA,IAAAA,UAAA,GAAxB+I,EAAwB/I,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,GAAbgH,EAAMC,MACtFpM,KACArB,KACAwP,EAAqBH,GAAYJ,EACjCQ,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBE,EAAoBH,EAAcvX,KAClC2X,EAAoBF,EAAczX,KAClCA,EAAUuX,EAAcvX,KAAxBA,IAAgCyX,EAAczX,KAC9C4X,EAAmBlB,EAAgBa,EAAeE,GAExD,GAAIC,IAAsBC,EACtB,MAAM,IAAIE,MAAM,8CA2EpB,OAxEAN,EAAc/F,OAAOxK,QAAQ,SAACuN,GAC1B,IAAMuD,EAAY3F,KAAYoC,EAAMpL,SACc,IAA9CyO,EAAiBzI,QAAQ2I,EAAU9X,OAAiBoX,IACpDU,EAAU9X,KAAUuX,EAAcvX,KAAlC8X,IAA0CA,EAAU9X,MAExDmJ,EAAOH,KAAK8O,KAEhBL,EAAcjG,OAAOxK,QAAQ,SAACuN,GAC1B,IAAMuD,EAAY3F,KAAYoC,EAAMpL,SACc,IAA9CyO,EAAiBzI,QAAQ2I,EAAU9X,MAC9BoX,IACDU,EAAU9X,KAAUyX,EAAczX,KAAlC8X,IAA0CA,EAAU9X,KACpDmJ,EAAOH,KAAK8O,IAGhB3O,EAAOH,KAAK8O,KAKpBnR,EAAmBsQ,EAAIc,YAAa,SAACtY,GACjC,IAAIuY,KACAC,SACJtR,EAAmBuQ,EAAIa,YAAa,SAACG,GACjC,IAAMC,KACAC,KACNA,EAAQV,MACRU,EAAQT,MACRJ,EAAc/F,OAAOxK,QAAQ,SAACuN,GAC1B4D,EAAMnP,KAAKuL,EAAMzM,KAAKrI,IACtB2Y,EAAQV,GAAmBnD,EAAMvU,MAAQuU,EAAMzM,KAAKrI,KAExDgY,EAAcjG,OAAOxK,QAAQ,SAACuN,IAC6B,IAAjDqD,EAAiBzI,QAAQoF,EAAMpL,OAAOnJ,OAAgBoX,GACxDe,EAAMnP,KAAKuL,EAAMzM,KAAKoQ,IAE1BE,EAAQT,GAAmBpD,EAAMvU,MAAQuU,EAAMzM,KAAKoQ,KAExD,IAAMG,EAAYC,GAAgBF,EAAQV,IACpCa,EAAYD,GAAgBF,EAAQT,IAC1C,GAAIL,EAAmBe,EAAWE,GAAY,CAC1C,IAAMC,KACNL,EAAMnR,QAAQ,SAACyR,EAASC,GACpBF,EAASrP,EAAOuP,GAAK1Y,MAAQyY,IAE7BT,GAAY1C,EAAMC,QAAU8B,EAC5BvP,EAAKmQ,GAAeO,GAGpB1Q,EAAKkB,KAAKwP,GACVR,KACAC,EAAcxY,QAGjB,IAAK4X,IAAa/B,EAAME,WAAa6B,IAAa/B,EAAMG,cAAgBuC,EAAU,CACnF,IAAMQ,KACF5E,EAAM2D,EAAc/F,OAAO1K,OAAS,EACxCqR,EAAMnR,QAAQ,SAACyR,EAASC,GAEhBF,EAASrP,EAAOuP,GAAK1Y,MADrB0Y,GAAO9E,EACsB6E,EAGA,OAGrCT,KACAC,EAAcxY,EACdqI,EAAKkB,KAAKwP,QAKf,IAAIjT,GAAUuC,EAAMqB,GAAUnJ,SCvGzC,SAAS2Y,EAAW9W,EAAG8K,GACnB,IAAMiM,KAAQ/W,EACRgX,KAAQlM,EACd,OAAIiM,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,EAqEJ,SAASC,EAAWzF,GAAyB,IAApB0F,EAAoBzK,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,GAAXqK,EAIrC,OAHItF,EAAIvM,OAAS,GArBrB,SAASkS,EAAM3F,EAAK4F,EAAIC,EAAIH,GACxB,GAAIG,IAAOD,EAAM,OAAO5F,EAExB,IAAM8F,EAAMF,EAAK7Q,KAAKgR,OAAOF,EAAKD,GAAM,GAKxC,OAJAD,EAAK3F,EAAK4F,EAAIE,EAAKJ,GACnBC,EAAK3F,EAAK8F,EAAM,EAAGD,EAAIH,GAzC3B,SAAgB1F,EAAK4F,EAAIE,EAAKD,EAAIH,GAG9B,IAFA,IAAMM,EAAUhG,EACViG,KACG7Z,EAAIwZ,EAAIxZ,GAAKyZ,EAAIzZ,GAAK,EAC3B6Z,EAAO7Z,GAAK4Z,EAAQ5Z,GAKxB,IAHA,IAAIoC,EAAIoX,EACJtM,EAAIwM,EAAM,EAEL1Z,EAAIwZ,EAAIxZ,GAAKyZ,EAAIzZ,GAAK,EACvBoC,EAAIsX,GACJE,EAAQ5Z,GAAK6Z,EAAO3M,GACpBA,GAAK,GACEA,EAAIuM,GACXG,EAAQ5Z,GAAK6Z,EAAOzX,GACpBA,GAAK,GACEkX,EAAOO,EAAOzX,GAAIyX,EAAO3M,KAAO,GACvC0M,EAAQ5Z,GAAK6Z,EAAOzX,GACpBA,GAAK,IAELwX,EAAQ5Z,GAAK6Z,EAAO3M,GACpBA,GAAK,GArBjB,CA0CU0G,EAAK4F,EAAIE,EAAKD,EAAIH,GAEjB1F,EARX,CAsBaA,EAAK,EAAGA,EAAIvM,OAAS,EAAGiS,GAE1B1F,0HC3EX,SAASkG,EAAWC,EAAUC,EAAUjO,GACpC,IAAIkO,SACJ,OAAQF,GACR,KAAKpT,EAAUC,QACf,KAAKP,EAAiBE,SAEd0T,EADa,SAAbD,EACU,SAAC5X,EAAG8K,GAAJ,OAAUA,EAAEnB,GAAS3J,EAAE2J,IAEvB,SAAC3J,EAAG8K,GAAJ,OAAU9K,EAAE2J,GAASmB,EAAEnB,IAErC,MACJ,QACIkO,EAAU,SAAAnZ,EAACsB,EAAG8K,IACV,IAAMiM,KAAQ/W,EAAE2J,GACVqN,KAAQlM,GAAEnB,GAChB,OAAIoN,EAAKC,EACe,SAAbY,EAAsB,GAAK,EAElCb,EAAKC,EACe,SAAbY,GAAuB,EAAI,EAE/B,GAGf,OAAOC,EAUX,SAASC,EAAU7R,EAAM4J,GACrB,IAAMkI,EAAU,IAAIC,IACdC,KAYN,OAVAhS,EAAKd,QAAQ,SAAC+S,GACV,IAAMC,EAAWD,EAAMrI,GACnBkI,EAAQK,IAAID,GACZF,EAAYF,EAAQtZ,IAAI0Z,IAAW,GAAGhR,KAAK+Q,IAE3CD,EAAY9Q,MAAMgR,GAAWD,KAC7BH,EAAQM,IAAIF,EAAUF,EAAYhT,OAAS,MAI5CgT,EAYX,SAASK,EAAmBC,EAAcC,EAAcC,GACpD,IAAMlM,GACFmM,MAAOH,EAAa,IAQxB,OALAC,EAAaG,OAAO,SAACC,EAAKC,EAAMC,GAE5B,OADAF,EAAIC,GAAQN,EAAa,GAAGtJ,IAAI,SAAAnP,GAAA,OAASoY,EAAMO,EAAmBK,GAAKnP,SAChEiP,GACRrM,GAEIA,ECtEJ,SAASwM,EAAY3D,EAAKC,GAC7B,IAAM2D,KACA1R,KACA2R,KACAhT,KACAyP,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBuD,EAAwBxD,EAAclD,YACtC2G,EAAwBvD,EAAcpD,YACtCrU,EAAUuX,EAAcvX,KAAxBA,UAAsCyX,EAAczX,KAG1D,IAAK6T,EAAWoD,EAAIgE,eAAelU,MAAM,KAAKiS,OAAQ9B,EAAI+D,eAAelU,MAAM,KAAKiS,QAChF,OAAO,KAiBX,SAASkC,EAAkBC,EAAI9G,EAAW+G,GACtCzU,EAAmBwU,EAAGpD,YAAa,SAACtY,GAChC,IAAM0Y,KACFkD,EAAW,GACfP,EAAc9T,QAAQ,SAACsU,GACnB,IAAM5a,EAAQ2T,EAAUiH,GAAYxT,KAAKrI,GACzC4b,OAAgB3a,EAChByX,EAAMmD,GAAc5a,IAEnBma,EAAUQ,KACPD,GAAWtT,EAAKkB,KAAKmP,GACzB0C,EAAUQ,SAStB,OAjCCpE,EAAIgE,eAAelU,MAAM,KAAMC,QAAQ,SAAC2B,GACrC,IAAM4L,EAAQwG,EAAsBpS,GACpCQ,EAAOH,KAAKmJ,KAAYoC,EAAMpL,SAC9B2R,EAAc9R,KAAKuL,EAAMpL,OAAOnJ,QA2BpCkb,EAAkBhE,EAAK8D,MACvBE,EAAkBjE,EAAK8D,MAEhB,IAAIxV,GAAUuC,EAAMqB,GAAUnJ,iIC3DzC,SAASub,EAAKlI,GACV,IAAImI,KACEC,EAAgBpI,EAAI,aAAc5B,MAClCiK,EAASrI,EAAImH,OAAO,SAACmB,EAAO9Z,GAC9B,OAAI4Z,EACOE,EAAM7K,IAAI,SAAC8K,EAAGnc,GAAJ,OAAUmc,EAAI/Z,EAAEpC,MAErC+b,EAAWA,GAAmB,OAAN3Z,EACjB8Z,EAAQ9Z,IAChB4Z,EAAgBhK,qBAASA,MAAM4B,EAAI,GAAGvM,UAASgK,IAAI,kBAAM,IAAK,GACjE,OAAO0K,EAAW,KAAOE,EAQ7B,SAASG,GAAKxI,GACV,IAAMoI,EAAgBpI,EAAI,aAAc5B,MAClCmC,EAAMP,EAAIvM,QAAU,EACpBgV,EAASP,EAAIlI,GACnB,OAAIoI,EACOK,EAAOhL,IAAI,SAAAnP,GAAA,OAAKia,EAAIhI,IAEb,OAAXkI,EAAkB,KAAOA,EAASlI,EAqF7C,IAAMmI,IACFR,MACAM,OACAxT,IAhFJ,SAAAA,IAAcgL,GAEV,OADsBA,EAAI,aAAc5B,MAE7B4B,EAAImH,OAAO,SAACmB,EAAO9Z,GAAR,OAAc8Z,EAAM7K,IAAI,SAAC8K,EAAGnc,GAAJ,OAAU2I,KAAKC,IAAIuT,EAAG/Z,EAAEpC,OAClEgS,qBAASA,MAAM4B,EAAI,GAAGvM,UAASgK,IAAI,kBAAMkL,OAEtC3I,EAAI4I,MAAM,SAAAta,GAAA,OAAW,OAAN5B,IAAc,KAAOqI,KAAKC,IAALD,aAAYiL,KA2EvD9K,IAnEJ,SAAAA,IAAc8K,GAEV,OADsBA,EAAI,aAAc5B,MAE7B4B,EAAImH,OAAO,SAACmB,EAAO9Z,GAAR,OAAc8Z,EAAM7K,IAAI,SAAC8K,EAAGnc,GAAJ,OAAU2I,KAAKG,IAAIqT,EAAG/Z,EAAEpC,OAClEgS,qBAASA,MAAM4B,EAAI,GAAGvM,UAASgK,IAAI,yBAEhCuC,EAAI4I,MAAM,SAAAta,GAAA,OAAW,OAAN5B,IAAc,KAAOqI,KAAKG,IAALH,aAAYiL,KA8DvD6I,MAtDJ,SAAAA,MAAgB7I,GACZ,OAAOA,EAAI,IAsDX8I,KA9CJ,SAAAA,KAAe9I,GACX,OAAOA,EAAIA,EAAIvM,OAAS,IA8CxBsV,MAtCJ,SAAAA,MAAgB/I,GACZ,IAAMoI,EAAgBpI,EAAI,aAAc5B,MAClCmC,EAAMP,EAAIvM,OAChB,OAAI2U,EACOhK,qBAASA,MAAM4B,EAAI,GAAGvM,UAASgK,IAAI,kBAAM8C,IAE7CA,GAiCPyI,IAbJ,SAAAA,IAAchJ,GACV,OAAOjL,KAAKkU,KAZhB,SAAmBjJ,GACf,IAAIkJ,EAAOV,GAAIxI,GACf,OAAOwI,GAAIxI,EAAIvC,IAAI,SAAAnP,GAAA,OAAAyG,KAAAoU,IAAQC,EAAMF,EAAS,MAF9C,CAY8BlJ,MAexBqJ,GAAqB,MAAAC,GAAA,oBAAAhb,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAmG,OAAA5F,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAqU,cAAA,YAAArU,MAAAsU,UAAA,GAAA1U,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCpHrBic,cACF,SAAAjb,IAAe,IAAAhB,EAAA6G,MAAA,SAAA7F,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAArV,KAAA7F,GACX6F,KAAK+J,MAAQ,IAAIsI,IACjBrS,KAAK+J,MAAM2I,IAAI,aAAc4C,GAE7B3c,OAAO4c,QAAQhB,IAAQ/U,QAAQ,SAAChG,GAC5BiI,EAAKsI,MAAM2I,IAAIlZ,EAAI,GAAIA,EAAI,aAAA2b,GAAAhb,IAAAX,IAAA,iBAAAN,MAAA,SAAAA,QAgB/B,GAAI4N,UAAOxH,OAAQ,CACf,IAAIyP,0CAQJ,MAPuB,mBAAZA,EACP/O,KAAK+J,MAAM2I,IAAI,aAAc3D,GACH,iBAAZA,IACgC,IAA1CpW,OAAO6O,KAAK+M,IAAQ5M,QAAQoH,IAC5B/O,KAAK+J,MAAM2I,IAAI,aAAc6B,GAAOxF,IAGrC/O,KAGX,OAAOA,KAAK+J,MAAMjR,IAAI,iBAAAU,IAAA,WAAAN,MAAA,SAAAA,MAmChBV,EAAMuW,GAAS,IAAArV,EAAAsG,KAKrB,MAJoB,iBAATxH,GAAwC,mBAAZuW,GACnC/O,KAAK+J,MAAM2I,IAAIla,EAAMuW,GAGlB,WAAQyG,EAAKC,aAAajd,+CAGvBA,GACNwH,KAAK+J,MAAM0I,IAAIja,IACfwH,KAAK+J,MAAM2L,OAAOld,yCAIjBA,GACL,OAAIA,aAAgBsR,SACTtR,EAEJwH,KAAK+J,MAAMjR,IAAIN,SAvFxB4c,GAuGSO,GAZO,WAClB,IAAI5L,EAAQ,KAQZ,OALkB,OAAVA,IACAA,EAAQ,IAAIqL,IAETrL,EAPO,GAAA6L,GAAA,SAAAzb,EAAAhB,GAAA,GAAA8Q,MAAAuB,QAAArR,GAAA,OAAAA,EAAA,GAAAnB,OAAA6c,YAAAld,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAAod,EAAA3b,EAAAnB,OAAA6c,cAAA9c,GAAAL,EAAAod,EAAA5C,QAAA6C,QAAArc,EAAA8H,KAAA9I,EAAAQ,QAAAC,GAAAO,EAAA4F,SAAAnG,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAA+c,EAAAE,QAAAF,EAAAE,SAAA,WAAA3b,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAAkc,UAAA,yDC1Ff,SAASY,GAAmBxG,EAAKC,GACpC,IAIMwG,EAAkBhH,EAJFO,EAAIO,gBACJN,EAAIM,iBAK1B,OAAO,SAACa,EAAWE,GACf,IAAIoF,KASJ,OARAD,EAAgB1W,QAAQ,SAAC2B,GAGjBgV,IAFAtF,EAAU1P,GAAWjI,QACrB6X,EAAU5P,GAAWjI,QAASid,KAM/BA,GCjBR,SAASC,GAAO3G,EAAKC,GACxB,IAAM2D,KACA1R,KACA2R,KACAhT,KACAyP,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBuD,EAAwBxD,EAAclD,YACtC2G,EAAwBvD,EAAcpD,YACtCrU,EAAUuX,EAAcvX,KAAxBA,UAAsCyX,EAAczX,KAG1D,IAAK6T,EAAWoD,EAAIgE,eAAelU,MAAM,KAAKiS,OAAQ9B,EAAI+D,eAAelU,MAAM,KAAKiS,QAChF,OAAO,KAgBX,SAASkC,EAAmBC,EAAI9G,GAC5B1N,EAAmBwU,EAAGpD,YAAa,SAACtY,GAChC,IAAM0Y,KACFkD,EAAW,GACfP,EAAc9T,QAAQ,SAACsU,GACnB,IAAM5a,EAAQ2T,EAAUiH,GAAYxT,KAAKrI,GACzC4b,OAAgB3a,EAChByX,EAAMmD,GAAc5a,IAEnBma,EAAUQ,KACXvT,EAAKkB,KAAKmP,GACV0C,EAAUQ,SAStB,OAhCCpE,EAAIgE,eAAelU,MAAM,KAAMC,QAAQ,SAAC2B,GACrC,IAAM4L,EAAQwG,EAAsBpS,GACpCQ,EAAOH,KAAKmJ,KAAYoC,EAAMpL,SAC9B2R,EAAc9R,KAAKuL,EAAMpL,OAAOnJ,QA0BpCkb,EAAkBjE,EAAK8D,GACvBG,EAAkBhE,EAAK8D,GAEhB,IAAIzV,GAAUuC,EAAMqB,GAAUnJ,SCvDlC,SAAS6d,GAAeC,EAAYC,EAAY5G,GACnD,OAAOH,EAAa8G,EAAYC,EAAY5G,KAAiB7B,EAAME,WAGhE,SAASwI,GAAgBF,EAAYC,EAAY5G,GACpD,OAAOH,EAAa+G,EAAYD,EAAY3G,KAAiB7B,EAAMG,sQC+FxDwI,cA1FX,SAAAtc,EAAY3B,EAAM8H,EAAMqB,iGAAQ+U,QAC5B1W,KAAKxH,KAAOA,EACZwH,KAAKM,KAAOA,MACZN,KAAK2B,OAASA,EACd3B,KAAK2W,iBAAmBhV,EAAOpH,YAC/ByF,KAAKQ,UAAYmB,EAAO5G,KACxBiF,KAAKG,+DAQG,IAAAhG,EAAA6F,KAER,OADAA,KAAKM,KAAON,KAAKM,KAAKgJ,IAAI,SAAAnQ,GAAA,OAAKsI,EAAKpB,OAAOoB,EAAKT,MAAMzI,MAC/CyH,0CASHI,GACJ,OAAOA,yCASP,MAAM,IAAIiQ,MAAM,2BAAA7W,IAAA,UAAAN,MAAA,SAAAA,QAIhB,OAAO,QAAAM,IAAA,QAAAN,MAAA,SAAAA,QAUP,MAAM,IAAImX,MAAM,2BAAA7W,IAAA,QAAAN,MAAA,SAAAA,MAWdoH,GACFA,EAAOA,GAAQqK,KAAY3K,KAAKM,MAChC,IAAMqB,EAASgJ,KAAY3K,KAAK2B,QAGhC,OAAO,IAAI3B,KAAK4W,YAAY5W,KAAKxH,KAAM8H,EAAMqB,6CAO7C,OAAO3B,KAAKxH,0CAOZ,OAAOwH,KAAKQ,sDAOZ,OAAOR,KAAK2W,uBAILF,GAJKE,sPCdLE,eArEX,SAAA1d,EAAYX,EAAM8H,EAAMqB,iGAAQmV,yOACtBte,EAAM8H,EAAMqB,IADUmV,OAE5BrV,EAAKsV,UAAYpV,EAAON,KACxBI,EAAKuV,WAAarV,EAAOL,MACzBG,EAAKwV,cAAgBtV,EAAOJ,UAAY2T,GACxCzT,EAAKyV,kBAAoBvV,EAAOwV,wBAAwBrN,SAAWnI,EAAOwV,aAAe3K,EAL7DsK,uUATdL,+CAwBd,OC3BQnW,ED2BqBN,KAAKM,KC1BlCO,EAAMuW,OAAOC,kBACbtW,EAAMqW,OAAOE,kBAEjBhX,EAAKd,QAAQ,SAACjH,GACNA,EAAIsI,IACJA,EAAMtI,GAENA,EAAIwI,IACJA,EAAMxI,MAINsI,EAAKE,GAbF,IAACT,EACRO,EACAE,sCDoCGX,GAEH,OADAA,EAAMmX,WAAWnX,EAAK,IACfgX,OAAOI,MAAMpX,GAAO,KAAOA,uCASlC,OAAOJ,KAAK+W,gDASZ,OAAO/W,KAAKgX,wDASZ,IAAM7S,EAAYnE,KAAKkX,kBACvB,OAAO,SAAA/d,GAAA,OAAOgL,EAAU/D,6CASxB,OAAOJ,KAAKiX,oBAILJ,GAJKI,sPEhCLQ,qrBA3CShB,+CAShB,OlB6BsBnW,EkB7BFN,KAAKM,QlB8B7B2L,OAAAC,EAAW,IAAIvL,IAAIL,KADhB,IAAuBA,sCkBlBnBF,GAEH,OADAA,EAAOA,QAAqC,GAAKA,EAAIiE,YAC1CqT,4CASPtX,GACJJ,KAAK2X,QAAU3X,KAAK2X,YACpB,IAAM3L,EAAShM,KAAK2X,QAMpB,OALIvX,KAAO4L,EACPA,EAAO5L,KAEP4L,EAAO5L,GAAO,EAEXA,QAIAqX,GAJArX,sPCfAwX,eAfX,SAAAze,EAAYX,EAAM8H,EAAMqB,iGAAQkW,yOACtBrf,EAAM8H,EAAMqB,IADUkW,OAE5BpW,EAAKqW,QAAUxZ,EAAiBC,YAFJsZ,uUATVJ,gDAoBlB,OAAOzX,KAAK8X,cAILF,GAJKE,sPC2BLC,eApCX,SAAA5e,EAAYX,EAAM8H,EAAMqB,iGAAQqW,yOACtBxf,EAAM8H,EAAMqB,IADUqW,OAE5BvW,EAAKqW,QAAUxZ,EAAiBE,SAChCiD,EAAKwW,QAAU7W,EAAWK,EAAKnB,MAHH0X,uUATbP,gDAqBf,OAAOzX,KAAK8X,mDAIZ,OAAO9X,KAAKiY,4CAQV7X,GACF,OAAIJ,KAAK2B,OAAOM,QACZjC,KAAKkY,KAAOlY,KAAKkY,MAAQ,IAAIlW,EAAkBhC,KAAK2B,OAAOM,QACpDjC,KAAKkY,KAAKtO,cAAcxJ,GAAKsL,YAKhC,IAAI5J,KAAK1B,SAIV2X,GAJU3X,sPChBV+X,eA3BX,SAAAhf,EAAYX,EAAM8H,EAAMqB,EAAQyW,iGAAKC,yOAC3B7f,EAAM8H,EAAMqB,IADe0W,OAEjC5W,EAAK2W,IAAMA,EACX3W,EAAKqW,QAAU,WAHkBO,uUADXxB,4CAenBzW,GAEH,OADAA,EAAOA,QAAqC,GAAKA,EAAIiE,YAC1CqT,4CAIX,OAAO1X,KAAKoY,4CAGZ,OAAOpY,KAAK8X,cAILK,GCuBAG,GAdf,SAceA,GAdQC,EAAY5W,EAAQ6W,GACvC,IAAMC,KAUN,OARMD,GAAWA,EAAQlZ,SACrBkZ,EAAU7W,EAAO2H,IAAI,SAAAnP,GAAA,OAAQgR,EAAK3S,QAGtCggB,EAAQhZ,QAAQ,SAACkZ,EAAQzgB,GACrBwgB,EAAWC,GAAUzgB,IAGlB0J,EAAO2H,IAAI,SAAAnQ,GAAA,OA3CtB,SAA0BmH,EAAMqB,GAC5B,OAAQA,EAAO5G,MACf,KAAK6D,EAAUC,QACX,OAAQ8C,EAAOmW,SACf,IAAK,WACD,OAAO,IAAIK,GAAgBxW,EAAOnJ,KAAM8H,EAAMqB,EAAQA,EAAOD,MACjE,QACI,OAAO,IAAImV,GAAQlV,EAAOnJ,KAAM8H,EAAMqB,GAE9C,KAAK/C,EAAUE,UACf,QACI,OAAQ6C,EAAOmW,SACf,KAAKxZ,EAAiBC,YAClB,OAAO,IAAIqZ,GAAYjW,EAAOnJ,KAAM8H,EAAMqB,GAC9C,KAAKrD,EAAiBE,SAClB,OAAO,IAAIuZ,GAASpW,EAAOnJ,KAAM8H,EAAMqB,GAC3C,KAAKrD,EAAiBG,IAEtB,QACI,OAAO,IAAImZ,GAAYjW,EAAOnJ,KAAM8H,EAAMqB,KAnBtD,CA2C8C4W,EAAWE,EAAWtN,EAAK3S,OAAQ2S,MCrDlEwN,IACXC,WAAY3a,EAAWI,MCuCZwa,GAvBf,SAuBeA,GAvBEhN,EAAK1D,GAIlBA,EAAUxP,OAAOmgB,WAFbC,mBAEuC5Q,GAE3C,IAAIuQ,EACEM,KACAxX,EAAOyX,EAAYD,GAYzB,OAPIN,EAHAvQ,EAAQ4Q,eAGClN,EAAI/C,OAAO,EAAG,GAAG,MAK9B+C,EAAIrM,QAAQ,SAAArF,GAAA,OAASqH,sIAAQuL,OAErB2L,EAAQM,ICvChBE,MACAC,MACAC,GAAQ,GACRC,GAAU,GACVC,GAAS,GAEb,SAASC,GAAgBP,GACvB,OAAO,IAAIlP,SAAS,IAAK,WAAakP,EAAQ1P,IAAI,SAAS9Q,EAAMP,GAC/D,OAAOuhB,KAAKC,UAAUjhB,GAAQ,OAASP,EAAI,MAC1C6M,KAAK,KAAO,KA0BF,IAAA4U,GAAA,SAAAA,GAASC,GACtB,IAAIC,EAAW,IAAIxX,OAAO,KAAQuX,EAAY,SAC1CE,EAAYF,EAAUG,WAAW,GAWrC,SAASC,EAAUzX,EAAM0X,GACvB,IAII7gB,EAJA8gB,KACAC,EAAI5X,EAAKhD,OACT6a,EAAI,EACJzgB,EAAI,EAEJ0gB,EAAMF,GAAK,EACXG,KAMJ,SAASzS,IACP,GAAIwS,EAAK,OAAOjB,GAChB,GAAIkB,EAAK,OAAOA,KAAanB,GAG7B,IAAIjhB,EAAUK,EAAPgiB,EAAIH,EACX,GAAI7X,EAAKwX,WAAWQ,KAAOlB,GAAO,CAChC,KAAOe,IAAMD,GAAK5X,EAAKwX,WAAWK,KAAOf,IAAS9W,EAAKwX,aAAaK,KAAOf,KAI3E,OAHKnhB,EAAIkiB,IAAMD,EAAGE,MACR9hB,EAAIgK,EAAKwX,WAAWK,QAAUd,GAASgB,KACxC/hB,IAAMghB,KAAUe,KAAgB/X,EAAKwX,WAAWK,KAAOd,MAAWc,GACpE7X,EAAKiY,MAAMD,EAAI,EAAGriB,EAAI,GAAGsK,QAAQ,MAAO,KAIjD,KAAO4X,EAAID,GAAG,CACZ,IAAK5hB,EAAIgK,EAAKwX,WAAW7hB,EAAIkiB,QAAUd,GAASgB,UAC3C,GAAI/hB,IAAMghB,GAAUe,KAAgB/X,EAAKwX,WAAWK,KAAOd,MAAWc,OACtE,GAAI7hB,IAAMuhB,EAAW,SAC1B,OAAOvX,EAAKiY,MAAMD,EAAGriB,GAIvB,OAAOmiB,KAAY9X,EAAKiY,MAAMD,EAAGJ,GAGnC,IA7BI5X,EAAKwX,WAAWI,EAAI,KAAOb,MAAWa,EACtC5X,EAAKwX,WAAWI,EAAI,KAAOZ,MAAUY,GA4BjC/gB,EAAIyO,OAAauR,IAAK,CAE5B,IADA,IAAIqB,KACGrhB,IAAM+f,IAAO/f,IAAMggB,IAAKqB,EAAIhZ,KAAKrI,GAAIA,EAAIyO,IAC5CoS,GAA4B,OAAtBQ,EAAMR,EAAEQ,EAAK9gB,OACvBugB,EAAKzY,KAAKgZ,GAGZ,OAAOP,EAgBT,SAASQ,EAAUD,GACjB,OAAOA,EAAIlR,IAAIoR,GAAa5V,KAAK6U,GAGnC,SAASe,EAAYpY,GACnB,OAAe,MAARA,EAAe,GAChBsX,EAASrc,KAAK+E,GAAQ,IAAM,IAAOA,EAAKC,QAAQ,KAAM,MAAU,IAChED,EAGR,OACEtB,MAlFF,SAAAA,MAAesB,EAAM0X,GACnB,IAAIW,EAAS3B,EAASiB,EAAOF,EAAUzX,EAAM,SAASkY,EAAKviB,GACzD,GAAI0iB,EAAS,OAAOA,EAAQH,EAAKviB,EAAI,GACrC+gB,EAAUwB,EAAKG,EAAUX,EA9B/B,SAAyBhB,EAASgB,GAChC,IAAIngB,EAAS0f,GAAgBP,GAC7B,OAAO,SAASwB,EAAKviB,GACnB,OAAO+hB,EAAEngB,EAAO2gB,GAAMviB,EAAG+gB,IAH7B,CA8BmDwB,EAAKR,GAAKT,GAAgBiB,KAGzE,OADAP,EAAKjB,QAAUA,MACRiB,GA6EPF,UAAWA,EACX9X,OA1BF,SAAAA,OAAgBgY,EAAMjB,GAEpB,OADe,MAAXA,IAAiBA,EA9EzB,SAAsBiB,GACpB,IAAIW,EAAYjiB,OAAOY,OAAO,MAC1Byf,KAUJ,OARAiB,EAAKza,QAAQ,SAASgb,GACpB,IAAK,IAAIK,KAAUL,EACXK,KAAUD,GACd5B,EAAQxX,KAAKoZ,EAAUC,GAAUA,KAKhC7B,EAZT,CA8EgDiB,KACpCjB,EAAQ1P,IAAIoR,GAAa5V,KAAK6U,IAAY1N,OAAOgO,EAAK3Q,IAAI,SAASkR,GACzE,OAAOxB,EAAQ1P,IAAI,SAASuR,GAC1B,OAAOH,EAAYF,EAAIK,MACtB/V,KAAK6U,MACN7U,KAAK,OAqBTgW,WAlBF,SAAAA,WAAoBb,GAClB,OAAOA,EAAK3Q,IAAImR,GAAW3V,KAAK,SCzGhCiW,GAAMC,GAAI,KCAVC,IDEkBF,GAAI/Z,MACA+Z,GAAIhB,UACPgB,GAAI9Y,OACA8Y,GAAID,WCLrBE,GAAI,OAEQC,GAAIja,MACAia,GAAIlB,UACPkB,GAAIhZ,OACAgZ,GAAIH,WC4BhBI,OAXf,SAWeA,GAXE5P,EAAKnD,GAKlBA,EAAUxP,OAAOmgB,WAHbC,kBACAoC,eAAgB,KAEuBhT,GAE3C,IAAM6S,EAAMI,GAAMjT,EAAQgT,gBAC1B,OAAOtC,GAAOmC,EAAIjB,UAAUzO,GAAMnD,ICoBvBkT,GAxBf,SAwBeA,GAxBIxP,GACf,IAAM6M,KACFzgB,EAAI,EACJqjB,SACEtC,KACAxX,EAAOyX,EAAYD,GAgBzB,OAdAnN,EAAIrM,QAAQ,SAAC2L,GACT,IAAMnB,KACN,IAAK,IAAIxQ,KAAO2R,EACR3R,KAAOkf,EACP4C,EAAiB5C,EAAOlf,IAExBkf,EAAOlf,GAAOvB,IACdqjB,EAAiBrjB,EAAI,GAEzB+R,EAAOsR,GAAkBnQ,EAAK3R,GAElCgI,eAAQwI,MAGJrR,OAAO6O,KAAKkR,GAASM,ICrBlBuC,GAhBf,SAgBeA,GAhBAjb,EAAM6H,GACjB,IAAIqT,SAEJ,G9BYsB,iB8BZTlb,EACTkb,EAAYN,QACT,GAAI1P,EAAQlL,IAASkL,EAAQlL,EAAK,IACrCkb,EAAY3C,OACT,KAAIrN,EAAQlL,IAA0B,IAAhBA,EAAKhB,S9BH/B,SAAmBc,GACtB,OAAOA,IAAQzH,OAAOyH,GADnB,C8BGwDE,EAAK,IAG5D,MAAM,IAAI+P,MAAM,mCAFhBmL,EAAYH,GAKhB,OAAOG,EAAUlb,EAAM6H,4gBCN3B,SAASsT,GAAsBzR,EAAQ/R,GACnC,IAAMyjB,KADgCC,uBAEtC,QAAAjjB,EAAAod,EAAkB9L,EAAlBhR,OAAA6c,cAAA9c,GAAAL,EAAAod,EAAA5C,QAAA6C,MAAAhd,GAAA,EAA0B,KAAjBgU,EAAiBrU,EAAAQ,MACtBwiB,EAAK3O,EAAMvU,MAAQ,IAAI0U,EAAMH,EAAMzM,KAAKrI,GAAI8U,IAHV4O,6EAKtC,OAAOD,EAGJ,SAAS5K,GAAiB9G,GAC7B,IAAM0R,KAEN,OADA/iB,OAAO6O,KAAKwC,GAAQxK,QAAQ,SAAChG,GAAUkiB,EAAKliB,GAAO,IAAI0T,EAAMlD,EAAOxQ,GAAMA,KACnEkiB,EAGJ,IAOME,GAAoB,SAApBA,GAAqBC,EAAOvN,GAAuC,IAUvEwN,EAV2C7M,EAA4BnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MAAfiV,EAAejV,UAAA,GACxEkV,SACA1N,IAAcf,EAAeI,SAC7BqO,GACItN,GAAIJ,EACJM,KAAMK,EACNN,SAAUoN,GAEdF,EAAMpN,YAAYjN,KAAKwa,KAGvBA,eAAiBD,IACjBF,EAAMpN,YAAYnP,OAAS,GAC3Bwc,IAAMrN,aAAYjN,KAAlBsa,WAA0BE,MA2BrBC,GAAyB,SAAzBA,GAA0BJ,EAAOK,GAA4B,IAAhBjN,EAAgBnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MAChEwH,EAAYW,EAAOX,W5BjDpB,M4BkDC6N,EAAkBlN,EAAOkN,oBAC3BC,KAEAA,EADe,OAAfF,GACO,sBAEDA,EAAW5S,IAAI,SAAAnP,GAAA,OACXkiB,GAD0BC,EA6BjCC,GA5B2Bhc,UACpBoB,EAAS0a,EAAQ1a,OACjB6a,EAAeF,EAAUG,kBACzBC,EAAcJ,EAAUtM,gBAAgBnD,YACxCvM,EAAO+b,EAAQ/b,KACfI,EAAS/H,OAAOgkB,OAAOH,GAAcxJ,OAAO,SAACC,EAAK2J,GAEpD,OADA3J,EAAI2J,EAAEC,IAAIrkB,MAAQkkB,EAAYE,EAAEC,IAAIrkB,MAAMkI,SACnCuS,OAGJ,SAACjJ,GAgBJ,QAfiB1J,EAAKhB,QAAiBgB,EAAKwc,KAAK,SAAA3jB,GAAA,OAAOwI,EAAO8S,MAAM,SAACsI,GAClE,KAAMA,EAAUvkB,QAAQwR,GACpB,SAEJ,IAAM9Q,EAAQ8Q,EAAO+S,EAAUvkB,MAAMwkB,UACrC,GAAIb,GAAmBY,EAAUhiB,OAAS6D,EAAUC,QAChD,OAAO3F,GAASwH,EAAOqc,EAAUvkB,MAAM,IAAMU,GAASwH,EAAOqc,EAAUvkB,MAAM,GAGjF,GAAIukB,EAAUhiB,OAAS6D,EAAUE,UAC7B,SAEJ,IAAMqU,EAAMqJ,EAAaO,EAAUvkB,MAAMwL,MACzC,OAAOwW,EAAIrH,KAASnJ,EAAO+S,EAAUvkB,MAAMwkB,eAzBpB,IAACV,EAC1BD,EACA1a,EACA6a,EACAE,EACApc,EACAI,IAwCd,M5BrGK,Q4BwFD4N,EACoBuN,EAAM3a,UAAM,GACJ+b,OAAO,SAAA9iB,GAAA,OAAUiiB,EAAI3H,MAAM,SAAAtb,GAAA,OAAM+jB,EAAGlT,OAC5DmT,aACA/jB,KAAM2F,EAAcG,MAGR2c,EAAM3a,UAAM,GAAc+b,OAAO,SAAA9iB,GAAA,OAAUiiB,EAAIU,KAAK,SAAA3jB,GAAA,OAAM+jB,EAAGlT,OACzE5Q,KAAM2F,EAAcG,IACpBie,gBAOCC,GAAkB,SAAlBA,GAAmBC,EAAUC,EAAUC,EAAcC,GAC9D,IAAMC,EAASJ,EAASnc,MAAMsc,EAAYL,WACpC/d,EAjFkB,SAACA,EAAY4K,EAAQsT,EAAUrO,GACvD,IAAMyO,KACFC,GAAqB,EAErBC,SACAC,EAAU,SAAAvlB,EAAA6B,GAAA,OAASmjB,EAAS7B,GAAqBzR,EAAQhG,GAAQA,IAerE,OAjBeiL,EAAT7V,OAGO2F,EAAcE,UACvB4e,EAAU,SAAAvlB,EAAA6B,GAAA,OAAUmjB,EAAS7B,GAAqBzR,EAAQhG,MAE9D7E,EAAmBC,EAAY,SAACnH,GACxB4lB,EAAQ5lB,MACmB,IAAvB0lB,GAA4B1lB,IAAO0lB,EAAoB,GACvDC,EAAKF,EAAcpe,OAAS,EAC5Boe,EAAcE,GAASF,EAAcE,GAAIre,MAAM,KAAK,GAApDme,IAA0DzlB,GAE1DylB,EAAclc,KAAdkc,GAAsBzlB,GAE1B0lB,EAAoB1lB,KAGrBylB,EAAc5Y,KAAK,KApBF,CAkFpB2Y,EAAOlN,YACPkN,EAAOK,uBAAuB9T,OAC9BsT,EACAC,GASJ,OAPAE,EAAOlN,YAAcnR,EACrBqe,EAAOM,wBAAwBC,wBAE3BR,EAAYL,WACZvB,GAAkB6B,EAAQlQ,EAAeC,QAAUyB,OAAQsO,GAAgBD,GAGxEG,GAGEQ,GAAmB,SAAnBA,GAAoBZ,EAAUa,EAAWjP,EAAQkP,GAC1D,IAAMV,EAASJ,EAASnc,MAAM+N,EAAOkO,WACjCiB,EAAgBF,EAkBpB,OAjBIjP,EAAO7V,OAAS2F,EAAcE,UAC9Bmf,EAAgBD,EAAUE,OAAO,SAAAlkB,GAAA,OAA+C,IAAlC+jB,EAAUvW,QAAQxG,MAIpEsc,EAAOhK,eAAiB2K,EAActZ,KAAK,KAC3C2Y,EAAOM,wBAAwBC,wBAE3B/O,EAAOkO,WACPvB,GACI6B,EACAlQ,EAAeE,SACbyQ,YAAWjP,SAAQJ,gBAAiBuP,GACtC,MAIDX,GAGEa,GAAa,SAAbA,GAAcC,EAAUje,EAAMqB,EAAQwG,GAC/CA,EAAUxP,OAAOmgB,OAAOngB,OAAOmgB,UAAW0F,IAAgBrW,GAC1D,IAAMsW,EAAcjD,EAAUrT,EAAQyQ,YAEtC,IAAM6F,GAAsC,mBAAhBA,EACxB,MAAM,IAAIpO,MAAJ,mCAA6ClI,EAAQyQ,WAArD,WALiD,IAAAlgB,EAQ3B+lB,EAAYne,EAAM6H,GARS2N,EAAA4I,GAAAhmB,EAAA,GAQpDggB,EARoD5C,EAAA,GAQ5C6I,EAR4C7I,EAAA,GASrDnJ,EAAW2L,GAAaqG,EAAehd,EAAQ+W,GAG/CkG,EAAYnS,EAAWC,gBAAgBC,EAAUxE,EAAQ3P,MAK/D,OAJA+lB,EAASM,mBAAqBD,EAE9BL,EAAShO,YAAcoO,EAAcrf,QAAUqf,EAAc,GAAGrf,OAAzCqf,MAAuDA,EAAc,GAAGrf,OAAS,GAAM,GAC9Gif,EAAS9K,eAAkB9R,EAAO2H,IAAI,SAAAnP,GAAA,OAAK2kB,EAAEtmB,OAAOsM,OAC7CyZ,GAGEQ,GAAgB,SAAhBA,GAAiBpd,EAAQoL,GAGlC,IAFA,IAAI9U,EAAI,EAEDA,EAAI0J,EAAOrC,SAAUrH,EACxB,GAAI8U,IAAUpL,EAAO1J,GAAGO,KACpB,OACIuC,KAAM4G,EAAO1J,GAAG6f,SAAWnW,EAAO1J,GAAG8C,KACrCiJ,MAAO/L,GAInB,OAAO,MAGE+mB,GAAuB,SAAvBA,EAAwB1C,EAAWC,GAAwD,IAA7CtN,EAA6CnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MAAhCmY,EAAgCnY,UAAA,GAAZoY,EAAYpY,UAAA,GAE9FqY,EAAqB,SAArBA,EAAsBC,EAAUC,EAAiBC,GACnDN,EAAqBI,EAAUC,EAAiBpQ,EAAQgQ,EAAoBK,IAGhFhD,IAAc2C,GAAsB3C,EAAUiD,mBAC1CC,QAASvQ,EAAOuQ,QAChBlf,KAAMic,EACNkD,kBAAmBxQ,EAAOwQ,kBAC1BC,SAAUzQ,EAAO0Q,oBACjBC,mBAAoBV,I3BxKxB9Q,E2B4KekO,EAAW,SAAC8C,EAAUzQ,GACjC,GAAIyQ,IAAaH,EAAoB,CACjC,IAAMY,EAAiBtD,EAAU,GAAGU,OAAOtO,GACvCwO,eAEE2C,EAAiBvD,EAAU,GAAGU,OAAOtO,GACvCwO,eAGJgC,EAAmBC,GAAWS,EAAgBC,GAAiBZ,K3BrLpC3R,EAAeC,QAsB/C,SAA0Ba,EAAWhP,GACxC+O,EAAcC,E2BkKa,SAAC+Q,EAAUlB,GAClC,GAAIkB,IAAaH,EAAoB,CACjC,IAAMc,EAAYxD,EAAU,GAAGyD,QAAQ9B,GACnCf,eAEE8C,EAAqB1D,EAAU,GAAGyD,QAAQ9B,GAC5Cf,eAGJgC,EAAmBC,GAAWW,EAAWE,GAAqBf,K3B3KnC3R,EAAeE,SAD/C,C2BmKa6O,G3BvJb,SAA0BjO,EAAWhP,GACxC+O,EAAcC,E2BoKa,SAAC+Q,EAAUc,GAClC,GAAId,IAAaH,EAAoB,KAEzBlQ,EAEAmR,EAFAnR,QACAD,EACAoR,EADApR,cAGFqR,EAAwB5D,EAAU,GAAG6D,QAAQtR,EAAcvP,MAAM,KAAMwP,GACzEoO,eAEEkD,EAAwB9D,EAAU,GAAG6D,QAAQtR,EAAcvP,MAAM,KAAMwP,GACzEoO,eAEJgC,EAAmBC,GAAWe,EAAuBE,S3BjL1B9S,EAAeG,SAD/C,C2BqKa4O,G3B7Lb,SAAqCjO,EAAWhP,GACnD+O,EAAcC,E2B6MwB,SAAC+Q,GAAwB,QAAAjmB,EAAA2N,UAAAxH,OAAX0P,EAAW/E,MAAA9Q,EAAA,EAAAA,EAAA,KAAA2c,EAAA,EAAAA,EAAA3c,EAAA2c,IAAX9G,EAAW8G,EAAA,GAAAhP,UAAAgP,GAC3D,GAAIsJ,IAAaH,EAAoB,KAAA3mB,EAAA0hB,EAC3BsG,GAAaC,IAAU,GAAGrf,UAAM,IAAcsf,kBAAjCD,QAAsDvR,EAAtDuR,SACfpD,aACAsD,kBAEEC,GAAYC,IAAU,GAAGzf,UAAM,IAAcsf,kBAAjCG,QAAsD3R,EAAtD2R,SACdxD,aACAsD,kBAEJtB,EAAmBC,GAAWkB,EAAYI,GAAYxB,K3BvN3B3R,EAAeK,SAD/C,C2B8MwB0O,IAsBlBsE,GAAmB,SAAnBA,EAAoB/E,GAC7B,OAAIA,EAAMgF,QACCD,EAAiB/E,EAAMgF,SAE3BhF,GAGEiF,GAA2B,SAA3BA,GAA4BC,EAAaC,EAAY/R,GAC9D,IAAIN,SACA4N,SACE0E,EAAuBhS,EAAOgS,qBAC9BzB,EAAUvQ,EAAOuQ,QACjBG,EAAsB1Q,EAAO0Q,oBAEnC,GAAoB,OAAhBoB,EACApS,EAAW,SACR,KAAArW,EACG4oB,EAAmBvoB,OAAO4c,QAAQ0L,EAAqBE,gBACxD9C,OAAO,SAAAlkB,GAAA,OAAK5B,EAAE,KAAOonB,IACrBrW,IAAI,SAAAnP,GAAA,OAAKxB,OAAOgkB,OAAOpkB,EAAE,IAAI+Q,IAAI,SAAAnP,GAAA,OAAUinB,EAAOzS,aACvDA,GAAW0S,MAAGpV,OAAHoV,qBAAiBH,IAAkBH,KAGlD,IAAMO,EAAmBN,EAAWO,aAC9BC,EAAYR,EAAWnF,MACvB4F,GACFjC,UACAG,sBACAF,kBAAmBsB,GAGnBO,IACA/E,EAAYN,GAAuBqF,EAAkB3S,GACjDwN,qBAEJ6C,GAAqBsC,EAAkB/E,EAAWkF,IAGtDlF,EAAYN,GAAuBuF,EAAW7S,GAC1CwN,iBAAkBmF,IAEtBtC,GAAqBwC,EAAWjF,EAAWkF,EAAYH,0PC0K5CI,cA1dX,SAAAvnB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAwBsM,QACpB,IAAIC,SAEJ5hB,KAAK6gB,QAAU,KACf7gB,KAAKyO,eACLzO,KAAKuO,aALeoT,2BAAR3S,EAAQ2S,qBAAR3S,EAAQ2S,gBAOE,IAAlB3S,EAAO1P,SAAkBsiB,EAAS5S,EAAO,cAAe0S,GAExD1hB,KAAKyT,eAAiBmO,EAAOnO,eAC7BzT,KAAKuQ,YAAcqR,EAAOrR,YAC1BvQ,KAAK6gB,QAAUe,EACf5hB,KAAK6e,mBAAqB7e,KAAK6gB,QAAQhC,mBACvC7e,KAAK6hB,gBAAkBpW,IACvBzL,KAAK+d,wBAAwBC,0BAE7BM,GAAUA,cAACte,MAAXse,OAAoBtP,IACpBhP,KAAK6hB,gBAAkB7hB,KAAK6e,mBAAmBrmB,KAC/CwH,KAAK+d,wBAAwBC,wBAC7Bhe,KAAK8hB,uBACDX,kBACAY,sBAAkB,OAAAC,GAAA7nB,IAAAX,IAAA,YAAAN,MAAA,SAAAA,QA0B1B,OAAO8G,KAAKgQ,gBAAgBhG,OAAOV,IAAI,SAAAnP,GAAA,OAAK5B,EAAEoJ,iDAY9C,OAAO3B,KAAK6hB,8DAIZ,OAAO7hB,KAAKiiB,kED3DQ,IAAA9nB,EAA8B+nB,EAAmBC,EAAmBC,EAAlEhjB,EAAYijB,EAClCC,EACAC,EACAC,EC8DA,OAFAxiB,KAAKiiB,aD/De9nB,GC+Da6F,KAAKuQ,YAAavQ,KAAKyT,gBD/DNyO,ECgE7CliB,KAAK8d,uBDhE2DqE,ECgEnCniB,KAAK6hB,gBDhEiDO,UAAlEhjB,EAAkEgjB,KACxFE,GADkCD,EAAsDD,MACjE9iB,OAAS+iB,EAAc9iB,MAAM,QACpDgjB,EAAkBL,EAAkBrV,YACpC2V,EAAYF,EAAOhZ,IAAI,SAAAnP,GAAA,OAAQ,IAAIyF,EAAM2iB,EAAgBE,GAAOrjB,KAC7DqN,EAAWC,gBAAgB8V,EAAWL,IC6DlCniB,0DAIP,OAAOA,KAAK6e,sDAiCV6D,EAAU/S,GACZ,OAAOH,EAAaxP,KAAM0iB,EAAU/S,6CAuB3B+S,GACT,OAAOlT,EAAaxP,KAAM0iB,EAAUzM,GAAkBjW,KAAM0iB,UAAWlpB,IAAA,QAAAN,MAAA,SAAAA,MAqBpEypB,GACH,OAAOvM,GAAMpW,KAAM2iB,4CAoBXC,GACR,OAAOxP,EAAWpT,KAAM4iB,wCAmDpBtF,EAAUrO,GACd,IAAM4T,GACFzpB,KAAM2F,EAAcC,OACpBme,cAIEK,GAAgBL,WAFtBlO,EAAStW,OAAOmgB,UAAW+J,EAAW5T,IAEEkO,WA0BxC,OAvBIlO,EAAO7V,OAAS2F,EAAcG,KACbke,GACbpd,KACAsd,GACElkB,KAAM2F,EAAcC,QACtBwe,GAEaJ,GACbpd,KACAsd,GACElkB,KAAM2F,EAAcE,SACtBue,IAIEJ,GACFpd,KACAsd,EACArO,EACAuO,MAIDsF,qCAsBP,OAAQ9iB,KAAKuQ,YAAYjR,SAAWU,KAAKyT,eAAenU,6CAUhB,IAArC6d,IAAqCrW,UAAAxH,OAAA,YAAAwH,UAAA,KAAAA,UAAA,GACpCic,SACJ,WAFwCjc,UAAAxH,OAAA,YAAAwH,UAAA,KAAAA,UAAA,IAEd,CACtB,IAAMuV,EAAUrc,KAAKO,SACjByiB,kBAEE1iB,EAAO+b,EAAQ/b,KACfqB,EAAS0a,EAAQ1a,OACjBshB,EAAW3iB,EAAKgJ,IAAI,SAACkR,GACvB,IAAM0I,KAIN,OAHAvhB,EAAOnC,QAAQ,SAACuN,EAAO9U,GACnBirB,EAAOnW,EAAMvU,MAAQgiB,EAAIviB,KAEtBirB,IAEXH,EAAe,IAAI/iB,KAAK4W,YAAYqM,EAAUthB,QAG9CohB,EAAe,IAAI/iB,KAAK4W,YAAY5W,MAMxC,OAHImd,GACAnd,KAAKuO,UAAU/M,KAAKuhB,GAEjBA,wCA8CF7E,EAAWjP,GAChB,IAAM4T,GACFzpB,KAAM2F,EAAcC,OACpBme,cAEJlO,EAAStW,OAAOmgB,UAAW+J,EAAW5T,GACtC,IAAMkU,EAAcnjB,KAAKyc,kBACnB0B,EAAYxlB,OAAO6O,KAAK2b,GACtB/pB,EAAS6V,EAAT7V,KAEJgqB,EAAsBlF,EAAUlL,OAAO,SAACC,EAAKlG,GAM7C,MAL+B,WAA3BA,EAAM6J,YAAYpe,KAClBya,EAAIzR,KAAJyR,+HAAYkL,EAAUE,OAAO,SAAAlkB,GAAA,OAA0C,IAA7BgH,EAAUkiB,OAAOtW,OACpDA,KAASoW,GAChBlQ,EAAIzR,KAAKuL,GAENkG,OAGXmQ,EAAsBnZ,MAAME,KAAK,IAAIxJ,IAAIyiB,IAAsB9Z,IAAI,SAAAnP,GAAA,OAAS4S,EAAM2K,SAkBlF,OAfIte,IAAS2F,EAAcG,KACD+e,GAAiBje,KAAMojB,GACzChqB,KAAM2F,EAAcC,OACpBme,UAAWlO,EAAOkO,WACnBgB,GACkBF,GAAiBje,KAAMojB,GACxChqB,KAAM2F,EAAcE,QACpBke,UAAWlO,EAAOkO,WACnBgB,IAGmBF,GAAiBje,KAAMojB,EAAqBnU,EAAQkP,MAIvE7B,6CAIP,OAAOtc,KAAKsjB,mEAWZ,OAPAtjB,KAAKsjB,aAAetjB,KAAKiiB,YAAYjY,OAAOgJ,OAAO,SAACC,EAAKsQ,EAAUtrB,GAK/D,OAJAgb,EAAIsQ,EAAS/qB,OACTwL,MAAO/L,EACP4kB,KAAOrkB,KAAM+qB,EAAStjB,KAAKzH,KAAMuC,KAAMwoB,EAAStjB,KAAKO,UAAWsX,QAASyL,EAAStjB,KAAKQ,YAEpFwS,OAEJjT,6CAWPA,KAAK6gB,QAAQ2C,YAAYxjB,MACzBA,KAAK6gB,QAAU,QAAArnB,IAAA,cAAAN,MAAA,SAAAA,MA6BNsV,GACT,IAAI2E,EAAMnT,KAAKuO,UAAUkV,UAAU,SAAAtqB,GAAA,OAAWuqB,IAAYlV,KACjD,IAAT2E,GAAanT,KAAKuO,UAAUzF,OAAOqK,EAAK,MAAA3Z,IAAA,YAAAN,MAAA,SAAAA,MAYjCyqB,GAA4B,IAApBC,EAAoB9c,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MACnC8U,GAAkB5b,KAAMuN,EAAeI,QAAS,KAAMiW,GACtD5jB,KAAK6gB,QAAU8C,EACfA,EAAOpV,UAAU/M,KAAKxB,YAIf0hB,GAJe1hB,qoBCkEfjC,eA/eX,SAAA5E,IAAsB,IAAAgB,GAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAArV,KAAA7G,GAAA,QAAAO,EAAAoN,UAAAxH,OAANkJ,EAAMyB,MAAAvQ,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAANmO,EAAMnO,GAAAyM,UAAAzM,GAAA,IAAApC,EAAA,SAAAkC,EAAAhB,GAAA,IAAAgB,EAAA,UAAA0pB,eAAA,oEAAA1qB,GAAA,UAAAiB,QAAAjB,IAAA,mBAAAA,EAAAgB,EAAAhB,EAAA,CAAA6G,MAAA7F,EAAAhB,EAAA2qB,WAAAnrB,OAAAorB,eAAA5qB,IAAAf,KAAA0I,MAAA3G,GAAA6F,MAAAiM,OACTzD,KADS,OAGlB/G,EAAKuiB,kBACLviB,EAAKwiB,mBAJahsB,EAAA,gBAAAkC,EAAAhB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAkc,UAAA,2DAAAjb,QAAAjB,IAAAgB,EAAAJ,UAAApB,OAAAY,OAAAJ,KAAAY,WAAA6c,aAAA1d,MAAAiB,EAAAtB,YAAA,EAAAwU,UAAA,EAAAD,cAAA,KAAAjU,IAAAR,OAAAurB,eAAAvrB,OAAAurB,eAAA/pB,EAAAhB,GAAAgB,EAAA2pB,UAAA3qB,GAAA,CAAAA,EArCFuoB,8CAyFXvZ,GAQLA,EAAUxP,OAAOmgB,WANbqL,MAAO,MACPhgB,UAAW,KACXigB,WACApB,gBACAxR,SAEoCrJ,GACxC,IAAM6B,EAAShK,KAAK8d,uBAAuB9T,OAErCqa,EzByBP,SAASC,EAAa7X,EAAYrN,EAAYijB,EAAekC,EAAgBpc,GAOhF,IAAM2E,GACFnL,UACArB,QACAkkB,SAEEC,GAPNtc,EAAUxP,OAAOmgB,WAHb2L,UACAC,eAEoCvc,IAOjBsc,OACjBE,EAAaJ,GAAkBA,EAAejlB,OAAS,EAEvDslB,KAiDN,GA/CgBvC,EAAc9iB,MAAM,KAE5BC,QAAQ,SAACqlB,GACb,IAAK,IAAI5sB,EAAI,EAAGA,EAAIwU,EAAWnN,OAAQrH,GAAK,EACxC,GAAIwU,EAAWxU,GAAGO,OAASqsB,EAAS,CAChCD,EAAWpjB,KAAKiL,EAAWxU,IAC3B,SAMZ2sB,EAAWplB,QAAQ,SAACuN,GAEhBD,EAAOnL,OAAOH,KAAKuL,EAAMpL,UAGzB8iB,GACA3X,EAAOnL,OAAOH,MACVhJ,KAAM,MACNuC,KAAM,eAIdoE,EAAmBC,EAAY,SAACnH,GAC5B6U,EAAOxM,KAAKkB,SACZ,IAAMsjB,EAAYhY,EAAOxM,KAAKhB,OAAS,EAEvCslB,EAAWplB,QAAQ,SAACuN,EAAO2D,GACvB5D,EAAOxM,KAAKwkB,GAAWpU,EAFf,GAE6B3D,EAAMzM,KAAKrI,KAEhDwsB,IACA3X,EAAOxM,KAAKwkB,GAAWF,EAAWtlB,QAAUrH,GAGhD6U,EAAO0X,KAAKhjB,KAAKvJ,GAIb0sB,GAAc7X,EAAOxM,KAAKwkB,GAAWtjB,KAAKvJ,KAI9C0sB,GA7HR,SAAkBtI,EAASkI,GAOvB,IAPuC,IAC/BjkB,EAAiB+b,EAAjB/b,KAAMqB,EAAW0a,EAAX1a,OACVR,SACA4jB,SACAC,SACA/sB,EAAIssB,EAAejlB,OAAS,EAEzBrH,GAAK,EAAGA,IACXkJ,EAAYojB,EAAetsB,GAAG,GAC9B8sB,EAAWR,EAAetsB,GAAG,IAC7B+sB,EAAWjG,GAAcpd,EAAQR,MRlEf,mBQyEH4jB,EAEXzT,EAAUhR,EAAM,SAACjG,EAAG8K,GAAJ,OAAU4f,EAAS1qB,EAAE2qB,EAAShhB,OAAQmB,EAAE6f,EAAShhB,UAC1DwH,EAAQuZ,GAAW,WAC1B,IAAMzS,EAAcH,EAAU7R,EAAM0kB,EAAShhB,OACvCihB,EAAYF,EAASA,EAASzlB,OAAS,GACvCuT,EAAekS,EAASxK,MAAM,EAAGwK,EAASzlB,OAAS,GACnDwT,EAAqBD,EAAavJ,IAAI,SAAAnP,GAAA,OAAK4kB,GAAcpd,EAAQqY,KAEvE1H,EAAY9S,QAAQ,SAACoT,GACjBA,EAAapR,KAAKmR,EAAmBC,EAAcC,EAAcC,MAGrExB,EAAUgB,EAAa,SAACjY,EAAG8K,GACvB,IAAM9M,EAAIgC,EAAE,GACNX,EAAIyL,EAAE,GACZ,OAAO8f,EAAU5sB,EAAGqB,KAIxB4G,EAAKhB,OAAS,EACdgT,EAAY9S,QAAQ,SAAC+S,GACjBjS,EAAKkB,KAALlB,UAAaiS,EAAM,OAnBG,IAsB1BwS,EAA8C,SAAnC/c,OAAO+c,GAAUthB,cAA2B,OAAS,MAChE6N,EAAUhR,EAAMyR,EAAUiT,EAASjqB,KAAMgqB,EAAUC,EAAShhB,UAIpEqY,EAAQmI,QACRlkB,EAAKd,QAAQ,SAACtG,GACVmjB,EAAQmI,KAAKhjB,KAAKtI,EAAMgsB,SAjDhC,CA8HiBpY,EAAQyX,GAGjBpc,EAAQuc,WAAY,CACpB,IAAMS,EAAUlb,qBAASA,MAAM6C,EAAOnL,OAAOrC,UAASgK,IAAI,sBAC1DwD,EAAOxM,KAAKd,QAAQ,SAACmR,GACjBA,EAAMnR,QAAQ,SAACc,EAAMrI,GACjBktB,EAAQltB,GAAGuJ,KAAKlB,OAGxBwM,EAAOxM,KAAO6kB,EAGlB,OAAOrY,GyBnG+B1U,KAC9B4H,KACAA,KAAK8d,uBAAuB9T,OAC5BhK,KAAKuQ,YACLpI,EAAQ6a,aAAehZ,EAAOV,IAAI,SAAAnP,GAAA,OAAK5B,EAAEC,OAAMsM,OAAS9E,KAAKyT,eAC7DtL,EAAQqJ,MAEJkT,WAA8B,WAAlBvc,EAAQgc,MACpBM,SAAUtc,EAAQic,UAI1B,IAAKjc,EAAQhE,UACT,OAAOkgB,EAxBG,IA2BNlgB,EAAcgE,EAAdhE,UACA7D,EAAuB+jB,EAAvB/jB,KAAMqB,EAAiB0iB,EAAjB1iB,OAAQ6iB,EAASH,EAATG,KAChBY,EAAazjB,EAAO2H,IAAK,SAAAnP,GAAA,OAAKA,EAAE3B,OAEhC6sB,EADgB1sB,OAAO6O,KAAKrD,GACA6O,OAAO,SAACC,EAAKC,GAC3C,IAAMC,EAAMiS,EAAWzd,QAAQuL,GAI/B,OAHa,IAATC,GACAF,EAAIzR,MAAM2R,EAAKhP,EAAU+O,KAEtBD,OAiCX,MA9BsB,WAAlB9K,EAAQgc,MACRkB,EAAY7lB,QAAQ,SAAC8lB,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBhlB,EAAKilB,GAAM/lB,QAAQ,SAAC+S,EAAOkT,GACvBnlB,EAAKilB,GAAME,GAAYD,EAAMptB,YAEzBma,EACAiS,EAAKiB,GACL9jB,EAAO4jB,QAKnBjlB,EAAKd,QAAQ,SAAC+S,EAAOkT,GACjBJ,EAAY7lB,QAAQ,SAAC8lB,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnB/S,EAAMgT,GAAQC,EAAMptB,YAEhBma,EAAMgT,GACNf,EAAKiB,GACL9jB,EAAO4jB,QAMhBlB,wCA2BFqB,GAAwD,IAA7CC,EAA6C7e,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MAA9BmI,EAA8BnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,IAAnBqW,cACpCrO,KAAmB4W,EAAU5gB,OAE7B8gB,EC9Id,SAASxF,GAAS9D,EAAW3P,EAAUgZ,EAAUE,GAC7C,IAAMC,EApEV,SAAsBxJ,EAAW3P,GAC7B,IAAM0C,KACA5C,EAAa6P,EAAUwB,uBACvBiI,EAAatZ,EAAWQ,eACxB+Y,EAAWvZ,EAAWO,aAuB5B,OArBArU,OAAO4c,QAAQwQ,GAAYvmB,QAAQ,SAAArF,GAAW,IAATX,EAASoc,GAAAzb,EAAA,MACtCwS,GAAYA,EAASrN,QACU,IAA3BqN,EAAShF,QAAQnO,IACjB6V,EAAO7N,KAAKhI,GAGhB6V,EAAO7N,KAAKhI,KAIpBb,OAAO4c,QAAQyQ,GAAUxmB,QAAQ,SAAArF,GAAW,IAATX,EAASoc,GAAAzb,EAAA,MACR,aAA5B6rB,EAASxsB,GAAKiH,YACVkM,GAAYA,EAASrN,QACU,IAA3BqN,EAAShF,QAAQnO,IACjB6V,EAAO7N,KAAKhI,GAGhB6V,EAAO7N,KAAKhI,MAIjB6V,EA3BX,CAoEkCiN,EAAW3P,GACnCsZ,EAhCV,SAAwB3J,GAA0B,IAAfqJ,EAAe7e,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MACxCgG,KACAoZ,EAAYP,EAEZK,EADa1J,EAAUwB,uBACD9Q,aACxB+B,EAAU4G,GAAawQ,iBAa3B,MAZwB,mBAAbR,IACP5W,EAAU4W,GAEdhtB,OAAO4c,QAAQyQ,GAAUxmB,QAAQ,SAAArF,GAAW,IAATX,EAASoc,GAAAzb,EAAA,MACX,iBAAlBwrB,EAASnsB,KAChB0sB,EAAU1sB,GAAOmc,GAAayQ,QAAQF,EAAU1sB,IAAQmc,GAAayQ,QAAQF,EAAU1sB,IAAQuV,GAEtE,mBAAlB4W,EAASnsB,KAChB0sB,EAAU1sB,WAEdsT,EAAOtT,GAAO0sB,EAAU1sB,IAAQmc,GAAayQ,QAAQJ,EAASxsB,GAAK+H,aAAewN,IAE/EjC,EAlBX,CAgCqCwP,EAAWqJ,GACtClZ,EAAa6P,EAAUwB,uBACvBuI,EAAgB5Z,EAAWI,YAC3ByZ,EAAS7Z,EAAWjU,KACpB+tB,KACAC,KACA7kB,KACAyQ,KACA9R,KACFslB,SAEJjtB,OAAO4c,QAAQ8Q,GAAe7mB,QAAQ,SAAArF,GAAkB,IAAAhB,EAAAyc,GAAAzb,EAAA,GAAhBX,EAAgBL,EAAA,GAAXD,EAAWC,EAAA,KACpB,IAA5B2sB,EAAUne,QAAQnO,IAAeysB,EAAWzsB,MAC5CmI,EAAOH,KAAKmJ,KAAYzR,EAAMyI,SACJ,YAAtBzI,EAAMyI,OAAO5G,MAA+C,aAAzB7B,EAAMyI,OAAOmW,QAChD0O,EAAWhlB,KAAKhI,GACa,cAAtBN,EAAMyI,OAAO5G,MAAiD,aAAzB7B,EAAMyI,OAAOmW,SACzDyO,EAAa/kB,KAAKhI,MAK9B,IAAIitB,EAAW,EAoCf,OAnCAtnB,EAAmBmd,EAAU/L,YAAa,SAACtY,GACvC,IAAIyuB,EAAO,GACXH,EAAa/mB,QAAQ,SAACsf,GAClB4H,EAAUA,EAAVA,IAAkBL,EAAcvH,GAAGxe,KAAKrI,cAExCma,EAAQsU,IACRtU,EAAQsU,GAAQD,EAChBnmB,EAAKkB,SACL+kB,EAAa/mB,QAAQ,SAACsf,GAClBxe,EAAKmmB,GAAU3H,GAAKuH,EAAcvH,GAAGxe,KAAKrI,KAE9CuuB,EAAWhnB,QAAQ,SAACsf,GAChBxe,EAAKmmB,GAAU3H,IAAMuH,EAAcvH,GAAGxe,KAAKrI,MAE/CwuB,GAAY,GAEZD,EAAWhnB,QAAQ,SAACsf,GAChBxe,EAAK8R,EAAQsU,IAAO5H,GAAGtd,KAAK6kB,EAAcvH,GAAGxe,KAAKrI,QAK9DqI,EAAKd,QAAQ,SAACgb,GACV,IAAM7J,EAAQ6J,EACdgM,EAAWhnB,QAAQ,SAACsf,GAChBnO,EAAMmO,GAAKmH,EAAWnH,GAAGtE,EAAIsE,QAGjC+G,GACAA,EAAkB9H,wBAClB6H,EAAeC,GAGfD,EAAe,IAAI7nB,GAAUuC,EAAMqB,GAAUnJ,KAAM8tB,IAEhDV,GDkFkBxF,cADPpgB,KAAM0lB,EAAWC,IAc/B,OAXI1W,EAAOkO,YACPnd,KAAKuO,UAAU/M,KAAKokB,GACpBhK,GACIgK,EACArY,EAAeG,SACbgY,YAAW5W,gBAAeqX,eAAgBxQ,GAAawQ,kBACzDR,IAIRC,EAAa/E,QAAU7gB,KAChB4lB,qCAsDLrB,GACF,IAAMoC,EAAU3mB,KAAKO,SACjB4jB,MAAO,MACP3S,KAAM+S,IAGJqC,GADSD,EAAQhlB,OAAO2H,IAAI,SAAAnP,GAAA,OAAS4S,EAAMvU,QACnByT,OAAO0a,EAAQrmB,MAEvCumB,EAAW,IAAI7mB,KAAK4W,YAAYgQ,EAAcD,EAAQhlB,QAAUiX,WAAY,WAElF,OADAiO,EAAS5C,gBAAkBM,EACpBsC,yCAGD9Z,GACN,IAAM5L,EAAY4L,EAAM5L,YACxBnB,KAAKyT,gBAALzT,IAA2BmB,EAC3B,IAAM+gB,EAAoBliB,KAAK6e,mBAE/B,GAAKqD,EAAkBrV,YAAYE,EAAM5L,aAElC,CACH,IAAM+I,EAAagY,EAAkBlY,OAAOyZ,UAAU,SAAAtpB,GAAA,OAAa2sB,EAAUtuB,OAAS2I,IACtF+I,GAAc,IAAMgY,EAAkBlY,OAAOE,GAAc6C,QAH3DmV,EAAkBlY,OAAOxI,KAAKuL,GAOlC,OADA/M,KAAK+d,wBAAwBC,wBACtBhe,qDAoCQ2B,EAAQolB,GAA6D,IAAjD9X,EAAiDnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,IAAtCqW,aAAiBsD,eACzDjE,EAAexc,KAAKyc,kBACpBuK,EAAUD,EAAWxM,MAAM,EAAGwM,EAAWznB,OAAS,GAClD2nB,EAAaF,EAAWA,EAAWznB,OAAS,GAElD,GAAIkd,EAAa7a,EAAOnJ,QAAUyW,EAAOwR,WACrC,MAAM,IAAIpQ,MAAS1O,EAAOnJ,KAApB,mCAEV,IAAM0uB,EAAkBF,EAAQ1d,IAAI,SAACyD,GACjC,IAAMoa,EAAY3K,EAAazP,GAC/B,IAAKoa,EAED,MAAM,IAAI9W,MAAStD,EAAb,gCAEV,OAAOoa,EAAUnjB,QAGjB9C,EAAQlB,KAAKkB,QAEXkmB,EAAKlmB,EAAM8O,gBAAgBhG,OAC3Bqd,EAAiBH,EAAgB5d,IAAI,SAAAnP,GAAA,OAAOitB,EAAGjU,KAE/CmU,KACNnoB,EAAmB+B,EAAMqP,YAAa,SAACtY,GACnC,IAAMsvB,EAAaF,EAAe/d,IAAI,SAAAnQ,GAAA,OAAS4T,EAAMzM,KAAKrI,KAC1DqvB,EAAervB,GAAKgvB,sIAAcM,GAAdN,QAA0BhvB,EAAGmvB,OAzB+B,IAAA7uB,EA2BpE+f,IAAcgP,IAAkB3lB,IAAUA,EAAOnJ,OAA1DuU,EA3B6Eya,GAAAjvB,EAAA,MAkCpF,OANA2I,EAAMumB,SAAS1a,GAEXkC,EAAOkO,WACPvB,GAAkB1a,EAAOqM,EAAeK,SAAWqB,OAAQtN,EAAQqI,OAAQgd,GAAWC,GAGnF/lB,0CAWA6f,EAAavB,GAAsB,IAAbvQ,EAAanI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MACpC4gB,EAAkBzY,EAAOyY,gBACzB/H,EAAsB1Q,EAAOyQ,SAC7B8B,EAAYZ,GAAiB5gB,MAC7BihB,EAAuBO,EAAUM,sBAEjCd,GACFO,aFrHuB,SAAtBoG,EAAuB9L,GAChC,OAAIA,EAAMgF,SAAWhF,EAAMpN,YAAYmZ,KAAK,SAAAztB,GAAA,MAAc,UAAT5B,EAAEmW,KACxCiZ,EAAoB9L,EAAMgF,SAE9BhF,EAJwB,CEmHkB7b,MAGzC6b,MAAO2F,GAYX,OATAV,GAAyBC,EAAaC,GAClCC,uBACAzB,UACAG,wBAGA+H,GF5E6B,SAACzG,EAAsBD,EAAYrB,GACxE,IAAM2B,EAAmBN,EAAWO,aAC9BC,EAAYR,EAAWnF,MACvBkG,EAAmBd,EAAqBc,iBAC9C,IAAK,IAAMrC,KAAYqC,EAAkB,CACrC,IAAM8F,EAAU9F,EAAiBrC,GACjC,IAAK,IAAM0B,KAAUyG,EAAS,CAC1B,IAAMC,EAAgBD,EAAQzG,GAAQzS,SACtCmS,GAAyBgH,GACrBvG,aAAcD,EACdzF,MAAO2F,IAEPP,uBACAzB,QAASqI,EAAQzG,GAAQ5B,QACzBG,0BAdyB,CE6EHsB,EAAsBD,EAAYrB,GAEzD3f,sDAGS0f,GAAuB,IAAbzQ,EAAanI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MACnCihB,SACEC,EAAa/Y,EAAO+Y,WACpBxI,EAAUvQ,EAAOuQ,QACjBkI,EAAkBzY,EAAOyY,gBAEzBzG,EADYL,GAAiB5gB,MACI8hB,sBACjCnT,EAAWM,EAAON,SAmBxB,OAjBI+Y,IACCzG,EAAqBE,eAAezB,KAAcuB,EAAqBE,eAAezB,OACvFqI,EAAkB9G,EAAqBE,eAAezB,MAErDuB,EAAqBc,iBAAiBrC,KAAcuB,EAAqBc,iBAAiBrC,OAC3FqI,EAAkB9G,EAAqBc,iBAAiBrC,IAG3C,OAAb/Q,SACOoZ,EAAgBC,GAEvBD,EAAgBC,IACZrZ,WACA6Q,WAIDxf,sCAUPioB,EAAW5oB,GACX,OAAQ4oB,GACR,I9BpcmB,c8BqcfjoB,KAAKgkB,eAAexiB,KAAKnC,GAG7B,OAAOW,+CASEioB,GACT,OAAQA,GACR,I9BndmB,c8BodfjoB,KAAKgkB,kBAIT,OAAOhkB,qDAUQwf,GAAS,IAAArmB,EAAA6G,KACJA,KAAKgkB,eACXxkB,QAAQ,SAAA9F,GAAA,OAAMwjB,EAAG9kB,KAAKod,EAAMgK,uCAqDzC0I,GAA2B,IAAdjZ,EAAcnI,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,MACtB5F,EAAQlB,KAAKkB,QACbinB,EAAelZ,EAAOzW,MAAW0vB,EAAlBjZ,UACrB,GAAIjP,KAAKyc,kBAAkB0L,KAAkBnoB,KAAKyc,kBAAkByL,GAChE,MAAM,IAAI7X,MAAJ,SAAmB6X,EAAnB,oBAEV,IACME,EEzhBP,SAASC,EAAuBtb,EAAO3N,EAAY6P,GAAQ,IACxDqZ,EAAsCrZ,EAAtCqZ,QAASC,EAA6BtZ,EAA7BsZ,SAAUC,EAAmBvZ,EAAnBuZ,QAAS7qB,EAAUsR,EAAVtR,MAC9B8qB,KACAC,KAH0D1O,EAI7CjN,EAAMrM,SAJuCxG,EAAAka,EAAA4F,EAAA,GAIzDnZ,EAJyD3G,EAAA,GAIpD6G,EAJoD7G,EAAA,GAK1DyuB,EAAS5nB,EACT6nB,KACAC,SACAC,SACAnX,SACApO,SAWJ,GARApE,EAAmBC,EAAY,SAACnH,GAC5BwwB,EAAUjnB,MACNlB,KAAMyM,EAAMzM,KAAKrI,GACjB+L,MAAO/L,OAKVqwB,EAAS,CAIV,IAAMS,IAHNhoB,GAAO,GAGoBF,IAF3B2nB,EAAUA,IAAYznB,EAAMF,GAAO0nB,GAOnC,IAJKA,GAA4B,IAAhBQ,IACbhoB,EAAMA,EAAMynB,EAAUO,GAE1BF,EAAShoB,EAAM2nB,EACRK,GAAU9nB,GACb6nB,EAAMpnB,KAAKqnB,GACXA,GAAUL,EAGdF,GAAY3qB,MADZA,EAAQA,GAASkD,EACE+nB,SAIvBE,EAAiC,IAAlBR,EAAQ3qB,MAAc,EAAI2qB,EAAQ3qB,OAASkD,EAG1DynB,EAAQM,MAAMppB,QAAQ,SAACwpB,GACHP,EAAUpK,OAAO,SAAAllB,GAAA,OAASoZ,EAAMjS,MAAQwoB,GAAgBvW,EAAMjS,KAAO0oB,IAC3ExpB,QAAQ,SAAC+S,GAAYmW,EAAWnW,EAAMvO,OAAY8kB,EAA7BJ,IAA6CM,IAC5EF,EAAeE,IAInBP,EAAUpK,OAAO,SAAAlkB,GAAA,OAASoY,EAAMjS,KAAOgoB,EAAQ3qB,QAC9B6B,QAAQ,SAAC+S,GAAYmW,EAAWnW,EAAMvO,OAAYnD,EAA7B6nB,IAAoCJ,EAAQ3qB,QAGlF8qB,EAAUpK,OAAO,SAAAlkB,GAAA,OAASoY,EAAMjS,MAAQgoB,EAAQM,MAAMN,EAAQM,MAAMtpB,OAAS,KAC5DE,QAAQ,SAAC+S,GACRmW,EAAWnW,EAAMvO,OAAYskB,EAAQM,MAAMN,EAAQM,MAAMtpB,OAAS,GAAlEopB,IAAwEC,IAI1FL,EAAQM,MAAM/e,QAAQye,EAAQ3qB,OAC9B4F,EAAQ,IAAI5C,IAAI2nB,EAAQM,OAGpB/nB,EAAMynB,EAAQ3qB,OAAS4F,EAAM0lB,IAAIpoB,GACjC8nB,EAASL,EAAQM,MAAMN,EAAQM,MAAMtpB,OAAS,IAAMiE,EAAM0lB,IAAIN,GAElEplB,KAAQ0I,OAAA,SAAA9R,GAAA,GAAA8P,MAAAuB,QAAArR,GAAA,SAAAhB,EAAA,EAAAO,EAAAuQ,MAAA9P,EAAAmF,QAAAnG,EAAAgB,EAAAmF,OAAAnG,IAAAO,EAAAP,GAAAgB,EAAAhB,GAAA,OAAAO,EAAA,OAAAuQ,MAAAE,KAAAhQ,GAAA,CAAIoJ,IAAOiO,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,IACtCwM,KAEA,IAAK,IAAI1Z,EAAI,EAAGA,EAAIsL,EAAMjE,OAAQrH,IAC9B0Z,EAAInQ,MAAM+B,EAAMtL,EAAI,GAAKsL,EAAMtL,IAAM,GAEzC,OAASqI,KAAMooB,EAAY/W,MAAKpO,SFidZ8kB,CADFroB,KAAK6e,mBAAmB7U,OAAO4d,KAAK,SAAAzuB,GAAA,OAAa+vB,EAAU1wB,OAAS0vB,IACrCloB,KAAKuQ,YAAatB,GACzDka,EAAW7Q,IAAc8P,EAAQ9nB,QAE/B9H,KAAM2vB,EACNptB,KAAM6D,EAAUC,QAChBiZ,QAAS,WACTpW,MACI6B,MAAO6kB,EAAQ7kB,MACfoO,IAAKyW,EAAQzW,QAEhBwW,IAAe,GAGxB,OAFAjnB,EAAMumB,SAAS0B,GACfvN,GAAkB1a,EAAOqM,EAAeM,KAAOqa,cAAajZ,SAAQkZ,gBAAgB,MAC7EjnB,yCA1dP,OAAOyU,SA8dA5X,GGnjBAgW,GAAoDQ,GAApDR,IAAKM,GAA+CE,GAA/CF,IAAKxT,GAA0C0T,GAA1C1T,IAAKE,GAAqCwT,GAArCxT,IAAK2T,GAAgCH,GAAhCG,MAAOC,GAAyBJ,GAAzBI,KAAMC,GAAmBL,GAAnBK,MAAYwU,GAAO7U,GAAZM,YCqBvD9W,GAAUsrB,WACNC,QC6LmB,SAAAA,UAAA,QAAAnvB,EAAA2M,UAAAxH,OAAIiqB,EAAJtf,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI6vB,EAAJ7vB,GAAAoN,UAAApN,GAAA,OACnB,SAACia,GAAqC,IAC9B6V,EAAY7V,EACZ8V,SACEC,KACAvM,GAJ4BrW,UAAAxH,OAAA,YAAAwH,UAAA,GAAAA,UAAA,IAAtBqW,eAIaA,UAezB,OAbAoM,EAAW/pB,QAAQ,SAAC8O,GAChBkb,EAAYlb,EAAUkb,GACtBE,EAAYloB,KAAZkoB,+HAAoBF,EAAU/a,cACzBgb,IACDA,EAAYD,KAIpBrM,GAAaqM,EAAUG,UAAUhW,EAAI+V,GACjCA,EAAYpqB,OAAS,GACrBmqB,EAAUG,UAGPJ,IDhNXpR,IC2He,SAAAA,MAAA,QAAAje,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAGyE,IAAHzE,QAAUnL,KD1H5CyU,OC+BkB,SAAAA,SAAA,QAAA9iB,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAGsJ,OAAHtJ,QAAanL,KD9BlDwX,QC8DmB,SAAAA,UAAA,QAAA7lB,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAGqM,QAAHrM,QAAcnL,KD7DpD4X,QCqJmB,SAAAA,UAAA,QAAAjmB,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAGyM,QAAHzM,QAAcnL,KDpJpDgY,kBEtB6B,SAAAA,oBAAA,QAAArmB,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAG6M,kBAAH7M,QAAwBnL,KFuBxEgJ,KEdgB,SAAAA,OAAA,QAAArX,EAAA2M,UAAAxH,OAAIkJ,EAAJyB,MAAA9P,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI8O,EAAJ9O,GAAAoN,UAAApN,GAAA,OAAa,SAAAS,GAAA,OAAMwZ,EAAGnC,KAAHmC,QAAWnL,KFe9CgH,eACA4D,aACAyW,YG9BG,SAAAA,YAAsBvT,EAAYC,GACrC,OAAO/G,EAAa8G,EAAYC,EAAYN,GAAkBK,EAAYC,QH8B1EF,iBACAG,kBACAsT,cvBvBG,SAAAA,cAAwBxT,EAAYC,EAAY5G,GACnD,OAAOyG,GAAMC,GAAcC,EAAYC,EAAY5G,GAAW6G,GAAeF,EAAYC,EAAY5G,KuBuBrGyG,UAEJrY,GAAUgsB,MAAQA,EAClBpxB,OAAOmgB,OAAO/a,GAAWisB,GACzBjsB,GAAUiE,kBAAoBA,EAC9BjE,GAAUE,WAAaA,EACvBF,GAAUgB,cAAgBA,EAC1BhB,GAAUtD,QAAUwvB,GAAIxvB,QAETsD,siBI9Cf,SAAA5D,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAJ,EAAAW,GAGA,GAAAP,EAAAO,GACA,OAAAP,EAAAO,GAAAjC,QAGA,IAAAQ,EAAAkB,EAAAO,IACAzB,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGAO,EAAAR,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAApB,EAAAoB,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAAT,EAAAf,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAlC,KAAAkC,EAAApB,EAAAR,EAAAmB,EAAAzB,EAAA,SAAAkB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAC,GAIA3B,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIAgB,IAAAmB,EAAA,GDxEA,ECwEA,SAAAC,EAAAhB,EAAAJ,GAAA,aAAAA,IAAAI,GAAA,IAAAO,EAAA,oBAAAS,IAAAhB,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAAmG,OAAAvG,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAA0T,cAAA,YAAA1T,MAAA2T,UAAA,GAAA1U,OAAAC,eAAAuB,EAAAT,EAAAF,IAAAE,IAAA,gBAAAP,EAAAJ,EAAAW,GAAA,OAAAX,GAAAoB,EAAAhB,EAAAY,UAAAhB,GAAAW,GAAAS,EAAAhB,EAAAO,GAAAP,GAAA,GClFM+wB,EAAY,SAAZA,EAAare,EAAKse,GACpBte,EAAIrM,QAAQ,SAAC8lB,YACLA,GAA+B,OAATA,IAG1B6E,EAAK7E,GAAQ,MAAA5sB,EAAA,WAKjB,SAAAyB,EAAa0R,iGAAK9L,QACdC,KAAKoqB,QACLF,EAAUre,EAAK7L,KAAKoqB,qDAGhBve,GAEJ,OADAqe,EAAUre,EAAK7L,KAAKoqB,MACbpqB,6CAIP,OAAOrH,OAAO6O,KAAKxH,KAAKoqB,iDAGTC,EAAMC,GACrB,IAAI9wB,SACE+wB,KACFC,EAAKH,EAAKD,KACVK,EAAKH,EAAKF,KACd,IAAK5wB,KAAOgxB,OACExwB,eAAe5B,KAAKoyB,EAAIhxB,KAG9BA,KAAOixB,GAGXF,EAAa/oB,KAAKhI,IAEtB,OAAO,IAAIkxB,EAAWH,SAjCT,GAiCSA,+jBClC9B,IACII,EAAiB,SAAjBA,EAAkBphB,GAEd,GAAmB,qBAARA,EAAP,YAAAlP,EAAOkP,IAAkB,CACzB,GAAY,OAARA,EAAgB,SAEpB,GAAc,oBADN5Q,OAAOoB,UAAUsK,SAASjM,KAAKmR,GAEnC,MAA8E,YAAtEA,EAAIqN,YAAYvS,WAAWqF,MAAM,4BAA8B,GAG/E,UAGsBkhB,EAAwB,oBAAX/yB,UAAwCA,OACpDgzB,EAAeD,EAAIE,uBAAyBF,EAAIG,6BACvEH,EAAII,0BAA4BJ,EAAIK,wBACpCL,EAAIM,yBACJ,SAAU7rB,GACN8rB,WAAW9rB,EANF,KASjB+rB,EAAiB,SAAjBA,IACI,OAAIA,EAAeC,cAAe,IAAIvpB,MAAO4J,UACjC0f,EAAeC,WAAYhnB,YAAc+mB,EAAeE,QAAQjnB,YAG5E+mB,EAAeE,KAAO,GACtBF,EAAeC,YAAa,IAAIvpB,MAAO4J,WACJrH,YAAc+mB,EAAeE,QAAQjnB,aAwC5EknB,EAAO,SAAPA,IAAsB,QAAApxB,EAAA2M,UAAAxH,OAAX0P,EAAW/E,MAAA9P,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXiW,EAAWjW,GAAA+N,UAAA/N,GAClB,IAAMyyB,KAEN,OADAxc,EAAOxP,QAAQ,SAAArF,GAAA,OAASqxB,EAAIhqB,KAAJgqB,UAAY5iB,MAC7B4iB,GAQXC,EAAY,SAAZA,EAAaC,GACT,IAAIC,KACAC,EAAiB,KAKrB,OAHAF,EAAmBA,GACa,mBAArBA,GAAmCA,GAAqB,aAE5D,SAACG,EAAWrM,MACZhe,KAAKV,MAAM6qB,EAAOE,GACE,OAAnBD,IACAA,EAAiBf,EAAa,WAC1B,IAAMiB,EAAQH,EAAMpR,MAAM,GAC1BoR,EAAMrsB,OAAS,EACfssB,EAAiB,KAEVE,EAzCN9Y,OAAO,SAACjJ,EAAOmT,GAEZ,OAAIA,EAAGoO,QAAQvhB,EAAMT,IACVS,GAGXA,EAAMT,IAAI4T,EAAGoO,MAAQ,EACrBvhB,EAAMiC,OAAOxK,KAAK0b,GAEXnT,KACNT,OAAS0C,YACbA,OA8BaxM,QAAQ,SAAArF,GAAA,OAAM+iB,MAC5BwO,EAAiBlM,QAKjCuM,EAAQ,SAARA,EAAQ5xB,GAAA,OAAa,mBAAAhB,EAAA2N,UAAAxH,OAAI0P,EAAJ/E,MAAA9Q,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAIsV,EAAJtV,GAAAoN,UAAApN,GAAA,OAAesV,EAAO1F,IAAI,SAACV,GAC5C,IAAMojB,EAAOC,EAAUrjB,GACvB,OACIpQ,KAAMwzB,EAAKxzB,KACX0zB,cAAeF,EAAKE,cACpBhzB,MAAO8yB,EAAKG,UAGpBC,EAAkB,SAAlBA,IAAkB,QAAAjyB,EAAA2M,UAAAxH,OAAI0P,EAAJ/E,MAAA9P,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAIiW,EAAJjW,GAAA+N,UAAA/N,GAAA,OACdoC,aAAc6T,EAAOuL,MAAM,EAAGvL,EAAO1P,OAAS,GAC9C4d,GAAIlO,EAAOA,EAAO1P,OAAS,KAE/B+sB,EAAmB,SAAnBA,EAAoBC,GAChB,IAAId,KACEliB,KA2BN,OA1BAgjB,EAAK9sB,QAAQ,SAAArF,GAAA,OAAQmP,EAAI0iB,EAAKE,gBAAkB,IAChD,SAASK,EAAK1gB,GACVA,EAAIrM,QAAQ,SAACwsB,GACT,IAAIQ,EACAC,SACAC,SACAC,UACGH,EAAQR,EAAKE,iBAAkB5iB,GAIb,KADrBmjB,EAAcnjB,EAAIkjB,KACQC,IAAgBjB,EAAIlsB,OAAS,IAEnDotB,EAASlB,EAAIjR,MAAM,EAAGkS,GACtBE,EAAUnB,EAAIjR,MAAMkS,EAAc,GAClCjB,EAAMkB,EAAOzgB,OAAO0gB,GAGpBA,EAAQntB,QAAQ,SAAC8lB,EAAMrtB,GAAP,OAAaqR,EAAIgc,EAAK4G,eAAiBj0B,EAAIy0B,EAAOptB,SAClEgK,EAAIkjB,GAAShB,EAAIhqB,KAAKwqB,GAAQ,GAXlC1iB,EAAIkjB,GAAShB,EAAIhqB,KAAKwqB,GAAQ,EAclCO,EAAIP,EAAKY,iBArBjB,CAwBIN,GACGd,GAEXqB,GACIC,WAAY,SAAAA,aAAe,QAAA3yB,EAAA2M,UAAAxH,OAAX0P,EAAW/E,MAAA9P,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXiW,EAAWjW,GAAA+N,UAAA/N,GACvB,IAAM2iB,KAIN,OAHA1M,EAAOxP,QAAQ,SAACutB,GACZp0B,OAAOmgB,OAAO4C,4HAASqR,EAAYv0B,KAAOu0B,EAAY7zB,UAEnDwiB,GAEXsR,SAAU,SAAAA,SAAA7yB,GAAA,OAAe4yB,EAAY7zB,QAgBvC+zB,aACF,SAAA9yB,EAAa0yB,iGAAUK,QACnBltB,KAAKkd,GAAK2P,EACV7sB,KAAKmtB,iEAGe,IAAAhzB,EAEpB,OADAizB,OAAKD,KAAI3rB,KAAT4rB,mBACOptB,qDAIP,OAAOA,KAAKmtB,wCAIZ,OAAOntB,KAAKkd,SAhBd+P,GAgBc/P,8XC1LhB,SAAA/iB,EAAa3B,EAAM0zB,EAAe/jB,iGAASklB,QACbllB,EAAUA,MACpCnI,KAAKxH,KAAOA,EACZwH,KAAKksB,cAAgBA,EACrBlsB,KAAKstB,SACLttB,KAAK4sB,iBACL5sB,KAAKutB,MAAQ,KACbvtB,KAAKwtB,kBACLxtB,KAAKytB,UAAYtlB,EAAQslB,UACzBztB,KAAK0tB,WACL1tB,KAAK6sB,SAAW,KAChB7sB,KAAK2tB,2EAGgB,QAAAxzB,EAAAhB,EAAA6G,KAAAjH,EAAA+N,UAAAxH,OAAL6tB,EAAKljB,MAAAlR,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAALk1B,EAAKl1B,GAAA6O,UAAA7O,GAGrB,OAFA21B,OAAKN,OAAM9rB,KAAXosB,QAAmBT,GACnBA,EAAI3tB,QAAQ,SAAArF,GAAA,OAAS0zB,EAAMjB,cAAcprB,KAAKC,KACvCzB,mDAGMgsB,GAEb,OADAhsB,KAAK2tB,cAAcnsB,KAAKwqB,GACjBhsB,6CAiBP,OAHAA,KAAKmsB,KAAOnsB,KAAK6sB,SAAL7sB,aAAiBA,KAAK8tB,oBAClC9tB,KAAK0tB,QAAQlsB,KAAKxB,KAAKmsB,MACvBnsB,KAAKwtB,kBACExtB,qDAIP,OAA0B,IAAtBA,KAAKstB,MAAMhuB,SAEP9G,KAAMwH,KAAKxH,KACX0zB,cAAelsB,KAAKksB,cACpBhzB,MAAO8G,KAAKmsB,OAGbnsB,KAAKytB,UAALztB,aAAkBA,KAAKstB,MAAMhkB,IAAI,SAAAnP,GAAA,OAAQ4zB,EAAK7B,6DAIrD,IACIwB,EAAU1tB,KAAK0tB,QACfM,EAAON,EAAQA,EAAQpuB,OAAS,GAEpC,OAAuB,IAAnBouB,EAAQpuB,OACDU,MAEX0tB,EAAQlsB,KAAKwsB,GACNhuB,4CAIP,IAAMiuB,EAAOjuB,KAAK0tB,QACdM,EAAOC,EAAKA,EAAK3uB,OAAS,GAG9B,OAFA2uB,EAAK3uB,OAAS,EACd2uB,EAAKzsB,KAAKwsB,GACHhuB,4CAIP,OAAqB,OAAdA,KAAKxH,sCAhDZ,OAAOwH,KAAKutB,wBAGNr0B,GAGN,OAFA8G,KAAKutB,MAAQr0B,EACb8G,KAAKwtB,kBACExtB,WD0JKkd,GC1JLld,kQC3BX,SAAA7F,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAe6Y,QACXluB,KAAKstB,SACLttB,KAAK6rB,WACDsC,aACAC,oEAIY,IAAAj0B,EAEhB,OADAyzB,OAAKN,OAAM9rB,KAAXosB,mBACO5tB,2DAGckd,GAAI,IAAA/jB,EAAA6G,KACnBquB,EAASruB,KAAK6rB,UAAUuC,aAC1BpqB,EAAQqqB,EAAO7sB,KFaN,SAAC8sB,EAAOpR,GACrB,IAAIqR,EAAM,SAANA,IACArR,iBAAMoR,EAAMhlB,IAAI,SAAC0iB,GACb,IACIiC,EAAOjC,EAAK0B,QACZx1B,EAAI+1B,EAAK3uB,OAAS,EACtB,OAAQ2uB,EAAK/1B,EAAI,EAAI,EAAI,EAAIA,EAAI,GAAI+1B,EAAK/1B,SAIlD,OADAq2B,EAAIjD,KAAOF,IACJmD,EAVM,CEb0BvuB,KAAKstB,MAAOpQ,IAAO,EAE1D,OAAO,WACHzb,EAAKoqB,UAAUuC,aAAeC,EAAOhQ,OAAO,SAACnB,EAAIjlB,GAAL,OAAWA,IAAM+L,2DAI5CkZ,GAAI,IAAA/jB,EAAA6G,KACnBquB,EAASruB,KAAK6rB,UAAUsC,UAC1BnqB,EAAQqqB,EAAO7sB,KFgBT,SAAC8sB,EAAOpR,GAClB,IAAIqR,EAAM,SAANA,IACArR,iBAAMoR,EAAMhlB,IAAI,SAAC0iB,GACb,IAAMiC,EAAOjC,EAAK0B,QAClB,OAAQO,EAAK,GAAIA,EAAKA,EAAK3uB,OAAS,SAI5C,OADAivB,EAAIjD,KAAOF,IACJmD,EARG,CEhB0BvuB,KAAKstB,MAAOpQ,IAAO,EAEvD,OAAO,WACH1H,EAAKqW,UAAUsC,UAAYE,EAAOhQ,OAAO,SAACnB,EAAIjlB,GAAL,OAAWA,IAAM+L,0DAK9D,QAAShE,KAAK6rB,UAAUsC,UAAU7uB,aDL3BU,GCK2BV,8XCtBtC,SAAAnF,IAAe,IAAAhB,EAAA6G,MAAA,SAAA7F,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAArV,KAAA7F,GACX6F,KAAKwuB,oBACLxuB,KAAKytB,UAAY1B,EAAM/rB,KAAKwuB,kBAC5BxuB,KAAKzI,KAAO,IAAIk3B,EAAK,KAAM,MAAQhB,UAAWztB,KAAKytB,YACnDztB,KAAKzI,KAAKs1B,SAAWA,EAASC,WAE9B9sB,KAAK0uB,UAAY,KACjB1uB,KAAK2uB,cACL3uB,KAAK4uB,qBACDC,yBACAC,uBAGJ9uB,KAAK+uB,UAAYtD,EAAU,SAACjM,GACxB,IAAIgN,SACJ,IAAKA,KAAShN,EAAQwP,YAAa,CAC/B,OAAUh1B,eAAe5B,KAAKqJ,EAAK+sB,iBAAkBhC,GACjD,OAEJ/qB,EAAK+sB,iBAAiBhC,GAAOyC,mEAKxB1lB,EAAK2lB,GAClB,IACIC,EADA/uB,SAEEouB,EAAmBxuB,KAAKwuB,iBAC1Bj3B,EAAOyI,KAAKzI,KACZk2B,EAAYztB,KAAKytB,UA8CrB,OA5CC,SAASlB,EAAK6C,EAAMlD,EAAewB,GAChC,IAAIl0B,SACAgzB,SACA6C,SACArD,SAEJ,IAAKxyB,KAAO41B,EACR,MAAUp1B,eAAe5B,KAAKg3B,EAAM51B,GAcpC,GAVAwyB,EAAO,IAAIyC,EAAKj1B,EADhBgzB,KAAWN,EAAgB1yB,GACGi0B,cAC9Be,EAAiBhC,GAASR,YAErBqD,EAAO3B,EAAQ2B,MAChBA,EAAKC,gBAAgBtD,GAGrBz0B,EAAK+3B,gBAAgBtD,GAGrBrB,EAAevqB,EAAMgvB,EAAK51B,IAC1B+yB,EAAInsB,EAAJmsB,GAAYL,EAAgB1yB,EAA5B+yB,KAAsC8C,KAAMrD,IAC5CA,EAAKa,SAAWA,EAASC,gBACtB,GAAI1sB,aAAe6sB,EAAgB,KAAA10B,EACtCyzB,EAAKa,SAAWzsB,EAAItH,OACpBy2B,KAAKD,gBAALC,UAAwBnvB,EAAIovB,kBAAkBlmB,IAAI,SAAAnP,GAAA,OAASq0B,EAAiBhC,YAE5ER,EAAKa,SAAWA,EAASG,SACzBhB,EAAKG,KAAO/rB,EA7BvB,CAiCCmJ,EAAe,OAAV2lB,EAAiB,GAAQA,EAAzBA,KACHG,KAAMb,EAAiBU,KAG3BlvB,KAAK0uB,UAAY,IAAIhc,EAAW/Z,OAAO6O,KAAKxH,KAAKwuB,oBAIjDW,EAAiBnvB,KAAK4W,YAAY6Y,gBAAgBl4B,GAAM0U,OAAO1U,GAAM8mB,OAAO,SAAAlkB,GAAA,OAAQ6xB,EAAKwB,kBAC1EhuB,QAAQ,SAAArF,GAAA,OAAQ6xB,EAAK5F,YACpCiG,EAAiB8C,GAAgB3vB,QAAQ,SAAArF,GAAA,OAAQ6xB,EAAK5F,YAC/CpmB,gDAGG0vB,GACV,GAAIA,KAAQ1vB,KAAKwuB,iBACb,OAAOxuB,KAAKwuB,iBAAiBkB,GAAMvD,wDAKrBwD,EAAOC,GAAQ,IAAA72B,EAAAW,EAAAsG,KAC3BsuB,EAAQqB,EAAMrmB,IAAI,SAAAnP,GAAA,OAAQqb,EAAKgZ,iBAAiBkB,KAClDG,GAAQ5vB,MAAI6vB,GAAeC,SAAnB9vB,UAA+BquB,IAG3C,OADAA,EAAM9uB,QAAQ,SAAArF,GAAA,OAAQ6xB,EAAKgE,gBAAgBH,KACpCA,mBAAuBD,EAAO70B,MAAQ60B,EAAO1S,2CAGrC,IACf,IAAI+S,SACAC,SAFWn3B,EAAA+N,UAAAxH,OAAR0P,EAAQ/E,MAAAlR,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAR+W,EAAQ/W,GAAA6O,UAAA7O,GAGf,IACI01B,KACAW,EAAQtf,EAAO1F,IAAI,SAACukB,GAEhB,OADAA,EAAM,GAAG1B,KAAO0B,EAAM,GACfA,EAAM,KAMrB,OAJAS,EAAM9uB,QAAQ,SAAArF,GAAA,OAAQ6xB,EAAK5F,YAC3BuH,EAAcnsB,KAAdmsB,UAAsBpC,iBAAQ+C,EAAMhlB,IAAI,SAAAnP,GAAA,OAAQ6xB,EAAK2B,oBACrDsC,EAAa,IAAIvd,EAAW4b,EAAMhlB,IAAI,SAAAnP,GAAA,OAAQ6xB,EAAKE,iBAE9ClsB,KAAK2uB,aAMVuB,EAAgB7D,EAAiBiC,IACnB9uB,QAAQ,SAAArF,GAAA,OAAgBg2B,EAAa/J,YACnD6J,EAAWG,OAAOF,EAAc5mB,IAAI,SAAAnP,GAAA,OAAQ6xB,EAAKE,iBACjDyB,EAAcnsB,KAAdmsB,UAAsBpC,iBAAQ2E,EAAc5mB,IAAI,SAAAnP,GAAA,OAAQ6xB,EAAK2B,oBAE7D3tB,KAAKqwB,0BAA0BpmB,MAAME,KAAK,IAAIxJ,IAAIgtB,IAAiBsC,GAC5DjwB,OAXHA,KAAKqwB,0BAA0B1C,GAC/B3tB,KAAK2uB,cACE3uB,8DAYY2tB,EAAesC,GAAY,IAAAl3B,EAAAiH,KAE9CswB,KACAC,KAmBJ,OAlBIN,GAEoBvd,EAAWU,WAAWpT,KAAK0uB,UAAWuB,GAC9BO,UAEpBhxB,QAAQ,SAAArF,GAAA,OAASs2B,EAAKjC,iBAAiBX,GAAO6C,eAG1D/C,EAAcnuB,QAAQ,SAACrF,GACnBm2B,EAAS9uB,KAAT8uB,UAAiBn2B,EAAE0xB,UAAUuC,iBAEjCT,EAAcnuB,QAAQ,SAACrF,GACnBo2B,EAAS/uB,KAAT+uB,UAAiBp2B,EAAE0xB,UAAUsC,eAGhCnuB,KAAK4uB,oBAAoBC,uBAAyByB,EAAS9wB,QAAQ,SAAArF,GAAA,OAAM+iB,OACzEld,KAAK4uB,oBAAoBE,oBAAsB9uB,KAAK+uB,UAAUwB,GAAYvB,YAAaiB,IACxFjwB,KAAK2wB,2BACE3wB,oDAGgB,QAAA7F,EAAA6F,KAAA7G,EAAA2N,UAAAxH,OAARsxB,EAAQ3mB,MAAA9Q,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAARk3B,EAAQl3B,GAAAoN,UAAApN,GACvB,IACI8O,EADUooB,EAAOtnB,IAAI,SAAAnQ,GAAA,OAAS03B,EAAKrC,iBAAiBhC,KACvCljB,IAAI,SAAAnP,GAAA,OAAS6xB,EAAMA,EAAKG,QAEzC,OADAnsB,KAAK8wB,OAAL9wB,aAAewI,IACRxI,qDAWP,OADAA,KAAK2uB,cACE3uB,8DAMP,OAFAA,KAAK4uB,oBAAoBC,yBACzB7uB,KAAK4uB,oBAAoBE,sBAClB9uB,0DAGaxG,GAEpB,OADAwG,KAAK4uB,oBAAuBp1B,EAA5BwG,gBACOA,4DAGewsB,GACtB,OAAOxsB,KAAKwuB,iBAAiBhC,mDAvBTR,GACpB,IAAM+E,KAEN,OHdR,SAASC,EAAwBhF,EAAM+E,EAAUE,GAC7C,IAAIzE,SACJR,EAAKsB,MAAM9tB,QAAQ,SAAC0xB,GAChBF,EAAuBE,EAAWH,EAAUE,KAG5CjF,EAAKmF,WAAa3E,EAAQR,EAAKE,iBAAkB+E,IAGrDF,EAASvvB,KAAKwqB,GACdiF,EAAWzE,GAAS,GAVxB,CGa+BR,EAAM+E,MACtBA,QDtI2BzxB,GCsI3ByxB,iXC+JflV,aA5TI,SAAA1hB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAkc,UAAA,sCAAe+b,QACXpxB,KAAKqxB,OAAS,IAAIC,EAClBtxB,KAAKuxB,aACLvxB,KAAKwxB,0DA6BL,IAAIC,SACAloB,SAWJ,OATsB,IAAlBzC,UAAOxH,QACPmyB,EAAa,KACbloB,4CAEAkoB,0CACAloB,2CAGJvJ,KAAK0xB,gBAAgBD,EAAYloB,GAC1BvJ,oDASgB,IAAA7F,EACnBw3B,EACAC,EACAC,SACA3C,SACA4C,SAiBJ,OAfIhrB,UAAOxH,OAAS,GAChB4vB,0CACA2C,0CACAC,4CAEA5C,EAAQ,KACR2C,0CACAC,2CAGJH,EAAoBG,EAAQ1F,IAE5B2F,EADAH,EAAiB,IAAI3E,EAAe0E,EAAkBzU,KACvCoS,gBAAfyC,UAAkCJ,EAAkBx2B,eAEpD6E,KAAK0xB,gBAAgBxC,4HAAU2C,EAAUD,IAClC5xB,mDAIMyxB,EAAYloB,GAEzB,OADAvJ,KAAKqxB,OAAOW,gBAAgBzoB,EAAKkoB,GAC1BzxB,sCA0FP2vB,EAAOzS,EAAI+U,GACX,IAQiBC,EAPbC,EAAWxC,aAAiB1lB,MAAQ0lB,GAASA,GAE7CyC,EAAQpyB,KAAKqxB,OAAOgB,qBAAqBF,GACrCp3B,KAAM,YACNmiB,OAOR,OAJI+U,IAEAC,OAAKb,OAAOiB,kBAAkBC,uBAAuB,cAAaC,eAAlEN,UAAoFvC,IAEjFyC,qCAgBLzC,EAAOzS,EAAI+U,GACb,IASiBQ,EARbN,EAAWxC,aAAiB1lB,MAAQ0lB,GAASA,GAE7CyC,EAAQpyB,KAAKqxB,OAAOgB,qBAAqBF,GACrCp3B,KAAM,YACNmiB,OASR,OALI+U,IAEAQ,OAAKpB,OAAOiB,kBAAkBC,uBAAuB,iBAAgBC,eAArEC,UAAuF9C,IAGpFyC,uCAYP,OAFApyB,KAAKuxB,aACLvxB,KAAKwxB,MAAMlyB,OAAS,EACbU,4CAYP,OAHAA,KAAKuxB,aACLvxB,KAAK0yB,QAAL1yB,aAAgBA,KAAKwxB,QACrBxxB,KAAKwxB,MAAMlyB,OAAS,EACbU,0CAkBP,IAEIoM,EAFAsjB,SACAtvB,SAGJ,OAAQgM,EAAMtF,UAAOxH,QACrB,KAAK,EACDowB,0CACA,MAEJ,KAAK,EACDA,0CACAtvB,0CACA,MAEJ,QACI,OAAOJ,KAGX,OAAY,IAARoM,GACApM,KAAKuxB,UAAYvxB,KAAKwxB,MAAMhwB,MAAMkuB,EAAMtvB,IAAQJ,KAAK0yB,SAAShD,EAAMtvB,IAC7DJ,MAGJA,KAAKqxB,OAAOsB,aAAajD,2CAIjB,QAAAv1B,EAAAhB,EAAA6G,KAAAjH,EAAA+N,UAAAxH,OAAPqwB,EAAO1lB,MAAAlR,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAP03B,EAAO13B,GAAA6O,UAAA7O,GAMf,OAAqB,IAAjB03B,EAAMrwB,OACCU,OAGXqxB,OAAKA,QAAOP,OAAZO,UAAsB1B,EAAMrmB,IAAI,SAAAnP,GAAA,OAASsH,EAAK4vB,OAAOuB,yBAAyBlD,EAAK,IAAKA,EAAK,QACtF1vB,4CAQP,OAAOA,KAAKqxB,iDASZ,OAAOrxB,KAAKqxB,OAAO95B,KAAK40B,4CA5Sb5iB,GACX,OAAO,IAAIspB,GAAQnB,gBAAgB,KAAMnoB,SA+SjDsS,GCzUAiX,uFCFAp7B,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAOq7B,kBACXr7B,OAAOs7B,UAAY,aACnBt7B,OAAOu7B,SAEFv7B,OAAOw7B,WAAUx7B,OAAOw7B,aAC7Bv6B,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAOq7B,gBAAkB,GAEnBr7B,sVCdR,SAASy7B,uBAAuB5pB,KAAO,OAAOA,KAAOA,IAAIlQ,WAAakQ,KAAQjP,QAAWiP,KAJzF5Q,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEIk6B,MAAQD,uBAFDn1B,oBAAQ,IAMfq1B,mBAAqBF,uBAFDn1B,oBAAQ,IAI5Bs1B,MAAQF,MAAK,QAAYG,KAAuB,oBAAX17B,OAAyBA,YAAS27B,GACvEC,IAAMH,MAAM1I,IAAI8I,SAChBlvB,EAAI8uB,MAAM1I,IAAIhqB,KACdG,IAAMyD,EAAEzD,IACR4K,MAAQnH,EAAEmH,MAEVgoB,kBAAqBC,IAAK,UAC1BC,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAajsB,SACnD,IAAIksB,QACA3E,KACA3uB,IACAuzB,aACAC,eAAgB,EAChBxqB,MAAQkqB,kBAAkBlqB,MAE9B,QAAkB,IAAPmqB,IAAoC,WAAd95B,QAAO85B,IAAxC,CAwBA,IAAKxE,QApBD4E,aAAevqB,MAAMmqB,MACrBI,aAAa1K,UAGjB7f,MAAMmqB,IAAMl0B,MACZmI,QAAUA,aACFqsB,cAAgBpxB,SAASrC,IAAMoH,QAAQqsB,eAAiBzzB,IAAMuyB,MAAMmB,qBAEnD,iBAAdN,YACPA,UAAYV,IAAIiB,eAAeP,aAGnCE,QAAUf,MAAMqB,gBAAgBR,YACxBS,UAAYtB,MAAMuB,YAEtBhB,gBAAgBiB,aAAejB,gBAAgBkB,MAASV,QAAQW,cAAiBX,QAAQY,eACzFV,eAAgB,GAGpBF,QAAQO,UAAY,GACPtB,MAAM4B,qBACfb,QAAQc,MAAMzF,MAAQ4D,MAAM4B,qBAAqBxF,MAGrD1vB,KAAKk0B,GAAKA,GACVl0B,KAAKo1B,gBAAkBf,QAEvBr0B,KAAKq1B,kBAAoB,IAAIhC,mBAAkB,QAAYgB,QAASE,cAAe,IACnFv0B,KAAKs1B,iBAAmBlB,YACxBp0B,KAAKu1B,OAAQ,EACbv1B,KAAKm1B,SACLn1B,KAAKmI,QAAUA,QAEfnI,KAAKw1B,YAaTvB,kBAAkBwB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEGpzB,KAEsB,iBAApBozB,WAAWpzB,OACzBozB,WAAWpzB,KAAOozB,WAAWpzB,KAAK+B,YAFlCqxB,WAAWpzB,KAAO,GAKtBozB,WAAWC,MAAQD,WAAWpzB,KAAK/C,MAAM,oBAClCm2B,YAIXzB,kBAAkBlqB,SAIlBkqB,kBAAkBl6B,UAAU67B,qBAAuB,SAAUtzB,KAAMuzB,oBAAqBv2B,QACpF,IAAKU,KAAKu1B,MACN,OAAO,EAGX,IAAIO,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwBp2B,KAAKmI,QAAQqsB,cACrCL,UAAYn0B,KAAKq2B,WACjBlB,MAAQn1B,KAAKm1B,UACbmB,MAAQt2B,KAAKu2B,iBAAmBv2B,KAAKu2B,mBACrCC,iBAAmBx2B,KAAKy2B,oBAAsBz2B,KAAKy2B,sBACnDC,UAAYp0B,MAAQ6yB,MAAMwB,UArHtB,KAqH4CxB,MAAMyB,YArHlD,KAqH0EzB,MAAM0B,YArHhF,KAqHwG1B,MAAM2B,WArH9G,IAsHJC,cAAgBz0B,KAAO,QAAU6yB,MAAMwB,UAtHnC,KAsHyDxB,MAAMyB,YAtH/D,KAsHuFzB,MAAM0B,YAtH7F,KAsHqH1B,MAAM2B,WAtH3H,IA4IR,OApBAnD,iBAAiBrxB,QAAUA,KAAOqxB,iBAAiBrxB,OAE9CuzB,yBAGqDrC,KAAjD2C,qBAAuBG,MAAMS,kBAC9B5C,UAAUS,UAAYtyB,KAAK00B,OAAS10B,KAAK00B,OAAO13B,QAAU2K,MAAM3K,OAAS,GAAGwF,KAAKxC,MACjF0zB,GAAK7B,UAAUc,YAEfd,UAAUS,UAAYtyB,KACtB2zB,IAAM9B,UAAUc,YAEhBkB,qBAAuBG,MAAMS,gBAAkBf,GAAK12B,OAAS22B,MAAQ32B,OAAS,GAC9Ek3B,iBAAiBh1B,KAAKu1B,eAClBP,iBAAiBl3B,OAAS82B,8BACnBE,MAAME,iBAAiB7sB,UAZtCwsB,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAY32B,MAAM,MAEtB03B,MAAO1f,WAAWwe,MAAM,GAAI,IAC5BmB,OAAQ3f,WAAWwe,MAAM,GAAI,OAIrC5B,UAAUS,UAAYtyB,KAEtBwzB,MACIoB,OAAQ/C,UAAUa,aAClBiC,MAAO9C,UAAUc,YAAckB,sBAGnCG,MAAMI,WAAaZ,KAAKmB,MAAQ,IAAMnB,KAAKoB,OAC3CV,iBAAiBh1B,KAAKk1B,WAClBF,iBAAiBl3B,OAAS82B,8BACnBE,MAAME,iBAAiB7sB,SAG3BmsB,OAIX7B,kBAAkBl6B,UAAUo9B,YAAc,WACtC,IAAIC,QAAUp3B,KAAKq3B,cACflD,UAAYn0B,KAAKq2B,WACjBiB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAUhsB,KACb,IAAIisB,KAAMN,MASV,OAPAK,QAAQE,YAAclsB,KAEtB2rB,OADAM,KAAOD,QAAQG,WACFR,MAAQlD,qBACT,IACRkD,MAAQM,KAAKN,OAGVA,OAGJ,SAAU3rB,KAEb,OADA6oB,UAAUS,UAAYtpB,IACf6oB,UAAUc,cAkB7BhB,kBAAkBl6B,UAAUy7B,SAAW,SAAUL,OAC7C,OAAKn1B,KAAKu1B,MAMNJ,QAAUn1B,KAAKm1B,OAAUn1B,KAAK03B,cAI7BvC,QACDA,MAAQn1B,KAAKm1B,OAGjB7B,MAAMqE,cAAcxC,OACpBn1B,KAAKm1B,MAAQA,MAEbn1B,KAAKq3B,cAAgBO,MAAQ53B,KAAKq1B,kBAAkBv8B,IAAIq8B,OAEpDn1B,KAAKq3B,eACLr3B,KAAKq2B,WAAauB,MAAM5L,KACxBhsB,KAAK63B,SAAWD,MAAME,QACtB93B,KAAK+3B,OAASH,MAAMI,UACpBh4B,KAAKi4B,YAAcL,MAAMM,WACzBl4B,KAAK03B,cAAe,GAEpB13B,KAAK03B,cAAe,EAGjB13B,WAvBP,EALWA,KAGX,IAAI43B,OAmCR3D,kBAAkBl6B,UAAUo+B,sBAAwB,SAAU/D,aAC1D,OAAKp0B,KAAKu1B,OAGVv1B,KAAKs1B,iBAAmBlB,YACjBp0B,MAHIA,MA4Bfi0B,kBAAkBl6B,UAAUq+B,aAAe,SAAU91B,KAAM+1B,SAAUC,UAAWC,QAC5E,IAAKv4B,KAAKu1B,MACN,OAAO,OAGE/B,IAATlxB,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAK+B,YAGhB,IAAI+H,IACAosB,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAllB,EACA7O,EACAg0B,SACAjU,KACAkU,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACApiC,EAAI,EACJqiC,YAAct6B,KAAKs1B,gBAAkB,GAAK,MAC1C4C,WAAal4B,KAAKi4B,YAClBH,QAAU93B,KAAK63B,SACf1D,UAAYn0B,KAAKq2B,WACjBuB,MAAQ53B,KAAKq3B,cACbkD,cAAgB3C,MAAM2C,cACtBC,SAAW5C,MAAM4C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAASvvB,KAI7B,IAFA,IAAIwvB,GAAK,KACL7iC,GAFJqT,IAAMA,IAAI/I,QAAQ,SAAU,KAEhBjD,OACLw7B,GAAGv9B,KAAK+N,IAAIyvB,OAAO9iC,GAAK,MAC/B,OAAOqT,IAAIiP,MAAM,EAAGtiB,EAAI,IAExB+iC,YACA14B,KAAMA,KACN+1B,SAAUA,SACVC,UAAWA,UACXrB,MAAO,KACPC,OAAQ,KACR+D,aAAc,KACdC,cAAe,KACfC,QAAS74B,KACT84B,aAAa,GAYjB,GATAlC,SAAWl5B,KAAKm3B,cAKZmB,YAAcJ,aACdI,WAAa,KAGbnE,UAAW,CACX,IAAKN,gBAAgBU,cAAe,CAmBhC,IAlBAuF,WAAaxG,MAAM+H,YAAY99B,KAAK+E,QAahC6xB,UAAUS,UAAYtyB,KACtB04B,WAAWC,aAAepC,SAAW1E,UAAUc,YAC/C+F,WAAWE,cAAgBpC,UAAY3E,UAAUa,eAVjD0D,QAAUp2B,KAAKC,QAAQ+wB,MAAMgI,UAAW,SAAU5xB,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpC2vB,qBAAuBr5B,KAAKu7B,WAAW7C,SAAS,GAEhDsC,WAAWC,aAAepC,SAAWQ,qBAAqBpC,MAC1D+D,WAAWE,cAAgBpC,UAAYO,qBAAqBnC,QAO5D4B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA2C,WAAW/D,MAAQ+D,WAAWC,aAAepC,SAC7CmC,WAAW9D,OAAS8D,WAAWE,cAAgBpC,UACxCkC,WAGX,GAAI9C,WAAaI,UAIb,OAHA0C,WAAW14B,KAAO,GAClB04B,WAAW/D,MAAQ+D,WAAWC,aAAe,EAC7CD,WAAW9D,OAAS8D,WAAWE,cAAgB,EACxCF,WAQf,GAHA14B,KAAOu4B,SAASv4B,MAAMC,QAAQ,SAAU,KACxCo2B,gBAAkB34B,KAAKs1B,gBAAkB+C,SAAWA,SAAWkC,eAE1DT,WAAY,CAab,GAXA1tB,KADAiuB,WAAa/3B,KAAK/C,MAAM,KACPD,OACjBk5B,QAAU,GAAIC,WACdQ,SAAWoB,WAAW,GAElBr6B,KAAK+3B,OAAOkB,UACZM,SAAWv5B,KAAK+3B,OAAOkB,UAAUhC,OAEjCsC,SAAWL,SAASD,UACpBj5B,KAAK+3B,OAAOkB,WAAchC,MAAOsC,WAGjCZ,gBAAkBY,SAElBthC,GADAwgC,QAAUn2B,KAAKk5B,OAAO,EAAGlI,MAAMmI,qBAAqBn5B,KAAMq2B,gBAAiB34B,OAAOT,MAAM,KAC5ED,WACT,IAAIi6B,SAAWlB,SAGlB,OAFA2C,WAAW14B,KAAO,GAClB04B,WAAW/D,MAAQ+D,WAAWC,aAAeD,WAAW9D,OAAS8D,WAAWE,cAAgB,EACrFF,WACAV,eACP3B,gBAAkBN,SAAW,EAAImC,UACXjB,SAClBe,YAAc,MAEd3B,gBAAkBN,SAAWmC,UACPjB,SAClBe,YAAc,KAEd3B,gBAAkB,EAClB2B,YAAc,KAQ1B,GAHAH,SAAWjB,SAAST,QAAQ3zB,KAAK,KACjCs1B,UAAYp6B,KAAKi4B,YAEbM,OAAQ,CACR,KAAOtgC,EAAImU,IAAKnU,GAAK,EAajB,GAZAghC,SAAWR,QAAQxgC,GAAKoiC,WAAWpiC,GAC/B+H,KAAK+3B,OAAOkB,UACZM,SAAWv5B,KAAK+3B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BE,SAAWF,qBAAqBqC,UAAUzC,aACrEM,SAAWL,SAASD,WAExBj5B,KAAK+3B,OAAOkB,WACRhC,MAAOsC,YAGfY,UAAYZ,UACGZ,kBACNH,UACDA,QAAUC,QAAQle,MAAM,GAAI,GAAGzV,KAAK,KAEpCq1B,SAAW9B,UAKX,OAJA2C,WAAW14B,KAAOu4B,SAASrC,SAAW8B,YACtCU,WAAWW,SAAWX,WAAWG,QACjCH,WAAW/D,MAAQiC,SAAS8B,WAAW14B,MACvC04B,WAAW9D,OAASl3B,KAAKi4B,YAClB+C,WAQnB,OAHAA,WAAW14B,KAAOm2B,QAAQ3zB,KAAK,IAC/Bk2B,WAAW/D,MAAQkD,SACnBa,WAAW9D,OAASl3B,KAAKi4B,YAClB+C,WAEP,KAAO/iC,EAAImU,IAAKnU,GAAK,EAkBjB,GAhBiB,OADjBghC,SAAWR,QAAQxgC,GAAKoiC,WAAWpiC,KACV6/B,UACrBmB,SAAW,UAGXj5B,KAAK+3B,OAAOkB,UACZM,SAAWv5B,KAAK+3B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BE,SAAWF,qBAAqBqC,UAAUzC,aACrEM,SAAWL,SAASD,WAExBj5B,KAAK+3B,OAAOkB,WACRhC,MAAOsC,YAGfY,UAAYZ,UAEGZ,kBACNH,UACDA,QAAUC,QAAQle,MAAM,GAAI,GAAGzV,KAAK,KAEpCq1B,SAAW9B,UAAU,CA2BrB,GAzBA4B,UAAY33B,KAAKk5B,OAAO,EAAG/C,QAAQn5B,QAAQs8B,YAAY,KACvD5B,SAAW13B,KAAKk5B,OAAO,EAAG/C,QAAQn5B,QAAQs8B,YAAY,KAClD3B,UAAYC,iBACZC,SAAWjB,SAAST,QAAQle,MAAM2f,gBAAkB,EAAGD,WAAWn1B,KAAK,KACvE2zB,QAAQ3vB,OAAOmxB,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBlB,aAAekB,UAAY,GACpBD,SAAWE,iBACdF,WAAavB,QAAQn5B,OAAS,GAC9B66B,SAAWjB,SAAST,QAAQle,MAAM2f,gBAAkB,EAAGD,WAAWn1B,KAAK,KACvE2zB,QAAQ3vB,OAAOkxB,SAAU,EAAG,YAE5BG,SAAWjB,SAAST,QAAQle,MAAM2f,gBAAkB,EAAGD,WAAWn1B,KAAK,KACvE2zB,QAAQ3vB,OAAOkxB,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBjB,aAAeiB,SAAW,IAE1BvB,QAAQ3vB,OAAO2vB,QAAQn5B,OAAS,EAAG,EAAG,QAAU+6B,WAAWpiC,IAC3D2iC,cAAgBnC,QAAQn5B,OAAS,EACjC66B,SAAWjB,SAAST,QAAQle,MAAM2f,gBAAkB,EAAGU,cAAgB,GAAG91B,KAAK,KAC/Eo1B,gBAAkBU,cAClB7B,aAAe9gC,IAEnBmiC,WAAap6B,KAAKi4B,aACFK,UAMZ,OALA0C,WAAW14B,KAAOu4B,SAASrC,SAAW8B,YACtCU,WAAWW,SAAWX,WAAWG,QAEjCH,WAAW/D,MAAQoB,SACnB2C,WAAW9D,OAASkD,UAAYp6B,KAAKi4B,YAC9B+C,WAEPjB,YAAch5B,IAAIg5B,YAAaI,UAC/B3B,QAAU,KACVQ,YAAc1F,MAAMmI,qBAAqBn5B,KAAKk5B,OAAOzC,cAAeJ,gBAAiB34B,MACrFm6B,SAAWjB,SAAS52B,KAAKk5B,OAAOzC,aAAcC,aAAe,IACzDP,QAAQn5B,OAASy5B,aAAeC,cAEhC/gC,GADAwgC,QAAUA,QAAQxsB,OAAO3J,KAAKk5B,OAAO/C,QAAQn5B,OAAQy5B,aAAeC,YAAcP,QAAQn5B,QAAQC,MAAM,MAC5FD,OAAS,GAYzC,OALAy6B,YAAch5B,IAAIg5B,YAAaI,UAE/Ba,WAAW14B,KAAOm2B,QAAQ3zB,KAAK,IAC/Bk2B,WAAW/D,MAAQ8C,YACnBiB,WAAW9D,OAASkD,UACbY,WAWX,IARApC,SAAWt2B,KAAKC,QAAQ+wB,MAAMuI,iBAAkB,MAEhDv5B,MADAA,KAAOA,KAAKC,QAAQ+wB,MAAMuI,iBAAkBvI,MAAMwI,uBACtCv5B,QAAQ,iBAAkB,iBAAmB+wB,MAAMyI,iBAAkB,IAAKzI,MAAM0I,oBAAoBl3B,KAAK,IAAM,eAE3HqvB,UAAUS,UAAYtyB,KAIjB8R,EAAI,EAAG7O,GAFZ+zB,QAAUnF,UAAUN,gBAAgBoI,iBAAiBpI,gBAAgBqI,sBAE7C58B,OAAQ8U,EAAI7O,EAAG6O,GAAK,EACxCkR,KAAOgU,QAAQllB,IAEXyf,gBAAgBsI,gBAAkB7I,MAAM8I,aAAa7+B,KAAK+nB,KAAK+W,aAEnD,MADZ7C,IAAMlU,KAAKsP,aAEK,MAAR4E,IACAmB,WAAaF,aAAan7B,OACX,MAARk6B,MACPkB,UAAYD,aAAan7B,QAG7Bm7B,aAAaj5B,MACT86B,SAAU3B,WACV4B,QAAS7B,UACTpV,KAAMA,OAEV+U,WAAW74B,KAAKg4B,MAS5B,GAJAvhC,EAAI,EACJmU,IAAMquB,aAAan7B,QACnBi6B,SAAWkB,aAAa,GAAGnV,KAAK2P,aAEjBoD,SAIX,OAHA2C,WAAW14B,KAAO,GAClB04B,WAAW/D,MAAQ+D,WAAWC,aAAeD,WAAW9D,OAAS8D,WAAWE,cAAgB,EAErFF,WAoBX,GAnBWzB,SAAWZ,kBAAoB34B,KAAKs1B,mBAE3CqD,gBAAkBN,SAAW,EAAImC,UACXjB,SAClBe,YAAc,MAEd3B,gBAAkBN,SAAWmC,UACPjB,SAClBe,YAAc,KAEd3B,gBAAkB,EAClB2B,YAAc,KAK1BnB,YAAcsB,aAAa,GAAGnV,KAAKkX,WACnCpD,WAAaqB,aAAa,GAAGnV,KAAKmX,UAE9BlE,OACA,KAAOtgC,EAAImU,IAAKnU,GAAK,GAEjBwhC,oBADAnU,KAAOmV,aAAaxiC,GAAGqtB,MACGkX,WAAarD,YAAc7T,KAAK2P,aAEjC0D,kBAChBkB,6BACDA,2BAA6B5hC,GAE7Bk8B,UAAUc,YAAcoD,WACxBuB,gBAAkB3hC,EAClBA,EAAImU,WAKhB,KAAOnU,EAAImU,IAAKnU,GAAK,EAEjByhC,iBADApU,KAAOmV,aAAaxiC,GAAGqtB,MACA0P,cAAgB1P,KAAKmX,UAAYrD,YAGxDO,OAAS,MAFTF,mBAAqBnU,KAAKkX,WAAarD,YAAc7T,KAAK2P,aAIjC0D,iBAChBkB,6BACDA,2BAA6B5hC,GAG7BwhC,mBAAqBpB,WACrB4B,UAAYQ,aAAaxiC,GAAGqkC,SAC5BtC,SAAWS,aAAaxiC,GAAGskC,QACvBtC,UAAYC,iBACZO,aAAaR,WAAW3U,KAAKsP,UAAY,QACzCsF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAU1U,KAAKsP,UAF5BoF,WAAa/hC,EAE2B,SAEA,SAE5CiiC,gBAAkBF,UAElB1U,KAAKoX,WAAWC,aAAahD,OAASlG,IAAImJ,cAAc,MAAOtX,MAI/DA,KAAK0P,aAAe1P,KAAKmX,UAAYnE,WAEjCqB,OACAA,OAAO+C,WAAWlZ,YAAYmW,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAU1U,KAAKsP,UAAY,IAExC6F,aAAaR,WAAW3U,KAAKsP,UAAY,IAE7CgF,gBAAkB3hC,EAElBA,EAAImU,KAEJytB,2BAA6B,OAKjCH,gBAAkBpB,YAClBsB,gBAAkB3hC,EAClBA,EAAImU,KAMpB,GAAIwtB,gBAAkBxtB,IAAK,CAOvB,IALA4uB,WAAWI,aAAc,EAGzBvB,2BAA6BA,4BAA0DD,gBAElF3hC,EAAImU,IAAM,EAAGnU,GAAK4hC,2BAA4B5hC,GAAK,GACpDqtB,KAAOmV,aAAaxiC,GAAGqtB,MAElBoX,WAAWlZ,YAAY8B,MAGhC,KAAOrtB,GAAK,EAAGA,GAAK,EAChBqtB,KAAOmV,aAAaxiC,GAAGqtB,KACnBgO,MAAMuJ,eAAet/B,KAAK+nB,KAAK+W,WAE/B/W,KAAKoX,WAAWlZ,YAAY8B,MAE5BrtB,EAAI,EAgBpB,OAVI+iC,WAAW14B,KAAO6xB,UAAUS,UAAUryB,QAAQ+wB,MAAMwJ,gBAAiB,MAAMv6B,QAAQ,WAAY,KAC3Fy4B,WAAWI,cACXJ,WAAW14B,MAAQg4B,YACnBU,WAAWW,SAAW/C,UAI9BoC,WAAW9D,OAAS/C,UAAUa,aAC9BgG,WAAW/D,MAAQ9C,UAAUc,YAEtB+F,WAGP,OADAA,WAAW+B,MAAQ,IAAI1sB,MAAM,qBACtB2qB,YAoBf/G,kBAAkBl6B,UAAUwhC,WAAa,SAAUj5B,KAAM06B,yBACrD,IAAKh9B,KAAKu1B,MACN,OAAO,EAGX,IAAI0H,QACAC,OACAC,MACAllC,EACAC,EACAklC,eAAiB,EACjBlG,OAAS,EACTmG,iBAEJ,IAAKL,wBACD,OAAOh9B,KAAK41B,qBAAqBtzB,MAKrC,IAAKrK,EAAI,EAAGC,GADZ+kC,QAAU36B,KAAK/C,MAAM,KACGD,OAAQrH,EAAIC,EAAGD,IACnCilC,OAASD,QAAQhlC,GACjBklC,MAAQn9B,KAAK41B,qBAAqBsH,QAAQ,EAAMD,QAAQ39B,QACxD43B,OAASn2B,IAAIm2B,OAAQiG,MAAMjG,QAC3BkG,gBAAkBD,MAAMlG,MACxBoG,cAAcH,QAAUC,MAAMlG,MAGlC,OACIA,MAAOtrB,MAAMyxB,gBACblG,OAAQA,OACRwE,UAAW2B,gBAOnBpJ,kBAAkBl6B,UAAU6vB,QAAU,WAClC,OAAK5pB,KAAKu1B,OAIVv1B,KAAKq1B,mBAAqBr1B,KAAKq1B,kBAAkBzL,SAAW5pB,KAAKq1B,kBAAkBzL,iBAE5E5pB,KAAKq2B,kBACLr2B,KAAK63B,gBACL73B,KAAK+3B,cACL/3B,KAAKq1B,yBACLr1B,KAAKq3B,qBACLr3B,KAAKk0B,UACLl0B,KAAKm1B,aACLn1B,KAAKo1B,uBACLp1B,KAAKs1B,gBAELt1B,MAfIA,MAkBfvI,QAAO,QAAcw8B,kBACrBv8B,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAIokC,KACH/J,KAAM,SAASA,KAAK3I,KACnB,IAAI6I,IAAM7I,IAAI8I,SAEV6J,UADM3S,IAAI4S,UACMD,UAEhBE,KAAO78B,KAAK68B,KACZ7rB,MAAQhR,KAAKgR,MAEb8rB,aAAe,2BACfC,eAAiBD,aAAe,YAChC3B,iBAAmB2B,aAAe,MAkLtC,OA/KAJ,KACC1S,IAAKA,IAEL+S,eAAgBA,eAEhB5B,iBAAkBA,iBAElBC,mBATwB0B,6BAWxBjJ,qBAAsB,IAEtB2H,aAAc,IAAIh6B,OAAO,KAAO25B,iBAAmB,MAEnDc,eAAgB,IAAIz6B,OAAO,kCAE3By5B,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAI16B,OAAO,kBAAoB25B,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAIj5B,OAAO,mBAAoB,KAE5Ck5B,UAAW,aAEXsC,eAAgB,WAEhB/I,WAAY,MAGZK,sBACC2I,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACT/G,MAAO,MACPC,OAAQ,MACR+G,SAAU,UAIXC,gBACCC,KAAM,OACNvH,WAAY,cACZwH,cAAe,cACfvH,WAAY,cACZwH,cAAe,cACf1H,SAAU,YACV2H,YAAa,YACbpG,WAAY,cACZqG,cAAe,cACfzH,UAAW,aACX0H,aAAc,cAIf1K,mBAAoB,SAASA,qBAC5B,IAAImI,gBAAiBC,oBAAqBC,eAY1C,OAVI1I,IAAIgL,wBACPxC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBpH,KAAM,QAAQx3B,KAAKggC,aAAe3S,IAAI8T,MACtCC,OAAQC,QAAQhU,IAAIiU,UAAYpL,IAAIqL,eAAeC,WAAW,oDAAqD,QACnHjK,WAAY,IAAI1yB,OAAO,aAAa7E,KAAKggC,WACzCvJ,SAAU,IAAI5xB,OAAO,iBAAiB7E,KAAKggC,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlBxH,gBAAiB,SAASA,gBAAgBqK,iBACzC,IAAIC,KAAM9K,UAEV,GAAI6K,kBAAoBA,gBAAgB/J,aAAe+J,gBAAgBhK,eACtE,GAAIgK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAY/K,UAAYV,IAAImJ,cArGtC,QAsGNzI,UAAUkI,UAAYsB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACxBhL,eAKR,IAFA8K,KAAOxL,IAAI2L,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANA/K,UAAYV,IAAImJ,cA/GV,QAgHIP,UAAYsB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAY/K,WACVA,WAMVsH,qBAAsB,SAASA,qBAAqBn5B,KAAM+1B,SAAUgH,IACnE,IAAK/8B,OAASA,KAAKhD,OAClB,OAAO,EAGR,IAAI8T,WACA8lB,SAAWmG,GAAGlI,cACdmI,QAAU,EACVC,UAAY,EACZ1G,SAAWK,SAAS52B,MACpBk9B,SAAW3G,SAAWv2B,KAAKhD,OAK/B,GAHA8T,WAAailB,SACbiH,QAAU7B,KAAKpF,SAAWmH,UAEtB3G,SAAWR,SACd,OAAO/1B,KAAKhD,OAAS,EAQtB,IALIggC,QAAUh9B,KAAKhD,SAClB8T,WAAailB,SAAWQ,SACxByG,QAAUh9B,KAAKhD,QAGT8T,WAAa,GAAG,CAGtB,GAFAA,WAAailB,SAAWa,SAAS52B,KAAKk5B,OAAO,EAAG8D,YAChDC,UAAY3tB,MAAMwB,WAAaosB,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAOnsB,WAAa,GAAG,CAGtB,GAFAA,WAAailB,SAAWa,SAAS52B,KAAKk5B,OAAO,EAAG8D,YAChDC,UAAY3tB,MAAMwB,WAAaosB,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR3H,cAAe,SAASA,cAAc8H,UACrC,IAAIC,MAAQD,SAAS9I,SAAW8I,SAAS9I,UAAY,OAErD,OADA8I,SAASvH,WAAauH,SAASvH,YAAcuH,SAAS,gBAAwC,IAAtBp8B,SAASq8B,MAAO,IAAY,KAC7FD,aAQXhoC,QAAO,QAAc6lC,IACrB5lC,OAAOD,QAAUA,QAAO,wvCCvMxB,IAAMkoC,KAAO3hC,oBAAQ,IAErBtG,OAAOD,QAAUkoC,KAAKrlC,QAAUqlC,KAAKrlC,QAAUqlC,gECE/C,IAIIrM,MANJ,SAASH,uBAAuB5pB,KAAO,OAAOA,KAAOA,IAAIlQ,WAAakQ,KAAQjP,QAAWiP,KAI7E4pB,CAFDn1B,oBAAQ,IAIF,QAAYu1B,KAAuB,oBAAX17B,OAAyBA,YAAS27B,GACvEC,IAAMH,MAAM1I,IAAI8I,SAChBG,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAAS4L,iBAAiBxK,gBAAiBb,cAAesL,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErD7/B,KAAK6/B,cAAgBA,cACrB7/B,KAAK0U,MAAQ,KACb1U,KAAK2U,KAAO,KACZ3U,KAAK+/B,cACL//B,KAAKV,OAAS,EACdU,KAAKggC,SAAW5K,gBAEZb,iBACAuL,IAAMrM,IAAIwM,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DJ,IAAII,eAAe,6BAA8B,SAAU,KAC3DJ,IAAII,eAAe,6BAA8B,QAAS,KAC1DlgC,KAAKmgC,QAAUL,IACf9/B,KAAKggC,SAASd,YAAYY,MAIlCF,iBAAiB7lC,UAAUjB,IAAM,SAAUq8B,OACvC,IAAIppB,KACAvS,IACA4mC,aACAL,WAAa//B,KAAK+/B,WAClB3zB,IAAMpM,KAAKV,OACXyB,IAAMf,KAAK6/B,cACXQ,OAAS,GAEb,IAAK7mC,OAAO85B,MAAM4K,oBACK1K,IAAf2B,MAAM37B,OACN6mC,QAAU/M,MAAM4K,eAAe1kC,KAAO,IAAM27B,MAAM37B,KAAO,KAIjE,IAAK6mC,OACD,OAAO,EAGX,GAAID,aAAeL,WAAWM,QACtBrgC,KAAK0U,QAAU0rB,eACfA,aAAaE,OAASF,aAAaE,KAAKptB,KAAOktB,aAAaltB,MAC5DktB,aAAaltB,OAASktB,aAAaltB,KAAKotB,KAAOF,aAAaE,MAC5DF,aAAaltB,KAAOlT,KAAK0U,MACzB0rB,aAAaltB,KAAKotB,KAAOF,aACzBpgC,KAAK2U,OAASyrB,eAAiBpgC,KAAK2U,KAAOyrB,aAAaE,MACxDF,aAAaE,KAAO,KACpBtgC,KAAK0U,MAAQ0rB,kBAEd,CACH,GAAIh0B,KAAOrL,IAGP,IAFAgL,KAAOK,IAAMrL,IAAM,EAEZgL,QACH/L,KAAKugC,gBAAgBvgC,KAAK2U,MAGlCyrB,aAAepgC,KAAKwgC,aAAaH,QAGrC,OAAOD,cAGXR,iBAAiB7lC,UAAUymC,aAAe,SAAUH,QAChD,IAAIrU,KAAMmI,UA8DV,OA5DAn0B,KAAK+/B,WAAWM,QAAUlM,WACtBjhB,KAAM,KACNotB,KAAM,KACNtU,KAAM,KACNuO,cAAe,EACfrC,WAAY,EACZsC,SAAU,EACViG,aAAc,EACdJ,OAAQA,OACRrI,cAKJ7D,UAAUjhB,KAAOlT,KAAK0U,MACtByf,UAAUjhB,OAASihB,UAAUjhB,KAAKotB,KAAOnM,WACzCn0B,KAAK0U,MAAQyf,UACRn0B,KAAK2U,OACN3U,KAAK2U,KAAOwf,WAEhBn0B,KAAKV,QAAU,EAEf0sB,KAAOmI,UAAUnI,KAAOyH,IAAImJ,cAAc,OAC1C58B,KAAKggC,SAASd,YAAYlT,MAEtB6H,gBAAgBkB,OAASlB,gBAAgB8K,OACzC3S,KAAKmJ,MAAMgK,aAAa,UAAWkB,QAEnCrU,KAAKmT,aAAa,QAASkB,QAG/BrU,KAAKmT,aAAa,cAAe,QACjCnT,KAAKmT,aAAa,OAAQ,gBAC1BnT,KAAKmJ,MAAMuL,QAAU,eAErB1U,KAAK4I,UAAYtB,MAAMuB,WACvBV,UAAU+D,WAAalM,KAAKgJ,aAC5Bb,UAAUsM,aAAezU,KAAKiJ,YAAc,EAExCpB,gBAAgBU,gBAChBvI,KAAOmI,UAAUmD,QAAU7D,IAAIwM,gBAAgB,6BAA8B,SACxEd,aAAa,QAASkB,QAC3BrgC,KAAKmgC,QAAQjB,YAAYlT,MAEzBA,KAAKwL,YAAclE,MAAMuB,WACzBV,UAAU+D,WAAalM,KAAKyL,UAAUP,OACtC/C,UAAUsM,cAAgBzU,KAAKyL,UAAUR,MAAQlD,qBAAuB,EAExE/H,KAAKwL,YAAc,MACnBrD,UAAUoG,cAAgBvO,KAAKyL,UAAUR,MAAQlD,oBACjD/H,KAAKwL,YAAc,IACnBrD,UAAUqG,SAAWxO,KAAKyL,UAAUR,MAAQlD,sBAE5C/H,KAAK4I,UAAY,MACjBT,UAAUoG,cAAgBvO,KAAKiJ,YAC/BjJ,KAAK4I,UAAY,IACjBT,UAAUqG,SAAWxO,KAAKiJ,YAC1BjJ,KAAK4I,UAAY,IAGdT,WAGXyL,iBAAiB7lC,UAAUwmC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAWrgC,KAAKV,QAAWqhC,OAGhC3gC,KAAKV,QAAU,EAEfqhC,KAAKL,OAASK,KAAKL,KAAKptB,KAAOytB,KAAKztB,MACpCytB,KAAKztB,OAASytB,KAAKztB,KAAKotB,KAAOK,KAAKL,MACpCtgC,KAAK0U,QAAUisB,OAAS3gC,KAAK0U,MAAQisB,KAAKztB,MAC1ClT,KAAK2U,OAASgsB,OAAS3gC,KAAK2U,KAAOgsB,KAAKL,MAExCK,KAAK3U,KAAK0Q,WAAWlZ,YAAYmd,KAAK3U,aAE/BhsB,KAAK+/B,WAAWM,UAG3BT,iBAAiB7lC,UAAU6vB,QAAU,WACjC,IAAIpwB,IACAumC,WAAa//B,KAAK+/B,WAGtB,IAAKvmC,OADLwG,KAAK6/B,cAAgB,KACTE,WACR//B,KAAKugC,gBAAgBR,WAAWvmC,MAGpCwG,KAAKggC,SAAStD,WAAWlZ,YAAYxjB,KAAKggC,UAE1ChgC,KAAKggC,SAAW,KAChBhgC,KAAK0U,MAAQ,KACb1U,KAAK2U,KAAO,MAGhBjd,OAAOD,QAAUmoC,umdCnLF,IAAAgB,UAAA,SAASvmC,EAAG8K,GACzB,OAAO9K,EAAI8K,GAAK,EAAI9K,EAAI8K,EAAI,EAAI9K,GAAK8K,EAAI,EAAI07B,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQzhC,SAAcyhC,QAyB5B,SAASC,oBAAoBhnB,GAC3B,OAAO,SAASzhB,EAAG6b,GACjB,OAAOwsB,UAAU5mB,EAAEzhB,GAAI6b,IA3BW4sB,CAAoBD,WAEtDE,KAAM,SAAAA,KAAS5mC,EAAG+Z,EAAG3C,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKrX,EAAEiF,QAChBmS,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBqvB,QAAQ1mC,EAAEsX,KAAMyC,GAAK,EAAG3C,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAETyvB,MAAO,SAAAA,MAAS7mC,EAAG+Z,EAAG3C,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKrX,EAAEiF,QAChBmS,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBqvB,QAAQ1mC,EAAEsX,KAAMyC,GAAK,EAAG1C,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAI0vB,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAASjtB,GACtB,OAAa,OAANA,EAAaysB,KAAOzsB,GCDzBktB,YAAQr3B,MAAMlQ,UCAHwnC,WDEID,YAAM/mB,MACR+mB,YAAMh4B,ICHR,SAAS3L,MAAO6jC,KAAMC,MACnC9jC,OAASA,MAAO6jC,MAAQA,KAAMC,MAAQ/nC,EAAIoN,UAAUxH,QAAU,GAAKkiC,KAAO7jC,MAAOA,MAAQ,EAAG,GAAKjE,EAAI,EAAI,GAAK+nC,KAM9G,IAJA,IAAIxpC,GAAK,EACLyB,EAAoD,EAAhDkH,KAAKG,IAAI,EAAGH,KAAK68B,MAAM+D,KAAO7jC,OAAS8jC,OAC3Cl+B,MAAQ,IAAI0G,MAAMvQ,KAEbzB,EAAIyB,GACX6J,MAAMtL,GAAK0F,MAAQ1F,EAAIwpC,KAGzB,OAAOl+B,QCXLm+B,IAAM9gC,KAAKkU,KAAK,IAChB6sB,GAAK/gC,KAAKkU,KAAK,IACf8sB,GAAKhhC,KAAKkU,KAAK,GAEJ+sB,UAAA,SAASlkC,MAAO6jC,KAAM5sB,OACnC,IAAIktB,QAEApoC,EACAqoC,MACAN,KAHAxpC,GAAK,EAMT,GAD8B2c,OAASA,OAAzBjX,OAASA,UAAvB6jC,MAAQA,OACc5sB,MAAQ,EAAG,OAAQjX,OAEzC,IADImkC,QAAUN,KAAO7jC,SAAOjE,EAAIiE,MAAOA,MAAQ6jC,KAAMA,KAAO9nC,GACT,KAA9C+nC,KAAOO,cAAcrkC,MAAO6jC,KAAM5sB,UAAkBxR,SAASq+B,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHA9jC,MAAQiD,KAAK68B,KAAK9/B,MAAQ8jC,MAC1BD,KAAO5gC,KAAKgR,MAAM4vB,KAAOC,MACzBM,MAAQ,IAAI93B,MAAMvQ,EAAIkH,KAAK68B,KAAK+D,KAAO7jC,MAAQ,MACtC1F,EAAIyB,GAAGqoC,MAAM9pC,IAAM0F,MAAQ1F,GAAKwpC,UAKzC,IAHA9jC,MAAQiD,KAAKgR,MAAMjU,MAAQ8jC,MAC3BD,KAAO5gC,KAAK68B,KAAK+D,KAAOC,MACxBM,MAAQ,IAAI93B,MAAMvQ,EAAIkH,KAAK68B,KAAK9/B,MAAQ6jC,KAAO,MACtCvpC,EAAIyB,GAAGqoC,MAAM9pC,IAAM0F,MAAQ1F,GAAKwpC,KAK3C,OAFIK,SAASC,MAAMD,UAEZC,OAGF,SAASC,cAAcrkC,MAAO6jC,KAAM5sB,OACzC,IAAI6sB,MAAQD,KAAO7jC,OAASiD,KAAKG,IAAI,EAAG6T,OACpCqtB,MAAQrhC,KAAKgR,MAAMhR,KAAKshC,IAAIT,MAAQ7gC,KAAKuhC,MACzCpF,MAAQ0E,KAAO7gC,KAAKoU,IAAI,GAAIitB,OAChC,OAAOA,OAAS,GACTlF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAAKhhC,KAAKoU,IAAI,GAAIitB,QAC1ErhC,KAAKoU,IAAI,IAAKitB,QAAUlF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAGlF,SAASQ,SAASzkC,MAAO6jC,KAAM5sB,OACpC,IAAIytB,MAAQzhC,KAAKuL,IAAIq1B,KAAO7jC,OAASiD,KAAKG,IAAI,EAAG6T,OAC7C0tB,MAAQ1hC,KAAKoU,IAAI,GAAIpU,KAAKgR,MAAMhR,KAAKshC,IAAIG,OAASzhC,KAAKuhC,OACvDpF,MAAQsF,MAAQC,MAIpB,OAHIvF,OAAS2E,IAAKY,OAAS,GAClBvF,OAAS4E,GAAIW,OAAS,EACtBvF,OAAS6E,KAAIU,OAAS,GACxBd,KAAO7jC,OAAS2kC,MAAQA,MCjDlB,ICEAC,SAAA,SAAS5lB,OAAQ1iB,EAAGuoC,SAEjC,GADe,MAAXA,UAAiBA,QAAUnB,QACzB3nC,EAAIijB,OAAOrd,OAAjB,CACA,IAAKrF,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQ8oC,QAAQ7lB,OAAO,GAAI,EAAGA,QAC1D,GAAI1iB,GAAK,EAAG,OAAQuoC,QAAQ7lB,OAAOjjB,EAAI,GAAIA,EAAI,EAAGijB,QAClD,IAAIjjB,EACAzB,GAAKyB,EAAI,GAAKO,EACdwoC,GAAK7hC,KAAKgR,MAAM3Z,GAChByqC,QAAUF,QAAQ7lB,OAAO8lB,IAAKA,GAAI9lB,QAEtC,OAAO+lB,SADOF,QAAQ7lB,OAAO8lB,GAAK,GAAIA,GAAK,EAAG9lB,QACpB+lB,SAAWzqC,EAAIwqC,MCV3C,SAASpwB,WAkDT,SAAS/I,QAAIzP,OAAQmgB,GACnB,IAAI1Q,IAAM,IAAI+I,QAGd,GAAIxY,kBAAkBwY,QAAKxY,OAAO8oC,KAAK,SAASzpC,MAAOM,KAAO8P,IAAIoJ,IAAIlZ,IAAKN,cAGtE,GAAI+Q,MAAMuB,QAAQ3R,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAOyF,OAGf,GAAS,MAAL0a,EAAW,OAAS/hB,EAAIyB,GAAG4P,IAAIoJ,IAAIza,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAG4P,IAAIoJ,IAAIsH,EAAEthB,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQyP,IAAIoJ,IAAIlZ,IAAKK,OAAOL,MAE7D,OAAO8P,IAnET+I,QAAItY,UAAYuP,QAAIvP,WAClB6c,YAAavE,QACbI,IAAK,SAAAA,IAASjZ,KACZ,MAPgB,IAOCA,OAAQwG,MAE3BlH,IAAK,SAAAA,IAASU,KACZ,OAAOwG,KAVS,IAUKxG,MAEvBkZ,IAAK,SAAAA,IAASlZ,IAAKN,OAEjB,OADA8G,KAbgB,IAaFxG,KAAON,MACd8G,MAET4iC,OAAQ,SAAAA,OAASppC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAYkG,aAAeA,KAAKlG,WAEzC+oC,MAAO,SAAAA,QACL,IAAK,IAAI/oC,YAAYkG,KArBL,MAqBelG,SAAS,WAAsBkG,KAAKlG,WAErE0N,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAI1N,YAAYkG,KAzBL,MAyBelG,SAAS,IAAe0N,KAAKhG,KAAK1H,SAASygB,MAAM,IAChF,OAAO/S,MAETmV,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAI7iB,YAAYkG,KA9BL,MA8BelG,SAAS,IAAe6iB,OAAOnb,KAAKxB,KAAKlG,WACxE,OAAO6iB,QAETpH,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAIzb,YAAYkG,KAnCL,MAmCelG,SAAS,IAAeyb,QAAQ/T,MAAMhI,IAAKM,SAASygB,MAAM,GAAIrhB,MAAO8G,KAAKlG,YACzG,OAAOyb,SAETugB,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIh8B,YAAYkG,KAxCL,MAwCelG,SAAS,MAAiBg8B,KACzD,OAAOA,MAETgN,MAAO,SAAAA,QACL,IAAK,IAAIhpC,YAAYkG,KAAM,GA5CX,MA4CelG,SAAS,GAAe,OAAO,EAC9D,OAAO,GAET6oC,KAAM,SAAAA,KAAS3oB,GACb,IAAK,IAAIlgB,YAAYkG,KAhDL,MAgDelG,SAAS,IAAekgB,EAAEha,KAAKlG,UAAWA,SAASygB,MAAM,GAAIva,QA0BjFsJ,oBCxEAy5B,SAAA,WACb,IAEIC,YACAC,QACAC,KAJA17B,QACA27B,aAKJ,SAASriC,MAAMwgC,MAAO8B,MAAOC,aAAcC,WACzC,GAAIF,OAAS57B,KAAKlI,OAEhB,OADkB,MAAd0jC,aAAoB1B,MAAM9vB,KAAKwxB,aAClB,MAAVC,QAAiBA,QAAO3B,OAASA,MAY1C,IATA,IAGIiC,SACArqC,MAEAyjB,OANA1kB,GAAK,EACLyB,EAAI4nC,MAAMhiC,OACV9F,IAAMgO,KAAK47B,SAGXI,YAAcl6B,UAEdm6B,OAASJ,iBAEJprC,EAAIyB,IACPijB,OAAS6mB,YAAY1qC,IAAIyqC,SAAW/pC,IAAIN,MAAQooC,MAAMrpC,IAAM,KAC9D0kB,OAAOnb,KAAKtI,OAEZsqC,YAAY9wB,IAAI6wB,UAAWrqC,QAQ/B,OAJAsqC,YAAYb,KAAK,SAAShmB,OAAQnjB,KAChC8pC,UAAUG,OAAQjqC,IAAKsH,MAAM6b,OAAQymB,MAAOC,aAAcC,cAGrDG,OAWT,OAAOP,MACLrpC,OAAQ,SAAAA,OAASynC,OAAS,OAAOxgC,MAAMwgC,MAAO,EAAGoC,aAAcC,YAC/Dr6B,IAAK,SAAAA,IAASg4B,OAAS,OAAOxgC,MAAMwgC,MAAO,EAAGsC,UAAWC,SACzDtuB,QAAS,SAAAA,QAAS+rB,OAAS,OAX7B,SAAS/rB,SAAQjM,IAAK85B,OACpB,KAAMA,MAAQ57B,KAAKlI,OAAQ,OAAOgK,IAClC,IAAIg4B,MAAOwC,QAAUX,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAAS57B,KAAKlI,OAAQgiC,MAAQh4B,IAAIiM,WACnD+rB,SAAYh4B,IAAIq5B,KAAK,SAAS/lB,EAAG1Q,GAAKo1B,MAAM9/B,MAAMhI,IAAK0S,EAAGyQ,OAAQpH,SAAQqH,EAAGwmB,YAChE,MAAXU,QAAkBxC,MAAM9vB,KAAK,SAASnX,EAAG8K,GAAK,OAAO2+B,QAAQzpC,EAAEb,IAAK2L,EAAE3L,OAAW8nC,MAMtD/rB,CAAQzU,MAAMwgC,MAAO,EAAGsC,UAAWC,QAAS,IAC9ErqC,IAAK,SAAAA,IAASjB,GAAmB,OAAdiP,KAAKhG,KAAKjJ,GAAW2qC,MACxCC,SAAU,SAAAA,SAAShf,OAA4C,OAAnCgf,UAAS37B,KAAKlI,OAAS,GAAK6kB,MAAc+e,MACtEF,WAAY,SAAAA,WAAS7e,OAA6B,OAApB6e,YAAa7e,MAAc+e,MACzDD,OAAQ,SAAAA,OAASjpB,GAAiB,OAAZipB,QAASjpB,EAAUkpB,QAI7C,SAASQ,eACP,SAGF,SAASC,UAAU9pC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAAS0qC,YACP,OAAOt6B,UAGT,SAASu6B,OAAOv6B,IAAK9P,IAAKN,OACxBoQ,IAAIoJ,IAAIlZ,IAAKN,OCrEf,SAASyH,WAET,IAAIojC,MAAQz6B,QAAIvP,UAkBhB,SAAS2Y,QAAI7Y,OAAQmgB,GACnB,IAAItH,IAAM,IAAI/R,QAGd,GAAI9G,kBAAkB8G,QAAK9G,OAAO8oC,KAAK,SAASzpC,OAASwZ,IAAIuW,IAAI/vB,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAOyF,OACvB,GAAS,MAAL0a,EAAW,OAAS/hB,EAAIyB,GAAGgZ,IAAIuW,IAAIpvB,OAAO5B,SACzC,OAASA,EAAIyB,GAAGgZ,IAAIuW,IAAIjP,EAAEngB,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAO6Y,IA7BT/R,QAAI5G,UAAY2Y,QAAI3Y,WAClB6c,YAAajW,QACb8R,IAAKsxB,MAAMtxB,IACXwW,IAAK,SAAAA,IAAS/vB,OAGZ,OADA8G,KFXgB,KEUhB9G,OAAS,KACcA,MAChB8G,MAET4iC,OAAQmB,MAAMnB,OACdC,MAAOkB,MAAMlB,MACblmB,OAAQonB,MAAMv8B,KACdsuB,KAAMiO,MAAMjO,KACZgN,MAAOiB,MAAMjB,MACbH,KAAMoB,MAAMpB,MAmBCjwB,ICtCX4uB,gBAAQr3B,MAAMlQ,UAEPuP,cAAMg4B,gBAAMh4B,IACZiR,YAAQ+mB,gBAAM/mB,MCAdypB,UAAYxrC,KAAM,YAEd,SAASyrC,QAAQ1gC,OAC9B,IAAIS,MAAQsF,UACR5I,UACAwjC,QAAUF,SAId,SAAS1iC,MAAM/I,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAI+L,MAAMlL,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIisC,UAAYF,SAAU,OAAOE,QACjClgC,MAAM0O,IAAIlZ,IAAKvB,EAAIyI,OAAOc,KAAKjJ,IAEjC,OAAOgL,OAAOtL,EAAI,GAAKsL,MAAMjE,QA0B/B,OAlCAiE,MAAiB,MAATA,SAAqBgX,YAAMniB,KAAKmL,OAWxCjC,MAAMZ,OAAS,SAASoe,GACtB,IAAKhY,UAAUxH,OAAQ,OAAOoB,OAAO6Z,QACrC7Z,UAAasD,MAAQsF,UAErB,IADA,IAA0B/Q,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAIolB,EAAExf,SACTrH,EAAIyB,GAAQsK,MAAMyO,IAAIjZ,KAAOjB,EAAIumB,EAAE7mB,IAAM,KAAK+L,MAAM0O,IAAIlZ,IAAKkH,OAAOc,KAAKjJ,IAClF,OAAO+I,OAGTA,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAUiE,MAAQgX,YAAMniB,KAAK0mB,GAAIxd,OAASiC,MAAMgX,SAGnEjZ,MAAM4iC,QAAU,SAASplB,GACvB,OAAOhY,UAAUxH,QAAU4kC,QAAUplB,EAAGxd,OAAS4iC,SAGnD5iC,MAAM6iC,KAAO,WACX,OAAOF,UACFvjC,OAAOA,QACP6C,MAAMA,OACN2gC,QAAQA,UAGR5iC,MCzCM,SAAS8iC,OACtB,IAII3C,KACA4C,UALA/iC,MAAQ2iC,UAAUC,aAAQ1Q,GAC1B9yB,OAASY,MAAMZ,OACf4jC,aAAehjC,MAAMiC,MACrBA,OAAS,EAAG,GAGZoI,OAAQ,EACR44B,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIhrC,EAAIgH,SAASpB,OACbwiC,QAAUv+B,MAAM,GAAKA,MAAM,GAC3B5F,MAAQ4F,MAAMu+B,QAAU,GACxBN,KAAOj+B,MAAM,EAAIu+B,SACrBL,MAAQD,KAAO7jC,OAASiD,KAAKG,IAAI,EAAGrH,EAAI6qC,aAA8B,EAAfC,cACnD74B,QAAO81B,KAAO7gC,KAAKgR,MAAM6vB,OAC7B9jC,QAAU6jC,KAAO7jC,MAAQ8jC,MAAQ/nC,EAAI6qC,eAAiBE,MACtDJ,UAAY5C,MAAQ,EAAI8C,cACpB54B,QAAOhO,MAAQiD,KAAK+K,MAAMhO,OAAQ0mC,UAAYzjC,KAAK+K,MAAM04B,YAC7D,IAAI1nB,OAASgoB,UAASjrC,GAAG4P,IAAI,SAASrR,GAAK,OAAO0F,MAAQ8jC,KAAOxpC,IACjE,OAAOqsC,aAAaxC,QAAUnlB,OAAOmlB,UAAYnlB,QAkGnD,cA9GOrb,MAAM4iC,QAeb5iC,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUoB,OAAOoe,GAAI4lB,WAAahkC,UAGrDY,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAUiE,QAAUub,EAAE,IAAKA,EAAE,IAAK4lB,WAAanhC,MAAMgX,SAGxEjZ,MAAMsjC,WAAa,SAAS9lB,GAC1B,OAAOvb,QAAUub,EAAE,IAAKA,EAAE,IAAKnT,OAAQ,EAAM+4B,WAG/CpjC,MAAM+iC,UAAY,WAChB,OAAOA,WAGT/iC,MAAMmgC,KAAO,WACX,OAAOA,MAGTngC,MAAMqK,MAAQ,SAASmT,GACrB,OAAOhY,UAAUxH,QAAUqM,QAAUmT,EAAG4lB,WAAa/4B,OAGvDrK,MAAM08B,QAAU,SAASlf,GACvB,OAAOhY,UAAUxH,QAAUilC,aAAeC,aAAe5jC,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAGie,IAAK4lB,WAAaH,cAGrGjjC,MAAMijC,aAAe,SAASzlB,GAC5B,OAAOhY,UAAUxH,QAAUilC,aAAe3jC,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAGie,IAAK4lB,WAAaH,cAGtFjjC,MAAMkjC,aAAe,SAAS1lB,GAC5B,OAAOhY,UAAUxH,QAAUklC,aAAe5jC,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAGie,IAAK4lB,WAAaF,cAGtFljC,MAAMmjC,MAAQ,SAAS3lB,GACrB,OAAOhY,UAAUxH,QAAUmlC,MAAQ7jC,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAGie,IAAK4lB,WAAaD,OAG/EnjC,MAAM6iC,KAAO,WACX,OAAOC,OACF1jC,OAAOA,UACP6C,MAAMA,OACNoI,MAAMA,OACN44B,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbnjC,MAAMujC,aAAe,SAASC,GAAIC,IAChC,IAI2B1qC,EAAG8K,EAAGhM,EAC7B6rC,QALAvzB,IAAMqzB,GACNpzB,GAAK5K,UAAUxH,OAAS,GAAKylC,GAAKtzB,GAClCqwB,QAAUv+B,MAAM,GAAKA,MAAM,GAC3BoZ,OAASmlB,QAAUwC,eAAexC,UAAYwC,eAC9C5qC,EAAIijB,OAAOrd,OAAS,EAKxB,GAHAqd,OAAOnb,KAAKmb,OAAOjjB,GAAKsG,KAAKyhC,QAEzB/vB,GAAKD,KAAItY,EAAIsY,GAAIA,GAAKC,GAAIA,GAAKvY,KAC/BuY,GAAKiL,OAAO,IAAMlL,GAAKlO,MAAM,EAAEu+B,UAWnC,OARAznC,EAAIuG,KAAKG,IAAI,EAAGkkC,kBAAkBtoB,OAAQlL,KAC1CuzB,QAAUC,kBAAkBtoB,OAAQjL,IACpCvM,EAAIsM,KAAKC,GAAKrX,EAAIuG,KAAKG,IAAI1G,EAAG2qC,QAAU,GAKpClD,UAAS3oC,EAAIkB,EAAGA,EAAIX,EAAIyL,EAAGA,EAAIzL,EAAIP,GAC/BkB,EAAI8K,OAAKquB,EAAY9yB,SAAS6Z,MAAMlgB,EAAG8K,EAAE,IAGnD7D,MAAM4jC,OAAS,SAAUJ,GAAIC,IAC3B,IAKI1qC,EACAlB,EANAsY,IAAMqzB,GACNpzB,GAAK5K,UAAUxH,OAAS,GAAKylC,GAAKtzB,GAClCqwB,QAAUv+B,MAAM,GAAKA,MAAM,GAC3BoZ,OAASmlB,QAAUwC,eAAexC,UAAYwC,eAC9C5qC,EAAIijB,OAAOrd,OAAS,EAMxB,GADIoS,GAAKD,KAAItY,EAAIsY,GAAIA,GAAKC,GAAIA,GAAKvY,KAC/BuY,GAAKiL,OAAO,IAAMlL,GAAKlO,MAAM,EAAEu+B,UAQnC,OALAznC,EAAIuG,KAAKG,IAAI,EAAGkkC,kBAAkBtoB,OAAQlL,GAAI,SAKvC/Q,SAASohC,QAAUpoC,EAAIW,EAAIA,IAE7BqqC,UAqBT,SAASO,kBAAmBp5B,IAAK3S,MAAOisC,MAStC,IARA,IAGIC,QACAzzB,IACA0zB,GALAC,IAAM,EAENC,KADS15B,IAAIvM,OACG,EAMbgmC,IAAMC,MACT5zB,IAAM/Q,KAAKgR,OAAO0zB,IAAMC,MAAQ,GAChCF,GAAKzkC,KAAKuL,IAAIN,IAAI8F,KAAOzY,OACpB0H,KAAKuL,IAAIN,IAAI8F,IAAM,GAAKzY,QAEnBmsC,GACNC,IAAM3zB,IAAM,EAGZ4zB,KAAO5zB,IAIf,OAAKwzB,MAILC,QAAUv5B,IAAI05B,SACErsC,MACLqsC,KACAH,QAAUlsC,MACJ,IAATqsC,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAAS15B,IAAIvM,OAAS,EAAYimC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAA5tC,OAAA,SAASif,YAAapf,QAASuC,WAC5C6c,YAAY7c,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAU6c,YAAcA,aAGnB,SAAS4uB,OAAO7hB,OAAQ8hB,YAC7B,IAAI1rC,UAAYpB,OAAOY,OAAOoqB,OAAO5pB,WACrC,IAAK,IAAIP,OAAOisC,WAAY1rC,UAAUP,KAAOisC,WAAWjsC,KACxD,OAAOO,UCNF,SAAS2rC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAI5jC,OAAO,WAAaujC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAI7jC,OAAO,WAAayjC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAI9jC,OAAO,YAAcujC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAI/jC,OAAO,YAAcyjC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAIhkC,OAAO,WAAawjC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAIjkC,OAAO,YAAcwjC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAM1tC,QAC5B,IAAI5J,EAEJ,OADA4J,QAAUA,OAAS,IAAIyV,OAAOjU,eACtBpL,EAAIytC,OAAO8J,KAAK3tC,SAAoC,IAAI4tC,KAA5Bx3C,EAAIgL,SAAShL,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAI0tC,OAAO6J,KAAK3tC,SAAW6tC,KAAKzsC,SAAShL,EAAE,GAAI,MAC/CA,EAAI2tC,aAAa4J,KAAK3tC,SAAW,IAAI4tC,IAAIx3C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAI4tC,aAAa2J,KAAK3tC,SAAW,IAAI4tC,IAAW,IAAPx3C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAI6tC,cAAc0J,KAAK3tC,SAAW8tC,KAAK13C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAI8tC,cAAcyJ,KAAK3tC,SAAW8tC,KAAY,IAAP13C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAI+tC,aAAawJ,KAAK3tC,SAAW+tC,KAAK33C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIguC,cAAcuJ,KAAK3tC,SAAW+tC,KAAK33C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxEiuC,MAAMtsC,eAAeiI,QAAU6tC,KAAKxJ,MAAMrkC,SAC/B,gBAAXA,OAA2B,IAAI4tC,IAAIhP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASiP,KAAKp2C,GACZ,OAAO,IAAIm2C,IAAIn2C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAASq2C,KAAKh3C,EAAGgS,EAAG5F,EAAG9K,GAErB,OADIA,GAAK,IAAGtB,EAAIgS,EAAI5F,EAAI07B,KACjB,IAAIgP,IAAI92C,EAAGgS,EAAG5F,EAAG9K,GAGnB,SAAS41C,WAAWv3C,GAEzB,OADMA,aAAagtC,QAAQhtC,EAAIi3C,YAAMj3C,IAChCA,EAEE,IAAIm3C,KADXn3C,EAAIA,EAAEw3C,OACWn3C,EAAGL,EAAEqS,EAAGrS,EAAEyM,EAAGzM,EAAEy3C,SAFjB,IAAIN,IAKd,SAASK,UAAIn3C,EAAGgS,EAAG5F,EAAGgrC,SAC3B,OAA4B,IAArBrpC,UAAUxH,OAAe2wC,WAAWl3C,GAAK,IAAI82C,IAAI92C,EAAGgS,EAAG5F,EAAc,MAAXgrC,QAAkB,EAAIA,SAGlF,SAASN,IAAI92C,EAAGgS,EAAG5F,EAAGgrC,SAC3BnwC,KAAKjH,GAAKA,EACViH,KAAK+K,GAAKA,EACV/K,KAAKmF,GAAKA,EACVnF,KAAKmwC,SAAWA,QAkClB,SAASC,KAAIl3C,OAEX,QADAA,MAAQ0H,KAAKG,IAAI,EAAGH,KAAKC,IAAI,IAAKD,KAAK+K,MAAMzS,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAMmL,SAAS,IAGlD,SAAS2rC,KAAKK,EAAGn2C,EAAGhC,EAAGmC,GAIrB,OAHIA,GAAK,EAAGg2C,EAAIn2C,EAAIhC,EAAI2oC,IACf3oC,GAAK,GAAKA,GAAK,EAAGm4C,EAAIn2C,EAAI2mC,IAC1B3mC,GAAK,IAAGm2C,EAAIxP,KACd,IAAIyP,IAAID,EAAGn2C,EAAGhC,EAAGmC,GA6BnB,SAASk2C,IAAIF,EAAGn2C,EAAGhC,EAAGi4C,SAC3B,OAA4B,IAArBrpC,UAAUxH,OA3BZ,SAASkxC,WAAW93C,GACzB,GAAIA,aAAa43C,IAAK,OAAO,IAAIA,IAAI53C,EAAE23C,EAAG33C,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAEy3C,SAEtD,GADMz3C,aAAagtC,QAAQhtC,EAAIi3C,YAAMj3C,KAChCA,EAAG,OAAO,IAAI43C,IACnB,GAAI53C,aAAa43C,IAAK,OAAO53C,EAE7B,IAAIK,GADJL,EAAIA,EAAEw3C,OACIn3C,EAAI,IACVgS,EAAIrS,EAAEqS,EAAI,IACV5F,EAAIzM,EAAEyM,EAAI,IACVtE,IAAMD,KAAKC,IAAI9H,EAAGgS,EAAG5F,GACrBpE,IAAMH,KAAKG,IAAIhI,EAAGgS,EAAG5F,GACrBkrC,EAAIxP,IACJ3mC,EAAI6G,IAAMF,IACV3I,GAAK6I,IAAMF,KAAO,EAUtB,OATI3G,GACam2C,EAAXt3C,IAAMgI,KAAUgK,EAAI5F,GAAKjL,EAAc,GAAT6Q,EAAI5F,GAC7B4F,IAAMhK,KAAUoE,EAAIpM,GAAKmB,EAAI,GAC5BnB,EAAIgS,GAAK7Q,EAAI,EACvBA,GAAKhC,EAAI,GAAM6I,IAAMF,IAAM,EAAIE,IAAMF,IACrCwvC,GAAK,IAELn2C,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAIm4C,EAEpB,IAAIC,IAAID,EAAGn2C,EAAGhC,EAAGQ,EAAEy3C,SAIMK,CAAWH,GAAK,IAAIC,IAAID,EAAGn2C,EAAGhC,EAAc,MAAXi4C,QAAkB,EAAIA,SAGzF,SAASG,IAAID,EAAGn2C,EAAGhC,EAAGi4C,SACpBnwC,KAAKqwC,GAAKA,EACVrwC,KAAK9F,GAAKA,EACV8F,KAAK9H,GAAKA,EACV8H,KAAKmwC,SAAWA,QAiClB,SAASM,QAAQJ,EAAGK,GAAIC,IACtB,OAGY,KAHJN,EAAI,GAAKK,IAAMC,GAAKD,IAAML,EAAI,GAChCA,EAAI,IAAMM,GACVN,EAAI,IAAMK,IAAMC,GAAKD,KAAO,IAAML,GAAK,GACvCK,IAzKR/4C,OAAO+tC,MAAOiK,aACZiB,YAAa,SAAAA,cACX,OAAO5wC,KAAKkwC,MAAMU,eAEpBR,IAAK,SAAAA,MACH,OAAOpwC,KAAKkwC,MAAME,OAEpB/rC,SAAU,SAAAA,WACR,OAAOrE,KAAKkwC,MAAQ,MA+CxBv4C,OAAOk4C,IAAKK,UAAK1K,OAAOE,OACtBmL,SAAU,SAAAA,SAAS3kC,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NWtL,KAAKoU,IA9Nd,EADF,GA+N8B9I,GACvC,IAAI2jC,IAAI7vC,KAAKjH,EAAImT,EAAGlM,KAAK+K,EAAImB,EAAGlM,KAAKmF,EAAI+G,EAAGlM,KAAKmwC,UAE1DW,OAAQ,SAAAA,OAAS5kC,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOStL,KAAKoU,IAnOd,GAmO0B9I,GACnC,IAAI2jC,IAAI7vC,KAAKjH,EAAImT,EAAGlM,KAAK+K,EAAImB,EAAGlM,KAAKmF,EAAI+G,EAAGlM,KAAKmwC,UAE1DD,IAAK,SAAAA,MACH,OAAOlwC,MAET4wC,YAAa,SAAAA,cACX,OAAQ,GAAK5wC,KAAKjH,GAAKiH,KAAKjH,GAAK,KACzB,GAAKiH,KAAK+K,GAAK/K,KAAK+K,GAAK,KACzB,GAAK/K,KAAKmF,GAAKnF,KAAKmF,GAAK,KACzB,GAAKnF,KAAKmwC,SAAWnwC,KAAKmwC,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAIpwC,KAAKjH,GAAKq3C,KAAIpwC,KAAK+K,GAAKqlC,KAAIpwC,KAAKmF,IAEpDd,SAAU,SAAAA,WACR,IAAIhK,EAAI2F,KAAKmwC,QACb,OAAc,KADQ91C,EAAImd,MAAMnd,GAAK,EAAIuG,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAGxG,KAC/C,OAAS,SACrBuG,KAAKG,IAAI,EAAGH,KAAKC,IAAI,IAAKD,KAAK+K,MAAM3L,KAAKjH,IAAM,IAAM,KACtD6H,KAAKG,IAAI,EAAGH,KAAKC,IAAI,IAAKD,KAAK+K,MAAM3L,KAAK+K,IAAM,IAAM,KACtDnK,KAAKG,IAAI,EAAGH,KAAKC,IAAI,IAAKD,KAAK+K,MAAM3L,KAAKmF,IAAM,KACzC,IAAN9K,EAAU,IAAM,KAAOA,EAAI,SAqDtC1C,OAAO24C,IAAKC,IAAK/K,OAAOE,OACtBmL,SAAU,SAAAA,SAAS3kC,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SWtL,KAAKoU,IA9Sd,EADF,GA+S8B9I,GACvC,IAAIokC,IAAItwC,KAAKqwC,EAAGrwC,KAAK9F,EAAG8F,KAAK9H,EAAIgU,EAAGlM,KAAKmwC,UAElDW,OAAQ,SAAAA,OAAS5kC,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTStL,KAAKoU,IAnTd,GAmT0B9I,GACnC,IAAIokC,IAAItwC,KAAKqwC,EAAGrwC,KAAK9F,EAAG8F,KAAK9H,EAAIgU,EAAGlM,KAAKmwC,UAElDD,IAAK,SAAAA,MACH,IAAIG,EAAIrwC,KAAKqwC,EAAI,IAAqB,KAAdrwC,KAAKqwC,EAAI,GAC7Bn2C,EAAIsd,MAAM64B,IAAM74B,MAAMxX,KAAK9F,GAAK,EAAI8F,KAAK9F,EACzChC,EAAI8H,KAAK9H,EACTy4C,GAAKz4C,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjCw2C,GAAK,EAAIx4C,EAAIy4C,GACjB,OAAO,IAAId,IACTY,QAAQJ,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKK,GAAIC,IAC1CF,QAAQJ,EAAGK,GAAIC,IACfF,QAAQJ,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKK,GAAIC,IACzC3wC,KAAKmwC,UAGTS,YAAa,SAAAA,cACX,OAAQ,GAAK5wC,KAAK9F,GAAK8F,KAAK9F,GAAK,GAAKsd,MAAMxX,KAAK9F,KACzC,GAAK8F,KAAK9H,GAAK8H,KAAK9H,GAAK,GACzB,GAAK8H,KAAKmwC,SAAWnwC,KAAKmwC,SAAW,MC1U1C,IAAIY,QAAUnwC,KAAKowC,GAAK,IACpBC,QAAU,IAAMrwC,KAAKowC,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAW/4C,GAClB,GAAIA,aAAag5C,IAAK,OAAO,IAAIA,IAAIh5C,EAAER,EAAGQ,EAAE2B,EAAG3B,EAAEyM,EAAGzM,EAAEy3C,SACtD,GAAIz3C,aAAai5C,IAAK,CACpB,GAAIn6B,MAAM9e,EAAE23C,GAAI,OAAO,IAAIqB,IAAIh5C,EAAER,EAAG,EAAG,EAAGQ,EAAEy3C,SAC5C,IAAIE,EAAI33C,EAAE23C,EAAIU,QACd,OAAO,IAAIW,IAAIh5C,EAAER,EAAG0I,KAAKgxC,IAAIvB,GAAK33C,EAAEJ,EAAGsI,KAAKixC,IAAIxB,GAAK33C,EAAEJ,EAAGI,EAAEy3C,SAExDz3C,aAAam3C,MAAMn3C,EAAIu3C,WAAWv3C,IACxC,IAGuE0b,EAAG09B,EAHtE/4C,EAAIg5C,SAASr5C,EAAEK,GACfgS,EAAIgnC,SAASr5C,EAAEqS,GACf5F,EAAI4sC,SAASr5C,EAAEyM,GACfI,EAAIysC,SAAS,SAAYj5C,EAAI,SAAYgS,EAAI,SAAY5F,GAAKgsC,IAKlE,OAJIp4C,IAAMgS,GAAKA,IAAM5F,EAAGiP,EAAI09B,EAAIvsC,GAC9B6O,EAAI49B,SAAS,SAAYj5C,EAAI,SAAYgS,EAAI,SAAY5F,GAAK+rC,IAC9DY,EAAIE,SAAS,SAAYj5C,EAAI,SAAYgS,EAAI,SAAY5F,GAAKisC,KAEzD,IAAIM,IAAI,IAAMnsC,EAAI,GAAI,KAAO6O,EAAI7O,GAAI,KAAOA,EAAIusC,GAAIp5C,EAAEy3C,SAOhD,SAAS8B,IAAI/5C,EAAGmC,EAAG8K,EAAGgrC,SACnC,OAA4B,IAArBrpC,UAAUxH,OAAemyC,WAAWv5C,GAAK,IAAIw5C,IAAIx5C,EAAGmC,EAAG8K,EAAc,MAAXgrC,QAAkB,EAAIA,SAGlF,SAASuB,IAAIx5C,EAAGmC,EAAG8K,EAAGgrC,SAC3BnwC,KAAK9H,GAAKA,EACV8H,KAAK3F,GAAKA,EACV2F,KAAKmF,GAAKA,EACVnF,KAAKmwC,SAAWA,QA0BlB,SAAS6B,QAAQ74C,GACf,OAAOA,EAAIq4C,GAAK5wC,KAAKoU,IAAI7b,EAAG,EAAI,GAAKA,EAAIo4C,GAAKF,OAGhD,SAASa,QAAQ/4C,GACf,OAAOA,EAAIm4C,OAAKn4C,EAAIA,EAAIA,EAAIo4C,IAAMp4C,EAAIk4C,QAGxC,SAASc,SAAS/9B,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQxT,KAAKoU,IAAIZ,EAAG,EAAI,KAAO,MAG5E,SAAS29B,SAAS39B,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQxT,KAAKoU,KAAKZ,EAAI,MAAS,MAAO,KAG3E,SAASg+B,WAAW15C,GAClB,GAAIA,aAAai5C,IAAK,OAAO,IAAIA,IAAIj5C,EAAE23C,EAAG33C,EAAEJ,EAAGI,EAAER,EAAGQ,EAAEy3C,SAEtD,GADMz3C,aAAag5C,MAAMh5C,EAAI+4C,WAAW/4C,IAC5B,IAARA,EAAE2B,GAAmB,IAAR3B,EAAEyM,EAAS,OAAO,IAAIwsC,IAAI9Q,IAAK,EAAGnoC,EAAER,EAAGQ,EAAEy3C,SAC1D,IAAIE,EAAIzvC,KAAKyxC,MAAM35C,EAAEyM,EAAGzM,EAAE2B,GAAK42C,QAC/B,OAAO,IAAIU,IAAItB,EAAI,EAAIA,EAAI,IAAMA,EAAGzvC,KAAKkU,KAAKpc,EAAE2B,EAAI3B,EAAE2B,EAAI3B,EAAEyM,EAAIzM,EAAEyM,GAAIzM,EAAER,EAAGQ,EAAEy3C,SAOxE,SAASmC,IAAIjC,EAAG/3C,EAAGJ,EAAGi4C,SAC3B,OAA4B,IAArBrpC,UAAUxH,OAAe8yC,WAAW/B,GAAK,IAAIsB,IAAItB,EAAG/3C,EAAGJ,EAAc,MAAXi4C,QAAkB,EAAIA,SAGlF,SAASwB,IAAItB,EAAG/3C,EAAGJ,EAAGi4C,SAC3BnwC,KAAKqwC,GAAKA,EACVrwC,KAAK1H,GAAKA,EACV0H,KAAK9H,GAAKA,EACV8H,KAAKmwC,SAAWA,QA3DlBx4C,OAAO+5C,IAAKO,IAAKzM,OAAOE,OACtBmL,SAAU,SAAAA,SAAS3kC,GACjB,OAAO,IAAIwlC,IAAI1xC,KAAK9H,EA7ChB,IA6C8B,MAALgU,EAAY,EAAIA,GAAIlM,KAAK3F,EAAG2F,KAAKmF,EAAGnF,KAAKmwC,UAExEW,OAAQ,SAAAA,OAAS5kC,GACf,OAAO,IAAIwlC,IAAI1xC,KAAK9H,EAhDhB,IAgD8B,MAALgU,EAAY,EAAIA,GAAIlM,KAAK3F,EAAG2F,KAAKmF,EAAGnF,KAAKmwC,UAExED,IAAK,SAAAA,MACH,IAAI3qC,GAAKvF,KAAK9H,EAAI,IAAM,IACpBkc,EAAIoD,MAAMxX,KAAK3F,GAAKkL,EAAIA,EAAIvF,KAAK3F,EAAI,IACrCy3C,EAAIt6B,MAAMxX,KAAKmF,GAAKI,EAAIA,EAAIvF,KAAKmF,EAAI,IAIzC,OAAO,IAAI0qC,IACTsC,SAAU,WAJZ/9B,EAAI88B,GAAKgB,QAAQ99B,IAIW,WAH5B7O,EAAI4rC,GAAKe,QAAQ3sC,IAG2B,UAF5CusC,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAY/9B,EAAI,UAAY7O,EAAI,QAAYusC,GACtDK,SAAU,SAAY/9B,EAAI,SAAY7O,EAAI,UAAYusC,GACtD9xC,KAAKmwC,aA4CXx4C,OAAOg6C,IAAKW,IAAK9M,OAAOE,OACtBmL,SAAU,SAAAA,SAAS3kC,GACjB,OAAO,IAAIylC,IAAI3xC,KAAKqwC,EAAGrwC,KAAK1H,EAAG0H,KAAK9H,EA3GhC,IA2G8C,MAALgU,EAAY,EAAIA,GAAIlM,KAAKmwC,UAExEW,OAAQ,SAAAA,OAAS5kC,GACf,OAAO,IAAIylC,IAAI3xC,KAAKqwC,EAAGrwC,KAAK1H,EAAG0H,KAAK9H,EA9GhC,IA8G8C,MAALgU,EAAY,EAAIA,GAAIlM,KAAKmwC,UAExED,IAAK,SAAAA,MACH,OAAOuB,WAAWzxC,MAAMkwC,UClH5B,IAAIjrC,GAAK,OACLK,EAAI,QACJitC,GAAK,OACLC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAIntC,EACTstC,MAAQttC,EAAIitC,EAAIC,YAAIvtC,EAgBT,SAAS4tC,oBAAUxC,EAAGn2C,EAAGhC,EAAGi4C,SACzC,OAA4B,IAArBrpC,UAAUxH,OAfnB,SAASwzC,iBAAiBp6C,GACxB,GAAIA,aAAaq6C,UAAW,OAAO,IAAIA,UAAUr6C,EAAE23C,EAAG33C,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAEy3C,SAC5Dz3C,aAAam3C,MAAMn3C,EAAIu3C,WAAWv3C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACVgS,EAAIrS,EAAEqS,EAAI,IACV5F,EAAIzM,EAAEyM,EAAI,IACVjN,GAAK06C,MAAQztC,EAAIutC,GAAK35C,EAAI45C,GAAK5nC,IAAM6nC,MAAQF,GAAKC,IAClDK,GAAK7tC,EAAIjN,EACTgU,GAAKumC,GAAK1nC,EAAI7S,GAAKq6C,EAAIS,IAAMR,YAC7Bt4C,EAAI0G,KAAKkU,KAAK5I,EAAIA,EAAI8mC,GAAKA,KAAOP,EAAIv6C,GAAK,EAAIA,IAC/Cm4C,EAAIn2C,EAAI0G,KAAKyxC,MAAMnmC,EAAG8mC,IAAM/B,QAAU,IAAMpQ,IAChD,OAAO,IAAIkS,UAAU1C,EAAI,EAAIA,EAAI,IAAMA,EAAGn2C,EAAGhC,EAAGQ,EAAEy3C,SAIlB2C,CAAiBzC,GAAK,IAAI0C,UAAU1C,EAAGn2C,EAAGhC,EAAc,MAAXi4C,QAAkB,EAAIA,SAG9F,SAAS4C,UAAU1C,EAAGn2C,EAAGhC,EAAGi4C,SACjCnwC,KAAKqwC,GAAKA,EACVrwC,KAAK9F,GAAKA,EACV8F,KAAK9H,GAAKA,EACV8H,KAAKmwC,SAAWA,QCnCX,SAAS8C,MAAM3B,GAAI4B,GAAIC,GAAIC,GAAIC,IACpC,IAAI9B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAM0B,IAC9B,EAAI,EAAI3B,GAAK,EAAIC,IAAM2B,IACvB,EAAI,EAAI7B,GAAK,EAAIC,GAAK,EAAIC,IAAM4B,GACjC5B,GAAK6B,IAAM,EDiCnB17C,OAAOo7C,UAAWF,oBAAWrN,OAAOE,OAClCmL,SAAU,SAAAA,SAAS3kC,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCWtL,KAAKoU,IHnCd,EADF,GGoC8B9I,GACvC,IAAI6mC,UAAU/yC,KAAKqwC,EAAGrwC,KAAK9F,EAAG8F,KAAK9H,EAAIgU,EAAGlM,KAAKmwC,UAExDW,OAAQ,SAAAA,OAAS5kC,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCStL,KAAKoU,IHxCd,GGwC0B9I,GACnC,IAAI6mC,UAAU/yC,KAAKqwC,EAAGrwC,KAAK9F,EAAG8F,KAAK9H,EAAIgU,EAAGlM,KAAKmwC,UAExDD,IAAK,SAAAA,MACH,IAAIG,EAAI74B,MAAMxX,KAAKqwC,GAAK,GAAKrwC,KAAKqwC,EAAI,KAAOU,QACzC74C,GAAK8H,KAAK9H,EACVmC,EAAImd,MAAMxX,KAAK9F,GAAK,EAAI8F,KAAK9F,EAAIhC,GAAK,EAAIA,GAC1Co7C,KAAO1yC,KAAKgxC,IAAIvB,GAChBkD,KAAO3yC,KAAKixC,IAAIxB,GACpB,OAAO,IAAIR,IACT,KAAO33C,EAAImC,GAAK4K,EAAIquC,KAAOhuC,EAAIiuC,OAC/B,KAAOr7C,EAAImC,GAAKk4C,EAAIe,KAAOd,YAAIe,OAC/B,KAAOr7C,EAAImC,GAAKo4C,EAAIa,OACpBtzC,KAAKmwC,aCjDI,ICRAqD,aAAA,SAASp/B,GACtB,OAAO,WACL,OAAOA,ICAX,SAASq/B,OAAOp5C,EAAG9B,GACjB,OAAO,SAASY,GACd,OAAOkB,EAAIlB,EAAIZ,GAUZ,SAASm7C,UAAIr5C,EAAG8K,GACrB,IAAI5M,EAAI4M,EAAI9K,EACZ,OAAO9B,EAAIk7C,OAAOp5C,EAAG9B,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAMqI,KAAK+K,MAAMpT,EAAI,KAAOA,GAAKo7C,aAASn8B,MAAMnd,GAAK8K,EAAI9K,GAGnG,SAASu5C,MAAMruC,GACpB,OAAoB,IAAZA,GAAKA,GAAWsuC,QAAU,SAASx5C,EAAG8K,GAC5C,OAAOA,EAAI9K,EAbf,SAASy5C,YAAYz5C,EAAG8K,EAAGI,GACzB,OAAOlL,EAAIuG,KAAKoU,IAAI3a,EAAGkL,GAAIJ,EAAIvE,KAAKoU,IAAI7P,EAAGI,GAAKlL,EAAGkL,EAAI,EAAIA,EAAG,SAASpM,GACrE,OAAOyH,KAAKoU,IAAI3a,EAAIlB,EAAIgM,EAAGI,IAWZuuC,CAAYz5C,EAAG8K,EAAGI,GAAKouC,aAASn8B,MAAMnd,GAAK8K,EAAI9K,IAInD,SAASw5C,QAAQx5C,EAAG8K,GACjC,IAAI5M,EAAI4M,EAAI9K,EACZ,OAAO9B,EAAIk7C,OAAOp5C,EAAG9B,GAAKo7C,aAASn8B,MAAMnd,GAAK8K,EAAI9K,GCtBrC,IAAA05C,QAAA,SAAUC,SAASzuC,GAChC,IAAIoqC,MAAQiE,MAAMruC,GAElB,SAAS2qC,IAAIvyC,MAAOgC,KAClB,IAAI5G,EAAI42C,OAAOhyC,MAAQs2C,UAASt2C,QAAQ5E,GAAI4G,IAAMs0C,UAASt0C,MAAM5G,GAC7DgS,EAAI4kC,MAAMhyC,MAAMoN,EAAGpL,IAAIoL,GACvB5F,EAAIwqC,MAAMhyC,MAAMwH,EAAGxF,IAAIwF,GACvBgrC,QAAU0D,QAAQl2C,MAAMwyC,QAASxwC,IAAIwwC,SACzC,OAAO,SAASh3C,GAKd,OAJAwE,MAAM5E,EAAIA,EAAEI,GACZwE,MAAMoN,EAAIA,EAAE5R,GACZwE,MAAMwH,EAAIA,EAAEhM,GACZwE,MAAMwyC,QAAUA,QAAQh3C,GACjBwE,MAAQ,IAMnB,OAFAuyC,IAAI0D,MAAQI,SAEL9D,IAnBM,CAoBZ,GAEH,SAASgE,UAAUC,QACjB,OAAO,SAASC,QACd,IAIIn8C,EAAG03C,MAJHj2C,EAAI06C,OAAO90C,OACXvG,EAAI,IAAIkR,MAAMvQ,GACdqR,EAAI,IAAId,MAAMvQ,GACdyL,EAAI,IAAI8E,MAAMvQ,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnB03C,MAAQsE,UAASG,OAAOn8C,IACxBc,EAAEd,GAAK03C,MAAM52C,GAAK,EAClBgS,EAAE9S,GAAK03C,MAAM5kC,GAAK,EAClB5F,EAAElN,GAAK03C,MAAMxqC,GAAK,EAMpB,OAJApM,EAAIo7C,OAAOp7C,GACXgS,EAAIopC,OAAOppC,GACX5F,EAAIgvC,OAAOhvC,GACXwqC,MAAMQ,QAAU,EACT,SAASh3C,GAId,OAHAw2C,MAAM52C,EAAIA,EAAEI,GACZw2C,MAAM5kC,EAAIA,EAAE5R,GACZw2C,MAAMxqC,EAAIA,EAAEhM,GACLw2C,MAAQ,KAKd,IAAI0E,SAAWH,UH7CP,SAASv3B,QACtB,IAAIjjB,EAAIijB,OAAOrd,OAAS,EACxB,OAAO,SAASnG,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAKkH,KAAKgR,MAAMzY,EAAIO,GAChEy5C,GAAKx2B,OAAO1kB,GACZm7C,GAAKz2B,OAAO1kB,EAAI,GAChBi7C,GAAKj7C,EAAI,EAAI0kB,OAAO1kB,EAAI,GAAK,EAAIk7C,GAAKC,GACtCC,GAAKp7C,EAAIyB,EAAI,EAAIijB,OAAO1kB,EAAI,GAAK,EAAIm7C,GAAKD,GAC9C,OAAOF,OAAO95C,EAAIlB,EAAIyB,GAAKA,EAAGw5C,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAASv3B,QACtB,IAAIjjB,EAAIijB,OAAOrd,OACf,OAAO,SAASnG,GACd,IAAIlB,EAAI2I,KAAKgR,QAAQzY,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1Cw5C,GAAKv2B,QAAQ1kB,EAAIyB,EAAI,GAAKA,GAC1By5C,GAAKx2B,OAAO1kB,EAAIyB,GAChB05C,GAAKz2B,QAAQ1kB,EAAI,GAAKyB,GACtB25C,GAAK12B,QAAQ1kB,EAAI,GAAKyB,GAC1B,OAAOu5C,OAAO95C,EAAIlB,EAAIyB,GAAKA,EAAGw5C,GAAIC,GAAIC,GAAIC,ODV/B,SAASh5C,EAAG8K,GACzB,OAAeA,GAAR9K,GAAKA,EAAW,SAASlB,GAC9B,OAAOkB,EAAI8K,EAAIhM,wREAJ,ICAXo7C,IAAM,8CACNC,IAAM,IAAIpyC,OAAOmyC,IAAI3yB,OAAQ,KAclB,IAAA6yB,WAAA,SAASp6C,EAAG8K,GACzB,IACIuvC,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrC78C,GAAK,EACLiC,KACA66C,KAMJ,IAHA16C,GAAQ,GAAI8K,GAAQ,IAGZuvC,GAAKH,IAAI3E,KAAKv1C,MACds6C,GAAKH,IAAI5E,KAAKzqC,MACfyvC,GAAKD,GAAG3wC,OAAS6wC,KACpBD,GAAKzvC,EAAEoV,MAAMs6B,GAAID,IACb16C,EAAEjC,GAAIiC,EAAEjC,IAAM28C,GACb16C,IAAIjC,GAAK28C,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxBz6C,EAAEjC,GAAIiC,EAAEjC,IAAM08C,GACbz6C,IAAIjC,GAAK08C,IAEdz6C,IAAIjC,GAAK,KACT88C,EAAEvzC,MAAMvJ,EAAGA,EAAGmc,EAAGitB,WAAOqT,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAK1vC,EAAE7F,SACTs1C,GAAKzvC,EAAEoV,MAAMs6B,IACT36C,EAAEjC,GAAIiC,EAAEjC,IAAM28C,GACb16C,IAAIjC,GAAK28C,IAKT16C,EAAEoF,OAAS,EAAKy1C,EAAE,GA7C3B,SAASC,IAAI7vC,GACX,OAAO,SAAShM,GACd,OAAOgM,EAAEhM,GAAK,IA4CV67C,CAAID,EAAE,GAAG3gC,GApDjB,SAAS6gC,YAAK9vC,GACZ,OAAO,WACL,OAAOA,GAmDH8vC,CAAK9vC,IACJA,EAAI4vC,EAAEz1C,OAAQ,SAASnG,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAIkN,IAAKlN,EAAGiC,GAAGxB,EAAIq8C,EAAE98C,IAAIA,GAAKS,EAAE0b,EAAEjb,GACrD,OAAOe,EAAE4K,KAAK,oSCpDT,ICPXowC,QACAC,QACAC,QACAC,QDIWC,UAAA,SAASj7C,EAAG8K,GACzB,IAAkB7M,EAAda,EAAIo8C,aAAOpwC,GACf,OAAY,MAALA,GAAmB,YAANhM,EAAkBw6C,aAASxuC,IAClC,WAANhM,EAAiBkoC,WACZ,WAANloC,GAAmBb,EAAIq3C,YAAMxqC,KAAOA,EAAI7M,EAAG43C,SAAOsF,WAClDrwC,aAAawqC,YAAQO,QACrB/qC,aAAarD,KEfN,SAASzH,EAAG8K,GACzB,IAAI5M,EAAI,IAAIuJ,KACZ,OAAeqD,GAAR9K,GAAKA,EAAW,SAASlB,GAC9B,OAAOZ,EAAEk9C,QAAQp7C,EAAI8K,EAAIhM,GAAIZ,IFazB0R,MAAMuB,QAAQrG,GGdP,SAAS9K,EAAG8K,GACzB,IAIIlN,EAJAy9C,GAAKvwC,EAAIA,EAAE7F,OAAS,EACpBq2C,GAAKt7C,EAAIuG,KAAKC,IAAI60C,GAAIr7C,EAAEiF,QAAU,EAClC8U,EAAI,IAAInK,MAAM0rC,IACdr9C,EAAI,IAAI2R,MAAMyrC,IAGlB,IAAKz9C,EAAI,EAAGA,EAAI09C,KAAM19C,EAAGmc,EAAEnc,GAAKiB,UAAMmB,EAAEpC,GAAIkN,EAAElN,IAC9C,KAAOA,EAAIy9C,KAAMz9C,EAAGK,EAAEL,GAAKkN,EAAElN,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAI09C,KAAM19C,EAAGK,EAAEL,GAAKmc,EAAEnc,GAAGkB,GACrC,OAAOb,IHGkB,mBAAd6M,EAAE6X,SAAgD,mBAAf7X,EAAEd,UAA2BmT,MAAMrS,GFftE,SAAS9K,EAAG8K,GACzB,IAEI+G,EAFAjU,KACAK,KAMJ,IAAK4T,KAHK,OAAN7R,GAA2B,WAAbD,QAAOC,KAAgBA,MAC/B,OAAN8K,GAA2B,WAAb/K,QAAO+K,KAAgBA,MAE/BA,EACJ+G,KAAK7R,EACPpC,EAAEiU,GAAKhT,UAAMmB,EAAE6R,GAAI/G,EAAE+G,IAErB5T,EAAE4T,GAAK/G,EAAE+G,GAIb,OAAO,SAAS/S,GACd,IAAK+S,KAAKjU,EAAGK,EAAE4T,GAAKjU,EAAEiU,GAAG/S,GACzB,OAAOb,IEFH+oC,YAAQhnC,EAAG8K,IIlBJywC,UAAA,SAASv7C,EAAG8K,GACzB,OAAeA,GAAR9K,GAAKA,EAAW,SAASlB,GAC9B,OAAOyH,KAAK+K,MAAMtR,EAAI8K,EAAIhM,KCF1B08C,QAAU,IAAMj1C,KAAKowC,GAEdhkB,oBACT8oB,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAAS/7C,EAAG8K,EAAG7M,EAAGC,EAAG4B,EAAG6f,GACrC,IAAIk8B,OAAQC,OAAQF,MAKpB,OAJIC,OAASt1C,KAAKkU,KAAKza,EAAIA,EAAI8K,EAAIA,MAAI9K,GAAK67C,OAAQ/wC,GAAK+wC,SACrDD,MAAQ57C,EAAI/B,EAAI6M,EAAI5M,KAAGD,GAAK+B,EAAI47C,MAAO19C,GAAK4M,EAAI8wC,QAChDE,OAASv1C,KAAKkU,KAAKxc,EAAIA,EAAIC,EAAIA,MAAID,GAAK69C,OAAQ59C,GAAK49C,OAAQF,OAASE,QACtE97C,EAAI9B,EAAI4M,EAAI7M,IAAG+B,GAAKA,EAAG8K,GAAKA,EAAG8wC,OAASA,MAAOC,QAAUA,SAE3DJ,WAAY37C,EACZ47C,WAAY/7B,EACZg8B,OAAQp1C,KAAKyxC,MAAMltC,EAAG9K,GAAKw7C,QAC3BI,MAAOr1C,KAAKy1C,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqBt1C,MAAOu1C,QAASC,QAASC,UAErD,SAASvxB,IAAIhrB,GACX,OAAOA,EAAEoF,OAASpF,EAAEgrB,MAAQ,IAAM,GAsCpC,OAAO,SAAS7qB,EAAG8K,GACjB,IAAIjL,KACA66C,KAOJ,OANA16C,EAAI2G,MAAM3G,GAAI8K,EAAInE,MAAMmE,GAtC1B,SAASuxC,UAAUC,GAAIC,GAAIC,GAAIC,GAAI58C,EAAG66C,GACpC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI7+C,EAAIiC,EAAEsH,KAAK,aAAc,KAAM+0C,QAAS,KAAMC,SAClDzB,EAAEvzC,MAAMvJ,EAAGA,EAAI,EAAGmc,EAAGitB,WAAOsV,GAAIE,MAAO5+C,EAAGA,EAAI,EAAGmc,EAAGitB,WAAOuV,GAAIE,WACtDD,IAAMC,KACf58C,EAAEsH,KAAK,aAAeq1C,GAAKN,QAAUO,GAAKN,SAkC5CE,CAAUr8C,EAAEy7C,WAAYz7C,EAAE07C,WAAY5wC,EAAE2wC,WAAY3wC,EAAE4wC,WAAY77C,EAAG66C,GA9BvE,SAASiB,OAAO37C,EAAG8K,EAAGjL,EAAG66C,GACnB16C,IAAM8K,GACJ9K,EAAI8K,EAAI,IAAKA,GAAK,IAAcA,EAAI9K,EAAI,MAAKA,GAAK,KACtD06C,EAAEvzC,MAAMvJ,EAAGiC,EAAEsH,KAAK0jB,IAAIhrB,GAAK,UAAW,KAAMu8C,UAAY,EAAGriC,EAAGitB,WAAOhnC,EAAG8K,MAC/DA,GACTjL,EAAEsH,KAAK0jB,IAAIhrB,GAAK,UAAYiL,EAAIsxC,UA0BlCT,CAAO37C,EAAE27C,OAAQ7wC,EAAE6wC,OAAQ97C,EAAG66C,GAtBhC,SAASkB,MAAM57C,EAAG8K,EAAGjL,EAAG66C,GAClB16C,IAAM8K,EACR4vC,EAAEvzC,MAAMvJ,EAAGiC,EAAEsH,KAAK0jB,IAAIhrB,GAAK,SAAU,KAAMu8C,UAAY,EAAGriC,EAAGitB,WAAOhnC,EAAG8K,KAC9DA,GACTjL,EAAEsH,KAAK0jB,IAAIhrB,GAAK,SAAWiL,EAAIsxC,UAmBjCR,CAAM57C,EAAE47C,MAAO9wC,EAAE8wC,MAAO/7C,EAAG66C,GAf7B,SAASzzC,MAAMq1C,GAAIC,GAAIC,GAAIC,GAAI58C,EAAG66C,GAChC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI7+C,EAAIiC,EAAEsH,KAAK0jB,IAAIhrB,GAAK,SAAU,KAAM,IAAK,KAAM,KACnD66C,EAAEvzC,MAAMvJ,EAAGA,EAAI,EAAGmc,EAAGitB,WAAOsV,GAAIE,MAAO5+C,EAAGA,EAAI,EAAGmc,EAAGitB,WAAOuV,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrB58C,EAAEsH,KAAK0jB,IAAIhrB,GAAK,SAAW28C,GAAK,IAAMC,GAAK,KAW7Cx1C,CAAMjH,EAAE67C,OAAQ77C,EAAE87C,OAAQhxC,EAAE+wC,OAAQ/wC,EAAEgxC,OAAQj8C,EAAG66C,GACjD16C,EAAI8K,EAAI,KACD,SAAShM,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAIq7C,EAAEz1C,SACTrH,EAAIyB,GAAGQ,GAAGxB,EAAIq8C,EAAE98C,IAAIA,GAAKS,EAAE0b,EAAEjb,GACtC,OAAOe,EAAE4K,KAAK,MAKb,IAAIiyC,wBAA0BT,qBLtD9B,SAASU,SAAS99C,OACvB,MAAc,SAAVA,MAAyB8zB,oBACxBkoB,UAASA,QAAUxhB,SAASkJ,cAAc,OAAQuY,QAAUzhB,SAASujB,gBAAiB7B,QAAU1hB,SAASwjB,aAC9GhC,QAAQ/f,MAAMgiB,UAAYj+C,MAC1BA,MAAQk8C,QAAQgC,iBAAiBjC,QAAQjW,YAAYgW,SAAU,MAAMmC,iBAAiB,aACtFlC,QAAQ3xB,YAAY0xB,SACpBh8C,MAAQA,MAAMqhB,MAAM,GAAI,GAAGhb,MAAM,KAC1B62C,WAAWl9C,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxEo+C,wBAA0BhB,qBL7C9B,SAASiB,SAASr+C,OACvB,OAAa,MAATA,MAAsB8zB,oBACrBqoB,UAASA,QAAU3hB,SAASuM,gBAAgB,6BAA8B,MAC/EoV,QAAQlW,aAAa,YAAajmC,QAC5BA,MAAQm8C,QAAQ8B,UAAUK,QAAQC,gBACxCv+C,MAAQA,MAAMw+C,OACPtB,UAAUl9C,MAAMmB,EAAGnB,MAAMiM,EAAGjM,MAAMZ,EAAGY,MAAMX,EAAGW,MAAMiB,EAAGjB,MAAM8gB,IAFLgT,qBKyCG,KAAM,IAAK,KC9DrEpsB,KAAK+2C,MCGf,SAASpH,QAAImD,KACX,OAAO,SAAS/1C,MAAOgC,KACrB,IAAI0wC,EAAIqD,KAAK/1C,MAAQi6C,IAASj6C,QAAQ0yC,GAAI1wC,IAAMi4C,IAASj4C,MAAM0wC,GAC3Dn2C,EAAIy1C,QAAMhyC,MAAMzD,EAAGyF,IAAIzF,GACvBhC,EAAIy3C,QAAMhyC,MAAMzF,EAAGyH,IAAIzH,GACvBi4C,QAAUR,QAAMhyC,MAAMwyC,QAASxwC,IAAIwwC,SACvC,OAAO,SAASh3C,GAKd,OAJAwE,MAAM0yC,EAAIA,EAAEl3C,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMwyC,QAAUA,QAAQh3C,GACjBwE,MAAQ,KAKN4yC,QAAImD,WAAJnD,IACJsH,QAAUtH,QAAIZ,SCjBzB,SAAS2C,QAAIoB,KACX,OAAO,SAAS/1C,MAAOgC,KACrB,IAAI0wC,EAAIqD,KAAK/1C,MAAQm6C,IAASn6C,QAAQ0yC,GAAI1wC,IAAMm4C,IAASn4C,MAAM0wC,GAC3D/3C,EAAIq3C,QAAMhyC,MAAMrF,EAAGqH,IAAIrH,GACvBJ,EAAIy3C,QAAMhyC,MAAMzF,EAAGyH,IAAIzH,GACvBi4C,QAAUR,QAAMhyC,MAAMwyC,QAASxwC,IAAIwwC,SACvC,OAAO,SAASh3C,GAKd,OAJAwE,MAAM0yC,EAAIA,EAAEl3C,GACZwE,MAAMrF,EAAIA,EAAEa,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMwyC,QAAUA,QAAQh3C,GACjBwE,MAAQ,KAKN20C,QAAIoB,WACEpB,QAAI3C,SCjBzB,SAASkD,wBAAUa,KACjB,OAAQ,SAASqE,eAAexyC,GAG9B,SAASstC,UAAUl1C,MAAOgC,KACxB,IAAI0wC,EAAIqD,KAAK/1C,MAAQq6C,oBAAer6C,QAAQ0yC,GAAI1wC,IAAMq4C,oBAAer4C,MAAM0wC,GACvEn2C,EAAIy1C,QAAMhyC,MAAMzD,EAAGyF,IAAIzF,GACvBhC,EAAIy3C,QAAMhyC,MAAMzF,EAAGyH,IAAIzH,GACvBi4C,QAAUR,QAAMhyC,MAAMwyC,QAASxwC,IAAIwwC,SACvC,OAAO,SAASh3C,GAKd,OAJAwE,MAAM0yC,EAAIA,EAAEl3C,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAE0I,KAAKoU,IAAI7b,EAAGoM,IACxB5H,MAAMwyC,QAAUA,QAAQh3C,GACjBwE,MAAQ,IAMnB,OAlBA4H,GAAKA,EAgBLstC,UAAUe,MAAQmE,eAEXlF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJoF,cAAgBpF,wBAAUlD,SC5BtB,SAASuI,oBAAUC,YAAax7B,QAE7C,IADA,IAAI1kB,EAAI,EAAGyB,EAAIijB,OAAOrd,OAAS,EAAGsd,EAAID,OAAO,GAAIxC,EAAI,IAAIlQ,MAAMvQ,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAGygB,EAAEliB,GAAKkgD,YAAYv7B,EAAGA,EAAID,SAAS1kB,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAI2I,KAAKG,IAAI,EAAGH,KAAKC,IAAInH,EAAI,EAAGkH,KAAKgR,MAAMzY,GAAKO,KACpD,OAAOygB,EAAEliB,GAAGkB,EAAIlB,ICLL,ICAAmgD,sBAAA,SAAShkC,GACtB,OAAO,WACL,OAAOA,ICFIikC,oBAAA,SAASjkC,GACtB,OAAQA,GCKN/S,iBAAQ,EAAG,GAER,SAASi3C,oBAAoBj+C,EAAG8K,GACrC,OAAQA,GAAM9K,GAAKA,GACb,SAAS+Z,GAAK,OAAQA,EAAI/Z,GAAK8K,GAC/BwuC,sBAASxuC,GAiBjB,SAASozC,MAAM73C,OAAQ6C,MAAOi1C,cAAeC,eAC3C,IAAIC,GAAKh4C,OAAO,GAAI2kC,GAAK3kC,OAAO,GAAIokC,GAAKvhC,MAAM,GAAIwhC,GAAKxhC,MAAM,GAG9D,OAFI8hC,GAAKqT,IAAIA,GAAKF,cAAcnT,GAAIqT,IAAK5T,GAAK2T,cAAc1T,GAAID,MAC3D4T,GAAKF,cAAcE,GAAIrT,IAAKP,GAAK2T,cAAc3T,GAAIC,KACjD,SAAS3wB,GAAK,OAAO0wB,GAAG4T,GAAGtkC,KAGpC,SAASukC,QAAQj4C,OAAQ6C,MAAOi1C,cAAeC,eAC7C,IAAIn+B,EAAI1Z,KAAKC,IAAIH,OAAOpB,OAAQiE,MAAMjE,QAAU,EAC5C/G,EAAI,IAAI0R,MAAMqQ,GACdvhB,EAAI,IAAIkR,MAAMqQ,GACdriB,GAAK,EAQT,IALIyI,OAAO4Z,GAAK5Z,OAAO,KACrBA,OAASA,OAAO6Z,QAAQunB,UACxBv+B,MAAQA,MAAMgX,QAAQunB,aAGf7pC,EAAIqiB,GACX/hB,EAAEN,GAAKugD,cAAc93C,OAAOzI,GAAIyI,OAAOzI,EAAI,IAC3Cc,EAAEd,GAAKwgD,cAAcl1C,MAAMtL,GAAIsL,MAAMtL,EAAI,IAG3C,OAAO,SAASmc,GACd,IAAInc,EAAI2gD,OAAOl4C,OAAQ0T,EAAG,EAAGkG,GAAK,EAClC,OAAOvhB,EAAEd,GAAGM,EAAEN,GAAGmc,KAId,SAAS+vB,KAAKviB,OAAQi3B,QAC3B,OAAOA,OACFn4C,OAAOkhB,OAAOlhB,UACd6C,MAAMqe,OAAOre,SACb40C,YAAYv2B,OAAOu2B,eACnBW,MAAMl3B,OAAOk3B,SAKL,SAASC,WAAWP,cAAeC,eAChD,IAIIP,UACAc,OACAC,MANAv4C,OAASW,gBACTkC,MAAQlC,gBACR82C,YAAce,UACdJ,OAAQ,EAKZ,SAASpU,UAGP,OAFAwT,UAAYt3C,KAAKC,IAAIH,OAAOpB,OAAQiE,MAAMjE,QAAU,EAAIq5C,QAAUJ,MAClES,OAASC,MAAQ,KACV33C,MAGT,SAASA,MAAM8S,GACb,OAAQ4kC,SAAWA,OAASd,UAAUx3C,OAAQ6C,MAAOu1C,MAtEzD,SAASK,mBAAmBX,eAC1B,OAAO,SAASn+C,EAAG8K,GACjB,IAAI5M,EAAIigD,cAAcn+C,GAAKA,EAAG8K,GAAKA,GACnC,OAAO,SAASiP,GAAK,OAAOA,GAAK/Z,EAAI,EAAI+Z,GAAKjP,EAAI,EAAI5M,EAAE6b,KAmEK+kC,CAAmBX,eAAiBA,cAAeL,gBAAgB/jC,GA2BlI,OAxBA9S,MAAM4jC,OAAS,SAAS3/B,GACtB,OAAQ0zC,QAAUA,MAAQf,UAAU30C,MAAO7C,OAAQ43C,oBAAqBQ,MAnE5E,SAASM,mBAAmBX,eAC1B,OAAO,SAASp+C,EAAG8K,GACjB,IAAIpM,EAAI0/C,cAAcp+C,GAAKA,EAAG8K,GAAKA,GACnC,OAAO,SAAShM,GAAK,OAAOA,GAAK,EAAIkB,EAAIlB,GAAK,EAAIgM,EAAIpM,EAAEI,KAgEwBigD,CAAmBX,eAAiBA,kBAAkBlzC,IAGxIjE,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUoB,OAAS4I,cAAIlR,KAAK0mB,EAAGuiB,qBAASqD,WAAahkC,OAAO6Z,SAG/EjZ,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAUiE,MAAQgX,YAAMniB,KAAK0mB,GAAI4lB,WAAanhC,MAAMgX,SAGvEjZ,MAAMsjC,WAAa,SAAS9lB,GAC1B,OAAOvb,MAAQgX,YAAMniB,KAAK0mB,GAAIq5B,YAAckB,UAAkB3U,WAGhEpjC,MAAMw3C,MAAQ,SAASh6B,GACrB,OAAOhY,UAAUxH,QAAUw5C,QAAUh6B,EAAG4lB,WAAaoU,OAGvDx3C,MAAM62C,YAAc,SAASr5B,GAC3B,OAAOhY,UAAUxH,QAAU64C,YAAcr5B,EAAG4lB,WAAayT,aAGpDzT,UC5GM,IAAA4U,cAAA,SAASllC,EAAGna,GACzB,IAAKhC,GAAKmc,EAAIna,EAAIma,EAAEmlC,cAAct/C,EAAI,GAAKma,EAAEmlC,iBAAiB5xC,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAI1P,EAAGuhD,YAAcplC,EAAEmG,MAAM,EAAGtiB,GAIhC,OACEuhD,YAAYl6C,OAAS,EAAIk6C,YAAY,GAAKA,YAAYj/B,MAAM,GAAKi/B,aAChEplC,EAAEmG,MAAMtiB,EAAI,KCTFwhD,aAAA,SAASrlC,GACtB,OAAOA,EAAIklC,cAAc14C,KAAKuL,IAAIiI,KAASA,EAAE,GAAKysB,KCFhD1rB,GAAK,2EAEM,SAASukC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAMjwC,MAAQyL,GAAGy6B,KAAK+J,YAAa,MAAM,IAAItpC,MAAM,mBAAqBspC,WACxE,IAAIjwC,MACJ1J,KAAK65C,KAAOnwC,MAAM,IAAM,IACxB1J,KAAKykC,MAAQ/6B,MAAM,IAAM,IACzB1J,KAAK85C,KAAOpwC,MAAM,IAAM,IACxB1J,KAAK+5C,OAASrwC,MAAM,IAAM,GAC1B1J,KAAKi1C,OAASvrC,MAAM,GACpB1J,KAAKi3B,MAAQvtB,MAAM,KAAOA,MAAM,GAChC1J,KAAKg6C,QAAUtwC,MAAM,GACrB1J,KAAKi6C,UAAYvwC,MAAM,KAAOA,MAAM,GAAG6Q,MAAM,GAC7Cva,KAAK0X,OAAShO,MAAM,GACpB1J,KAAKjF,KAAO2O,MAAM,KAAO,GAd3BgwC,gBAAgB3/C,UAAY6/C,gBAAgB7/C,UAiB5C6/C,gBAAgB7/C,UAAUsK,SAAW,WACnC,OAAOrE,KAAK65C,KACN75C,KAAKykC,MACLzkC,KAAK85C,KACL95C,KAAK+5C,QACJ/5C,KAAKi1C,KAAO,IAAM,KACJ,MAAdj1C,KAAKi3B,MAAgB,GAAKr2B,KAAKG,IAAI,EAAgB,EAAbf,KAAKi3B,SAC3Cj3B,KAAKg6C,MAAQ,IAAM,KACD,MAAlBh6C,KAAKi6C,UAAoB,GAAK,IAAMr5C,KAAKG,IAAI,EAAoB,EAAjBf,KAAKi6C,aACrDj6C,KAAK0X,KAAO,IAAM,IACnB1X,KAAKjF,MCjCE,ICCJm/C,eCAPC,qBACOl4C,qBACAm4C,2BFHIC,WAAA,SAASngD,GACtBogD,IAAK,IAAK,IAAkCC,GAA9B7gD,EAAIQ,EAAEoF,OAAQrH,EAAI,EAAGwqC,IAAM,EAAOxqC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAKwqC,GAAK8X,GAAKtiD,EAAG,MACvB,IAAK,IAAgB,IAAPwqC,KAAUA,GAAKxqC,GAAGsiD,GAAKtiD,EAAG,MACxC,QAAS,GAAIwqC,GAAK,EAAG,CAAE,KAAMvoC,EAAEjC,GAAI,MAAMqiD,IAAK7X,GAAK,GAGvD,OAAOA,GAAK,EAAIvoC,EAAEqgB,MAAM,EAAGkoB,IAAMvoC,EAAEqgB,MAAMggC,GAAK,GAAKrgD,GGPtCsgD,cAAA,SAASpmC,EAAGna,GACzB,IAAI1B,EAAI+gD,cAAcllC,EAAGna,GACzB,IAAK1B,EAAG,OAAO6b,EAAI,GACnB,IAAIolC,YAAcjhD,EAAE,GAChBkiD,SAAWliD,EAAE,GACjB,OAAOkiD,SAAW,EAAI,KAAO,IAAIxwC,OAAOwwC,UAAU31C,KAAK,KAAO00C,YACxDA,YAAYl6C,OAASm7C,SAAW,EAAIjB,YAAYj/B,MAAM,EAAGkgC,SAAW,GAAK,IAAMjB,YAAYj/B,MAAMkgC,SAAW,GAC5GjB,YAAc,IAAIvvC,MAAMwwC,SAAWjB,YAAYl6C,OAAS,GAAGwF,KAAK,MCNzD41C,aACbC,IAAK,SAAA77B,EAAS1K,EAAGna,GAAK,OAAY,IAAJma,GAASwmC,QAAQ3gD,IAC/CkL,EAAK,SAAAA,EAASiP,GAAK,OAAOxT,KAAK+K,MAAMyI,GAAG/P,SAAS,IACjD/L,EAAK,SAAAA,EAAS8b,GAAK,OAAOA,EAAI,IAC9B7b,EAAK,SAAAA,EAAS6b,GAAK,OAAOxT,KAAK+K,MAAMyI,GAAG/P,SAAS,KACjDlK,EAAK,SAAAA,EAASia,EAAGna,GAAK,OAAOma,EAAEmlC,cAAct/C,IAC7C+f,EAAK,SAAAA,EAAS5F,EAAGna,GAAK,OAAOma,EAAEwmC,QAAQ3gD,IACvC8Q,EAAK,SAAAA,EAASqJ,EAAGna,GAAK,OAAOma,EAAEymC,YAAY5gD,IAC3CvB,EAAK,SAAAA,EAAS0b,GAAK,OAAOxT,KAAK+K,MAAMyI,GAAG/P,SAAS,IACjDpK,EAAK,SAAAA,EAASma,EAAGna,IAAK,OAAOugD,cAAkB,IAAJpmC,EAASna,KACpDlB,EAAKyhD,cACLtgD,EHVa,SAASka,EAAGna,GACzB,IAAI1B,EAAI+gD,cAAcllC,EAAGna,GACzB,IAAK1B,EAAG,OAAO6b,EAAI,GACnB,IAAIolC,YAAcjhD,EAAE,GAChBkiD,SAAWliD,EAAE,GACbN,EAAIwiD,UAAYP,eAAuE,EAAtDt5C,KAAKG,KAAK,EAAGH,KAAKC,IAAI,EAAGD,KAAKgR,MAAM6oC,SAAW,MAAY,EAC5F/gD,EAAI8/C,YAAYl6C,OACpB,OAAOrH,IAAMyB,EAAI8/C,YACXvhD,EAAIyB,EAAI8/C,YAAc,IAAIvvC,MAAMhS,EAAIyB,EAAI,GAAGoL,KAAK,KAChD7M,EAAI,EAAIuhD,YAAYj/B,MAAM,EAAGtiB,GAAK,IAAMuhD,YAAYj/B,MAAMtiB,GAC1D,KAAO,IAAIgS,MAAM,EAAIhS,GAAG6M,KAAK,KAAOw0C,cAAcllC,EAAGxT,KAAKG,IAAI,EAAG9G,EAAIhC,EAAI,IAAI,IGCnF6iD,EAAK,SAAAA,EAAS1mC,GAAK,OAAOxT,KAAK+K,MAAMyI,GAAG/P,SAAS,IAAI02C,eACrD3mC,EAAK,SAAAA,EAASA,IAAK,OAAOxT,KAAK+K,MAAMyI,IAAG/P,SAAS,MChBpC22C,aAAA,SAAS5mC,GACtB,OAAOA,GCQL6mC,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAASniD,MAAO+9B,OAOrB,IANA,IAAIh/B,EAAIiB,MAAMoG,OACVnG,KACAmhB,EAAI,EACJvP,EAAIqwC,SAAS,GACb97C,OAAS,EAENrH,EAAI,GAAK8S,EAAI,IACdzL,OAASyL,EAAI,EAAIksB,QAAOlsB,EAAInK,KAAKG,IAAI,EAAGk2B,MAAQ33B,SACpDnG,EAAEqI,KAAKtI,MAAMsM,UAAUvN,GAAK8S,EAAG9S,EAAI8S,OAC9BzL,QAAUyL,EAAI,GAAKksB,SACxBlsB,EAAIqwC,SAAS9gC,GAAKA,EAAI,GAAK8gC,SAAS97C,QAGtC,OAAOnG,EAAE2oC,UAAUh9B,KAAKu2C,YDHwBC,CAAYnB,OAAOiB,SAAUjB,OAAOkB,WAAaruB,aAC/FuuB,SAAWpB,OAAOoB,SAClBC,QAAUrB,OAAOqB,QACjBC,SAAWtB,OAAOsB,SEfT,SAASA,UACtB,OAAO,SAASviD,OACd,OAAOA,MAAMqJ,QAAQ,SAAU,SAAStK,GACtC,OAAOwjD,UAAUxjD,MFYYyjD,CAAevB,OAAOsB,UAAYzuB,aAC/D2uB,QAAUxB,OAAOwB,SAAW,IAEhC,SAASC,UAAUjC,WAGjB,IAAIE,MAFJF,UAAYD,gBAAgBC,YAEPE,KACjBpV,MAAQkV,UAAUlV,MAClBqV,KAAOH,UAAUG,KACjBC,OAASJ,UAAUI,OACnB9E,KAAO0E,UAAU1E,KACjBhe,MAAQ0iB,UAAU1iB,MAClB+iB,MAAQL,UAAUK,MAClBC,UAAYN,UAAUM,UACtBviC,KAAOiiC,UAAUjiC,KACjB3c,KAAO4+C,UAAU5+C,KAGR,MAATA,MAAci/C,OAAQ,EAAMj/C,KAAO,KAG7B2/C,YAAY3/C,QAAoB,MAAbk/C,YAAsBA,UAAY,IAAKviC,MAAO,EAAM3c,KAAO,MAGpFk6C,MAAkB,MAAT4E,MAA0B,MAAVpV,SAAgBwQ,MAAO,EAAM4E,KAAO,IAAKpV,MAAQ,KAI9E,IAAIoX,OAAoB,MAAX9B,OAAiBwB,SAAS,GAAgB,MAAXxB,QAAkB,SAASx8C,KAAKxC,MAAQ,IAAMA,KAAK0I,cAAgB,GAC3Gq4C,OAAoB,MAAX/B,OAAiBwB,SAAS,GAAK,OAAOh+C,KAAKxC,MAAQ4gD,QAAU,GAKtEI,WAAarB,YAAY3/C,MACzBihD,YAAc,aAAaz+C,KAAKxC,MAUpC,SAASkH,OAAO/I,OACd,IAEIjB,EAAGyB,EAAGpB,EAFN2jD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAAT/gD,KACFmhD,YAAcH,WAAW7iD,OAASgjD,YAClChjD,MAAQ,OACH,CAIL,IAAIijD,eAHJjjD,OAASA,OAGmB,EAe5B,GAdAA,MAAQ6iD,WAAWn7C,KAAKuL,IAAIjT,OAAQ+gD,WAGhCviC,OAAMxe,MAAQmhD,WAAWnhD,QAGzBijD,eAA4B,IAAVjjD,QAAaijD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATrC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQmC,YACzGC,aAAwB,MAATnhD,KAAekgD,SAAS,EAAIf,eAAiB,GAAK,IAAMgC,aAAeC,eAA0B,MAATrC,KAAe,IAAM,IAIxHkC,YAEF,IADA/jD,GAAK,EAAGyB,EAAIR,MAAMoG,SACTrH,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAM4gB,WAAW7hB,KAAcK,EAAI,GAAI,CAC7C4jD,aAAqB,KAAN5jD,EAAWkjD,QAAUtiD,MAAMqhB,MAAMtiB,EAAI,GAAKiB,MAAMqhB,MAAMtiB,IAAMikD,YAC3EhjD,MAAQA,MAAMqhB,MAAM,EAAGtiB,GACvB,OAOJ+hD,QAAU/E,OAAM/7C,MAAQiiD,MAAMjiD,MAAOsb,MAGzC,IAAIlV,OAAS28C,YAAY38C,OAASpG,MAAMoG,OAAS48C,YAAY58C,OACzD0+B,QAAU1+B,OAAS23B,MAAQ,IAAIhtB,MAAMgtB,MAAQ33B,OAAS,GAAGwF,KAAK+0C,MAAQ,GAM1E,OAHIG,OAAS/E,OAAM/7C,MAAQiiD,MAAMnd,QAAU9kC,MAAO8kC,QAAQ1+B,OAAS23B,MAAQilB,YAAY58C,OAASkV,KAAWwpB,QAAU,IAG7GyG,OACN,IAAK,IAAKvrC,MAAQ+iD,YAAc/iD,MAAQgjD,YAAcle,QAAS,MAC/D,IAAK,IAAK9kC,MAAQ+iD,YAAcje,QAAU9kC,MAAQgjD,YAAa,MAC/D,IAAK,IAAKhjD,MAAQ8kC,QAAQzjB,MAAM,EAAGjb,OAAS0+B,QAAQ1+B,QAAU,GAAK28C,YAAc/iD,MAAQgjD,YAAcle,QAAQzjB,MAAMjb,QAAS,MAC9H,QAASpG,MAAQ8kC,QAAUie,YAAc/iD,MAAQgjD,YAGnD,OAAOT,SAASviD,OAOlB,OApEA+gD,UAAyB,MAAbA,UAAoB,EAC1B,SAAS18C,KAAKxC,MAAQ6F,KAAKG,IAAI,EAAGH,KAAKC,IAAI,GAAIo5C,YAC/Cr5C,KAAKG,IAAI,EAAGH,KAAKC,IAAI,GAAIo5C,YA8D/Bh4C,OAAOoC,SAAW,WAChB,OAAOs1C,UAAY,IAGd13C,OAaT,OACEA,OAAQ25C,UACRxB,aAZF,SAASA,aAAaT,UAAWzgD,OAC/B,IAAI8gB,EAAI4hC,YAAWjC,UAAYD,gBAAgBC,YAAsB5+C,KAAO,IAAK4+C,YAC7Ex/C,EAAiE,EAA7DyG,KAAKG,KAAK,EAAGH,KAAKC,IAAI,EAAGD,KAAKgR,MAAM6oC,aAASvhD,OAAS,KAC1DgT,EAAItL,KAAKoU,IAAI,IAAK7a,GAClB0hD,OAASZ,SAAS,EAAI9gD,EAAI,GAC9B,OAAO,SAASjB,OACd,OAAO8gB,EAAE9N,EAAIhT,OAAS2iD,YJxHb,SAASO,cAAc3W,YAIpC,OAHA0U,qBAASkC,WAAa5W,YACtBxjC,qBAASk4C,qBAAOl4C,OAChBm4C,2BAAeD,qBAAOC,aACfD,qBAXTiC,EACEZ,QAAS,IACTH,UAAW,IACXD,UAAW,GACXG,UAAW,IAAK,MORH,ICCAe,eAAA,SAAS57C,OAAQkU,MAAO+kC,WACrC,IAGIM,UAHAt8C,MAAQ+C,OAAO,GACf8gC,KAAO9gC,OAAOA,OAAOpB,OAAS,GAC9BmiC,KAAOW,SAASzkC,MAAO6jC,KAAe,MAAT5sB,MAAgB,GAAKA,OAGtD,QADA+kC,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrC5+C,MAChB,IAAK,IACH,IAAI7B,MAAQ0H,KAAKG,IAAIH,KAAKuL,IAAIxO,OAAQiD,KAAKuL,IAAIq1B,OAE/C,OAD2B,MAAvBmY,UAAUM,WAAsBziC,MAAMyiC,UCVjC,SAASxY,KAAMvoC,OAC5B,OAAO0H,KAAKG,IAAI,EAAgE,EAA7DH,KAAKG,KAAK,EAAGH,KAAKC,IAAI,EAAGD,KAAKgR,MAAM6oC,aAASvhD,OAAS,KAAWuhD,aAAS75C,KAAKuL,IAAIs1B,QDS5C8a,CAAgB9a,KAAMvoC,UAASygD,UAAUM,UAAYA,WACpGG,2BAAaT,UAAWzgD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvBygD,UAAUM,WAAsBziC,MAAMyiC,UElBjC,SAASxY,KAAM1gC,KAE5B,OADA0gC,KAAO7gC,KAAKuL,IAAIs1B,MAAO1gC,IAAMH,KAAKuL,IAAIpL,KAAO0gC,KACtC7gC,KAAKG,IAAI,EAAG05C,aAAS15C,KAAO05C,aAAShZ,OAAS,EFgBK+a,CAAe/a,KAAM7gC,KAAKG,IAAIH,KAAKuL,IAAIxO,OAAQiD,KAAKuL,IAAIq1B,WAAUmY,UAAUM,UAAYA,WAAgC,MAAnBN,UAAU5+C,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvB4+C,UAAUM,WAAsBziC,MAAMyiC,UDvBjC,SAASxY,MACtB,OAAO7gC,KAAKG,IAAI,GAAI05C,aAAS75C,KAAKuL,IAAIs1B,QCsBoBgb,CAAehb,SAAQkY,UAAUM,UAAYA,UAAuC,GAAP,MAAnBN,UAAU5+C,OAI9H,OAAOkH,qBAAO03C,YGxBT,SAAS+C,UAAUp7C,OACxB,IAAIZ,OAASY,MAAMZ,OAmDnB,OAjDAY,MAAMygC,MAAQ,SAASntB,OACrB,IAAIrc,EAAImI,SACR,OAAOqhC,UAAMxpC,EAAE,GAAIA,EAAEA,EAAE+G,OAAS,GAAa,MAATsV,MAAgB,GAAKA,QAG3DtT,MAAMq7C,WAAa,SAAS/nC,MAAO+kC,WACjC,OAAOgD,eAAWj8C,SAAUkU,MAAO+kC,YAGrCr4C,MAAMs7C,KAAO,SAAShoC,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKI6sB,KALAlpC,EAAImI,SACJ+hC,GAAK,EACL8X,GAAKhiD,EAAE+G,OAAS,EAChB3B,MAAQpF,EAAEkqC,IACVjB,KAAOjpC,EAAEgiD,IA8Bb,OA3BI/Y,KAAO7jC,QACT8jC,KAAO9jC,MAAOA,MAAQ6jC,KAAMA,KAAOC,KACnCA,KAAOgB,GAAIA,GAAK8X,GAAIA,GAAK9Y,OAG3BA,KAAOO,cAAcrkC,MAAO6jC,KAAM5sB,QAEvB,EAGT6sB,KAAOO,cAFPrkC,MAAQiD,KAAKgR,MAAMjU,MAAQ8jC,MAAQA,KACnCD,KAAO5gC,KAAK68B,KAAK+D,KAAOC,MAAQA,KACE7sB,OACzB6sB,KAAO,IAGhBA,KAAOO,cAFPrkC,MAAQiD,KAAK68B,KAAK9/B,MAAQ8jC,MAAQA,KAClCD,KAAO5gC,KAAKgR,MAAM4vB,KAAOC,MAAQA,KACC7sB,QAGhC6sB,KAAO,GACTlpC,EAAEkqC,IAAM7hC,KAAKgR,MAAMjU,MAAQ8jC,MAAQA,KACnClpC,EAAEgiD,IAAM35C,KAAK68B,KAAK+D,KAAOC,MAAQA,KACjC/gC,OAAOnI,IACEkpC,KAAO,IAChBlpC,EAAEkqC,IAAM7hC,KAAK68B,KAAK9/B,MAAQ8jC,MAAQA,KAClClpC,EAAEgiD,IAAM35C,KAAKgR,MAAM4vB,KAAOC,MAAQA,KAClC/gC,OAAOnI,IAGF+I,OAGFA,MAGM,SAASmyC,gBACtB,IAAInyC,MAAQy3C,WAAWP,oBAAeC,YAMtC,OAJAn3C,MAAM6iC,KAAO,WACX,OAAOA,KAAK7iC,MAAOmyC,kBAGdiJ,UAAUp7C,OC/DJ,SAAS0rB,oBACtB,IAAItsB,QAAU,EAAG,GAEjB,SAASY,MAAM8S,GACb,OAAQA,EAaV,OAVA9S,MAAM4jC,OAAS5jC,MAEfA,MAAMZ,OAASY,MAAMiC,MAAQ,SAASub,GACpC,OAAOhY,UAAUxH,QAAUoB,OAAS4I,cAAIlR,KAAK0mB,EAAGuiB,qBAAS//B,OAASZ,OAAO6Z,SAG3EjZ,MAAM6iC,KAAO,WACX,OAAOnX,oBAAWtsB,OAAOA,SAGpBg8C,UAAUp7C,OCrBJ,IAAAs7C,KAAA,SAASl8C,OAAQm8C,UAG9B,IAII1jD,EAJAspC,GAAK,EACL8X,IAHJ75C,OAASA,OAAO6Z,SAGAjb,OAAS,EACrBw9C,GAAKp8C,OAAO+hC,IACZsa,GAAKr8C,OAAO65C,IAUhB,OAPIwC,GAAKD,KACP3jD,EAAIspC,GAAIA,GAAK8X,GAAIA,GAAKphD,EACtBA,EAAI2jD,GAAIA,GAAKC,GAAIA,GAAK5jD,GAGxBuH,OAAO+hC,IAAMoa,SAASjrC,MAAMkrC,IAC5Bp8C,OAAO65C,IAAMsC,SAASpf,KAAKsf,IACpBr8C,QCVT,SAAS83C,kBAAcn+C,EAAG8K,GACxB,OAAQA,EAAIvE,KAAKshC,IAAI/8B,EAAI9K,IACnB,SAAS+Z,GAAK,OAAOxT,KAAKshC,IAAI9tB,EAAI/Z,GAAK8K,GACvCwuC,sBAASxuC,GAGjB,SAASszC,kBAAcp+C,EAAG8K,GACxB,OAAO9K,EAAI,EACL,SAASlB,GAAK,OAAQyH,KAAKoU,KAAK7P,EAAGhM,GAAKyH,KAAKoU,KAAK3a,EAAG,EAAIlB,IACzD,SAASA,GAAK,OAAOyH,KAAKoU,IAAI7P,EAAGhM,GAAKyH,KAAKoU,IAAI3a,EAAG,EAAIlB,IAG9D,SAAS6jD,MAAM5oC,GACb,OAAOhR,SAASgR,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAAS6oC,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAASt8C,KAAK6xC,EAAI7xC,KAAKu8C,IACvB,SAAS/oC,GAAK,OAAOxT,KAAKoU,IAAIkoC,KAAM9oC,IAG5C,SAASgpC,KAAKF,MACZ,OAAOA,OAASt8C,KAAK6xC,EAAI7xC,KAAKshC,IACf,KAATgb,MAAet8C,KAAKy8C,OACV,IAATH,MAAct8C,KAAK08C,OAClBJ,KAAOt8C,KAAKshC,IAAIgb,MAAO,SAAS9oC,GAAK,OAAOxT,KAAKshC,IAAI9tB,GAAK8oC,OAGpE,SAASK,QAAQvjC,GACf,OAAO,SAAS5F,GACd,OAAQ4F,GAAG5F,IAIA,SAAS8tB,MACtB,IAAI5gC,MAAQy3C,WAAWP,kBAAeC,mBAAe/3C,QAAQ,EAAG,KAC5DA,OAASY,MAAMZ,OACfw8C,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAASvY,UAGP,OAFA8Y,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3Bx8C,SAAS,GAAK,IAAG88C,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnDn8C,MA2ET,OAxEAA,MAAM47C,KAAO,SAASp+B,GACpB,OAAOhY,UAAUxH,QAAU49C,MAAQp+B,EAAG4lB,WAAawY,MAGrD57C,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUoB,OAAOoe,GAAI4lB,WAAahkC,UAGrDY,MAAMygC,MAAQ,SAASntB,OACrB,IAGI7b,EAHAR,EAAImI,SACJoV,EAAIvd,EAAE,GACNqkB,EAAIrkB,EAAEA,EAAE+G,OAAS,IAGjBvG,EAAI6jB,EAAI9G,KAAG7d,EAAI6d,EAAGA,EAAI8G,EAAGA,EAAI3kB,GAEjC,IAEIgC,EACAiS,EACA/S,EAJAlB,EAAIulD,KAAK1nC,GACTwE,EAAIkjC,KAAK5gC,GAITljB,EAAa,MAATkb,MAAgB,IAAMA,MAC1Bk9B,KAEJ,KAAMoL,KAAO,IAAM5iC,EAAIriB,EAAIyB,GAEzB,GADAzB,EAAI2I,KAAK+K,MAAM1T,GAAK,EAAGqiB,EAAI1Z,KAAK+K,MAAM2O,GAAK,EACvCxE,EAAI,GAAG,KAAO7d,EAAIqiB,IAAKriB,EACzB,IAAKiU,EAAI,EAAGjS,EAAIwjD,KAAKxlD,GAAIiU,EAAIgxC,OAAQhxC,EAEnC,MADA/S,EAAIc,EAAIiS,GACA4J,GAAR,CACA,GAAI3c,EAAIyjB,EAAG,MACXk1B,EAAEtwC,KAAKrI,SAEJ,KAAOlB,EAAIqiB,IAAKriB,EACrB,IAAKiU,EAAIgxC,KAAO,EAAGjjD,EAAIwjD,KAAKxlD,GAAIiU,GAAK,IAAKA,EAExC,MADA/S,EAAIc,EAAIiS,GACA4J,GAAR,CACA,GAAI3c,EAAIyjB,EAAG,MACXk1B,EAAEtwC,KAAKrI,SAIX24C,EAAI/P,UAAM9pC,EAAGqiB,EAAG1Z,KAAKC,IAAIyZ,EAAIriB,EAAGyB,IAAI4P,IAAIm0C,MAG1C,OAAO1kD,EAAI+4C,EAAEhQ,UAAYgQ,GAG3BxwC,MAAMq7C,WAAa,SAAS/nC,MAAO+kC,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAATuD,KAAc,MAAQ,KAChC,mBAAdvD,YAA0BA,UAAY13C,qBAAO03C,YACpD/kC,QAAUJ,IAAU,OAAOmlC,UAClB,MAAT/kC,QAAeA,MAAQ,IAC3B,IAAI1I,EAAItL,KAAKG,IAAI,EAAGm8C,KAAOtoC,MAAQtT,MAAMygC,QAAQziC,QACjD,OAAO,SAAS/G,GACd,IAAIN,EAAIM,EAAIklD,KAAK78C,KAAK+K,MAAM6xC,KAAKjlD,KAEjC,OADIN,EAAIilD,KAAOA,KAAO,KAAKjlD,GAAKilD,MACzBjlD,GAAKiU,EAAIytC,UAAUphD,GAAK,KAInC+I,MAAMs7C,KAAO,WACX,OAAOl8C,OAAOk8C,KAAKl8C,UACjBkR,MAAO,SAAAA,MAASwC,GAAK,OAAOqpC,KAAK78C,KAAKgR,MAAM4rC,KAAKppC,MACjDqpB,KAAM,SAAAA,KAASrpB,GAAK,OAAOqpC,KAAK78C,KAAK68B,KAAK+f,KAAKppC,UAInD9S,MAAM6iC,KAAO,WACX,OAAOA,KAAK7iC,MAAO4gC,MAAMgb,KAAKA,QAGzB57C,MC1HT,SAASo8C,MAAMtpC,EAAGqmC,UAChB,OAAOrmC,EAAI,GAAKxT,KAAKoU,KAAKZ,EAAGqmC,UAAY75C,KAAKoU,IAAIZ,EAAGqmC,UAGxC,SAASzlC,MACtB,IAAIylC,SAAW,EACXn5C,MAAQy3C,WAGZ,SAASP,cAAcn+C,EAAG8K,GACxB,OAAQA,EAAIu4C,MAAMv4C,EAAGs1C,WAAapgD,EAAIqjD,MAAMrjD,EAAGogD,YACzC,SAASrmC,GAAK,OAAQspC,MAAMtpC,EAAGqmC,UAAYpgD,GAAK8K,GAChDwuC,sBAASxuC,IAGjB,SAASszC,cAAcp+C,EAAG8K,GAExB,OADAA,EAAIu4C,MAAMv4C,EAAGs1C,WAAapgD,EAAIqjD,MAAMrjD,EAAGogD,WAChC,SAASthD,GAAK,OAAOukD,MAAMrjD,EAAI8K,EAAIhM,EAAG,EAAIshD,aAV/C/5C,OAASY,MAAMZ,OAqBnB,OARAY,MAAMm5C,SAAW,SAAS37B,GACxB,OAAOhY,UAAUxH,QAAUm7C,UAAY37B,EAAGpe,OAAOA,WAAa+5C,UAGhEn5C,MAAM6iC,KAAO,WACX,OAAOA,KAAK7iC,MAAO0T,MAAMylC,SAASA,YAG7BiC,UAAUp7C,OC7BJ,SAASihC,oBACtB,IAAI7hC,UACA6C,SACAo6C,cAEJ,SAASjZ,UACP,IAAIzsC,EAAI,EAAGyB,EAAIkH,KAAKG,IAAI,EAAGwC,MAAMjE,QAEjC,IADAq+C,WAAa,IAAI1zC,MAAMvQ,EAAI,KAClBzB,EAAIyB,GAAGikD,WAAW1lD,EAAI,GAAK2lD,SAAUl9C,OAAQzI,EAAIyB,GAC1D,OAAO4H,MAGT,SAASA,MAAM8S,GACb,IAAKoD,MAAMpD,GAAKA,GAAI,OAAO7Q,MAAMq1C,OAAO+E,WAAYvpC,IAiCtD,OA9BA9S,MAAMujC,aAAe,SAASt/B,GAC5B,IAAItN,EAAIsL,MAAMoE,QAAQpC,GACtB,OAAOtN,EAAI,GAAK4oC,IAAKA,MACnB5oC,EAAI,EAAI0lD,WAAW1lD,EAAI,GAAKyI,OAAO,GACnCzI,EAAI0lD,WAAWr+C,OAASq+C,WAAW1lD,GAAKyI,OAAOA,OAAOpB,OAAS,KAInEgC,MAAMZ,OAAS,SAASoe,GACtB,IAAKhY,UAAUxH,OAAQ,OAAOoB,OAAO6Z,QACrC7Z,UACA,IAAK,IAAyBnI,EAArBN,EAAI,EAAGyB,EAAIolB,EAAExf,OAAWrH,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAIumB,EAAE7mB,KAAkBuf,MAAMjf,GAAKA,IAAImI,OAAOc,KAAKjJ,GAEpG,OADAmI,OAAO8Q,KAAKovB,WACL8D,WAGTpjC,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAUiE,MAAQgX,YAAMniB,KAAK0mB,GAAI4lB,WAAanhC,MAAMgX,SAGvEjZ,MAAMu8C,UAAY,WAChB,OAAOF,WAAWpjC,SAGpBjZ,MAAM6iC,KAAO,WACX,OAAO5B,oBACF7hC,OAAOA,QACP6C,MAAMA,QAGNjC,MC7CM,SAASw8C,oBACtB,IAAIhB,GAAK,EACLC,GAAK,EACLrjD,EAAI,EACJgH,QAAU,IACV6C,OAAS,EAAG,GAEhB,SAASjC,MAAM8S,GACb,GAAIA,GAAKA,EAAG,OAAO7Q,MAAMq1C,OAAOl4C,OAAQ0T,EAAG,EAAG1a,IAGhD,SAASgrC,UACP,IAAIzsC,GAAK,EAET,IADAyI,OAAS,IAAIuJ,MAAMvQ,KACVzB,EAAIyB,GAAGgH,OAAOzI,KAAOA,EAAI,GAAK8kD,IAAM9kD,EAAIyB,GAAKojD,KAAOpjD,EAAI,GACjE,OAAO4H,MAyBT,OAtBAA,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUw9C,IAAMh+B,EAAE,GAAIi+B,IAAMj+B,EAAE,GAAI4lB,YAAcoY,GAAIC,KAGvEz7C,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAU5F,GAAK6J,MAAQgX,YAAMniB,KAAK0mB,IAAIxf,OAAS,EAAGolC,WAAanhC,MAAMgX,SAGxFjZ,MAAMujC,aAAe,SAASt/B,GAC5B,IAAItN,EAAIsL,MAAMoE,QAAQpC,GACtB,OAAOtN,EAAI,GAAK4oC,IAAKA,KACf5oC,EAAI,GAAK6kD,GAAIp8C,OAAO,IACpBzI,GAAKyB,GAAKgH,OAAOhH,EAAI,GAAIqjD,KACxBr8C,OAAOzI,EAAI,GAAIyI,OAAOzI,KAG/BqJ,MAAM6iC,KAAO,WACX,OAAO2Z,oBACFp9C,QAAQo8C,GAAIC,KACZx5C,MAAMA,QAGNm5C,UAAUp7C,OCzCJ,SAASs8C,sBACtB,IAAIl9C,QAAU,IACV6C,OAAS,EAAG,GACZ7J,EAAI,EAER,SAAS4H,MAAM8S,GACb,GAAIA,GAAKA,EAAG,OAAO7Q,MAAMq1C,OAAOl4C,OAAQ0T,EAAG,EAAG1a,IAsBhD,OAnBA4H,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUoB,OAAS6Z,YAAMniB,KAAK0mB,GAAIplB,EAAIkH,KAAKC,IAAIH,OAAOpB,OAAQiE,MAAMjE,OAAS,GAAIgC,OAASZ,OAAO6Z,SAGpHjZ,MAAMiC,MAAQ,SAASub,GACrB,OAAOhY,UAAUxH,QAAUiE,MAAQgX,YAAMniB,KAAK0mB,GAAIplB,EAAIkH,KAAKC,IAAIH,OAAOpB,OAAQiE,MAAMjE,OAAS,GAAIgC,OAASiC,MAAMgX,SAGlHjZ,MAAMujC,aAAe,SAASt/B,GAC5B,IAAItN,EAAIsL,MAAMoE,QAAQpC,GACtB,OAAQ7E,OAAOzI,EAAI,GAAIyI,OAAOzI,KAGhCqJ,MAAM6iC,KAAO,WACX,OAAOyZ,sBACFl9C,OAAOA,QACP6C,MAAMA,QAGNjC,MC/BT,IAAI+vC,YAAK,IAAIvvC,KACTwvC,YAAK,IAAIxvC,KAEE,SAASi8C,YAAYC,OAAQC,QAASrpC,MAAO7H,OAE1D,SAAS8vC,SAASh7C,MAChB,OAAOm8C,OAAOn8C,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDAg7C,SAASjrC,MAAQirC,SAEjBA,SAASpf,KAAO,SAAS57B,MACvB,OAAOm8C,OAAOn8C,KAAO,IAAIC,KAAKD,KAAO,IAAKo8C,QAAQp8C,KAAM,GAAIm8C,OAAOn8C,MAAOA,MAG5Eg7C,SAASlxC,MAAQ,SAAS9J,MACxB,IAAI62C,GAAKmE,SAASh7C,MACdwjC,GAAKwX,SAASpf,KAAK57B,MACvB,OAAOA,KAAO62C,GAAKrT,GAAKxjC,KAAO62C,GAAKrT,IAGtCwX,SAASqB,OAAS,SAASr8C,KAAM4/B,MAC/B,OAAOwc,QAAQp8C,KAAO,IAAIC,MAAMD,MAAe,MAAR4/B,KAAe,EAAI7gC,KAAKgR,MAAM6vB,OAAQ5/B,MAG/Eg7C,SAASt5C,MAAQ,SAAS5F,MAAO6jC,KAAMC,MACrC,IAAgB0c,SAAZ56C,SAGJ,GAFA5F,MAAQk/C,SAASpf,KAAK9/B,OACtB8jC,KAAe,MAARA,KAAe,EAAI7gC,KAAKgR,MAAM6vB,QAC/B9jC,MAAQ6jC,MAAWC,KAAO,GAAI,OAAOl+B,MAC3C,GAAGA,MAAM/B,KAAK28C,SAAW,IAAIr8C,MAAMnE,QAASsgD,QAAQtgD,MAAO8jC,MAAOuc,OAAOrgD,aAClEwgD,SAAWxgD,OAASA,MAAQ6jC,MACnC,OAAOj+B,OAGTs5C,SAASx+B,OAAS,SAAS9gB,MACzB,OAAOwgD,YAAY,SAASl8C,MAC1B,GAAIA,MAAQA,KAAM,KAAOm8C,OAAOn8C,OAAQtE,KAAKsE,OAAOA,KAAK4zC,QAAQ5zC,KAAO,IACvE,SAASA,KAAM4/B,MAChB,GAAI5/B,MAAQA,KACV,GAAI4/B,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAOwc,QAAQp8C,MAAO,IAAKtE,KAAKsE,aAC3B,OAAS4/B,MAAQ,GACtB,KAAOwc,QAAQp8C,KAAM,IAAMtE,KAAKsE,YAMpC+S,QACFioC,SAASjoC,MAAQ,SAASjX,MAAOgC,KAG/B,OAFA0xC,YAAGoE,SAAS93C,OAAQ2zC,YAAGmE,SAAS91C,KAChCq+C,OAAO3M,aAAK2M,OAAO1M,aACZ1wC,KAAKgR,MAAMgD,MAAMy8B,YAAIC,eAG9BuL,SAASpoC,MAAQ,SAASgtB,MAExB,OADAA,KAAO7gC,KAAKgR,MAAM6vB,MACVr+B,SAASq+B,OAAWA,KAAO,EAC3BA,KAAO,EACTob,SAASx+B,OAAOtR,MACZ,SAASxU,GAAK,OAAOwU,MAAMxU,GAAKkpC,MAAS,GACzC,SAASlpC,GAAK,OAAOskD,SAASjoC,MAAM,EAAGrc,GAAKkpC,MAAS,IAH3Cob,SADoB,OAQrCA,SChET,IAAIuB,wBAAcvB,YAAS,aAExB,SAASh7C,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KAAO4/B,OACpB,SAAS9jC,MAAOgC,KACjB,OAAOA,IAAMhC,QAIfygD,wBAAY3pC,MAAQ,SAASvI,GAE3B,OADAA,EAAItL,KAAKgR,MAAM1F,GACV9I,SAAS8I,IAAQA,EAAI,EACpBA,EAAI,EACH2wC,YAAS,SAASh7C,MACvBA,KAAK4zC,QAAQ70C,KAAKgR,MAAM/P,KAAOqK,GAAKA,IACnC,SAASrK,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KAAO4/B,KAAOv1B,IAC3B,SAASvO,MAAOgC,KACjB,OAAQA,IAAMhC,OAASuO,IANJkyC,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAY76C,MCxBV,KAGjB+6C,aAAe,OCDtBC,cAAS1B,YAAS,SAASh7C,MAC7BA,KAAK4zC,QDJqB,ICIb70C,KAAKgR,MAAM/P,KDJE,OCKzB,SAASA,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KDNY,ICML4/B,OACpB,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,ODRY,KCSzB,SAASkE,MACV,OAAOA,KAAK28C,kBAGCD,yBCVXE,eDWiBF,cAAOh7C,MCXfs5C,YAAS,SAASh7C,MAC7BA,KAAK4zC,QAAQ70C,KAAKgR,MAAM/P,KAAOw8C,gBAAkBA,iBAChD,SAASx8C,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KAAO4/B,KAAO4c,iBAC3B,SAAS1gD,MAAOgC,KACjB,OAAQA,IAAMhC,OAAS0gD,gBACtB,SAASx8C,MACV,OAAOA,KAAK4C,gBAGCg6C,yBCVXC,WDWiBD,cAAOl7C,MCXjBs5C,YAAS,SAASh7C,MAC3B,IAAIq8C,OAASr8C,KAAK88C,oBAAsBN,eHFhB,KGGpBH,OAAS,IAAGA,QHHQ,MGIxBr8C,KAAK4zC,QHJmB,KGIX70C,KAAKgR,QAAQ/P,KAAOq8C,QHJT,MGIkDA,SACzE,SAASr8C,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KHNU,KGMH4/B,OACpB,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OHRU,MGSvB,SAASkE,MACV,OAAOA,KAAKuC,cAGCs6C,mBCZX35C,SDae25C,UAAKn7C,MCbds5C,YAAS,SAASh7C,MAC1BA,KAAK+8C,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS/8C,KAAM4/B,MAChB5/B,KAAKg9C,QAAQh9C,KAAKqD,UAAYu8B,OAC7B,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OAASgC,IAAIg/C,oBAAsBhhD,MAAMghD,qBAAuBN,gBJLvD,OIMtB,SAASx8C,MACV,OAAOA,KAAKqD,UAAY,KAGXH,gBACGA,QAAIxB,MCXtB,SAASu7C,QAAQ7mD,GACf,OAAO4kD,YAAS,SAASh7C,MACvBA,KAAKg9C,QAAQh9C,KAAKqD,WAAarD,KAAKmD,SAAW,EAAI/M,GAAK,GACxD4J,KAAK+8C,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS/8C,KAAM4/B,MAChB5/B,KAAKg9C,QAAQh9C,KAAKqD,UAAmB,EAAPu8B,OAC7B,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OAASgC,IAAIg/C,oBAAsBhhD,MAAMghD,qBAAuBN,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1B15C,aDoBiB25C,OAAOx7C,MACPy7C,OAAOz7C,MACN07C,QAAQ17C,MACN27C,UAAU37C,MACX47C,SAAS57C,MACX67C,OAAO77C,MACL87C,SAAS97C,MC1BpBs5C,YAAS,SAASh7C,MAC5BA,KAAKg9C,QAAQ,GACbh9C,KAAK+8C,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS/8C,KAAM4/B,MAChB5/B,KAAKy9C,SAASz9C,KAAKwD,WAAao8B,OAC/B,SAAS9jC,MAAOgC,KACjB,OAAOA,IAAI0F,WAAa1H,MAAM0H,WAAyD,IAA3C1F,IAAI+F,cAAgB/H,MAAM+H,gBACrE,SAAS7D,MACV,OAAOA,KAAKwD,cAGCD,sBCXXK,WDYgBL,YAAM7B,MCZfs5C,YAAS,SAASh7C,MAC3BA,KAAKy9C,SAAS,EAAG,GACjBz9C,KAAK+8C,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS/8C,KAAM4/B,MAChB5/B,KAAK09C,YAAY19C,KAAK6D,cAAgB+7B,OACrC,SAAS9jC,MAAOgC,KACjB,OAAOA,IAAI+F,cAAgB/H,MAAM+H,eAChC,SAAS7D,MACV,OAAOA,KAAK6D,iBAIdD,UAAKgP,MAAQ,SAASvI,GACpB,OAAQ9I,SAAS8I,EAAItL,KAAKgR,MAAM1F,KAASA,EAAI,EAAY2wC,YAAS,SAASh7C,MACzEA,KAAK09C,YAAY3+C,KAAKgR,MAAM/P,KAAK6D,cAAgBwG,GAAKA,GACtDrK,KAAKy9C,SAAS,EAAG,GACjBz9C,KAAK+8C,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS/8C,KAAM4/B,MAChB5/B,KAAK09C,YAAY19C,KAAK6D,cAAgB+7B,KAAOv1B,KALG,MASrCzG,uBCrBX+5C,WDsBe/5C,UAAKlC,MCtBRs5C,YAAS,SAASh7C,MAChCA,KAAK49C,cAAc,EAAG,IACrB,SAAS59C,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KAAO4/B,KAAO4c,iBAC3B,SAAS1gD,MAAOgC,KACjB,OAAQA,IAAMhC,OAAS0gD,gBACtB,SAASx8C,MACV,OAAOA,KAAK69C,mBCPVC,SDWoBH,UAAUj8C,MCXpBs5C,YAAS,SAASh7C,MAC9BA,KAAK+9C,cAAc,EAAG,EAAG,IACxB,SAAS/9C,KAAM4/B,MAChB5/B,KAAK4zC,SAAS5zC,KTJU,KSIH4/B,OACpB,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OTNU,MSOvB,SAASkE,MACV,OAAOA,KAAKg+C,iBCPVC,QDWkBH,QAAQp8C,MCXjBs5C,YAAS,SAASh7C,MAC7BA,KAAKk+C,YAAY,EAAG,EAAG,EAAG,IACzB,SAASl+C,KAAM4/B,MAChB5/B,KAAKm+C,WAAWn+C,KAAKo+C,aAAexe,OACnC,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OVLS,OUMtB,SAASkE,MACV,OAAOA,KAAKo+C,aAAe,KAGdH,kBACMA,OAAOv8C,MCX5B,SAAS28C,WAAWjoD,GAClB,OAAO4kD,YAAS,SAASh7C,MACvBA,KAAKm+C,WAAWn+C,KAAKo+C,cAAgBp+C,KAAKs+C,YAAc,EAAIloD,GAAK,GACjE4J,KAAKk+C,YAAY,EAAG,EAAG,EAAG,IACzB,SAASl+C,KAAM4/B,MAChB5/B,KAAKm+C,WAAWn+C,KAAKo+C,aAAsB,EAAPxe,OACnC,SAAS9jC,MAAOgC,KACjB,OAAQA,IAAMhC,OAAS2gD,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAU78C,MACV88C,UAAU98C,MACT+8C,WAAW/8C,MACTg9C,aAAah9C,MACdi9C,YAAYj9C,MACdk9C,UAAUl9C,MACRm9C,YAAYn9C,MC1BvBs5C,YAAS,SAASh7C,MAC/BA,KAAKm+C,WAAW,GAChBn+C,KAAKk+C,YAAY,EAAG,EAAG,EAAG,IACzB,SAASl+C,KAAM4/B,MAChB5/B,KAAK++C,YAAY/+C,KAAKg/C,cAAgBpf,OACrC,SAAS9jC,MAAOgC,KACjB,OAAOA,IAAIkhD,cAAgBljD,MAAMkjD,cAAkE,IAAjDlhD,IAAImhD,iBAAmBnjD,MAAMmjD,mBAC9E,SAASj/C,MACV,OAAOA,KAAKg/C,iBCRVE,SDYmBJ,SAASp9C,MCZlBs5C,YAAS,SAASh7C,MAC9BA,KAAK++C,YAAY,EAAG,GACpB/+C,KAAKk+C,YAAY,EAAG,EAAG,EAAG,IACzB,SAASl+C,KAAM4/B,MAChB5/B,KAAKm/C,eAAen/C,KAAKi/C,iBAAmBrf,OAC3C,SAAS9jC,MAAOgC,KACjB,OAAOA,IAAImhD,iBAAmBnjD,MAAMmjD,kBACnC,SAASj/C,MACV,OAAOA,KAAKi/C,oBAIdC,QAAQtsC,MAAQ,SAASvI,GACvB,OAAQ9I,SAAS8I,EAAItL,KAAKgR,MAAM1F,KAASA,EAAI,EAAY2wC,YAAS,SAASh7C,MACzEA,KAAKm/C,eAAepgD,KAAKgR,MAAM/P,KAAKi/C,iBAAmB50C,GAAKA,GAC5DrK,KAAK++C,YAAY,EAAG,GACpB/+C,KAAKk+C,YAAY,EAAG,EAAG,EAAG,IACzB,SAASl+C,KAAM4/B,MAChB5/B,KAAKm/C,eAAen/C,KAAKi/C,iBAAmBrf,KAAOv1B,KALH,MASrC60C,wBACOA,QAAQx9C,MCZ9B,SAAS09C,UAAU1oD,GACjB,GAAI,GAAKA,EAAEgN,GAAKhN,EAAEgN,EAAI,IAAK,CACzB,IAAI1D,KAAO,IAAIC,MAAM,EAAGvJ,EAAEF,EAAGE,EAAEA,EAAGA,EAAEwL,EAAGxL,EAAEiM,EAAGjM,EAAEmM,EAAGnM,EAAE2oD,GAEnD,OADAr/C,KAAK09C,YAAYhnD,EAAEgN,GACZ1D,KAET,OAAO,IAAIC,KAAKvJ,EAAEgN,EAAGhN,EAAEF,EAAGE,EAAEA,EAAGA,EAAEwL,EAAGxL,EAAEiM,EAAGjM,EAAEmM,EAAGnM,EAAE2oD,GAGlD,SAASC,QAAQ5oD,GACf,GAAI,GAAKA,EAAEgN,GAAKhN,EAAEgN,EAAI,IAAK,CACzB,IAAI1D,KAAO,IAAIC,KAAKA,KAAKs/C,KAAK,EAAG7oD,EAAEF,EAAGE,EAAEA,EAAGA,EAAEwL,EAAGxL,EAAEiM,EAAGjM,EAAEmM,EAAGnM,EAAE2oD,IAE5D,OADAr/C,KAAKm/C,eAAezoD,EAAEgN,GACf1D,KAET,OAAO,IAAIC,KAAKA,KAAKs/C,IAAI7oD,EAAEgN,EAAGhN,EAAEF,EAAGE,EAAEA,EAAGA,EAAEwL,EAAGxL,EAAEiM,EAAGjM,EAAEmM,EAAGnM,EAAE2oD,IAG3D,SAASG,QAAQ97C,GACf,OAAQA,EAAGA,EAAGlN,EAAG,EAAGE,EAAG,EAAGwL,EAAG,EAAGS,EAAG,EAAGE,EAAG,EAAGw8C,EAAG,GA2UjD,ICzWI/G,yBACOmH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAI5iC,EAAK,IAAK6iC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAAS//C,WAAI7I,MAAO2gD,KAAM5iB,OACxB,IAAI6iB,KAAO5gD,MAAQ,EAAI,IAAM,GACzBs8C,QAAUsE,MAAQ5gD,MAAQA,OAAS,GACnCoG,OAASk2C,OAAOl2C,OACpB,OAAOw6C,MAAQx6C,OAAS23B,MAAQ,IAAIhtB,MAAMgtB,MAAQ33B,OAAS,GAAGwF,KAAK+0C,MAAQrE,OAASA,QAGtF,SAASuM,QAAQ7nD,GACf,OAAOA,EAAEqI,QAAQu/C,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAI7/C,OAAO,OAAS6/C,MAAM34C,IAAIy4C,SAASj9C,KAAK,KAAO,IAAK,KAGjE,SAASo9C,aAAaD,OAEpB,IADA,IAAI34C,OAAUrR,GAAK,EAAGyB,EAAIuoD,MAAM3iD,SACvBrH,EAAIyB,GAAG4P,IAAI24C,MAAMhqD,GAAGwL,eAAiBxL,EAC9C,OAAOqR,IAGT,SAAS64C,yBAAyB5pD,EAAGi9C,OAAQv9C,GAC3C,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6pD,GAAK1oD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAAS+iD,yBAAyB9pD,EAAGi9C,OAAQv9C,GAC3C,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEud,GAAKpc,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASgjD,sBAAsB/pD,EAAGi9C,OAAQv9C,GACxC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgqD,GAAK7oD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASkjD,mBAAmBjqD,EAAGi9C,OAAQv9C,GACrC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEkqD,GAAK/oD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASojD,sBAAsBnqD,EAAGi9C,OAAQv9C,GACxC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoqD,GAAKjpD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASsjD,cAAcrqD,EAAGi9C,OAAQv9C,GAChC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgN,GAAK7L,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASujD,UAAUtqD,EAAGi9C,OAAQv9C,GAC5B,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgN,GAAK7L,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG5E,SAASwjD,UAAUvqD,EAAGi9C,OAAQv9C,GAC5B,IAAIyB,EAAI,+BAA+Bk2C,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAEwqD,EAAIrpD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG7E,SAAS0jD,iBAAiBzqD,EAAGi9C,OAAQv9C,GACnC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAG4F,SAAW,EAGlD,SAAS2jD,gBAAgB1qD,EAAGi9C,OAAQv9C,GAClC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAAS4jD,eAAe3qD,EAAGi9C,OAAQv9C,GACjC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAGxD,SAAS6jD,YAAY5qD,EAAGi9C,OAAQv9C,GAC9B,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEwL,GAAKrK,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAAS8jD,aAAa7qD,EAAGi9C,OAAQv9C,GAC/B,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEiM,GAAK9K,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAAS+jD,aAAa9qD,EAAGi9C,OAAQv9C,GAC/B,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmM,GAAKhL,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASgkD,kBAAkB/qD,EAAGi9C,OAAQv9C,GACpC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2oD,GAAKxnD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASikD,kBAAkBhrD,EAAGi9C,OAAQv9C,GACpC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2oD,EAAItgD,KAAKgR,MAAMlY,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAG4F,SAAW,EAGjE,SAASkkD,oBAAoBjrD,EAAGi9C,OAAQv9C,GACtC,IAAIyB,EAAImoD,UAAUjS,KAAK4F,OAAOj7B,MAAMtiB,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAG4F,QAAU,EAGhC,SAASmkD,mBAAmBlrD,EAAGi9C,OAAQv9C,GACrC,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,IACnC,OAAOyB,GAAKnB,EAAEmrD,GAAKhqD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG4F,SAAW,EAG/C,SAASqkD,0BAA0BprD,EAAGi9C,OAAQv9C,GAC5C,IAAIyB,EAAIkoD,SAAShS,KAAK4F,OAAOj7B,MAAMtiB,IACnC,OAAOyB,GAAKnB,EAAEmrD,EAAc,KAARhqD,EAAE,GAAYzB,EAAIyB,EAAE,GAAG4F,SAAW,EAGxD,SAASskD,iBAAiBrrD,EAAG0B,GAC3B,OAAO8H,WAAIxJ,EAAE2M,UAAWjL,EAAG,GAG7B,SAAS4pD,aAAatrD,EAAG0B,GACvB,OAAO8H,WAAIxJ,EAAE6L,WAAYnK,EAAG,GAG9B,SAAS6pD,aAAavrD,EAAG0B,GACvB,OAAO8H,WAAIxJ,EAAE6L,WAAa,IAAM,GAAInK,EAAG,GAGzC,SAAS8pD,gBAAgBxrD,EAAG0B,GAC1B,OAAO8H,WAAI,EAAIiiD,QAAQpvC,MAAMqvC,SAAS1rD,GAAIA,GAAI0B,EAAG,GAGnD,SAASiqD,mBAAmB3rD,EAAG0B,GAC7B,OAAO8H,WAAIxJ,EAAEsM,kBAAmB5K,EAAG,GAGrC,SAASkqD,mBAAmB5rD,EAAG0B,GAC7B,OAAOiqD,mBAAmB3rD,EAAG0B,GAAK,MAGpC,SAASmqD,kBAAkB7rD,EAAG0B,GAC5B,OAAO8H,WAAIxJ,EAAE8M,WAAa,EAAGpL,EAAG,GAGlC,SAASoqD,cAAc9rD,EAAG0B,GACxB,OAAO8H,WAAIxJ,EAAEkM,aAAcxK,EAAG,GAGhC,SAASqqD,cAAc/rD,EAAG0B,GACxB,OAAO8H,WAAIxJ,EAAEoM,aAAc1K,EAAG,GAGhC,SAASsqD,0BAA0BhsD,GACjC,IAAIwM,IAAMxM,EAAEyM,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAASy/C,uBAAuBjsD,EAAG0B,GACjC,OAAO8H,WAAI0iD,OAAW7vC,MAAMqvC,SAAS1rD,GAAIA,GAAI0B,EAAG,GAGlD,SAASyqD,oBAAoBnsD,EAAG0B,GAC9B,IAAI8K,IAAMxM,EAAEyM,SAEZ,OADAzM,EAAKwM,KAAO,GAAa,IAARA,IAAa4/C,SAAapsD,GAAKosD,SAAalnB,KAAKllC,GAC3DwJ,WAAI4iD,SAAa/vC,MAAMqvC,SAAS1rD,GAAIA,IAA+B,IAAzB0rD,SAAS1rD,GAAGyM,UAAiB/K,EAAG,GAGnF,SAAS2qD,0BAA0BrsD,GACjC,OAAOA,EAAEyM,SAGX,SAAS6/C,uBAAuBtsD,EAAG0B,GACjC,OAAO8H,WAAI+iD,OAAWlwC,MAAMqvC,SAAS1rD,GAAIA,GAAI0B,EAAG,GAGlD,SAAS8qD,kBAAWxsD,EAAG0B,GACrB,OAAO8H,WAAIxJ,EAAEmN,cAAgB,IAAKzL,EAAG,GAGvC,SAAS+qD,eAAezsD,EAAG0B,GACzB,OAAO8H,WAAIxJ,EAAEmN,cAAgB,IAAOzL,EAAG,GAGzC,SAASgrD,WAAW1sD,GAClB,IAAIu5C,EAAIv5C,EAAEomD,oBACV,OAAQ7M,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1B/vC,WAAI+vC,EAAI,GAAK,EAAG,IAAK,GACrB/vC,WAAI+vC,EAAI,GAAI,IAAK,GAGzB,SAASoT,oBAAoB3sD,EAAG0B,GAC9B,OAAO8H,WAAIxJ,EAAE0nD,aAAchmD,EAAG,GAGhC,SAASkrD,gBAAgB5sD,EAAG0B,GAC1B,OAAO8H,WAAIxJ,EAAEsnD,cAAe5lD,EAAG,GAGjC,SAASmrD,gBAAgB7sD,EAAG0B,GAC1B,OAAO8H,WAAIxJ,EAAEsnD,cAAgB,IAAM,GAAI5lD,EAAG,GAG5C,SAASorD,mBAAmB9sD,EAAG0B,GAC7B,OAAO8H,WAAI,EAAI+9C,WAAOlrC,MAAMmsC,YAAQxoD,GAAIA,GAAI0B,EAAG,GAGjD,SAASqrD,sBAAsB/sD,EAAG0B,GAChC,OAAO8H,WAAIxJ,EAAEgtD,qBAAsBtrD,EAAG,GAGxC,SAASurD,sBAAsBjtD,EAAG0B,GAChC,OAAOqrD,sBAAsB/sD,EAAG0B,GAAK,MAGvC,SAASwrD,qBAAqBltD,EAAG0B,GAC/B,OAAO8H,WAAIxJ,EAAEsoD,cAAgB,EAAG5mD,EAAG,GAGrC,SAASyrD,iBAAiBntD,EAAG0B,GAC3B,OAAO8H,WAAIxJ,EAAEmnD,gBAAiBzlD,EAAG,GAGnC,SAAS0rD,iBAAiBptD,EAAG0B,GAC3B,OAAO8H,WAAIxJ,EAAEimD,gBAAiBvkD,EAAG,GAGnC,SAAS2rD,6BAA6BrtD,GACpC,IAAIstD,IAAMttD,EAAE4nD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0BvtD,EAAG0B,GACpC,OAAO8H,WAAIq+C,UAAUxrC,MAAMmsC,YAAQxoD,GAAIA,GAAI0B,EAAG,GAGhD,SAAS8rD,uBAAuBxtD,EAAG0B,GACjC,IAAI8K,IAAMxM,EAAE4nD,YAEZ,OADA5nD,EAAKwM,KAAO,GAAa,IAARA,IAAay7C,YAAYjoD,GAAKioD,YAAY/iB,KAAKllC,GACzDwJ,WAAIy+C,YAAY5rC,MAAMmsC,YAAQxoD,GAAIA,IAAiC,IAA3BwoD,YAAQxoD,GAAG4nD,aAAoBlmD,EAAG,GAGnF,SAAS+rD,6BAA6BztD,GACpC,OAAOA,EAAE4nD,YAGX,SAAS8F,0BAA0B1tD,EAAG0B,GACpC,OAAO8H,WAAIs+C,UAAUzrC,MAAMmsC,YAAQxoD,GAAIA,GAAI0B,EAAG,GAGhD,SAASisD,cAAc3tD,EAAG0B,GACxB,OAAO8H,WAAIxJ,EAAEuoD,iBAAmB,IAAK7mD,EAAG,GAG1C,SAASksD,kBAAkB5tD,EAAG0B,GAC5B,OAAO8H,WAAIxJ,EAAEuoD,iBAAmB,IAAO7mD,EAAG,GAG5C,SAASmsD,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoB/tD,GAC3B,OAAQA,EAGV,SAASguD,2BAA2BhuD,GAClC,OAAOqI,KAAKgR,OAAOrZ,EAAI,MC3mBV,SAAS6jD,4BAAc3W,YAMpC,OALA0U,yBDea,SAASkC,aAAalC,QACnC,IAAIqM,gBAAkBrM,OAAOsM,SACzBC,YAAcvM,OAAOt4C,KACrB8kD,YAAcxM,OAAOyM,KACrBC,eAAiB1M,OAAO2M,QACxBC,gBAAkB5M,OAAO6M,KACzBC,qBAAuB9M,OAAO+M,UAC9BC,cAAgBhN,OAAOiN,OACvBC,mBAAqBlN,OAAOmN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACF5tD,EAkPF,SAAS6tD,mBAAmB3vD,GAC1B,OAAO0uD,qBAAqB1uD,EAAEyM,WAlP9BC,EAqPF,SAASkjD,cAAc5vD,GACrB,OAAOwuD,gBAAgBxuD,EAAEyM,WArPzBG,EAwPF,SAASijD,iBAAiB7vD,GACxB,OAAO8uD,mBAAmB9uD,EAAE8M,aAxP5BC,EA2PF,SAAS+iD,YAAY9vD,GACnB,OAAO4uD,cAAc5uD,EAAE8M,aA3PvB/M,EAAK,KACLC,EAAKqrD,iBACLzpD,EAAKypD,iBACL5pC,EAAKmqC,mBACLpgD,EAAK8/C,aACL1pC,EAAK2pC,aACLxpC,EAAKypC,gBACL7C,EAAKgD,mBACL7rD,EAAK+rD,kBACL5/C,EAAK6/C,cACLpqD,EAoPF,SAASquD,aAAa/vD,GACpB,OAAOsuD,iBAAiBtuD,EAAE6L,YAAc,MApPxCs/C,EAAK4C,oBACLpsD,EAAKqsD,2BACL7hD,EAAK4/C,cACLxuC,EAAKyuC,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLzwC,EAAK,KACL0mC,EAAK,KACLv1C,EAAKw/C,kBACLp/C,EAAKq/C,eACLjC,EAAKkC,WACLtK,IAAK0L,sBAGHkC,YACFluD,EAsOF,SAASmuD,sBAAsBjwD,GAC7B,OAAO0uD,qBAAqB1uD,EAAE4nD,cAtO9Bl7C,EAyOF,SAASwjD,iBAAiBlwD,GACxB,OAAOwuD,gBAAgBxuD,EAAE4nD,cAzOzBh7C,EA4OF,SAASujD,oBAAoBnwD,GAC3B,OAAO8uD,mBAAmB9uD,EAAEsoD,gBA5O5Bv7C,EA+OF,SAASqjD,eAAepwD,GACtB,OAAO4uD,cAAc5uD,EAAEsoD,gBA/OvBvoD,EAAK,KACLC,EAAK2sD,oBACL/qD,EAAK+qD,oBACLlrC,EAAKwrC,sBACLzhD,EAAKohD,gBACLhrC,EAAKirC,gBACL9qC,EAAK+qC,mBACLnE,EAAKoE,sBACLjtD,EAAKotD,qBACLjhD,EAAKkhD,iBACLzrD,EAwOF,SAAS2uD,gBAAgBrwD,GACvB,OAAOsuD,iBAAiBtuD,EAAEsnD,eAAiB,MAxO3C6D,EAAK4C,oBACLpsD,EAAKqsD,2BACL7hD,EAAKihD,iBACL7vC,EAAK8vC,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACL7xC,EAAK,KACL0mC,EAAK,KACLv1C,EAAK2gD,cACLvgD,EAAKwgD,kBACLpD,EAAKqD,cACLzL,IAAK0L,sBAGHwC,QACFxuD,EAkJF,SAASyuD,kBAAkBvwD,EAAGi9C,OAAQv9C,GACpC,IAAIyB,EAAIiuD,eAAe/X,KAAK4F,OAAOj7B,MAAMtiB,IACzC,OAAOyB,GAAKnB,EAAE6pD,EAAIwF,mBAAmBluD,EAAE,GAAG+J,eAAgBxL,EAAIyB,EAAE,GAAG4F,SAAW,GAnJ9E2F,EAsJF,SAAS8jD,aAAaxwD,EAAGi9C,OAAQv9C,GAC/B,IAAIyB,EAAI+tD,UAAU7X,KAAK4F,OAAOj7B,MAAMtiB,IACpC,OAAOyB,GAAKnB,EAAE6pD,EAAIsF,cAAchuD,EAAE,GAAG+J,eAAgBxL,EAAIyB,EAAE,GAAG4F,SAAW,GAvJzE6F,EA0JF,SAAS6jD,gBAAgBzwD,EAAGi9C,OAAQv9C,GAClC,IAAIyB,EAAIquD,aAAanY,KAAK4F,OAAOj7B,MAAMtiB,IACvC,OAAOyB,GAAKnB,EAAEF,EAAI2vD,iBAAiBtuD,EAAE,GAAG+J,eAAgBxL,EAAIyB,EAAE,GAAG4F,SAAW,GA3J5EgG,EA8JF,SAAS2jD,WAAW1wD,EAAGi9C,OAAQv9C,GAC7B,IAAIyB,EAAImuD,QAAQjY,KAAK4F,OAAOj7B,MAAMtiB,IAClC,OAAOyB,GAAKnB,EAAEF,EAAIyvD,YAAYpuD,EAAE,GAAG+J,eAAgBxL,EAAIyB,EAAE,GAAG4F,SAAW,GA/JvEhH,EAkKF,SAAS4wD,oBAAoB3wD,EAAGi9C,OAAQv9C,GACtC,OAAOkxD,eAAe5wD,EAAGiuD,gBAAiBhR,OAAQv9C,IAlKlDM,EAAK0qD,gBACL9oD,EAAK8oD,gBACLjpC,EAAKupC,kBACLx/C,EAAKo/C,YACLhpC,EAAKgpC,YACL7oC,EAAK4oC,eACLhC,EAAKoC,kBACLjrD,EAAK2qD,iBACLx+C,EAAK4+C,aACLnpD,EA+HF,SAASmvD,YAAY7wD,EAAGi9C,OAAQv9C,GAC9B,IAAIyB,EAAI6tD,SAAS3X,KAAK4F,OAAOj7B,MAAMtiB,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAIutD,aAAa9tD,EAAE,GAAG+J,eAAgBxL,EAAIyB,EAAE,GAAG4F,SAAW,GAhIxEokD,EAAKD,mBACLvpD,EAAKypD,0BACLj/C,EAAK2+C,aACLvtC,EAAKusC,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACLtuC,EAmJF,SAASi1C,gBAAgB9wD,EAAGi9C,OAAQv9C,GAClC,OAAOkxD,eAAe5wD,EAAGmuD,YAAalR,OAAQv9C,IAnJ9C6iD,EAsJF,SAASwO,gBAAgB/wD,EAAGi9C,OAAQv9C,GAClC,OAAOkxD,eAAe5wD,EAAGouD,YAAanR,OAAQv9C,IAtJ9CsN,EAAKs9C,UACLl9C,EAAKi9C,cACLG,EAAKD,UACLnI,IAAK6I,qBAWP,SAAS5H,UAAUjC,UAAWsO,SAC5B,OAAO,SAASpmD,MACd,IAIIvJ,EACAyJ,IACAE,OANAuzC,UACAv9C,GAAK,EACLqiB,EAAI,EACJ5gB,EAAIigD,UAAUr6C,OAOlB,IAFMuC,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErC5J,EAAIyB,GACqB,KAA5BigD,UAAU7/B,WAAW7hB,KACvBu9C,OAAOh0C,KAAKm4C,UAAUp/B,MAAMD,EAAGriB,IACgB,OAA1C8J,IAAM0/C,KAAKnpD,EAAIqhD,UAAU5e,SAAS9iC,KAAcK,EAAIqhD,UAAU5e,SAAS9iC,GACvE8J,IAAY,MAANzJ,EAAY,IAAM,KACzB2J,OAASgmD,QAAQ3vD,MAAIA,EAAI2J,OAAOJ,KAAME,MAC1CyzC,OAAOh0C,KAAKlJ,GACZgiB,EAAIriB,EAAI,GAKZ,OADAu9C,OAAOh0C,KAAKm4C,UAAUp/B,MAAMD,EAAGriB,IACxBu9C,OAAO1wC,KAAK,KAIvB,SAASykD,SAAS5P,UAAW6P,SAC3B,OAAO,SAAShU,QACd,IAEIiU,KAAM1kD,IAFNxM,EAAI8oD,QAAQ,MAGhB,GAFQ8H,eAAe5wD,EAAGohD,UAAWnE,QAAU,GAAI,IAE1CA,OAAOl2C,OAAQ,OAAO,KAG/B,GAAI,MAAO/G,EAAG,OAAO,IAAIuJ,KAAKvJ,EAAEmrD,GAMhC,GAHI,MAAOnrD,IAAGA,EAAEwL,EAAIxL,EAAEwL,EAAI,GAAW,GAANxL,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAEkqD,EAAI,GAAKlqD,EAAEkqD,EAAI,GAAI,OAAO,KAC1B,MAAOlqD,IAAIA,EAAE6pD,EAAI,GACnB,MAAO7pD,GAETkxD,MAD8B1kD,KAA9B0kD,KAAOtI,QAAQE,QAAQ9oD,EAAEgN,KAAgB46C,aAC5B,GAAa,IAARp7C,IAAYs7C,UAAU5iB,KAAKgsB,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAXlxD,EAAEkqD,EAAI,IAClClqD,EAAEgN,EAAIkkD,KAAK3I,iBACXvoD,EAAEF,EAAIoxD,KAAK5I,cACXtoD,EAAEA,EAAIkxD,KAAKxJ,cAAgB1nD,EAAE6pD,EAAI,GAAK,IAGtCqH,MAD8B1kD,KAA9B0kD,KAAOD,QAAQnI,QAAQ9oD,EAAEgN,KAAgBP,UAC5B,GAAa,IAARD,IAAY+/C,OAAWrnB,KAAKgsB,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAXlxD,EAAEkqD,EAAI,IACnClqD,EAAEgN,EAAIkkD,KAAK/jD,cACXnN,EAAEF,EAAIoxD,KAAKpkD,WACX9M,EAAEA,EAAIkxD,KAAKvkD,WAAa3M,EAAE6pD,EAAI,GAAK,QAE5B,MAAO7pD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAE6pD,EAAI,MAAO7pD,EAAIA,EAAEud,EAAI,EAAI,MAAOvd,EAAI,EAAI,GAC3DwM,IAAM,MAAOxM,EAAI4oD,QAAQE,QAAQ9oD,EAAEgN,IAAI46C,YAAcqJ,QAAQnI,QAAQ9oD,EAAEgN,IAAIP,SAC3EzM,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAE6pD,EAAI,GAAK,EAAU,EAAN7pD,EAAEoqD,GAAS59C,IAAM,GAAK,EAAIxM,EAAE6pD,EAAU,EAAN7pD,EAAEgqD,GAASx9C,IAAM,GAAK,GAKzF,MAAI,MAAOxM,GACTA,EAAEwL,GAAKxL,EAAEwqD,EAAI,IAAM,EACnBxqD,EAAEiM,GAAKjM,EAAEwqD,EAAI,IACN5B,QAAQ5oD,IAIVixD,QAAQjxD,IAInB,SAAS4wD,eAAe5wD,EAAGohD,UAAWnE,OAAQl7B,GAO5C,IANA,IAGIhiB,EACA0I,MAJA/I,EAAI,EACJyB,EAAIigD,UAAUr6C,OACdjH,EAAIm9C,OAAOl2C,OAIRrH,EAAIyB,GAAG,CACZ,GAAI4gB,GAAKjiB,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAIqhD,UAAU7/B,WAAW7hB,OAIvB,GAFAK,EAAIqhD,UAAU5e,OAAO9iC,OACrB+I,MAAQ6nD,OAAOvwD,KAAKmpD,KAAO9H,UAAU5e,OAAO9iC,KAAOK,MACnCgiB,EAAItZ,MAAMzI,EAAGi9C,OAAQl7B,IAAM,EAAI,OAAQ,OAClD,GAAIhiB,GAAKk9C,OAAO17B,WAAWQ,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LA2tC,QAAQ7zC,EAAIwnC,UAAU8K,YAAauB,SACnCA,QAAQnN,EAAIc,UAAU+K,YAAasB,SACnCA,QAAQ3vD,EAAIsjD,UAAU4K,gBAAiByB,SACvCM,WAAWn0C,EAAIwnC,UAAU8K,YAAa6B,YACtCA,WAAWzN,EAAIc,UAAU+K,YAAa4B,YACtCA,WAAWjwD,EAAIsjD,UAAU4K,gBAAiB+B,aAsLxCtmD,OAAQ,SAAAA,OAAS03C,WACf,IAAI3/B,EAAI4hC,UAAUjC,WAAa,GAAIsO,SAEnC,OADAjuC,EAAE3V,SAAW,WAAa,OAAOs1C,WAC1B3/B,GAEThZ,MAAO,SAAAA,MAAS24C,WACd,IAAI1/C,EAAIsvD,SAAS5P,WAAa,GAAIsH,WAElC,OADAhnD,EAAEoK,SAAW,WAAa,OAAOs1C,WAC1B1/C,GAETsnD,UAAW,SAAAA,UAAS5H,WAClB,IAAI3/B,EAAI4hC,UAAUjC,WAAa,GAAI4O,YAEnC,OADAvuC,EAAE3V,SAAW,WAAa,OAAOs1C,WAC1B3/B,GAETwnC,SAAU,SAAAA,SAAS7H,WACjB,IAAI1/C,EAAIsvD,SAAS5P,UAAWwH,SAE5B,OADAlnD,EAAEoK,SAAW,WAAa,OAAOs1C,WAC1B1/C,IClVFoiD,CAAa5W,YACtB6b,WAAanH,yBAAOl4C,OACRk4C,yBAAOn5C,MACnBugD,UAAYpH,yBAAOoH,UACnBC,SAAWrH,yBAAOqH,SACXrH,yBAjBTiC,EACEqK,SAAU,SACV5kD,KAAM,aACN+kD,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7ExlD,KAAK/H,UAAU2vD,aAEzBnI,UARoB,0BCMV,IAAIz/C,KAAK,6BAEnB0/C,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAAShoD,UAAK1I,GACZ,OAAO,IAAI2I,KAAK3I,GAGlB,SAASkoC,YAAOloC,GACd,OAAOA,aAAa2I,MAAQ3I,GAAK,IAAI2I,MAAM3I,GAGtC,SAAS6wD,SAASvkD,KAAML,MAAOqkD,KAAM1kD,IAAK25C,KAAMD,OAAQF,OAAQH,YAAan8C,QAClF,IAAIX,MAAQy3C,WAAWP,oBAAeC,YAClCvT,OAAS5jC,MAAM4jC,OACfxkC,OAASY,MAAMZ,OAEfupD,kBAAoBhoD,OAAO,OAC3BioD,aAAejoD,OAAO,OACtBkoD,aAAeloD,OAAO,SACtBmoD,WAAanoD,OAAO,SACpBooD,UAAYpoD,OAAO,SACnBqoD,WAAaroD,OAAO,SACpBomD,YAAcpmD,OAAO,MACrB8iD,WAAa9iD,OAAO,MAEpBsoD,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACd7kD,IAAM,EAAQ8kD,mBACd9kD,IAAM,EAAI,EAAI8kD,mBACfJ,KAAO,EAAQnL,oBAChBl5C,MAAQ,EAAQ0kD,gBAChB1kD,MAAQ,EAAI,EAAI0kD,gBACfrkD,KAAO,EAAQskD,eAGpB,SAASpN,WAAW96C,MAClB,OAAQ08C,OAAO18C,MAAQA,KAAOooD,kBACxBxL,OAAO58C,MAAQA,KAAOqoD,aACtBxL,KAAK78C,MAAQA,KAAOsoD,aACpBplD,IAAIlD,MAAQA,KAAOuoD,WACnBhlD,MAAMvD,MAAQA,KAAQ4nD,KAAK5nD,MAAQA,KAAOwoD,UAAYC,WACtD7kD,KAAK5D,MAAQA,KAAOwmD,YACpBtD,YAAYljD,MAGpB,SAAS2oD,aAAa3N,SAAUl/C,MAAO6jC,KAAMC,MAM3C,GALgB,MAAZob,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIhE,OAASj4C,KAAKuL,IAAIq1B,KAAO7jC,OAASk/C,SAClC5kD,EAAI6oC,SAAS,SAAS7oC,GAAK,OAAOA,EAAE,KAAOipC,MAAMqpB,cAAe1R,QAChE5gD,IAAMsyD,cAAcjrD,QACtBmiC,KAAOW,SAASzkC,MAAQosD,aAAcvoB,KAAOuoB,aAAclN,UAC3DA,SAAWp3C,MACFxN,GAETwpC,MADAxpC,EAAIsyD,cAAc1R,OAAS0R,cAActyD,EAAI,GAAG,GAAKsyD,cAActyD,GAAG,GAAK4gD,OAAS5gD,EAAI,EAAIA,IACnF,GACT4kD,SAAW5kD,EAAE,KAEbwpC,KAAO7gC,KAAKG,IAAIqhC,SAASzkC,MAAO6jC,KAAMqb,UAAW,GACjDA,SAAWuB,aAIf,OAAe,MAAR3c,KAAeob,SAAWA,SAASpoC,MAAMgtB,MAsClD,OAnCAngC,MAAM4jC,OAAS,SAAS3/B,GACtB,OAAO,IAAIzD,KAAKojC,OAAO3/B,KAGzBjE,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,OAASoB,OAAO4I,cAAIlR,KAAK0mB,EAAGuiB,cAAW3gC,SAAS4I,IAAIzH,YAGvEP,MAAMygC,MAAQ,SAAS8a,SAAUpb,MAC/B,IAIItoC,EAJAZ,EAAImI,SACJ2wC,GAAK94C,EAAE,GACP+4C,GAAK/4C,EAAEA,EAAE+G,OAAS,GAClBvG,EAAIu4C,GAAKD,GAKb,OAHIt4C,IAAGI,EAAIk4C,GAAIA,GAAKC,GAAIA,GAAKn4C,GAE7BA,GADAA,EAAIqxD,aAAa3N,SAAUxL,GAAIC,GAAI7P,OAC3BtoC,EAAEoK,MAAM8tC,GAAIC,GAAK,MAClBv4C,EAAII,EAAE2oC,UAAY3oC,GAG3BmI,MAAMq7C,WAAa,SAAS/nC,MAAO+kC,WACjC,OAAoB,MAAbA,UAAoBgD,WAAa16C,OAAO03C,YAGjDr4C,MAAMs7C,KAAO,SAASC,SAAUpb,MAC9B,IAAIlpC,EAAImI,SACR,OAAQm8C,SAAW2N,aAAa3N,SAAUtkD,EAAE,GAAIA,EAAEA,EAAE+G,OAAS,GAAImiC,OAC3D/gC,OAAOk8C,KAAKrkD,EAAGskD,WACfv7C,OAGRA,MAAM6iC,KAAO,WACX,OAAOA,KAAK7iC,MAAO0oD,SAASvkD,KAAML,MAAOqkD,KAAM1kD,IAAK25C,KAAMD,OAAQF,OAAQH,YAAan8C,UAGlFX,MAGM,IAAAmpD,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAY5gD,QAAQ,IAAIoB,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1JkpD,WAAA,SAAS9wD,GACtB,OAAOA,EAAEwP,MAAM,SAASJ,IAAI,SAAS8K,GACnC,MAAO,IAAMA,KCAFggC,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECP6W,cAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArEoY,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1EoY,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAASqY,KAAK3nD,OACZ,IAAI7J,EAAI6J,MAAMjE,OACd,OAAO,SAASnG,GACd,OAAOoK,MAAM3C,KAAKG,IAAI,EAAGH,KAAKC,IAAInH,EAAI,EAAGkH,KAAKgR,MAAMzY,EAAIO,OAI7CwxD,KAAK9W,WAAO,qgDAER8W,KAAK9W,WAAO,qgDAEV8W,KAAK9W,WAAO,qgDAEb8W,KAAK9W,WAAO,qgDCbjB,SAAS+W,WAAWC,cACjC,IAAItO,GAAK,EACLC,GAAK,EACLjE,OAAQ,EAEZ,SAASx3C,MAAM8S,GACb,IAAIjb,GAAKib,EAAI0oC,KAAOC,GAAKD,IACzB,OAAOsO,aAAatS,MAAQl4C,KAAKG,IAAI,EAAGH,KAAKC,IAAI,EAAG1H,IAAMA,GAmB5D,OAhBAmI,MAAMZ,OAAS,SAASoe,GACtB,OAAOhY,UAAUxH,QAAUw9C,IAAMh+B,EAAE,GAAIi+B,IAAMj+B,EAAE,GAAIxd,QAAUw7C,GAAIC,KAGnEz7C,MAAMw3C,MAAQ,SAASh6B,GACrB,OAAOhY,UAAUxH,QAAUw5C,QAAUh6B,EAAGxd,OAASw3C,OAGnDx3C,MAAM8pD,aAAe,SAAStsC,GAC5B,OAAOhY,UAAUxH,QAAU8rD,aAAetsC,EAAGxd,OAAS8pD,cAGxD9pD,MAAM6iC,KAAO,WACX,OAAOgnB,WAAWC,cAAc1qD,QAAQo8C,GAAIC,KAAKjE,MAAMA,QAGlD4D,UAAUp7C,OC5BJ,IAAA+pD,8BAAA,SAAS1R,WAEtB,IADA,IAAIjgD,EAAIigD,UAAUr6C,OAAS,EAAI,EAAG80C,OAAS,IAAInqC,MAAMvQ,GAAIzB,EAAI,EACtDA,EAAIyB,GAAG06C,OAAOn8C,GAAK,IAAM0hD,UAAUp/B,MAAU,EAAJtiB,EAAa,IAAJA,GACzD,OAAOm8C,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPkX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAOjsD,OAAS,KCAzCisD,YAAS,IAAIthD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,+BAES8W,cAAKK,aCZTA,YAAS,IAAIthD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,+BAES8W,cAAKK,aCZTA,YAAS,IAAIthD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,+BAES8W,cAAKK,aCALL,cAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCES8W,cAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCES8W,cAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCES8W,gBAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCES8W,gBAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCES8W,kBAZK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3C,IAAI8qC,gCCAS8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,gBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,gBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,gBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,gBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCRKmX,aAAS,IAAIthD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,+BAES8W,eAAKK,cCALL,gBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,eAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,iBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,cAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCES8W,iBAVK,IAAIjhD,MAAM,GAAGgC,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3C,IAAI8qC,gCCRS6W,yCAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICA5E4Y,aAAOR,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEjF6Y,aAAOT,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEvFv6C,UAAIu6C,sBAEO8Y,yBAAA,SAASxyD,IAClBA,EAAI,GAAKA,EAAI,KAAGA,GAAKyH,KAAKgR,MAAMzY,IACpC,IAAIyyD,GAAKhrD,KAAKuL,IAAIhT,EAAI,IAItB,OAHAb,UAAE+3C,EAAI,IAAMl3C,EAAI,IAChBb,UAAE4B,EAAI,IAAM,IAAM0xD,GAClBtzD,UAAEJ,EAAI,GAAM,GAAM0zD,GACXtzD,UAAI,ICbL43C,YACKtvC,KAAKowC,GACLpwC,KAAKowC,GCFlB,SAASka,aAAK3nD,OACZ,IAAI7J,EAAI6J,MAAMjE,OACd,OAAO,SAASnG,GACd,OAAOoK,MAAM3C,KAAKG,IAAI,EAAGH,KAAKC,IAAInH,EAAI,EAAGkH,KAAKgR,MAAMzY,EAAIO,OAI7CwxD,0CAAK9W,8BAAO,qgDAEhByX,cAAQX,aAAK9W,8BAAO,qgDAEpB0X,gBAAUZ,aAAK9W,8BAAO,qgDAEtB2X,eAASb,aAAK9W,8BAAO,qgDCfnB4X,sBAAwB,YACxBC,qBAAuB,cACvBC,sBAAwB,eACxBC,uBAAyB,aACzBC,uBAAyB,YACzBC,sBAAwB,cACxBC,uBAAyB,eACzBC,wBAA0B,aCHxBC,iBAHXC,OAAQ,UCKGC,cALXC,WAAY,YACZC,cAAe,cACfC,eAAgB,+GCHTtyC,gBAAQtQ,MAAMlQ,UAAUwgB,MCApBuyC,qBAAA,SAAS14C,GACtB,OAAOA,GCEL0pB,SAAM,EACNoD,WAAQ,EACR6rB,YAAS,EACT9rB,UAAO,EACP+rB,QAAU,KAEd,SAASlX,WAAW1hC,GAClB,MAAO,cAAgBA,EAAI,IAAO,MAGpC,SAAS2hC,WAAWxwC,GAClB,MAAO,gBAAkBA,EAAI,IAAO,IAiBtC,SAAS0nD,WACP,OAAQjtD,KAAKktD,OAGf,SAASC,UAAKC,OAAQ9rD,OACpB,IAAI+rD,iBACAC,WAAa,KACb3Q,WAAa,KACb4Q,cAAgB,KAChBC,cAAgB,EAChBC,cAAgB,EAChBC,YAAc,EACdxhD,EAAIkhD,SAAWtvB,UAAOsvB,SAAWnsB,WAAQ,EAAI,EAC7C7sB,EAAIg5C,SAAWnsB,WAAQmsB,SAAWlsB,WAAQ,IAAM,IAChDiW,UAAYiW,SAAWtvB,UAAOsvB,SAAWL,YAASjX,WAAaC,WAEnE,SAASoX,KAAKr1B,SACZ,IAAInb,OAAuB,MAAd2wC,WAAsBhsD,MAAMygC,MAAQzgC,MAAMygC,MAAMjhC,MAAMQ,MAAO+rD,eAAiB/rD,MAAMZ,SAAY4sD,WACzGrrD,OAAuB,MAAd06C,WAAsBr7C,MAAMq7C,WAAar7C,MAAMq7C,WAAW77C,MAAMQ,MAAO+rD,eAAiBrgC,qBAAY2vB,WAC7GgR,QAAU/sD,KAAKG,IAAIysD,cAAe,GAAKE,YACvCnqD,MAAQjC,MAAMiC,QACdqqD,QAAUrqD,MAAM,GAAK,GACrBsqD,QAAUtqD,MAAMA,MAAMjE,OAAS,GAAK,GACpCu+B,UAAYv8B,MAAM+iC,UA/B1B,SAASypB,YAAOxsD,OACd,IAAI48C,OAASt9C,KAAKG,IAAI,EAAGO,MAAM+iC,YAAc,GAAK,EAElD,OADI/iC,MAAMqK,UAASuyC,OAASt9C,KAAK+K,MAAMuyC,SAChC,SAAS3lD,GACd,OAAQ+I,MAAM/I,GAAK2lD,SAVvB,SAAS7c,YAAO//B,OACd,OAAO,SAAS/I,GACd,OAAQ+I,MAAM/I,MAmCqC+I,MAAM6iC,QACrD4pB,UAAYj2B,QAAQi2B,UAAYj2B,QAAQi2B,YAAcj2B,QACtDk2B,KAAOD,UAAUE,UAAU,WAAW3tD,MAAM,OAC5C4tD,KAAOH,UAAUE,UAAU,SAAS3tD,KAAKqc,OAAQrb,OAAO6iB,QACxDgqC,SAAWD,KAAKE,OAChBC,UAAYH,KAAKI,QAAQl+B,OAAO,KAAKm+B,KAAK,QAAS,QACnDC,KAAON,KAAKjxC,OAAO,QACnB3a,KAAO4rD,KAAKjxC,OAAO,QAEvB+wC,KAAOA,KAAKhjD,MAAMgjD,KAAKM,QAAQG,OAAO,OAAQ,SACzCF,KAAK,QAAS,UACdA,KAAK,SAAU,SAEpBL,KAAOA,KAAKljD,MAAMqjD,WAElBG,KAAOA,KAAKxjD,MAAMqjD,UAAUj+B,OAAO,QAC9Bm+B,KAAK,SAAU,QACfA,KAAKn6C,EAAI,IAAKlI,EAAIshD,gBAEvBlrD,KAAOA,KAAK0I,MAAMqjD,UAAUj+B,OAAO,QAC9Bm+B,KAAK,OAAQ,QACbA,KAAKn6C,EAAGlI,EAAIyhD,SACZY,KAAK,KAAMnB,SAAWtvB,SAAM,MAAQsvB,SAAWL,YAAS,SAAW,WACnE53B,MAAM,YAAao4B,eAEpBz1B,UAAYi2B,YACdC,KAAOA,KAAKU,WAAW52B,SACvBo2B,KAAOA,KAAKQ,WAAW52B,SACvB02B,KAAOA,KAAKE,WAAW52B,SACvBx1B,KAAOA,KAAKosD,WAAW52B,SAEvBq2B,SAAWA,SAASO,WAAW52B,SAC1By2B,KAAK,UAAWvB,SAChBuB,KAAK,YAAa,SAASh2D,GAAK,OAAO6K,SAAS7K,EAAIslC,SAAStlC,IAAM4+C,UAAU5+C,GAAKyH,KAAK2uD,aAAa,eAEzGN,UACKE,KAAK,UAAWvB,SAChBuB,KAAK,YAAa,SAASh2D,GAAK,IAAI0B,EAAI+F,KAAK08B,WAAWwwB,OAAQ,OAAO/V,UAAUl9C,GAAKmJ,SAASnJ,EAAIA,EAAE1B,IAAM0B,EAAI4jC,SAAStlC,OAG/H41D,SAASvrB,SAETorB,KACKO,KAAK,IAAKnB,SAAWnsB,WAAQmsB,QAAUlsB,WAClC,IAAMh1B,EAAIuhD,cAAgB,IAAMG,OAAS,QAAUC,OAAS,IAAM3hD,EAAIuhD,cACtE,IAAMG,OAAS,IAAM1hD,EAAIuhD,cAAgB,QAAUI,OAAS,IAAM3hD,EAAIuhD,eAEhFS,KACKK,KAAK,UAAW,GAChBA,KAAK,YAAa,SAASh2D,GAAK,OAAO4+C,UAAUtZ,SAAStlC,MAE/Di2D,KACKD,KAAKn6C,EAAI,IAAKlI,EAAIshD,eAEvBlrD,KACKisD,KAAKn6C,EAAGlI,EAAIyhD,SACZrrD,KAAKL,QAEV8rD,UAAU1vC,OAAO4uC,UACZsB,KAAK,OAAQ,QACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,cACpBA,KAAK,cAAenB,SAAWlsB,WAAQ,QAAUksB,SAAWnsB,UAAO,MAAQ,UAEhF8sB,UACKprB,KAAK,WAAa3iC,KAAKktD,OAASrvB,WA2CvC,OAxCAsvB,KAAK7rD,MAAQ,SAASwd,GACpB,OAAOhY,UAAUxH,QAAUgC,MAAQwd,EAAGquC,MAAQ7rD,OAGhD6rD,KAAKI,cAAgB,SAASzuC,GAC5B,OAAOhY,UAAUxH,QAAUiuD,cAAgBzuC,EAAGquC,MAAQI,eAGxDJ,KAAKprB,MAAQ,WACX,OAAOsrB,cAAgB9yC,gBAAMniB,KAAK0O,WAAYqmD,MAGhDA,KAAKE,cAAgB,SAASvuC,GAC5B,OAAOhY,UAAUxH,QAAU+tD,cAAqB,MAALvuC,KAAiBvE,gBAAMniB,KAAK0mB,GAAIquC,MAAQE,cAAc9yC,SAGnG4yC,KAAKG,WAAa,SAASxuC,GACzB,OAAOhY,UAAUxH,QAAUguD,WAAkB,MAALxuC,EAAY,KAAOvE,gBAAMniB,KAAK0mB,GAAIquC,MAAQG,YAAcA,WAAW/yC,SAG7G4yC,KAAKxQ,WAAa,SAAS79B,GACzB,OAAOhY,UAAUxH,QAAUq9C,WAAa79B,EAAGquC,MAAQxQ,YAGrDwQ,KAAKyB,SAAW,SAAS9vC,GACvB,OAAOhY,UAAUxH,QAAUkuD,cAAgBC,eAAiB3uC,EAAGquC,MAAQK,eAGzEL,KAAKK,cAAgB,SAAS1uC,GAC5B,OAAOhY,UAAUxH,QAAUkuD,eAAiB1uC,EAAGquC,MAAQK,eAGzDL,KAAKM,cAAgB,SAAS3uC,GAC5B,OAAOhY,UAAUxH,QAAUmuD,eAAiB3uC,EAAGquC,MAAQM,eAGzDN,KAAKO,YAAc,SAAS5uC,GAC1B,OAAOhY,UAAUxH,QAAUouD,aAAe5uC,EAAGquC,MAAQO,aAGhDP,KClKT,IAAI0B,GAAKjuD,KAAKowC,GACV8d,IAAM,EAAID,GAEVE,WAAaD,IADH,KAGd,SAASE,OACPhvD,KAAKivD,IAAMjvD,KAAKkvD,IAChBlvD,KAAKmvD,IAAMnvD,KAAKovD,IAAM,KACtBpvD,KAAK8e,EAAI,GAGX,SAASkvC,YACP,OAAO,IAAIgB,KAGbA,KAAKj1D,UAAYi0D,UAAKj0D,WACpB6c,YAAao4C,KACbK,OAAQ,SAAAA,OAASj7C,EAAG7O,GAClBvF,KAAK8e,GAAK,KAAO9e,KAAKivD,IAAMjvD,KAAKmvD,KAAO/6C,GAAK,KAAOpU,KAAKkvD,IAAMlvD,KAAKovD,KAAO7pD,IAE7E+pD,UAAW,SAAAA,YACQ,OAAbtvD,KAAKmvD,MACPnvD,KAAKmvD,IAAMnvD,KAAKivD,IAAKjvD,KAAKovD,IAAMpvD,KAAKkvD,IACrClvD,KAAK8e,GAAK,MAGdywC,OAAQ,SAAAA,OAASn7C,EAAG7O,GAClBvF,KAAK8e,GAAK,KAAO9e,KAAKmvD,KAAO/6C,GAAK,KAAOpU,KAAKovD,KAAO7pD,IAEvDiqD,iBAAkB,SAAAA,iBAASzS,GAAI0S,GAAIr7C,EAAG7O,GACpCvF,KAAK8e,GAAK,MAAQi+B,GAAM,MAAQ0S,GAAM,KAAOzvD,KAAKmvD,KAAO/6C,GAAK,KAAOpU,KAAKovD,KAAO7pD,IAEnFmqD,cAAe,SAAAA,cAAS3S,GAAI0S,GAAIE,GAAIC,GAAIx7C,EAAG7O,GACzCvF,KAAK8e,GAAK,MAAQi+B,GAAM,MAAQ0S,GAAM,MAAQE,GAAM,MAAQC,GAAM,KAAO5vD,KAAKmvD,KAAO/6C,GAAK,KAAOpU,KAAKovD,KAAO7pD,IAE/GsqD,MAAO,SAAAA,MAAS9S,GAAI0S,GAAIE,GAAIC,GAAI72D,GAC9BgkD,IAAMA,GAAI0S,IAAMA,GAAIE,IAAMA,GAAIC,IAAMA,GAAI72D,GAAKA,EAC7C,IAAI+jD,GAAK98C,KAAKmvD,IACVW,GAAK9vD,KAAKovD,IACVW,IAAMJ,GAAK5S,GACXiT,IAAMJ,GAAKH,GACXQ,IAAMnT,GAAKC,GACXmT,IAAMJ,GAAKL,GACXU,MAAQF,IAAMA,IAAMC,IAAMA,IAG9B,GAAIn3D,EAAI,EAAG,MAAM,IAAIsX,MAAM,oBAAsBtX,GAGjD,GAAiB,OAAbiH,KAAKmvD,IACPnvD,KAAK8e,GAAK,KAAO9e,KAAKmvD,IAAMpS,IAAM,KAAO/8C,KAAKovD,IAAMK,SAIjD,GAAMU,MApDD,KAyDL,GAAMvvD,KAAKuL,IAAI+jD,IAAMH,IAAMC,IAAMC,KAzD5B,MAyDgDl3D,EAKrD,CACH,IAAIq3D,IAAMT,GAAK7S,GACXuT,IAAMT,GAAKE,GACXQ,MAAQP,IAAMA,IAAMC,IAAMA,IAC1BO,MAAQH,IAAMA,IAAMC,IAAMA,IAC1BG,IAAM5vD,KAAKkU,KAAKw7C,OAChBG,IAAM7vD,KAAKkU,KAAKq7C,OAChBj4D,EAAIa,EAAI6H,KAAKouC,KAAK6f,GAAKjuD,KAAK8vD,MAAMJ,MAAQH,MAAQI,QAAU,EAAIC,IAAMC,OAAS,GAC/EE,IAAMz4D,EAAIu4D,IACVG,IAAM14D,EAAIs4D,IAGV5vD,KAAKuL,IAAIwkD,IAAM,GA1EX,OA2EN3wD,KAAK8e,GAAK,KAAOi+B,GAAK4T,IAAMV,KAAO,KAAOR,GAAKkB,IAAMT,MAGvDlwD,KAAK8e,GAAK,IAAM/lB,EAAI,IAAMA,EAAI,WAAam3D,IAAME,IAAMH,IAAMI,KAAQ,KAAOrwD,KAAKmvD,IAAMpS,GAAK6T,IAAMb,KAAO,KAAO/vD,KAAKovD,IAAMK,GAAKmB,IAAMZ,UApBtIhwD,KAAK8e,GAAK,KAAO9e,KAAKmvD,IAAMpS,IAAM,KAAO/8C,KAAKovD,IAAMK,WAuBxDoB,IAAK,SAAAA,IAASz8C,EAAG7O,EAAGxM,EAAG+3D,GAAI1/C,GAAI2/C,KAC7B38C,GAAKA,EAAG7O,GAAKA,EACb,IAAIyrD,IADYj4D,GAAKA,GACR6H,KAAKgxC,IAAIkf,IAClBG,GAAKl4D,EAAI6H,KAAKixC,IAAIif,IAClBhU,GAAK1oC,EAAI48C,GACTlB,GAAKvqD,EAAI0rD,GACTC,GAAK,EAAIH,IACTI,GAAKJ,IAAMD,GAAK1/C,GAAKA,GAAK0/C,GAG9B,GAAI/3D,EAAI,EAAG,MAAM,IAAIsX,MAAM,oBAAsBtX,GAGhC,OAAbiH,KAAKmvD,IACPnvD,KAAK8e,GAAK,IAAMg+B,GAAK,IAAMgT,IAIpBlvD,KAAKuL,IAAInM,KAAKmvD,IAAMrS,IAnGnB,MAmGoCl8C,KAAKuL,IAAInM,KAAKovD,IAAMU,IAnGxD,QAoGR9vD,KAAK8e,GAAK,IAAMg+B,GAAK,IAAMgT,IAIxB/2D,IAGDo4D,GAAK,IAAGA,GAAKA,GAAKrC,IAAMA,KAGxBqC,GAAKpC,WACP/uD,KAAK8e,GAAK,IAAM/lB,EAAI,IAAMA,EAAI,QAAUm4D,GAAK,KAAO98C,EAAI48C,IAAM,KAAOzrD,EAAI0rD,IAAM,IAAMl4D,EAAI,IAAMA,EAAI,QAAUm4D,GAAK,KAAOlxD,KAAKmvD,IAAMrS,IAAM,KAAO98C,KAAKovD,IAAMU,IAIrJqB,GAnHC,OAoHRnxD,KAAK8e,GAAK,IAAM/lB,EAAI,IAAMA,EAAI,SAAWo4D,IAAMtC,IAAO,IAAMqC,GAAK,KAAOlxD,KAAKmvD,IAAM/6C,EAAIrb,EAAI6H,KAAKgxC,IAAIxgC,KAAO,KAAOpR,KAAKovD,IAAM7pD,EAAIxM,EAAI6H,KAAKixC,IAAIzgC,QAGlJggD,KAAM,SAAAA,KAASh9C,EAAG7O,EAAG68C,EAAG/R,GACtBrwC,KAAK8e,GAAK,KAAO9e,KAAKivD,IAAMjvD,KAAKmvD,KAAO/6C,GAAK,KAAOpU,KAAKkvD,IAAMlvD,KAAKovD,KAAO7pD,GAAK,MAAQ68C,EAAK,MAAQ/R,EAAK,KAAQ+R,EAAK,KAEzH/9C,SAAU,SAAAA,WACR,OAAOrE,KAAK8e,IAIDkvC,uBCjIAqD,sBAAA,SAASj9C,GACtB,OAAO,SAASu/B,WACd,OAAOv/B,ICFAjI,IAAMvL,KAAKuL,IACXkmC,MAAQzxC,KAAKyxC,MACbT,IAAMhxC,KAAKgxC,IACX7wC,SAAMH,KAAKG,IACXF,SAAMD,KAAKC,IACXgxC,IAAMjxC,KAAKixC,IACX/8B,UAAOlU,KAAKkU,KAEZk4C,aAAU,MACV6B,QAAKjuD,KAAKowC,GACVsgB,OAASzC,QAAK,EACdC,SAAM,EAAID,QAMd,SAAS0C,KAAKn9C,GACnB,OAAOA,GAAK,EAAIk9C,OAASl9C,IAAM,GAAKk9C,OAAS1wD,KAAK2wD,KAAKn9C,GCdzD,SAASo9C,eAAej5D,GACtB,OAAOA,EAAEk5D,YAGX,SAASC,eAAen5D,GACtB,OAAOA,EAAEo5D,YAGX,SAASC,cAAcr5D,GACrB,OAAOA,EAAEs5D,WAGX,SAASC,YAAYv5D,GACnB,OAAOA,EAAEw5D,SAGX,SAASC,YAAYz5D,GACnB,OAAOA,GAAKA,EAAE05D,SAchB,SAASC,eAAepV,GAAIgT,GAAI/S,GAAI0S,GAAI1qB,GAAIotB,GAAIjB,IAC9C,IAAIjB,IAAMnT,GAAKC,GACXmT,IAAMJ,GAAKL,GACXh+C,IAAMy/C,GAAKiB,IAAMA,IAAMr9C,UAAKm7C,IAAMA,IAAMC,IAAMA,KAC9CkC,GAAK3gD,GAAKy+C,IACVmC,IAAM5gD,GAAKw+C,IACXqC,IAAMxV,GAAKsV,GACXG,IAAMzC,GAAKuC,GACXG,IAAMzV,GAAKqV,GACXK,IAAMhD,GAAK4C,GACXK,KAAOJ,IAAME,KAAO,EACpBG,KAAOJ,IAAME,KAAO,EACpBzB,GAAKwB,IAAMF,IACXrB,GAAKwB,IAAMF,IACXK,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBl4D,EAAIgsC,GAAKotB,GACT3f,EAAI8f,IAAMG,IAAMD,IAAMD,IACtBh6D,GAAK04D,GAAK,GAAK,EAAI,GAAKn8C,UAAK/T,SAAI,EAAGhI,EAAIA,EAAI65D,GAAKpgB,EAAIA,IACrDqgB,KAAOrgB,EAAIye,GAAKD,GAAKz4D,GAAKq6D,GAC1BE,MAAQtgB,EAAIwe,GAAKC,GAAK14D,GAAKq6D,GAC3BG,KAAOvgB,EAAIye,GAAKD,GAAKz4D,GAAKq6D,GAC1BI,MAAQxgB,EAAIwe,GAAKC,GAAK14D,GAAKq6D,GAC3BK,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAML,IACZU,IAAMJ,IAAML,IAMhB,OAFIM,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,MAAKP,IAAME,IAAKD,IAAME,MAGlEK,GAAIR,IACJS,GAAIR,IACJ7C,KAAMmC,GACNlC,KAAMmC,GACNC,IAAKO,KAAO9tB,GAAKhsC,EAAI,GACrBw5D,IAAKO,KAAO/tB,GAAKhsC,EAAI,ICxEzB,SAASw6D,OAAOz7B,SACd93B,KAAK63B,SAAWC,QAGlBy7B,OAAOx5D,WACLy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,WACH7zD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EACtB,QAAS5zD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,MAKxB,IAAAwuD,aAAA,SAASj8B,SACtB,OAAO,IAAIy7B,OAAOz7B,UC7Bb,SAAS1jB,QAAEna,GAChB,OAAOA,EAAE,GAGJ,SAASsL,QAAEtL,GAChB,OAAOA,EAAE,GCAI,IAAA+5D,SAAA,WACb,IAAI5/C,EAAI6/C,QACJ1uD,EAAI2uD,QACJC,QAAUxgB,uBAAS,GACnB7b,QAAU,KACVs8B,MAAQC,aACRrb,OAAS,KAEb,SAASwV,KAAKluD,MACZ,IAAIrI,EAEAM,EAEA+7D,OAHA56D,EAAI4G,KAAKhB,OAETi1D,UAAW,EAKf,IAFe,MAAXz8B,UAAiBkhB,OAASob,MAAME,OAAStG,aAExC/1D,EAAI,EAAGA,GAAKyB,IAAKzB,IACdA,EAAIyB,GAAKy6D,QAAQ57D,EAAI+H,KAAKrI,GAAIA,EAAGqI,SAAWi0D,YAC5CA,UAAYA,UAAUvb,OAAO2a,YAC5B3a,OAAO6a,WAEVU,UAAUvb,OAAO8a,OAAO1/C,EAAE7b,EAAGN,EAAGqI,OAAQiF,EAAEhN,EAAGN,EAAGqI,OAGtD,GAAIg0D,OAAQ,OAAOtb,OAAS,KAAMsb,OAAS,IAAM,KAuBnD,OApBA9F,KAAKp6C,EAAI,SAAS0K,GAChB,OAAOhY,UAAUxH,QAAU8U,EAAiB,mBAAN0K,EAAmBA,EAAI60B,uBAAU70B,GAAI0vC,MAAQp6C,GAGrFo6C,KAAKjpD,EAAI,SAASuZ,GAChB,OAAOhY,UAAUxH,QAAUiG,EAAiB,mBAANuZ,EAAmBA,EAAI60B,uBAAU70B,GAAI0vC,MAAQjpD,GAGrFipD,KAAK2F,QAAU,SAASr1C,GACtB,OAAOhY,UAAUxH,QAAU60D,QAAuB,mBAANr1C,EAAmBA,EAAI60B,wBAAW70B,GAAI0vC,MAAQ2F,SAG5F3F,KAAK4F,MAAQ,SAASt1C,GACpB,OAAOhY,UAAUxH,QAAU80D,MAAQt1C,EAAc,MAAXgZ,UAAoBkhB,OAASob,MAAMt8B,UAAW02B,MAAQ4F,OAG9F5F,KAAK12B,QAAU,SAAShZ,GACtB,OAAOhY,UAAUxH,QAAe,MAALwf,EAAYgZ,QAAUkhB,OAAS,KAAOA,OAASob,MAAMt8B,QAAUhZ,GAAI0vC,MAAQ12B,SAGjG02B,MC/CMgG,SAAA,WACb,IAAI1X,GAAKmX,QACLlX,GAAK,KACL+S,GAAKnc,sBAAS,GACd8b,GAAKyE,QACLC,QAAUxgB,uBAAS,GACnB7b,QAAU,KACVs8B,MAAQC,aACRrb,OAAS,KAEb,SAASyb,KAAKn0D,MACZ,IAAIrI,EACAqiB,EACApO,EAEA3T,EAEA+7D,OAHA56D,EAAI4G,KAAKhB,OAETi1D,UAAW,EAEXG,IAAM,IAAIzqD,MAAMvQ,GAChBi7D,IAAM,IAAI1qD,MAAMvQ,GAIpB,IAFe,MAAXo+B,UAAiBkhB,OAASob,MAAME,OAAStG,aAExC/1D,EAAI,EAAGA,GAAKyB,IAAKzB,EAAG,CACvB,KAAMA,EAAIyB,GAAKy6D,QAAQ57D,EAAI+H,KAAKrI,GAAIA,EAAGqI,SAAWi0D,SAChD,GAAIA,UAAYA,SACdj6C,EAAIriB,EACJ+gD,OAAOwa,YACPxa,OAAO2a,gBACF,CAGL,IAFA3a,OAAO6a,UACP7a,OAAO2a,YACFznD,EAAIjU,EAAI,EAAGiU,GAAKoO,IAAKpO,EACxB8sC,OAAO8a,MAAMY,IAAIxoD,GAAIyoD,IAAIzoD,IAE3B8sC,OAAO6a,UACP7a,OAAO0a,UAGPa,WACFG,IAAIz8D,IAAM6kD,GAAGvkD,EAAGN,EAAGqI,MAAOq0D,IAAI18D,IAAM63D,GAAGv3D,EAAGN,EAAGqI,MAC7C04C,OAAO8a,MAAM/W,IAAMA,GAAGxkD,EAAGN,EAAGqI,MAAQo0D,IAAIz8D,GAAIw3D,IAAMA,GAAGl3D,EAAGN,EAAGqI,MAAQq0D,IAAI18D,KAI3E,GAAIq8D,OAAQ,OAAOtb,OAAS,KAAMsb,OAAS,IAAM,KAGnD,SAASM,WACP,OAAOpG,WAAO2F,QAAQA,SAASC,MAAMA,OAAOt8B,QAAQA,SAoDtD,OAjDA28B,KAAKrgD,EAAI,SAAS0K,GAChB,OAAOhY,UAAUxH,QAAUw9C,GAAkB,mBAANh+B,EAAmBA,EAAI60B,uBAAU70B,GAAIi+B,GAAK,KAAM0X,MAAQ3X,IAGjG2X,KAAK3X,GAAK,SAASh+B,GACjB,OAAOhY,UAAUxH,QAAUw9C,GAAkB,mBAANh+B,EAAmBA,EAAI60B,uBAAU70B,GAAI21C,MAAQ3X,IAGtF2X,KAAK1X,GAAK,SAASj+B,GACjB,OAAOhY,UAAUxH,QAAUy9C,GAAU,MAALj+B,EAAY,KAAoB,mBAANA,EAAmBA,EAAI60B,uBAAU70B,GAAI21C,MAAQ1X,IAGzG0X,KAAKlvD,EAAI,SAASuZ,GAChB,OAAOhY,UAAUxH,QAAUwwD,GAAkB,mBAANhxC,EAAmBA,EAAI60B,uBAAU70B,GAAI2wC,GAAK,KAAMgF,MAAQ3E,IAGjG2E,KAAK3E,GAAK,SAAShxC,GACjB,OAAOhY,UAAUxH,QAAUwwD,GAAkB,mBAANhxC,EAAmBA,EAAI60B,uBAAU70B,GAAI21C,MAAQ3E,IAGtF2E,KAAKhF,GAAK,SAAS3wC,GACjB,OAAOhY,UAAUxH,QAAUmwD,GAAU,MAAL3wC,EAAY,KAAoB,mBAANA,EAAmBA,EAAI60B,uBAAU70B,GAAI21C,MAAQhF,IAGzGgF,KAAKI,OACLJ,KAAKK,OAAS,WACZ,OAAOF,WAAWxgD,EAAE0oC,IAAIv3C,EAAEuqD,KAG5B2E,KAAKM,OAAS,WACZ,OAAOH,WAAWxgD,EAAE0oC,IAAIv3C,EAAEkqD,KAG5BgF,KAAKO,OAAS,WACZ,OAAOJ,WAAWxgD,EAAE2oC,IAAIx3C,EAAEuqD,KAG5B2E,KAAKN,QAAU,SAASr1C,GACtB,OAAOhY,UAAUxH,QAAU60D,QAAuB,mBAANr1C,EAAmBA,EAAI60B,wBAAW70B,GAAI21C,MAAQN,SAG5FM,KAAKL,MAAQ,SAASt1C,GACpB,OAAOhY,UAAUxH,QAAU80D,MAAQt1C,EAAc,MAAXgZ,UAAoBkhB,OAASob,MAAMt8B,UAAW28B,MAAQL,OAG9FK,KAAK38B,QAAU,SAAShZ,GACtB,OAAOhY,UAAUxH,QAAe,MAALwf,EAAYgZ,QAAUkhB,OAAS,KAAOA,OAASob,MAAMt8B,QAAUhZ,GAAI21C,MAAQ38B,SAGjG28B,MC3GMQ,eAAA,SAAS56D,EAAG8K,GACzB,OAAOA,EAAI9K,GAAK,EAAI8K,EAAI9K,EAAI,EAAI8K,GAAK9K,EAAI,EAAIwmC,KCDhCq0B,sBAAA,SAAS38D,GACtB,OAAOA,GCCsB48D,YAAYd,cAE3C,SAASe,OAAOhB,OACdp0D,KAAKq1D,OAASjB,MAqBD,SAASe,YAAYf,OAElC,SAASkB,OAAOx9B,SACd,OAAO,IAAIs9B,OAAOhB,MAAMt8B,UAK1B,OAFAw9B,OAAOD,OAASjB,MAETkB,OA1BTF,OAAOr7D,WACLy5D,UAAW,SAAAA,YACTxzD,KAAKq1D,OAAO7B,aAEdE,QAAS,SAAAA,UACP1zD,KAAKq1D,OAAO3B,WAEdC,UAAW,SAAAA,YACT3zD,KAAKq1D,OAAO1B,aAEdE,QAAS,SAAAA,UACP7zD,KAAKq1D,OAAOxB,WAEdC,MAAO,SAAAA,MAASz5D,EAAGtB,GACjBiH,KAAKq1D,OAAOvB,MAAM/6D,EAAI6H,KAAKixC,IAAIx3C,GAAItB,GAAK6H,KAAKgxC,IAAIv3C,MCNtC,IChBJkgB,yBAAQtQ,MAAMlQ,UAAUwgB,MCEpB,IAAAg7C,eACbC,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI/8B,EAAI6H,KAAKkU,KAAKghB,KAAO+4B,SACzB/2B,QAAQu3B,OAAOt2D,EAAG,GAClB++B,QAAQ+4B,IAAI,EAAG,EAAG93D,EAAG,EAAG+1D,YCNb2G,cACbD,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI/8B,EAAI6H,KAAKkU,KAAKghB,KAAO,GAAK,EAC9BgC,QAAQu3B,QAAQ,EAAIt2D,GAAIA,GACxB++B,QAAQy3B,QAAQx2D,GAAIA,GACpB++B,QAAQy3B,QAAQx2D,GAAI,EAAIA,GACxB++B,QAAQy3B,OAAOx2D,GAAI,EAAIA,GACvB++B,QAAQy3B,OAAOx2D,GAAIA,GACnB++B,QAAQy3B,OAAO,EAAIx2D,GAAIA,GACvB++B,QAAQy3B,OAAO,EAAIx2D,EAAGA,GACtB++B,QAAQy3B,OAAOx2D,EAAGA,GAClB++B,QAAQy3B,OAAOx2D,EAAG,EAAIA,GACtB++B,QAAQy3B,QAAQx2D,EAAG,EAAIA,GACvB++B,QAAQy3B,QAAQx2D,EAAGA,GACnB++B,QAAQy3B,QAAQ,EAAIx2D,EAAGA,GACvB++B,QAAQw3B,cCfRoG,MAAQ90D,KAAKkU,KAAK,EAAI,GACtB6gD,QAAkB,EAARD,MAECE,SACbJ,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIvwB,EAAI3E,KAAKkU,KAAKghB,KAAO6/B,SACrBvhD,EAAI7O,EAAImwD,MACZ59B,QAAQu3B,OAAO,GAAI9pD,GACnBuyB,QAAQy3B,OAAOn7C,EAAG,GAClB0jB,QAAQy3B,OAAO,EAAGhqD,GAClBuyB,QAAQy3B,QAAQn7C,EAAG,GACnB0jB,QAAQw3B,cCRRuG,GAAKj1D,KAAKixC,IAAIgd,QAAK,IAAMjuD,KAAKixC,IAAI,EAAIgd,QAAK,IAC3CiH,GAAKl1D,KAAKixC,IAAIid,SAAM,IAAM+G,GAC1BE,IAAMn1D,KAAKgxC,IAAIkd,SAAM,IAAM+G,GAEhBG,MACbR,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI/8B,EAAI6H,KAAKkU,KAPR,kBAOaghB,MACd1hB,EAAI0hD,GAAK/8D,EACTwM,EAAIwwD,GAAKh9D,EACb++B,QAAQu3B,OAAO,GAAIt2D,GACnB++B,QAAQy3B,OAAOn7C,EAAG7O,GAClB,IAAK,IAAItN,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAIoC,EAAIy0D,SAAM72D,EAAI,EACdK,EAAIsI,KAAKgxC,IAAIv3C,GACbH,EAAI0G,KAAKixC,IAAIx3C,GACjBy9B,QAAQy3B,OAAOr1D,EAAInB,GAAIT,EAAIS,GAC3B++B,QAAQy3B,OAAOj3D,EAAI8b,EAAIla,EAAIqL,EAAGrL,EAAIka,EAAI9b,EAAIiN,GAE5CuyB,QAAQw3B,cCrBG2G,QACbT,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIssB,EAAIxhD,KAAKkU,KAAKghB,MACd1hB,GAAKguC,EAAI,EACbtqB,QAAQs5B,KAAKh9C,EAAGA,EAAGguC,EAAGA,KCJtB8T,MAAQt1D,KAAKkU,KAAK,GAEPqhD,UACbX,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIvwB,GAAK3E,KAAKkU,KAAKghB,MAAgB,EAARogC,QAC3Bp+B,QAAQu3B,OAAO,EAAO,EAAJ9pD,GAClBuyB,QAAQy3B,QAAQ2G,MAAQ3wD,GAAIA,GAC5BuyB,QAAQy3B,OAAO2G,MAAQ3wD,GAAIA,GAC3BuyB,QAAQw3B,cCPRp1D,MAAI0G,KAAKkU,KAAK,GAAK,EACnB5I,MAAI,EAAItL,KAAKkU,KAAK,IAClBza,MAAkB,GAAb6R,MAAI,EAAI,GAEFkqD,KACbZ,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI/8B,EAAI6H,KAAKkU,KAAKghB,KAAOz7B,OACrByiD,GAAK/jD,EAAI,EACT+2D,GAAK/2D,EAAImT,MACT6wC,GAAKD,GACL2S,GAAK12D,EAAImT,MAAInT,EACb42D,IAAM5S,GACN6S,GAAKH,GACT33B,QAAQu3B,OAAOvS,GAAIgT,IACnBh4B,QAAQy3B,OAAOxS,GAAI0S,IACnB33B,QAAQy3B,OAAOI,GAAIC,IACnB93B,QAAQy3B,QAjBJ,GAiBezS,GAAK5iD,MAAI41D,GAAI51D,MAAI4iD,IAjBhC,GAiByCgT,IAC7Ch4B,QAAQy3B,QAlBJ,GAkBexS,GAAK7iD,MAAIu1D,GAAIv1D,MAAI6iD,IAlBhC,GAkByC0S,IAC7C33B,QAAQy3B,QAnBJ,GAmBeI,GAAKz1D,MAAI01D,GAAI11D,MAAIy1D,IAnBhC,GAmByCC,IAC7C93B,QAAQy3B,QApBJ,GAoBezS,GAAK5iD,MAAI41D,IApBxB,GAoBgCA,GAAK51D,MAAI4iD,IAC7ChlB,QAAQy3B,QArBJ,GAqBexS,GAAK7iD,MAAIu1D,IArBxB,GAqBgCA,GAAKv1D,MAAI6iD,IAC7CjlB,QAAQy3B,QAtBJ,GAsBeI,GAAKz1D,MAAI01D,IAtBxB,GAsBgCA,GAAK11D,MAAIy1D,IAC7C73B,QAAQw3B,cCvBG+G,KAAA,aCAR,SAASvC,OAAMwC,KAAMliD,EAAG7O,GAC7B+wD,KAAKz+B,SAAS63B,eACX,EAAI4G,KAAKrH,IAAMqH,KAAKnH,KAAO,GAC3B,EAAImH,KAAKpH,IAAMoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,KAAO,GAC3BmH,KAAKpH,IAAM,EAAIoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,IAAM/6C,GAAK,GAC/BkiD,KAAKpH,IAAM,EAAIoH,KAAKlH,IAAM7pD,GAAK,GAI7B,SAASgxD,MAAMz+B,SACpB93B,KAAK63B,SAAWC,QAGlBy+B,MAAMx8D,WACJy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAChBnvD,KAAKkvD,IAAMlvD,KAAKovD,IAAMvuB,IACtB7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EAAGE,OAAM9zD,KAAMA,KAAKmvD,IAAKnvD,KAAKovD,KACnC,KAAK,EAAGpvD,KAAK63B,SAAS03B,OAAOvvD,KAAKmvD,IAAKnvD,KAAKovD,MAE1CpvD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAK63B,SAAS03B,QAAQ,EAAIvvD,KAAKivD,IAAMjvD,KAAKmvD,KAAO,GAAI,EAAInvD,KAAKkvD,IAAMlvD,KAAKovD,KAAO,GACzG,QAAS0E,OAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAM/6C,EAChCpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAM7pD,ICzCpC,SAASixD,YAAY1+B,SACnB93B,KAAK63B,SAAWC,QAGlB0+B,YAAYz8D,WACVy5D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAMz2D,KAAK02D,IAAM12D,KAAK22D,IACjD32D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM52D,KAAK62D,IAAM72D,KAAK82D,IAAMj2B,IACvD7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EACH5zD,KAAK63B,SAASw3B,OAAOrvD,KAAKy2D,IAAKz2D,KAAK42D,KACpC52D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK63B,SAASw3B,QAAQrvD,KAAKy2D,IAAM,EAAIz2D,KAAK02D,KAAO,GAAI12D,KAAK42D,IAAM,EAAI52D,KAAK62D,KAAO,GAChF72D,KAAK63B,SAAS03B,QAAQvvD,KAAK02D,IAAM,EAAI12D,KAAKy2D,KAAO,GAAIz2D,KAAK62D,IAAM,EAAI72D,KAAK42D,KAAO,GAChF52D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK8zD,MAAM9zD,KAAKy2D,IAAKz2D,KAAK42D,KAC1B52D,KAAK8zD,MAAM9zD,KAAK02D,IAAK12D,KAAK62D,KAC1B72D,KAAK8zD,MAAM9zD,KAAK22D,IAAK32D,KAAK82D,OAKhChD,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKy2D,IAAMriD,EAAGpU,KAAK42D,IAAMrxD,EAAG,MACrD,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK02D,IAAMtiD,EAAGpU,KAAK62D,IAAMtxD,EAAG,MACrD,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK22D,IAAMviD,EAAGpU,KAAK82D,IAAMvxD,EAAGvF,KAAK63B,SAASw3B,QAAQrvD,KAAKivD,IAAM,EAAIjvD,KAAKmvD,IAAM/6C,GAAK,GAAIpU,KAAKkvD,IAAM,EAAIlvD,KAAKovD,IAAM7pD,GAAK,GAAI,MACjJ,QAASuuD,OAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAM/6C,EAChCpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAM7pD,IC3CpC,SAASwxD,UAAUj/B,SACjB93B,KAAK63B,SAAWC,QAGlBi/B,UAAUh9D,WACRy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAChBnvD,KAAKkvD,IAAMlvD,KAAKovD,IAAMvuB,IACtB7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,WACH7zD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,IAAI9W,IAAM98C,KAAKivD,IAAM,EAAIjvD,KAAKmvD,IAAM/6C,GAAK,EAAG07C,IAAM9vD,KAAKkvD,IAAM,EAAIlvD,KAAKovD,IAAM7pD,GAAK,EAAGvF,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOzS,GAAIgT,IAAM9vD,KAAK63B,SAASw3B,OAAOvS,GAAIgT,IAAK,MACvL,KAAK,EAAG9vD,KAAK4zD,OAAS,EACtB,QAASE,OAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAM/6C,EAChCpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAM7pD,IC9BpC,SAASyxD,OAAOl/B,QAASm/B,MACvBj3D,KAAKk3D,OAAS,IAAIX,MAAMz+B,SACxB93B,KAAKm3D,MAAQF,KAGfD,OAAOj9D,WACL45D,UAAW,SAAAA,YACT3zD,KAAKo3D,MACLp3D,KAAKq3D,MACLr3D,KAAKk3D,OAAOvD,aAEdE,QAAS,SAAAA,UACP,IAAIz/C,EAAIpU,KAAKo3D,GACT7xD,EAAIvF,KAAKq3D,GACT/8C,EAAIlG,EAAE9U,OAAS,EAEnB,GAAIgb,EAAI,EAQN,IAPA,IAKInhB,EALA2jD,GAAK1oC,EAAE,GACP07C,GAAKvqD,EAAE,GACPyrD,GAAK58C,EAAEkG,GAAKwiC,GACZmU,GAAK1rD,EAAE+U,GAAKw1C,GACZ73D,GAAK,IAGAA,GAAKqiB,GACZnhB,EAAIlB,EAAIqiB,EACRta,KAAKk3D,OAAOpD,MACV9zD,KAAKm3D,MAAQ/iD,EAAEnc,IAAM,EAAI+H,KAAKm3D,QAAUra,GAAK3jD,EAAI63D,IACjDhxD,KAAKm3D,MAAQ5xD,EAAEtN,IAAM,EAAI+H,KAAKm3D,QAAUrH,GAAK32D,EAAI83D,KAKvDjxD,KAAKo3D,GAAKp3D,KAAKq3D,GAAK,KACpBr3D,KAAKk3D,OAAOrD,WAEdC,MAAO,SAAAA,MAAS1/C,EAAG7O,GACjBvF,KAAKo3D,GAAG51D,MAAM4S,GACdpU,KAAKq3D,GAAG71D,MAAM+D,MAIH,SAAU+xD,OAAOL,MAE9B,SAASM,OAAOz/B,SACd,OAAgB,IAATm/B,KAAa,IAAIV,MAAMz+B,SAAW,IAAIk/B,OAAOl/B,QAASm/B,MAO/D,OAJAM,OAAON,KAAO,SAASA,MACrB,OAAOK,QAAQL,OAGVM,QAVM,CAWZ,KCvDI,SAASzD,eAAMwC,KAAMliD,EAAG7O,GAC7B+wD,KAAKz+B,SAAS63B,cACZ4G,KAAKnH,IAAMmH,KAAKkB,IAAMlB,KAAKG,IAAMH,KAAKrH,KACtCqH,KAAKlH,IAAMkH,KAAKkB,IAAMlB,KAAKM,IAAMN,KAAKpH,KACtCoH,KAAKG,IAAMH,KAAKkB,IAAMlB,KAAKnH,IAAM/6C,GACjCkiD,KAAKM,IAAMN,KAAKkB,IAAMlB,KAAKlH,IAAM7pD,GACjC+wD,KAAKG,IACLH,KAAKM,KAIF,SAASa,SAAS3/B,QAAS4/B,SAChC13D,KAAK63B,SAAWC,QAChB93B,KAAKw3D,IAAM,EAAIE,SAAW,EAG5BD,SAAS19D,WACPy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAC3Bz2D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM/1B,IACjC7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK63B,SAAS03B,OAAOvvD,KAAKy2D,IAAKz2D,KAAK42D,KAAM,MAClD,KAAK,EAAG9C,eAAM9zD,KAAMA,KAAKmvD,IAAKnvD,KAAKovD,MAEjCpvD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAKmvD,IAAM/6C,EAAGpU,KAAKovD,IAAM7pD,EAAG,MACrD,KAAK,EAAGvF,KAAK4zD,OAAS,EACtB,QAASE,eAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,KAI1C,SAAU+xD,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAI2/B,SAAS3/B,QAAS4/B,SAO/B,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GCzDI,SAASC,eAAe9/B,QAAS4/B,SACtC13D,KAAK63B,SAAWC,QAChB93B,KAAKw3D,IAAM,EAAIE,SAAW,EAG5BE,eAAe79D,WACby5D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAMz2D,KAAK02D,IAAM12D,KAAK22D,IAAM32D,KAAK63D,IAC5D73D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM52D,KAAK62D,IAAM72D,KAAK82D,IAAM92D,KAAK83D,IAAMj3B,IAClE7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EACH5zD,KAAK63B,SAASw3B,OAAOrvD,KAAK02D,IAAK12D,KAAK62D,KACpC72D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK63B,SAAS03B,OAAOvvD,KAAK02D,IAAK12D,KAAK62D,KACpC72D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK8zD,MAAM9zD,KAAK02D,IAAK12D,KAAK62D,KAC1B72D,KAAK8zD,MAAM9zD,KAAK22D,IAAK32D,KAAK82D,KAC1B92D,KAAK8zD,MAAM9zD,KAAK63D,IAAK73D,KAAK83D,OAKhChE,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAK02D,IAAMtiD,EAAGpU,KAAK62D,IAAMtxD,EAAG,MACrD,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK63B,SAASw3B,OAAOrvD,KAAK22D,IAAMviD,EAAGpU,KAAK82D,IAAMvxD,GAAI,MAC3E,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK63D,IAAMzjD,EAAGpU,KAAK83D,IAAMvyD,EAAG,MACrD,QAASuuD,eAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,KAI1C,SAAU+xD,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAI8/B,eAAe9/B,QAAS4/B,SAOrC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC1DI,SAASI,aAAajgC,QAAS4/B,SACpC13D,KAAK63B,SAAWC,QAChB93B,KAAKw3D,IAAM,EAAIE,SAAW,EAG5BK,aAAah+D,WACXy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAC3Bz2D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM/1B,IACjC7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,WACH7zD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOvvD,KAAKy2D,IAAKz2D,KAAK42D,KAAO52D,KAAK63B,SAASw3B,OAAOrvD,KAAKy2D,IAAKz2D,KAAK42D,KAAM,MAC3H,KAAK,EAAG52D,KAAK4zD,OAAS,EACtB,QAASE,eAAM9zD,KAAMoU,EAAG7O,GAE1BvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,KAI1C,SAAU+xD,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAIigC,aAAajgC,QAAS4/B,SAOnC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC7CI,SAAS7D,iBAAMwC,KAAMliD,EAAG7O,GAC7B,IAAIw3C,GAAKuZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACVO,GAAK2G,KAAKG,IACV7G,GAAK0G,KAAKM,IAEd,GAAIN,KAAK0B,OAAShL,aAAS,CACzB,IAAI3yD,EAAI,EAAIi8D,KAAK2B,QAAU,EAAI3B,KAAK0B,OAAS1B,KAAK4B,OAAS5B,KAAK6B,QAC5Dz+D,EAAI,EAAI48D,KAAK0B,QAAU1B,KAAK0B,OAAS1B,KAAK4B,QAC9Cnb,IAAMA,GAAK1iD,EAAIi8D,KAAKrH,IAAMqH,KAAK6B,QAAU7B,KAAKG,IAAMH,KAAK2B,SAAWv+D,EACpE+1D,IAAMA,GAAKp1D,EAAIi8D,KAAKpH,IAAMoH,KAAK6B,QAAU7B,KAAKM,IAAMN,KAAK2B,SAAWv+D,EAGtE,GAAI48D,KAAK8B,OAASpL,aAAS,CACzB,IAAI7nD,EAAI,EAAImxD,KAAK+B,QAAU,EAAI/B,KAAK8B,OAAS9B,KAAK4B,OAAS5B,KAAK6B,QAC5D9/D,EAAI,EAAIi+D,KAAK8B,QAAU9B,KAAK8B,OAAS9B,KAAK4B,QAC9CvI,IAAMA,GAAKxqD,EAAImxD,KAAKnH,IAAMmH,KAAK+B,QAAUjkD,EAAIkiD,KAAK6B,SAAW9/D,EAC7Du3D,IAAMA,GAAKzqD,EAAImxD,KAAKlH,IAAMkH,KAAK+B,QAAU9yD,EAAI+wD,KAAK6B,SAAW9/D,EAG/Di+D,KAAKz+B,SAAS63B,cAAc3S,GAAI0S,GAAIE,GAAIC,GAAI0G,KAAKG,IAAKH,KAAKM,KAG7D,SAAS0B,WAAWxgC,QAASygC,OAC3Bv4D,KAAK63B,SAAWC,QAChB93B,KAAKw4D,OAASD,MAGhBD,WAAWv+D,WACTy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAC3Bz2D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM/1B,IACjC7gC,KAAKg4D,OAASh4D,KAAKk4D,OAASl4D,KAAKo4D,OACjCp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAAUn4D,KAAKq4D,QACnCr4D,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK63B,SAAS03B,OAAOvvD,KAAKy2D,IAAKz2D,KAAK42D,KAAM,MAClD,KAAK,EAAG52D,KAAK8zD,MAAM9zD,KAAKy2D,IAAKz2D,KAAK42D,MAEhC52D,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAGjB,GAFA6O,GAAKA,EAAG7O,GAAKA,EAETvF,KAAK4zD,OAAQ,CACf,IAAI6E,IAAMz4D,KAAKy2D,IAAMriD,EACjBskD,IAAM14D,KAAK42D,IAAMrxD,EACrBvF,KAAKo4D,OAASx3D,KAAKkU,KAAK9U,KAAKq4D,QAAUz3D,KAAKoU,IAAIyjD,IAAMA,IAAMC,IAAMA,IAAK14D,KAAKw4D,SAG9E,OAAQx4D,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EACtB,QAASE,iBAAM9zD,KAAMoU,EAAG7O,GAG1BvF,KAAKg4D,OAASh4D,KAAKk4D,OAAQl4D,KAAKk4D,OAASl4D,KAAKo4D,OAC9Cp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAASn4D,KAAKm4D,QAAUn4D,KAAKq4D,QACjDr4D,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,IAI1C,IAAAozD,iBAAA,SAAUrB,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAID,WAAWxgC,QAASygC,OAAS,IAAId,SAAS3/B,QAAS,GAOxE,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,WAVM,CAWZ,ICnFH,SAASC,iBAAiB/gC,QAASygC,OACjCv4D,KAAK63B,SAAWC,QAChB93B,KAAKw4D,OAASD,MAGhBM,iBAAiB9+D,WACfy5D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAMz2D,KAAK02D,IAAM12D,KAAK22D,IAAM32D,KAAK63D,IAC5D73D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM52D,KAAK62D,IAAM72D,KAAK82D,IAAM92D,KAAK83D,IAAMj3B,IAClE7gC,KAAKg4D,OAASh4D,KAAKk4D,OAASl4D,KAAKo4D,OACjCp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAAUn4D,KAAKq4D,QACnCr4D,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EACH5zD,KAAK63B,SAASw3B,OAAOrvD,KAAK02D,IAAK12D,KAAK62D,KACpC72D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK63B,SAAS03B,OAAOvvD,KAAK02D,IAAK12D,KAAK62D,KACpC72D,KAAK63B,SAASy3B,YACd,MAEF,KAAK,EACHtvD,KAAK8zD,MAAM9zD,KAAK02D,IAAK12D,KAAK62D,KAC1B72D,KAAK8zD,MAAM9zD,KAAK22D,IAAK32D,KAAK82D,KAC1B92D,KAAK8zD,MAAM9zD,KAAK63D,IAAK73D,KAAK83D,OAKhChE,MAAO,SAAAA,MAAS1/C,EAAG7O,GAGjB,GAFA6O,GAAKA,EAAG7O,GAAKA,EAETvF,KAAK4zD,OAAQ,CACf,IAAI6E,IAAMz4D,KAAKy2D,IAAMriD,EACjBskD,IAAM14D,KAAK42D,IAAMrxD,EACrBvF,KAAKo4D,OAASx3D,KAAKkU,KAAK9U,KAAKq4D,QAAUz3D,KAAKoU,IAAIyjD,IAAMA,IAAMC,IAAMA,IAAK14D,KAAKw4D,SAG9E,OAAQx4D,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAK02D,IAAMtiD,EAAGpU,KAAK62D,IAAMtxD,EAAG,MACrD,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK63B,SAASw3B,OAAOrvD,KAAK22D,IAAMviD,EAAGpU,KAAK82D,IAAMvxD,GAAI,MAC3E,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG5zD,KAAK63D,IAAMzjD,EAAGpU,KAAK83D,IAAMvyD,EAAG,MACrD,QAASuuD,iBAAM9zD,KAAMoU,EAAG7O,GAG1BvF,KAAKg4D,OAASh4D,KAAKk4D,OAAQl4D,KAAKk4D,OAASl4D,KAAKo4D,OAC9Cp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAASn4D,KAAKm4D,QAAUn4D,KAAKq4D,QACjDr4D,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,KAI1C,SAAU+xD,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAIM,iBAAiB/gC,QAASygC,OAAS,IAAIX,eAAe9/B,QAAS,GAOpF,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,ICtEH,SAASE,eAAehhC,QAASygC,OAC/Bv4D,KAAK63B,SAAWC,QAChB93B,KAAKw4D,OAASD,MAGhBO,eAAe/+D,WACby5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAAMnvD,KAAKy2D,IAC3Bz2D,KAAKkvD,IAAMlvD,KAAKovD,IAAMpvD,KAAK42D,IAAM/1B,IACjC7gC,KAAKg4D,OAASh4D,KAAKk4D,OAASl4D,KAAKo4D,OACjCp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAAUn4D,KAAKq4D,QACnCr4D,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,WACH7zD,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAGjB,GAFA6O,GAAKA,EAAG7O,GAAKA,EAETvF,KAAK4zD,OAAQ,CACf,IAAI6E,IAAMz4D,KAAKy2D,IAAMriD,EACjBskD,IAAM14D,KAAK42D,IAAMrxD,EACrBvF,KAAKo4D,OAASx3D,KAAKkU,KAAK9U,KAAKq4D,QAAUz3D,KAAKoU,IAAIyjD,IAAMA,IAAMC,IAAMA,IAAK14D,KAAKw4D,SAG9E,OAAQx4D,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOvvD,KAAKy2D,IAAKz2D,KAAK42D,KAAO52D,KAAK63B,SAASw3B,OAAOrvD,KAAKy2D,IAAKz2D,KAAK42D,KAAM,MAC3H,KAAK,EAAG52D,KAAK4zD,OAAS,EACtB,QAASE,iBAAM9zD,KAAMoU,EAAG7O,GAG1BvF,KAAKg4D,OAASh4D,KAAKk4D,OAAQl4D,KAAKk4D,OAASl4D,KAAKo4D,OAC9Cp4D,KAAKi4D,QAAUj4D,KAAKm4D,QAASn4D,KAAKm4D,QAAUn4D,KAAKq4D,QACjDr4D,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAMnvD,KAAKy2D,IAAKz2D,KAAKy2D,IAAMriD,EACrDpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAMpvD,KAAK42D,IAAK52D,KAAK42D,IAAMrxD,KAI1C,SAAU+xD,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAIO,eAAehhC,QAASygC,OAAS,IAAIR,aAAajgC,QAAS,GAOhF,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,IC3DH,SAASG,aAAajhC,SACpB93B,KAAK63B,SAAWC,QAGlBihC,aAAah/D,WACXy5D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACT3zD,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACH7zD,KAAK4zD,QAAQ5zD,KAAK63B,SAASy3B,aAEjCwE,MAAO,SAAAA,MAAS1/C,EAAG7O,GACjB6O,GAAKA,EAAG7O,GAAKA,EACTvF,KAAK4zD,OAAQ5zD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,IACpCvF,KAAK4zD,OAAS,EAAG5zD,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,MClBlD,SAASu0C,cAAK1lC,GACZ,OAAOA,EAAI,GAAK,EAAI,EAOtB,SAAS4kD,OAAO1C,KAAM3G,GAAIC,IACxB,IAAIqJ,GAAK3C,KAAKnH,IAAMmH,KAAKrH,IACrBiK,GAAKvJ,GAAK2G,KAAKnH,IACfgK,IAAM7C,KAAKlH,IAAMkH,KAAKpH,MAAQ+J,IAAMC,GAAK,IAAM,GAC/C1uC,IAAMolC,GAAK0G,KAAKlH,MAAQ8J,IAAMD,GAAK,IAAM,GACzCh/D,GAAKk/D,GAAKD,GAAK1uC,GAAKyuC,KAAOA,GAAKC,IACpC,OAAQpf,cAAKqf,IAAMrf,cAAKtvB,KAAO5pB,KAAKC,IAAID,KAAKuL,IAAIgtD,IAAKv4D,KAAKuL,IAAIqe,IAAK,GAAM5pB,KAAKuL,IAAIlS,KAAO,EAI5F,SAASm/D,OAAO9C,KAAMn9D,GACpB,IAAIk3C,EAAIimB,KAAKnH,IAAMmH,KAAKrH,IACxB,OAAO5e,GAAK,GAAKimB,KAAKlH,IAAMkH,KAAKpH,KAAO7e,EAAIl3C,GAAK,EAAIA,EAMvD,SAAS26D,eAAMwC,KAAMjlB,GAAIC,IACvB,IAAIwL,GAAKwZ,KAAKrH,IACVa,GAAKwG,KAAKpH,IACVnS,GAAKuZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACV4B,IAAMjU,GAAKD,IAAM,EACrBwZ,KAAKz+B,SAAS63B,cAAc5S,GAAKkU,GAAIlB,GAAKkB,GAAK3f,GAAI0L,GAAKiU,GAAIvB,GAAKuB,GAAK1f,GAAIyL,GAAI0S,IAGhF,SAAS4J,UAAUvhC,SACjB93B,KAAK63B,SAAWC,QA0ClB,SAASwhC,UAAUxhC,SACjB93B,KAAK63B,SAAW,IAAI0hC,eAAezhC,SAOrC,SAASyhC,eAAezhC,SACtB93B,KAAK63B,SAAWC,QCvFlB,SAAS0hC,QAAQ1hC,SACf93B,KAAK63B,SAAWC,QA2ClB,SAAS2hC,cAAcrlD,GACrB,IAAInc,EAEAI,EADAqB,EAAI0a,EAAE9U,OAAS,EAEfjF,EAAI,IAAI4P,MAAMvQ,GACdyL,EAAI,IAAI8E,MAAMvQ,GACdX,EAAI,IAAIkR,MAAMvQ,GAElB,IADAW,EAAE,GAAK,EAAG8K,EAAE,GAAK,EAAGpM,EAAE,GAAKqb,EAAE,GAAK,EAAIA,EAAE,GACnCnc,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAGoC,EAAEpC,GAAK,EAAGkN,EAAElN,GAAK,EAAGc,EAAEd,GAAK,EAAImc,EAAEnc,GAAK,EAAImc,EAAEnc,EAAI,GAE5E,IADAoC,EAAEX,EAAI,GAAK,EAAGyL,EAAEzL,EAAI,GAAK,EAAGX,EAAEW,EAAI,GAAK,EAAI0a,EAAE1a,EAAI,GAAK0a,EAAE1a,GACnDzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGI,EAAIgC,EAAEpC,GAAKkN,EAAElN,EAAI,GAAIkN,EAAElN,IAAMI,EAAGU,EAAEd,IAAMI,EAAIU,EAAEd,EAAI,GAE1E,IADAoC,EAAEX,EAAI,GAAKX,EAAEW,EAAI,GAAKyL,EAAEzL,EAAI,GACvBzB,EAAIyB,EAAI,EAAGzB,GAAK,IAAKA,EAAGoC,EAAEpC,IAAMc,EAAEd,GAAKoC,EAAEpC,EAAI,IAAMkN,EAAElN,GAE1D,IADAkN,EAAEzL,EAAI,IAAM0a,EAAE1a,GAAKW,EAAEX,EAAI,IAAM,EAC1BzB,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAGkN,EAAElN,GAAK,EAAImc,EAAEnc,EAAI,GAAKoC,EAAEpC,EAAI,GACxD,OAAQoC,EAAG8K,GDpBbk0D,UAAUt/D,WACRy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKivD,IAAMjvD,KAAKmvD,IAChBnvD,KAAKkvD,IAAMlvD,KAAKovD,IAChBpvD,KAAK05D,IAAM74B,IACX7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ7zD,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK63B,SAAS03B,OAAOvvD,KAAKmvD,IAAKnvD,KAAKovD,KAAM,MAClD,KAAK,EAAG0E,eAAM9zD,KAAMA,KAAK05D,IAAKN,OAAOp5D,KAAMA,KAAK05D,OAE9C15D,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACzEtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,OAExBK,MAAO,SAAAA,MAAS1/C,EAAG7O,GACjB,IAAI+rC,GAAKzQ,IAGT,GADQt7B,GAAKA,GAAb6O,GAAKA,KACKpU,KAAKmvD,KAAO5pD,IAAMvF,KAAKovD,IAAjC,CACA,OAAQpvD,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EAAG,MACzB,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAGE,eAAM9zD,KAAMo5D,OAAOp5D,KAAMsxC,GAAK0nB,OAAOh5D,KAAMoU,EAAG7O,IAAK+rC,IAAK,MACjF,QAASwiB,eAAM9zD,KAAMA,KAAK05D,IAAKpoB,GAAK0nB,OAAOh5D,KAAMoU,EAAG7O,IAGtDvF,KAAKivD,IAAMjvD,KAAKmvD,IAAKnvD,KAAKmvD,IAAM/6C,EAChCpU,KAAKkvD,IAAMlvD,KAAKovD,IAAKpvD,KAAKovD,IAAM7pD,EAChCvF,KAAK05D,IAAMpoB,OAQdgoB,UAAUv/D,UAAYpB,OAAOY,OAAO8/D,UAAUt/D,YAAY+5D,MAAQ,SAAS1/C,EAAG7O,GAC7E8zD,UAAUt/D,UAAU+5D,MAAM17D,KAAK4H,KAAMuF,EAAG6O,IAO1CmlD,eAAex/D,WACbs1D,OAAQ,SAAAA,OAASj7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAO9pD,EAAG6O,IACjDk7C,UAAW,SAAAA,YAAatvD,KAAK63B,SAASy3B,aACtCC,OAAQ,SAAAA,OAASn7C,EAAG7O,GAAKvF,KAAK63B,SAAS03B,OAAOhqD,EAAG6O,IACjDs7C,cAAe,SAAAA,cAAS3S,GAAI0S,GAAIE,GAAIC,GAAIx7C,EAAG7O,GAAKvF,KAAK63B,SAAS63B,cAAcD,GAAI1S,GAAI6S,GAAID,GAAIpqD,EAAG6O,KC1FjGolD,QAAQz/D,WACNy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKo3D,MACLp3D,KAAKq3D,OAEPxD,QAAS,SAAAA,UACP,IAAIz/C,EAAIpU,KAAKo3D,GACT7xD,EAAIvF,KAAKq3D,GACT39D,EAAI0a,EAAE9U,OAEV,GAAI5F,EAEF,GADAsG,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAE,GAAI7O,EAAE,IAAMvF,KAAK63B,SAASw3B,OAAOj7C,EAAE,GAAI7O,EAAE,IACnE,IAAN7L,EACFsG,KAAK63B,SAAS03B,OAAOn7C,EAAE,GAAI7O,EAAE,SAI7B,IAFA,IAAIo0D,GAAKF,cAAcrlD,GACnBwlD,GAAKH,cAAcl0D,GACdk9B,GAAK,EAAG8X,GAAK,EAAGA,GAAK7gD,IAAK+oC,KAAM8X,GACvCv6C,KAAK63B,SAAS63B,cAAciK,GAAG,GAAGl3B,IAAKm3B,GAAG,GAAGn3B,IAAKk3B,GAAG,GAAGl3B,IAAKm3B,GAAG,GAAGn3B,IAAKruB,EAAEmmC,IAAKh1C,EAAEg1C,MAKnFv6C,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAAqB,IAAN/5D,IAAUsG,KAAK63B,SAASy3B,YAC/DtvD,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,MACtBzzD,KAAKo3D,GAAKp3D,KAAKq3D,GAAK,MAEtBvD,MAAO,SAAAA,MAAS1/C,EAAG7O,GACjBvF,KAAKo3D,GAAG51D,MAAM4S,GACdpU,KAAKq3D,GAAG71D,MAAM+D,KCvClB,SAASs0D,KAAK/hC,QAAS3+B,GACrB6G,KAAK63B,SAAWC,QAChB93B,KAAK85D,GAAK3gE,EAGZ0gE,KAAK9/D,WACHy5D,UAAW,SAAAA,YACTxzD,KAAKyzD,MAAQ,GAEfC,QAAS,SAAAA,UACP1zD,KAAKyzD,MAAQ5yB,KAEf8yB,UAAW,SAAAA,YACT3zD,KAAKo3D,GAAKp3D,KAAKq3D,GAAKx2B,IACpB7gC,KAAK4zD,OAAS,GAEhBC,QAAS,SAAAA,UACH,EAAI7zD,KAAK85D,IAAM95D,KAAK85D,GAAK,GAAqB,IAAhB95D,KAAK4zD,QAAc5zD,KAAK63B,SAAS03B,OAAOvvD,KAAKo3D,GAAIp3D,KAAKq3D,KACpFr3D,KAAKyzD,OAAyB,IAAfzzD,KAAKyzD,OAA+B,IAAhBzzD,KAAK4zD,SAAe5zD,KAAK63B,SAASy3B,YACrEtvD,KAAKyzD,OAAS,IAAGzzD,KAAK85D,GAAK,EAAI95D,KAAK85D,GAAI95D,KAAKyzD,MAAQ,EAAIzzD,KAAKyzD,QAEpEK,MAAO,SAAAA,MAAS1/C,EAAG7O,GAEjB,OADA6O,GAAKA,EAAG7O,GAAKA,EACLvF,KAAK4zD,QACX,KAAK,EAAG5zD,KAAK4zD,OAAS,EAAG5zD,KAAKyzD,MAAQzzD,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,GAAKvF,KAAK63B,SAASw3B,OAAOj7C,EAAG7O,GAAI,MAC/F,KAAK,EAAGvF,KAAK4zD,OAAS,EACtB,QACE,GAAI5zD,KAAK85D,IAAM,EACb95D,KAAK63B,SAAS03B,OAAOvvD,KAAKo3D,GAAI7xD,GAC9BvF,KAAK63B,SAAS03B,OAAOn7C,EAAG7O,OACnB,CACL,IAAIw3C,GAAK/8C,KAAKo3D,IAAM,EAAIp3D,KAAK85D,IAAM1lD,EAAIpU,KAAK85D,GAC5C95D,KAAK63B,SAAS03B,OAAOxS,GAAI/8C,KAAKq3D,IAC9Br3D,KAAK63B,SAAS03B,OAAOxS,GAAIx3C,IAK/BvF,KAAKo3D,GAAKhjD,EAAGpU,KAAKq3D,GAAK9xD,IAIZ,IAAAw0D,WAAA,SAASjiC,SACtB,OAAO,IAAI+hC,KAAK/hC,QAAS,KAGpB,SAASkiC,WAAWliC,SACzB,OAAO,IAAI+hC,KAAK/hC,QAAS,GAGpB,SAASmiC,UAAUniC,SACxB,OAAO,IAAI+hC,KAAK/hC,QAAS,GCnDZ,IAAAoiC,KAAA,SAASC,OAAQh2C,OAC9B,IAAOzqB,EAAIygE,OAAO76D,QAAU,EAC5B,IAAK,IAAWgb,EAAG6+C,GAA2Bz/D,EAArCzB,EAAI,EAAUuyB,GAAK2vC,OAAOh2C,MAAM,IAAQ9rB,EAAImyB,GAAGlrB,OAAQrH,EAAIyB,IAAKzB,EAEvE,IADAkhE,GAAK3uC,GAAIA,GAAK2vC,OAAOh2C,MAAMlsB,IACtBqiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EACnBkQ,GAAGlQ,GAAG,IAAMkQ,GAAGlQ,GAAG,GAAK9C,MAAM2hD,GAAG7+C,GAAG,IAAM6+C,GAAG7+C,GAAG,GAAK6+C,GAAG7+C,GAAG,ICLjD8/C,WAAA,SAASD,QAEtB,IADA,IAAIzgE,EAAIygE,OAAO76D,OAAQ5G,EAAI,IAAIuR,MAAMvQ,KAC5BA,GAAK,GAAGhB,EAAEgB,GAAKA,EACxB,OAAOhB,GCET,SAAS2hE,WAAW9hE,EAAGiB,KACrB,OAAOjB,EAAEiB,KCJI,IAAA8gE,gBAAA,SAASH,QACtB,IAAII,KAAOJ,OAAO7wD,IAAIyK,eACtB,OAAOmmD,WAAKC,QAAQ3oD,KAAK,SAASnX,EAAG8K,GAAK,OAAOo1D,KAAKlgE,GAAKkgE,KAAKp1D,MAG3D,SAAS4O,cAAIomD,QAElB,IADA,IAAsCv9C,EAAlC1iB,EAAI,EAAGjC,GAAK,EAAGyB,EAAIygE,OAAO76D,SACrBrH,EAAIyB,IAAOkjB,GAAKu9C,OAAOliE,GAAG,MAAIiC,GAAK0iB,GAC5C,OAAO1iB,ECFF,SAASsgE,WAAWrhE,GACzB,QAASA,GAAK,IAAM,EAAIA,EAAIA,EAAIA,GAAKA,GAAK,GAAKA,EAAIA,EAAI,GAAK,GCPzC,SAASm+D,OAAOn9D,GAGnC,SAASsgE,OAAOthE,GACd,OAAOyH,KAAKoU,IAAI7b,EAAGgB,GAKrB,OARAA,GAAKA,EAMLsgE,OAAOhgB,SAAW6c,OAEXmD,QATY,CAFN,GAcO,SAASnD,OAAOn9D,GAGpC,SAASugE,QAAQvhE,GACf,OAAO,EAAIyH,KAAKoU,IAAI,EAAI7b,EAAGgB,GAK7B,OARAA,GAAKA,EAMLugE,QAAQjgB,SAAW6c,OAEZoD,QATa,CAdP,GAAf,IA0BWC,UAAa,SAASrD,OAAOn9D,GAGtC,SAASwgE,UAAUxhE,GACjB,QAASA,GAAK,IAAM,EAAIyH,KAAKoU,IAAI7b,EAAGgB,GAAK,EAAIyG,KAAKoU,IAAI,EAAI7b,EAAGgB,IAAM,EAKrE,OARAA,GAAKA,EAMLwgE,UAAUlgB,SAAW6c,OAEdqD,UATe,CA1BT,GCAN/5D,KAAKowC,GCAd,IAAI3/B,GAAK,EAAI,GACTupD,GAAK,EAAI,GACTC,GAAK,EAAI,GACTC,GAAK,IACLC,GAAK,EAAI,GACTC,GAAK,GAAK,GACVC,GAAK,MACLC,GAAK,GAAK,GACVC,GAAK,GAAK,GACVC,GAAK,EAAI/pD,GAAKA,GAMX,SAASgqD,UAAUliE,GACxB,OAAQA,GAAKA,GAAKkY,GAAK+pD,GAAKjiE,EAAIA,EAAIA,EAAI0hE,GAAKO,IAAMjiE,GAAKyhE,IAAMzhE,EAAI2hE,GAAK3hE,EAAI6hE,GAAKI,IAAMjiE,GAAK4hE,IAAM5hE,EAAI8hE,GAAKG,IAAMjiE,GAAK+hE,IAAM/hE,EAAIgiE,ICd5G,SAAS7D,OAAOp9D,GAGnC,SAASohE,OAAOniE,GACd,OAAOA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAKhC,OARAA,GAAKA,EAMLohE,OAAOC,UAAYjE,OAEZgE,QATY,CAFL,SAcM,SAAShE,OAAOp9D,GAGpC,SAASshE,QAAQriE,GACf,QAASA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,EAKvC,OARAA,GAAKA,EAMLshE,QAAQD,UAAYjE,OAEbkE,QATa,CAdN,SAAhB,IA0BWC,UAAa,SAASnE,OAAOp9D,GAGtC,SAASuhE,UAAUtiE,GACjB,QAASA,GAAK,GAAK,EAAIA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,IAAMf,GAAK,GAAKA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,GAAK,EAK7F,OARAA,GAAKA,EAMLuhE,UAAUF,UAAYjE,OAEfmE,UATe,CA1BR,SCAZ3M,YAAM,EAAIluD,KAAKowC,GAiBR0qB,YAba,SAASpE,OAAOj9D,EAAGJ,GACzC,IAAIC,EAAI0G,KAAK2wD,KAAK,GAAKl3D,EAAIuG,KAAKG,IAAI,EAAG1G,MAAQJ,GAAK60D,aAEpD,SAAS6M,UAAUxiE,GACjB,OAAOkB,EAAIuG,KAAKoU,IAAI,EAAG,KAAO7b,GAAKyH,KAAKixC,KAAK33C,EAAIf,GAAKc,GAMxD,OAHA0hE,UAAUC,UAAY,SAASvhE,GAAK,OAAOi9D,OAAOj9D,EAAGJ,EAAI60D,cACzD6M,UAAUE,OAAS,SAAS5hE,GAAK,OAAOq9D,OAAOj9D,EAAGJ,IAE3C0hE,UAVe,CAHR,EACH,IAeY,SAASrE,OAAOj9D,EAAGJ,GAC1C,IAAIC,EAAI0G,KAAK2wD,KAAK,GAAKl3D,EAAIuG,KAAKG,IAAI,EAAG1G,MAAQJ,GAAK60D,aAEpD,SAAS4M,WAAWviE,GAClB,OAAO,EAAIkB,EAAIuG,KAAKoU,IAAI,GAAI,IAAM7b,GAAKA,IAAMyH,KAAKixC,KAAK14C,EAAIe,GAAKD,GAMlE,OAHAyhE,WAAWE,UAAY,SAASvhE,GAAK,OAAOi9D,OAAOj9D,EAAGJ,EAAI60D,cAC1D4M,WAAWG,OAAS,SAAS5hE,GAAK,OAAOq9D,OAAOj9D,EAAGJ,IAE5CyhE,WAVgB,CAhBT,EACH,KCFEI,yBD8BY,SAASxE,OAAOj9D,EAAGJ,GAC5C,IAAIC,EAAI0G,KAAK2wD,KAAK,GAAKl3D,EAAIuG,KAAKG,IAAI,EAAG1G,MAAQJ,GAAK60D,aAEpD,SAASiN,aAAa5iE,GACpB,QAASA,EAAQ,EAAJA,EAAQ,GAAK,EACpBkB,EAAIuG,KAAKoU,IAAI,EAAG,GAAK7b,GAAKyH,KAAKixC,KAAK33C,EAAIf,GAAKc,GAC7C,EAAII,EAAIuG,KAAKoU,IAAI,GAAI,GAAK7b,GAAKyH,KAAKixC,KAAK33C,EAAIf,GAAKc,IAAM,EAMhE,OAHA8hE,aAAaH,UAAY,SAASvhE,GAAK,OAAOi9D,OAAOj9D,EAAGJ,EAAI60D,cAC5DiN,aAAaF,OAAS,SAAS5hE,GAAK,OAAOq9D,OAAOj9D,EAAGJ,IAE9C8hE,aAZkB,CA7BX,EACH,ICFE,SAAS3nD,GACtB,OAAO,WACL,OAAOA,KCFJ,SAASA,YAAE7b,GAChB,OAAOA,EAAE,GAGJ,SAASgN,YAAEhN,GAChB,OAAOA,EAAE,GCLX,SAASyjE,eACPh8D,KAAK8e,EAAI,KAGJ,SAASm9C,aAAajwC,MAC3BA,KAAKu2B,EACLv2B,KAAKumB,EACLvmB,KAAKk1B,EACLl1B,KAAKkwC,EACLlwC,KAAKznB,EACLynB,KAAK9R,EAAI,KAuLX,SAASiiD,mBAAmBC,KAAMpwC,MAChC,IAAI/xB,EAAI+xB,KACJ+oB,EAAI/oB,KAAKkwC,EACTv4C,OAAS1pB,EAAEsoD,EAEX5+B,OACEA,OAAOu9B,IAAMjnD,EAAG0pB,OAAOu9B,EAAInM,EAC1BpxB,OAAOu4C,EAAInnB,EAEhBqnB,KAAKt9C,EAAIi2B,EAGXA,EAAEwN,EAAI5+B,OACN1pB,EAAEsoD,EAAIxN,EACN96C,EAAEiiE,EAAInnB,EAAEmM,EACJjnD,EAAEiiE,IAAGjiE,EAAEiiE,EAAE3Z,EAAItoD,GACjB86C,EAAEmM,EAAIjnD,EAGR,SAASoiE,oBAAoBD,KAAMpwC,MACjC,IAAI/xB,EAAI+xB,KACJ+oB,EAAI/oB,KAAKk1B,EACTv9B,OAAS1pB,EAAEsoD,EAEX5+B,OACEA,OAAOu9B,IAAMjnD,EAAG0pB,OAAOu9B,EAAInM,EAC1BpxB,OAAOu4C,EAAInnB,EAEhBqnB,KAAKt9C,EAAIi2B,EAGXA,EAAEwN,EAAI5+B,OACN1pB,EAAEsoD,EAAIxN,EACN96C,EAAEinD,EAAInM,EAAEmnB,EACJjiE,EAAEinD,IAAGjnD,EAAEinD,EAAEqB,EAAItoD,GACjB86C,EAAEmnB,EAAIjiE,EAGR,SAASqiE,cAActwC,MACrB,KAAOA,KAAKk1B,GAAGl1B,KAAOA,KAAKk1B,EAC3B,OAAOl1B,KA5NTgwC,aAAajiE,WACX6c,YAAaolD,aAEbvN,OAAQ,SAAAA,OAAS8N,MAAOvwC,MACtB,IAAIrI,OAAQ64C,QAASC,MAErB,GAAIF,MAAO,CAKT,GAJAvwC,KAAKznB,EAAIg4D,MACTvwC,KAAK9R,EAAIqiD,MAAMriD,EACXqiD,MAAMriD,IAAGqiD,MAAMriD,EAAE3V,EAAIynB,MACzBuwC,MAAMriD,EAAI8R,KACNuwC,MAAML,EAAG,CAEX,IADAK,MAAQA,MAAML,EACPK,MAAMrb,GAAGqb,MAAQA,MAAMrb,EAC9Bqb,MAAMrb,EAAIl1B,UAEVuwC,MAAML,EAAIlwC,KAEZrI,OAAS44C,WACAv8D,KAAK8e,GACdy9C,MAAQD,cAAct8D,KAAK8e,GAC3BkN,KAAKznB,EAAI,KACTynB,KAAK9R,EAAIqiD,MACTA,MAAMh4D,EAAIg4D,MAAMrb,EAAIl1B,KACpBrI,OAAS44C,QAETvwC,KAAKznB,EAAIynB,KAAK9R,EAAI,KAClBla,KAAK8e,EAAIkN,KACTrI,OAAS,MAOX,IALAqI,KAAKk1B,EAAIl1B,KAAKkwC,EAAI,KAClBlwC,KAAKu2B,EAAI5+B,OACTqI,KAAKumB,GAAI,EAETgqB,MAAQvwC,KACDrI,QAAUA,OAAO4uB,GAElB5uB,UADJ64C,QAAU74C,OAAO4+B,GACMrB,GACrBub,MAAQD,QAAQN,IACHO,MAAMlqB,GACjB5uB,OAAO4uB,EAAIkqB,MAAMlqB,GAAI,EACrBiqB,QAAQjqB,GAAI,EACZgqB,MAAQC,UAEJD,QAAU54C,OAAOu4C,IACnBC,mBAAmBn8D,KAAM2jB,QAEzBA,QADA44C,MAAQ54C,QACO4+B,GAEjB5+B,OAAO4uB,GAAI,EACXiqB,QAAQjqB,GAAI,EACZ8pB,oBAAoBr8D,KAAMw8D,WAG5BC,MAAQD,QAAQtb,IACHub,MAAMlqB,GACjB5uB,OAAO4uB,EAAIkqB,MAAMlqB,GAAI,EACrBiqB,QAAQjqB,GAAI,EACZgqB,MAAQC,UAEJD,QAAU54C,OAAOu9B,IACnBmb,oBAAoBr8D,KAAM2jB,QAE1BA,QADA44C,MAAQ54C,QACO4+B,GAEjB5+B,OAAO4uB,GAAI,EACXiqB,QAAQjqB,GAAI,EACZ4pB,mBAAmBn8D,KAAMw8D,UAG7B74C,OAAS44C,MAAMha,EAEjBviD,KAAK8e,EAAEyzB,GAAI,GAGb3P,OAAQ,SAAAA,OAAS5W,MACXA,KAAK9R,IAAG8R,KAAK9R,EAAE3V,EAAIynB,KAAKznB,GACxBynB,KAAKznB,IAAGynB,KAAKznB,EAAE2V,EAAI8R,KAAK9R,GAC5B8R,KAAK9R,EAAI8R,KAAKznB,EAAI,KAElB,IACImf,QAGAxQ,KACA66B,IALApqB,OAASqI,KAAKu2B,EAEdthB,KAAOjV,KAAKk1B,EACZhgB,MAAQlV,KAAKkwC,EAsCjB,GAhCKhpD,KAFA+tB,KACKC,MACEo7B,cAAcp7B,OADFD,KADNC,MAIdvd,OACEA,OAAOu9B,IAAMl1B,KAAMrI,OAAOu9B,EAAIhuC,KAC7ByQ,OAAOu4C,EAAIhpD,KAEhBlT,KAAK8e,EAAI5L,KAGP+tB,MAAQC,OACV6M,IAAM76B,KAAKq/B,EACXr/B,KAAKq/B,EAAIvmB,KAAKumB,EACdr/B,KAAKguC,EAAIjgB,KACTA,KAAKshB,EAAIrvC,KACLA,OAASguB,OACXvd,OAASzQ,KAAKqvC,EACdrvC,KAAKqvC,EAAIv2B,KAAKu2B,EACdv2B,KAAO9Y,KAAKgpD,EACZv4C,OAAOu9B,EAAIl1B,KACX9Y,KAAKgpD,EAAIh7B,MACTA,MAAMqhB,EAAIrvC,OAEVA,KAAKqvC,EAAI5+B,OACTA,OAASzQ,KACT8Y,KAAO9Y,KAAKgpD,KAGdnuB,IAAM/hB,KAAKumB,EACXvmB,KAAO9Y,MAGL8Y,OAAMA,KAAKu2B,EAAI5+B,SACfoqB,IACJ,GAAI/hB,MAAQA,KAAKumB,EAAKvmB,KAAKumB,GAAI,MAA/B,CAEA,EAAG,CACD,GAAIvmB,OAAShsB,KAAK8e,EAAG,MACrB,GAAIkN,OAASrI,OAAOu9B,GAQlB,IAPAx9B,QAAUC,OAAOu4C,GACL3pB,IACV7uB,QAAQ6uB,GAAI,EACZ5uB,OAAO4uB,GAAI,EACX4pB,mBAAmBn8D,KAAM2jB,QACzBD,QAAUC,OAAOu4C,GAEdx4C,QAAQw9B,GAAKx9B,QAAQw9B,EAAE3O,GACpB7uB,QAAQw4C,GAAKx4C,QAAQw4C,EAAE3pB,EAAI,CAC5B7uB,QAAQw4C,GAAMx4C,QAAQw4C,EAAE3pB,IAC3B7uB,QAAQw9B,EAAE3O,GAAI,EACd7uB,QAAQ6uB,GAAI,EACZ8pB,oBAAoBr8D,KAAM0jB,SAC1BA,QAAUC,OAAOu4C,GAEnBx4C,QAAQ6uB,EAAI5uB,OAAO4uB,EACnB5uB,OAAO4uB,EAAI7uB,QAAQw4C,EAAE3pB,GAAI,EACzB4pB,mBAAmBn8D,KAAM2jB,QACzBqI,KAAOhsB,KAAK8e,EACZ,YAUF,IAPA4E,QAAUC,OAAOu9B,GACL3O,IACV7uB,QAAQ6uB,GAAI,EACZ5uB,OAAO4uB,GAAI,EACX8pB,oBAAoBr8D,KAAM2jB,QAC1BD,QAAUC,OAAOu9B,GAEdx9B,QAAQw9B,GAAKx9B,QAAQw9B,EAAE3O,GACtB7uB,QAAQw4C,GAAKx4C,QAAQw4C,EAAE3pB,EAAI,CAC1B7uB,QAAQw9B,GAAMx9B,QAAQw9B,EAAE3O,IAC3B7uB,QAAQw4C,EAAE3pB,GAAI,EACd7uB,QAAQ6uB,GAAI,EACZ4pB,mBAAmBn8D,KAAM0jB,SACzBA,QAAUC,OAAOu9B,GAEnBx9B,QAAQ6uB,EAAI5uB,OAAO4uB,EACnB5uB,OAAO4uB,EAAI7uB,QAAQw9B,EAAE3O,GAAI,EACzB8pB,oBAAoBr8D,KAAM2jB,QAC1BqI,KAAOhsB,KAAK8e,EACZ,MAGJ4E,QAAQ6uB,GAAI,EACZvmB,KAAOrI,OACPA,OAASA,OAAO4+B,SACRv2B,KAAKumB,GAEXvmB,OAAMA,KAAKumB,GAAI,MA+CRypB,kCC1OR,SAASU,WAAWz7B,KAAMC,MAAOgS,GAAIC,IAC1C,IAAIplB,MAAQ,KAAM,MACd/pB,MAAQspB,cAAM9rB,KAAKusB,MAAQ,EAO/B,OANAA,KAAKkT,KAAOA,KACZlT,KAAKmT,MAAQA,MACTgS,IAAIypB,WAAW5uC,KAAMkT,KAAMC,MAAOgS,IAClCC,IAAIwpB,WAAW5uC,KAAMmT,MAAOD,KAAMkS,IACtCypB,cAAM37B,KAAKj9B,OAAO64D,UAAUr7D,KAAKwC,OACjC44D,cAAM17B,MAAMl9B,OAAO64D,UAAUr7D,KAAKwC,OAC3B+pB,KAGF,SAAS+uC,iBAAiB77B,KAAMiS,GAAIC,IACzC,IAAIplB,MAAQmlB,GAAIC,IAEhB,OADAplB,KAAKkT,KAAOA,KACLlT,KAGF,SAAS4uC,WAAW5uC,KAAMkT,KAAMC,MAAO67B,QACvChvC,KAAK,IAAOA,KAAK,GAIXA,KAAKkT,OAASC,MACvBnT,KAAK,GAAKgvC,OAEVhvC,KAAK,GAAKgvC,QANVhvC,KAAK,GAAKgvC,OACVhvC,KAAKkT,KAAOA,KACZlT,KAAKmT,MAAQA,OASjB,SAAS87B,SAASjvC,KAAM+uB,GAAIgT,GAAI/S,GAAI0S,IAClC,IAUI12D,EAVAsB,EAAI0zB,KAAK,GACT5oB,EAAI4oB,KAAK,GACTkvC,GAAK5iE,EAAE,GACP6iE,GAAK7iE,EAAE,GAGPg3C,GAAK,EACLC,GAAK,EACL0f,GAJK7rD,EAAE,GAIG83D,GACVhM,GAJK9rD,EAAE,GAIG+3D,GAId,GADAnkE,EAAI+jD,GAAKmgB,GACJjM,MAAMj4D,EAAI,GAAf,CAEA,GADAA,GAAKi4D,GACDA,GAAK,EAAG,CACV,GAAIj4D,EAAIs4C,GAAI,OACRt4C,EAAIu4C,KAAIA,GAAKv4C,QACZ,GAAIi4D,GAAK,EAAG,CACjB,GAAIj4D,EAAIu4C,GAAI,OACRv4C,EAAIs4C,KAAIA,GAAKt4C,GAInB,GADAA,EAAIgkD,GAAKkgB,GACJjM,MAAMj4D,EAAI,GAAf,CAEA,GADAA,GAAKi4D,GACDA,GAAK,EAAG,CACV,GAAIj4D,EAAIu4C,GAAI,OACRv4C,EAAIs4C,KAAIA,GAAKt4C,QACZ,GAAIi4D,GAAK,EAAG,CACjB,GAAIj4D,EAAIs4C,GAAI,OACRt4C,EAAIu4C,KAAIA,GAAKv4C,GAInB,GADAA,EAAI+2D,GAAKoN,GACJjM,MAAMl4D,EAAI,GAAf,CAEA,GADAA,GAAKk4D,GACDA,GAAK,EAAG,CACV,GAAIl4D,EAAIs4C,GAAI,OACRt4C,EAAIu4C,KAAIA,GAAKv4C,QACZ,GAAIk4D,GAAK,EAAG,CACjB,GAAIl4D,EAAIu4C,GAAI,OACRv4C,EAAIs4C,KAAIA,GAAKt4C,GAInB,GADAA,EAAI02D,GAAKyN,GACJjM,MAAMl4D,EAAI,GAAf,CAEA,GADAA,GAAKk4D,GACDA,GAAK,EAAG,CACV,GAAIl4D,EAAIu4C,GAAI,OACRv4C,EAAIs4C,KAAIA,GAAKt4C,QACZ,GAAIk4D,GAAK,EAAG,CACjB,GAAIl4D,EAAIs4C,GAAI,OACRt4C,EAAIu4C,KAAIA,GAAKv4C,GAGnB,QAAMs4C,GAAK,GAAQC,GAAK,KAEpBD,GAAK,IAAGtjB,KAAK,IAAMkvC,GAAK5rB,GAAK2f,GAAIkM,GAAK7rB,GAAK4f,KAC3C3f,GAAK,IAAGvjB,KAAK,IAAMkvC,GAAK3rB,GAAK0f,GAAIkM,GAAK5rB,GAAK2f,MACxC,OAGT,SAASkM,YAAYpvC,KAAM+uB,GAAIgT,GAAI/S,GAAI0S,IACrC,IAAItc,GAAKplB,KAAK,GACd,GAAIolB,GAAI,OAAO,EAEf,IASIiqB,GACAC,GAVAnqB,GAAKnlB,KAAK,GACVkT,KAAOlT,KAAKkT,KACZC,MAAQnT,KAAKmT,MACbo8B,GAAKr8B,KAAK,GACVs8B,GAAKt8B,KAAK,GACVu8B,GAAKt8B,MAAM,GACXu8B,GAAKv8B,MAAM,GACXw8B,IAAMJ,GAAKE,IAAM,EACjBG,IAAMJ,GAAKE,IAAM,EAIrB,GAAIA,KAAOF,GAAI,CACb,GAAIG,GAAK5gB,IAAM4gB,IAAM3gB,GAAI,OACzB,GAAIugB,GAAKE,GAAI,CACX,GAAKtqB,IACA,GAAIA,GAAG,IAAMuc,GAAI,YADbvc,IAAMwqB,GAAI5N,IAEnB3c,IAAMuqB,GAAIjO,QACL,CACL,GAAKvc,IACA,GAAIA,GAAG,GAAK4c,GAAI,YADZ5c,IAAMwqB,GAAIjO,IAEnBtc,IAAMuqB,GAAI5N,UAKZ,GADAuN,GAAKM,IADLP,IAAME,GAAKE,KAAOC,GAAKF,KACRG,GACXN,IAAM,GAAKA,GAAK,EAClB,GAAIE,GAAKE,GAAI,CACX,GAAKtqB,IACA,GAAIA,GAAG,IAAMuc,GAAI,YADbvc,KAAO4c,GAAKuN,IAAMD,GAAItN,IAE/B3c,KAAOsc,GAAK4N,IAAMD,GAAI3N,QACjB,CACL,GAAKvc,IACA,GAAIA,GAAG,GAAK4c,GAAI,YADZ5c,KAAOuc,GAAK4N,IAAMD,GAAI3N,IAE/Btc,KAAO2c,GAAKuN,IAAMD,GAAItN,SAGxB,GAAIyN,GAAKE,GAAI,CACX,GAAKvqB,IACA,GAAIA,GAAG,IAAM6J,GAAI,YADb7J,IAAM4J,GAAIsgB,GAAKtgB,GAAKugB,IAE7BlqB,IAAM4J,GAAIqgB,GAAKrgB,GAAKsgB,QACf,CACL,GAAKnqB,IACA,GAAIA,GAAG,GAAK4J,GAAI,YADZ5J,IAAM6J,GAAIqgB,GAAKrgB,GAAKsgB,IAE7BlqB,IAAM2J,GAAIsgB,GAAKtgB,GAAKugB,IAO1B,OAFAtvC,KAAK,GAAKmlB,GACVnlB,KAAK,GAAKolB,IACH,EC9IT,SAASyqB,kBAAkBC,KAAM9vC,MAC/B,IAAI+vC,KAAOD,KAAKC,KACZC,GAAKhwC,KAAKkT,KACV+8B,GAAKjwC,KAAKmT,MAEd,OADI48B,OAASE,KAAIA,GAAKD,GAAIA,GAAKD,MAC3BE,GAAWp9D,KAAKyxC,MAAM2rB,GAAG,GAAKD,GAAG,GAAIC,GAAG,GAAKD,GAAG,KAChDD,OAASC,IAAIA,GAAKhwC,KAAK,GAAIiwC,GAAKjwC,KAAK,KACpCgwC,GAAKhwC,KAAK,GAAIiwC,GAAKjwC,KAAK,IACtBntB,KAAKyxC,MAAM0rB,GAAG,GAAKC,GAAG,GAAIA,GAAG,GAAKD,GAAG,KAGvC,SAASE,kBAAkBJ,KAAM9vC,MACtC,OAAOA,OAAOA,KAAKkT,OAAS48B,KAAKC,OAG5B,SAASI,gBAAgBL,KAAM9vC,MACpC,OAAOA,OAAOA,KAAKkT,OAAS48B,KAAKC,OCvBnC,IAEWK,YAFPC,cAaG,SAASC,aAAaxN,KAC3B,IAAIyN,KAAOzN,IAAItsD,EACXg6D,KAAO1N,IAAI32C,EAEf,GAAKokD,MAASC,KAAd,CAEA,IAAIC,MAAQF,KAAKR,KACbW,MAAQ5N,IAAIiN,KACZY,MAAQH,KAAKT,KAEjB,GAAIU,QAAUE,MAAd,CAEA,IAAIC,GAAKF,MAAM,GACXG,GAAKH,MAAM,GACXxB,GAAKuB,MAAM,GAAKG,GAChBzB,GAAKsB,MAAM,GAAKI,GAChBvL,GAAKqL,MAAM,GAAKC,GAChBrL,GAAKoL,MAAM,GAAKE,GAEhBrmE,EAAI,GAAK0kE,GAAK3J,GAAK4J,GAAK7J,IAC5B,KAAI96D,IAAMsmE,kBAAV,CAEA,IAAIC,GAAK7B,GAAKA,GAAKC,GAAKA,GACpB6B,GAAK1L,GAAKA,GAAKC,GAAKA,GACpBl/C,GAAKk/C,GAAKwL,GAAK5B,GAAK6B,IAAMxmE,EAC1BgN,GAAK03D,GAAK8B,GAAK1L,GAAKyL,IAAMvmE,EAE1BymE,OAASZ,WAAWl5C,OAAS,IApCnC,SAAS+5C,SACPhD,aAAaj8D,MACbA,KAAKoU,EACLpU,KAAKuF,EACLvF,KAAK6wD,IACL7wD,KAAK89D,KACL99D,KAAKszD,GAAK,MA+BV0L,OAAOnO,IAAMA,IACbmO,OAAOlB,KAAOW,MACdO,OAAO5qD,EAAIA,EAAIuqD,GACfK,OAAOz5D,GAAKy5D,OAAO1L,GAAK/tD,EAAIq5D,IAAMh+D,KAAKkU,KAAKV,EAAIA,EAAI7O,EAAIA,GAExDsrD,IAAImO,OAASA,OAKb,IAHA,IAAIE,OAAS,KACTlzC,KAAOmzC,QAAQrgD,EAEZkN,MACL,GAAIgzC,OAAOz5D,EAAIymB,KAAKzmB,GAAMy5D,OAAOz5D,IAAMymB,KAAKzmB,GAAKy5D,OAAO5qD,GAAK4X,KAAK5X,EAAI,CACpE,IAAI4X,KAAKk1B,EACJ,CAAEge,OAASlzC,KAAKznB,EAAG,MADZynB,KAAOA,KAAKk1B,MAEnB,CACL,IAAIl1B,KAAKkwC,EACJ,CAAEgD,OAASlzC,KAAM,MADVA,KAAOA,KAAKkwC,EAK5BiD,QAAQ1Q,OAAOyQ,OAAQF,QAClBE,SAAQf,YAAca,WAGtB,SAASI,aAAavO,KAC3B,IAAImO,OAASnO,IAAImO,OACbA,SACGA,OAAOz6D,IAAG45D,YAAca,OAAO9kD,GACpCilD,QAAQv8B,OAAOo8B,QACfZ,WAAW58D,KAAKw9D,QAChB/C,aAAa+C,QACbnO,IAAImO,OAAS,MCrEjB,IAAIK,aASJ,SAASC,YAAYxB,MACnB,IAAIyB,MAAQF,UAAUn6C,OAAS,IARjC,SAASs6C,QACPvD,aAAaj8D,MACbA,KAAK+tB,KACL/tB,KAAK89D,KACL99D,KAAKg/D,OAAS,MAMd,OADAO,MAAMzB,KAAOA,KACNyB,MAGT,SAASE,YAAYF,OACnBH,aAAaG,OACbG,QAAQ98B,OAAO28B,OACfF,UAAU79D,KAAK+9D,OACftD,aAAasD,OAGR,SAASI,YAAYJ,OAC1B,IAAIP,OAASO,MAAMP,OACf5qD,EAAI4qD,OAAO5qD,EACX7O,EAAIy5D,OAAO1L,GACXyJ,QAAU3oD,EAAG7O,GACb44C,SAAWohB,MAAMh7D,EACjB2O,KAAOqsD,MAAMrlD,EACb0lD,cAAgBL,OAEpBE,YAAYF,OAGZ,IADA,IAAIjB,KAAOngB,SACJmgB,KAAKU,QACLp+D,KAAKuL,IAAIiI,EAAIkqD,KAAKU,OAAO5qD,GAAK44C,iBAC9BpsD,KAAKuL,IAAI5G,EAAI+4D,KAAKU,OAAO1L,IAAMtG,iBACpC7O,SAAWmgB,KAAK/5D,EAChBq7D,aAAa/1D,QAAQy0D,MACrBmB,YAAYnB,MACZA,KAAOngB,SAGTyhB,aAAa/1D,QAAQy0D,MACrBc,aAAad,MAGb,IADA,IAAIC,KAAOrrD,KACJqrD,KAAKS,QACLp+D,KAAKuL,IAAIiI,EAAImqD,KAAKS,OAAO5qD,GAAK44C,iBAC9BpsD,KAAKuL,IAAI5G,EAAIg5D,KAAKS,OAAO1L,IAAMtG,iBACpC95C,KAAOqrD,KAAKrkD,EACZ0lD,aAAap+D,KAAK+8D,MAClBkB,YAAYlB,MACZA,KAAOrrD,KAGT0sD,aAAap+D,KAAK+8D,MAClBa,aAAab,MAEb,IACIsB,KADAC,MAAQF,aAAatgE,OAEzB,IAAKugE,KAAO,EAAGA,KAAOC,QAASD,KAC7BtB,KAAOqB,aAAaC,MACpBvB,KAAOsB,aAAaC,KAAO,GAC3BlD,WAAW4B,KAAKxwC,KAAMuwC,KAAKR,KAAMS,KAAKT,KAAMf,QAG9CuB,KAAOsB,aAAa,IACpBrB,KAAOqB,aAAaE,MAAQ,IACvB/xC,KAAO2uC,WAAW4B,KAAKR,KAAMS,KAAKT,KAAM,KAAMf,QAEnDsB,aAAaC,MACbD,aAAaE,MAGR,SAASwB,SAASjC,MASvB,IARA,IAEIQ,KACAC,KACAyB,IACAC,IALA7rD,EAAI0pD,KAAK,GACToC,UAAYpC,KAAK,GAKjB9xC,KAAO0zC,QAAQ5gD,EAEZkN,MAEL,IADAg0C,IAAMG,eAAen0C,KAAMk0C,WAAa9rD,GAC9B44C,gBAAShhC,KAAOA,KAAKk1B,MAAQ,CAErC,MADA+e,IAAM7rD,EAAIgsD,gBAAgBp0C,KAAMk0C,YACtBlT,iBAMH,CACDgT,KAAOhT,iBACTsR,KAAOtyC,KAAKznB,EACZg6D,KAAOvyC,MACEi0C,KAAOjT,iBAChBsR,KAAOtyC,KACPuyC,KAAOvyC,KAAK9R,GAEZokD,KAAOC,KAAOvyC,KAEhB,MAfA,IAAKA,KAAKkwC,EAAG,CACXoC,KAAOtyC,KACP,MAEFA,KAAOA,KAAKkwC,GFhGb,SAASmE,WAAWvC,MACzB,OAAOlB,cAAMkB,KAAK95D,QAChB85D,KAAMA,KACNjB,cE6GFwD,CAAWvC,MACX,IAAIwC,OAAShB,YAAYxB,MAGzB,GAFA4B,QAAQjR,OAAO6P,KAAMgC,QAEhBhC,MAASC,KAAd,CAEA,GAAID,OAASC,KAOX,OANAa,aAAad,MACbC,KAAOe,YAAYhB,KAAKR,MACxB4B,QAAQjR,OAAO6R,OAAQ/B,MACvB+B,OAAOvyC,KAAOwwC,KAAKxwC,KAAO2uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,MACvDO,aAAaC,WACbD,aAAaE,MAIf,GAAKA,KAAL,CAMAa,aAAad,MACbc,aAAab,MAEb,IAAIC,MAAQF,KAAKR,KACbb,GAAKuB,MAAM,GACXtB,GAAKsB,MAAM,GACXG,GAAKb,KAAK,GAAKb,GACf2B,GAAKd,KAAK,GAAKZ,GACfwB,MAAQH,KAAKT,KACbzK,GAAKqL,MAAM,GAAKzB,GAChB3J,GAAKoL,MAAM,GAAKxB,GAChB3kE,EAAI,GAAKomE,GAAKrL,GAAKsL,GAAKvL,IACxBkN,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBG,GAAK1L,GAAKA,GAAKC,GAAKA,GACpByJ,SAAWzJ,GAAKiN,GAAK3B,GAAKG,IAAMxmE,EAAI0kE,IAAK0B,GAAKI,GAAK1L,GAAKkN,IAAMhoE,EAAI2kE,IAEtEP,WAAW4B,KAAKxwC,KAAMywC,MAAOE,MAAO3B,QACpCuD,OAAOvyC,KAAO2uC,WAAW8B,MAAOV,KAAM,KAAMf,QAC5CwB,KAAKxwC,KAAO2uC,WAAWoB,KAAMY,MAAO,KAAM3B,QAC1CsB,aAAaC,MACbD,aAAaE,WAzBX+B,OAAOvyC,KAAO2uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,OA4B/C,SAASqC,eAAetP,IAAKqP,WAC3B,IAAIpC,KAAOjN,IAAIiN,KACX0C,MAAQ1C,KAAK,GACb2C,MAAQ3C,KAAK,GACb4C,KAAOD,MAAQP,UAEnB,IAAKQ,KAAM,OAAOF,MAElB,IAAIlC,KAAOzN,IAAItsD,EACf,IAAK+5D,KAAM,OAAQ9pD,IAGnB,IAAImsD,OADJ7C,KAAOQ,KAAKR,MACK,GACb8C,MAAQ9C,KAAK,GACb+C,MAAQD,MAAQV,UAEpB,IAAKW,MAAO,OAAOF,MAEnB,IAAIG,GAAKH,MAAQH,MACbO,KAAO,EAAIL,KAAO,EAAIG,MACtB17D,EAAI27D,GAAKD,MAEb,OAAIE,OAAe57D,EAAIvE,KAAKkU,KAAK3P,EAAIA,EAAI,EAAI47D,MAAQD,GAAKA,KAAO,EAAID,OAASD,MAAQC,MAAQ,EAAIJ,MAAQC,KAAO,KAAOK,KAAOP,OAEvHA,MAAQG,OAAS,EAG3B,SAASP,gBAAgBvP,IAAKqP,WAC5B,IAAI3B,KAAO1N,IAAI32C,EACf,GAAIqkD,KAAM,OAAO4B,eAAe5B,KAAM2B,WACtC,IAAIpC,KAAOjN,IAAIiN,KACf,OAAOA,KAAK,KAAOoC,UAAYpC,KAAK,GAAKtpD,ICzLpC,IAEIkrD,QACA9C,cACAuC,QACA7xC,cALA0/B,gBAAU,KACV6R,iBAAW,MAMtB,SAASmC,aAAa3mE,EAAG8K,EAAG7M,GAC1B,OAAQ+B,EAAE,GAAK/B,EAAE,KAAO6M,EAAE,GAAK9K,EAAE,KAAOA,EAAE,GAAK8K,EAAE,KAAO7M,EAAE,GAAK+B,EAAE,IAGnE,SAAS4mE,cAAc5mE,EAAG8K,GACxB,OAAOA,EAAE,GAAK9K,EAAE,IACT8K,EAAE,GAAK9K,EAAE,GAGH,SAAS6mE,QAAQC,MAAOC,QACrC,IACIhtD,EACA7O,EACAy5D,OAHAlB,KAAOqD,MAAM3vD,KAAKyvD,eAAe/7C,MAUrC,IALAoI,iBACAsvC,cAAQ,IAAI3yD,MAAMk3D,MAAM7hE,QACxBogE,QAAU,IAAI1D,iBACdmD,QAAU,IAAInD,mBAIZ,GADAgD,OAASb,YACLL,QAAUkB,QAAUlB,KAAK,GAAKkB,OAAOz5D,GAAMu4D,KAAK,KAAOkB,OAAOz5D,GAAKu4D,KAAK,GAAKkB,OAAO5qD,GAClF0pD,KAAK,KAAO1pD,GAAK0pD,KAAK,KAAOv4D,IAC/Bw6D,SAASjC,MACT1pD,EAAI0pD,KAAK,GAAIv4D,EAAIu4D,KAAK,IAExBA,KAAOqD,MAAMj8C,UACR,KAAI85C,OAGT,MAFAW,YAAYX,OAAOnO,KAQvB,GHrBK,SAASwQ,oBACd,IAAK,IAA6BxD,KAAMhB,UAAWviD,EAAGjiB,EAA7CJ,EAAI,EAAGyB,EAAIkjE,cAAMt9D,OAA+BrH,EAAIyB,IAAKzB,EAChE,IAAK4lE,KAAOjB,cAAM3kE,MAAQI,GAAKwkE,UAAYgB,KAAKhB,WAAWv9D,QAAS,CAClE,IAAI0E,MAAQ,IAAIiG,MAAM5R,GAClBipC,MAAQ,IAAIr3B,MAAM5R,GACtB,IAAKiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAAGtW,MAAMsW,GAAKA,EAAGgnB,MAAMhnB,GAAKsjD,kBAAkBC,KAAMvwC,cAAMuvC,UAAUviD,KAEzF,IADAtW,MAAMwN,KAAK,SAASvZ,EAAGqiB,GAAK,OAAOgnB,MAAMhnB,GAAKgnB,MAAMrpC,KAC/CqiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAAGgnB,MAAMhnB,GAAKuiD,UAAU74D,MAAMsW,IACnD,IAAKA,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAAGuiD,UAAUviD,GAAKgnB,MAAMhnB,IGWjD+mD,GAEID,OAAQ,CACV,IAAItkB,IAAMskB,OAAO,GAAG,GAChBtR,IAAMsR,OAAO,GAAG,GAChBrkB,IAAMqkB,OAAO,GAAG,GAChB3R,IAAM2R,OAAO,GAAG,IJqGjB,SAASE,UAAUxkB,GAAIgT,GAAI/S,GAAI0S,IAIpC,IAHA,IACI1hC,KADA91B,EAAIq1B,cAAMhuB,OAGPrH,KACAklE,YAAYpvC,KAAOT,cAAMr1B,GAAI6kD,GAAIgT,GAAI/S,GAAI0S,KACtCuN,SAASjvC,KAAM+uB,GAAIgT,GAAI/S,GAAI0S,MAC1B7uD,KAAKuL,IAAI4hB,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMi/B,iBAClCpsD,KAAKuL,IAAI4hB,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMi/B,yBACtC1/B,cAAMr1B,GI7GfqpE,CAAUxkB,GAAIgT,GAAI/S,GAAI0S,IHbnB,SAAS8R,UAAUzkB,GAAIgT,GAAI/S,GAAI0S,IACpC,IACI+R,MACA3D,KACAC,KACA2D,UACA5E,UACA6E,WACA/jE,MACAgkE,OACAC,OACAjiE,IACAkiE,KACAC,KAZAC,OAASnF,cAAMt9D,OAaf0iE,OAAQ,EAEZ,IAAKR,MAAQ,EAAGA,MAAQO,SAAUP,MAChC,GAAI3D,KAAOjB,cAAM4E,OAAQ,CAMvB,IALA1D,KAAOD,KAAKC,KAEZ2D,WADA5E,UAAYgB,KAAKhB,WACKv9D,OAGfmiE,aACAn0C,cAAMuvC,UAAU4E,aACnB5E,UAAU/zD,OAAO24D,UAAW,GAMhC,IADAA,UAAY,EAAGC,WAAa7E,UAAUv9D,OAC/BmiE,UAAYC,YACyCG,MAA1DliE,IAAMu+D,gBAAgBL,KAAMvwC,cAAMuvC,UAAU4E,cAAyB,GAAIK,KAAOniE,IAAI,GACPgiE,QAA7EhkE,MAAQsgE,kBAAkBJ,KAAMvwC,cAAMuvC,YAAY4E,UAAYC,eAA8B,GAAIE,OAASjkE,MAAM,IAC3GiD,KAAKuL,IAAI01D,KAAOF,QAAU3U,iBAAWpsD,KAAKuL,IAAI21D,KAAOF,QAAU5U,mBACjE6P,UAAU/zD,OAAO24D,UAAW,EAAGn0C,cAAM9rB,KAAKs7D,iBAAiBgB,KAAMn+D,IAC7DiB,KAAKuL,IAAI01D,KAAO/kB,IAAMkQ,iBAAWyC,GAAKqS,KAAO9U,iBAAWlQ,GAAIl8C,KAAKuL,IAAIw1D,OAAS7kB,IAAMkQ,gBAAU4U,OAASnS,IACrG7uD,KAAKuL,IAAI21D,KAAOrS,IAAMzC,iBAAWjQ,GAAK8kB,KAAO7U,iBAAWpsD,KAAKuL,IAAIy1D,OAASnS,IAAMzC,gBAAU2U,OAAS5kB,GAAI0S,IACvG7uD,KAAKuL,IAAI01D,KAAO9kB,IAAMiQ,iBAAW8U,KAAOhS,GAAK9C,iBAAWjQ,GAAIn8C,KAAKuL,IAAIw1D,OAAS5kB,IAAMiQ,gBAAU4U,OAAS9R,IACvGlvD,KAAKuL,IAAI21D,KAAOhS,IAAM9C,iBAAW6U,KAAO/kB,GAAKkQ,iBAAWpsD,KAAKuL,IAAIy1D,OAAS9R,IAAM9C,gBAAU2U,OAAS7kB,GAAIgT,IACvG,OAAS,KACb4R,YAIFA,aAAYM,OAAQ,GAM5B,GAAIA,MAAO,CACT,IAAIhR,GAAIC,GAAI2B,GAAIqP,GAAKztD,IAErB,IAAKgtD,MAAQ,EAAGQ,MAAQ,KAAMR,MAAQO,SAAUP,OAC1C3D,KAAOjB,cAAM4E,UAIf5O,IAFA5B,IADA8M,KAAOD,KAAKC,MACF,GAAKhhB,IAELkU,IADVC,GAAK6M,KAAK,GAAKhO,IACKmB,IACXgR,KAAIA,GAAKrP,GAAIoP,MAAQnE,MAIlC,GAAImE,MAAO,CACT,IAAIE,KAAOplB,GAAIgT,IAAKqS,KAAOrlB,GAAI2S,IAAK2S,KAAOrlB,GAAI0S,IAAK4S,KAAOtlB,GAAI+S,IAC/DkS,MAAMnF,UAAUr7D,KACd8rB,cAAM9rB,KAAKs7D,iBAAiBgB,KAAOkE,MAAMlE,KAAMoE,IAAKC,MAAQ,EAC5D70C,cAAM9rB,KAAKs7D,iBAAiBgB,KAAMqE,IAAKC,MAAQ,EAC/C90C,cAAM9rB,KAAKs7D,iBAAiBgB,KAAMsE,IAAKC,MAAQ,EAC/C/0C,cAAM9rB,KAAKs7D,iBAAiBgB,KAAMuE,IAAKH,MAAQ,IAMrD,IAAKV,MAAQ,EAAGA,MAAQO,SAAUP,OAC5B3D,KAAOjB,cAAM4E,UACV3D,KAAKhB,UAAUv9D,eACXs9D,cAAM4E,QGjEjBD,CAAUzkB,GAAIgT,GAAI/S,GAAI0S,IAGxBzvD,KAAKstB,MAAQA,cACbttB,KAAK48D,MAAQA,cAEb8C,QACAP,QACA7xC,cACAsvC,cAAQ,KAGVsE,QAAQnnE,WACN6c,YAAasqD,QAEboB,SAAU,SAAAA,WACR,IAAIh1C,MAAQttB,KAAKstB,MAEjB,OAAOttB,KAAK48D,MAAMtzD,IAAI,SAASu0D,MAC7B,IAAI0E,QAAU1E,KAAKhB,UAAUvzD,IAAI,SAASrR,GAAK,OAAOgmE,kBAAkBJ,KAAMvwC,MAAMr1B,MAEpF,OADAsqE,QAAQjiE,KAAOu9D,KAAKC,KAAKx9D,KAClBiiE,WAIXC,UAAW,SAAAA,YACT,IAAIA,aACAl1C,MAAQttB,KAAKstB,MAsBjB,OApBAttB,KAAK48D,MAAMp9D,QAAQ,SAASq+D,KAAM5lE,GAChC,GAAMI,GAAKwkE,UAAYgB,KAAKhB,WAAWv9D,OASvC,IARA,IACIu9D,UAEAxkE,EACA8gE,GAJA2E,KAAOD,KAAKC,KAEZxjD,GAAK,EAGLmoD,GAAKn1C,MAAMuvC,UAAUxkE,EAAI,IACzBmyB,GAAKi4C,GAAGxhC,OAAS68B,KAAO2E,GAAGvhC,MAAQuhC,GAAGxhC,OAEjC3mB,EAAIjiB,GACX8gE,GAAK3uC,GAELA,IADAi4C,GAAKn1C,MAAMuvC,UAAUviD,KACb2mB,OAAS68B,KAAO2E,GAAGvhC,MAAQuhC,GAAGxhC,KAClCk4B,IAAM3uC,IAAMvyB,EAAIkhE,GAAGn1D,OAAS/L,EAAIuyB,GAAGxmB,OAASg9D,aAAalD,KAAM3E,GAAI3uC,IAAM,GAC3Eg4C,UAAUhhE,MAAMs8D,KAAKx9D,KAAM64D,GAAG74D,KAAMkqB,GAAGlqB,SAKtCkiE,WAGTE,MAAO,SAAAA,QACL,OAAO1iE,KAAKstB,MAAMjP,OAAO,SAAS0P,MAChC,OAAOA,KAAKmT,QACX53B,IAAI,SAASykB,MACd,OACEnM,OAAQmM,KAAKkT,KAAK3gC,KAClBu4C,OAAQ9qB,KAAKmT,MAAM5gC,SAKzBsnB,KAAM,SAAAA,KAASxT,EAAG7O,EAAGo9D,QAInB,IAHA,IAAiBlgC,GAAkDo7B,KAA/DvH,KAAOt2D,KAAUu6C,GAAK+b,KAAKsM,QAAU,EAAGlpE,EAAI48D,KAAKsG,MAAMt9D,SAGlDu+D,KAAOvH,KAAKsG,MAAMriB,MAAM,KAAMA,IAAM7gD,EAAG,OAAO,KACvD,IAAIs3D,GAAK58C,EAAIypD,KAAKC,KAAK,GAAI7M,GAAK1rD,EAAIs4D,KAAKC,KAAK,GAAIlL,GAAK5B,GAAKA,GAAKC,GAAKA,GAGtE,GACE4M,KAAOvH,KAAKsG,MAAMn6B,GAAK8X,IAAKA,GAAK,KACjCsjB,KAAKhB,UAAUr9D,QAAQ,SAASrF,GAC9B,IAAI4zB,KAAOuoC,KAAKhpC,MAAMnzB,GAAIyiB,EAAImR,KAAKkT,KACnC,GAAKrkB,IAAMihD,KAAKC,MAASlhD,IAAQA,EAAImR,KAAKmT,OAA1C,CACA,IAAI2hC,GAAKzuD,EAAIwI,EAAE,GAAIkmD,GAAKv9D,EAAIqX,EAAE,GAAIw2B,GAAKyvB,GAAKA,GAAKC,GAAKA,GAClD1vB,GAAKwf,KAAIA,GAAKxf,GAAImH,GAAK39B,EAAE5Y,gBAEjB,OAAPu2C,IAIT,OAFA+b,KAAKsM,OAASngC,GAEG,MAAVkgC,QAAkB/P,IAAM+P,OAASA,OAAS9E,KAAKC,KAAO,OCvIlD,IAAAiF,YAAA,WACb,IAAI3uD,EAAI6/C,YACJ1uD,EAAI2uD,YACJkN,OAAS,KAEb,SAAS4B,QAAQ1iE,MACf,OAAO,IAAI4gE,QAAQ5gE,KAAKgJ,IAAI,SAAS/Q,EAAGN,GACtC,IAAIiC,GAAK0G,KAAK+K,MAAMyI,EAAE7b,EAAGN,EAAGqI,MAAQ0sD,iBAAWA,gBAASpsD,KAAK+K,MAAMpG,EAAEhN,EAAGN,EAAGqI,MAAQ0sD,iBAAWA,iBAG9F,OAFA9yD,EAAE8J,MAAQ/L,EACViC,EAAEoG,KAAO/H,EACF2B,IACLknE,QA+BN,OA5BA4B,QAAQV,SAAW,SAAShiE,MAC1B,OAAO0iE,QAAQ1iE,MAAMgiE,YAGvBU,QAAQN,MAAQ,SAASpiE,MACvB,OAAO0iE,QAAQ1iE,MAAMoiE,SAGvBM,QAAQR,UAAY,SAASliE,MAC3B,OAAO0iE,QAAQ1iE,MAAMkiE,aAGvBQ,QAAQ5uD,EAAI,SAAS0K,GACnB,OAAOhY,UAAUxH,QAAU8U,EAAiB,mBAAN0K,EAAmBA,EAAI60B,yBAAU70B,GAAIkkD,SAAW5uD,GAGxF4uD,QAAQz9D,EAAI,SAASuZ,GACnB,OAAOhY,UAAUxH,QAAUiG,EAAiB,mBAANuZ,EAAmBA,EAAI60B,yBAAU70B,GAAIkkD,SAAWz9D,GAGxFy9D,QAAQ5B,OAAS,SAAStiD,GACxB,OAAOhY,UAAUxH,QAAU8hE,OAAc,MAALtiD,EAAY,QAAUA,EAAE,GAAG,IAAKA,EAAE,GAAG,MAAOA,EAAE,GAAG,IAAKA,EAAE,GAAG,KAAMkkD,SAAW5B,UAAYA,OAAO,GAAG,GAAIA,OAAO,GAAG,KAAMA,OAAO,GAAG,GAAIA,OAAO,GAAG,MAGpL4B,QAAQltC,KAAO,SAAShX,GACtB,OAAOhY,UAAUxH,QAAU8hE,OAAc,MAALtiD,EAAY,OAAS,EAAG,KAAMA,EAAE,IAAKA,EAAE,KAAMkkD,SAAW5B,SAAWA,OAAO,GAAG,GAAKA,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAKA,OAAO,GAAG,KAGxJ4B,kXCsKMC,gCAzMX,SAAAA,2JAAeljE,CAAAC,KAAAijE,WACXjjE,KAAKkjE,SAELljE,KAAKmjE,UACLnjE,KAAKojE,YACLpjE,KAAKqjE,MAAQ,GAMbrjE,KAAKsjE,cAELtjE,KAAKujE,mRASL,OAAO5qE,OAAOgkB,OAAO3c,KAAKmjE,0CAWxBK,QAASC,UAAU,IAAAhiE,MAAAzB,KACrB,GAAIyjE,SAAU,CACVzjE,KAAKkjE,SACLljE,KAAK0jE,UAAYD,SACjB,IAAME,WAENH,QAAQhkE,QAAQ,WACZ,IAAMwE,MAAQy/D,SAAQ3iE,WAAR,EAAAgG,WACd68D,QAAQ3/D,OAAR8C,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,KAGJ,IAAM88D,aAyBN,OAvBAjrE,OAAO6O,KAAKxH,KAAKmjE,QAAQ3jE,QAAQ,SAAC00B,IACzByvC,QAAQzvC,KACT0vC,UAAUpiE,KAAK0yB,MAIvBv7B,OAAO6O,KAAKm8D,SAASnkE,QAAQ,SAAC00B,IACrBzyB,MAAK0hE,OAAOjvC,KAGbzyB,MAAK0hE,OAAOjvC,IAAMyvC,QAAQzvC,IAC1BzyB,MAAKyhE,MAAM1hE,KAAKmiE,QAAQzvC,MAHxBzyB,MAAK6hE,WAAW9hE,KAAKmiE,QAAQzvC,OAOrC0vC,UAAUpkE,QAAQ,SAAC00B,IACf,IAAM2vC,OAASpiE,MAAK0hE,OAAOjvC,IAC3BzyB,MAAK8hE,UAAU/hE,KAAKqiE,eAEbpiE,MAAK0hE,OAAOjvC,MAIhBl0B,KAGX,GAAIwjE,QAAQlkE,OAASU,KAAKkjE,MAAM5jE,OAE5B,IADA,IACSrH,EADQ+H,KAAKkjE,MAAM5jE,OACLrH,EAAIurE,QAAQlkE,OAAQrH,GAAK,EAC5C+H,KAAKsjE,WAAW9hE,KAAKgiE,QAAQvrE,QAE9B,CAGH,IADA,IAAM6rE,KAAON,QAAQlkE,OACZrH,GAAI6rE,KAAM7rE,GAAI+H,KAAKkjE,MAAM5jE,OAAQrH,IAAK,EAAG,CAC9C,IAAM4rE,OAAS7jE,KAAKkjE,MAAMjrE,WACnB+H,KAAKmjE,OAAOU,OAAO3vC,IAC1Bl0B,KAAKujE,UAAU/hE,KAAKqiE,QAExB7jE,KAAKkjE,MAAQljE,KAAKkjE,MAAM3oD,MAAMupD,KAAM9jE,KAAKkjE,MAAM5jE,QAEnD,OAAOU,2CAWHX,UAAU,IAAAmW,OAAAxV,KAQd,OAPAA,KAAA,IAAAiM,OAASjM,KAAKqjE,MAAd,SAA2B7jE,QAAQ,WAC/B,IAAMc,KAAIwG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACJotB,GAAK1e,OAAKkuD,UAAYluD,OAAKkuD,UAAL5iE,MAAA0U,OAAI1O,WAAyBxG,KAAK4zB,KAALptB,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACzD0O,OAAK2tD,OAAOjvC,IAAM70B,SAAQyB,WAAR,EAAAgG,WAClB0O,OAAK4tD,SAASlvC,IAAM5zB,OAExBN,KAAKqjE,MAAQ,GACNrjE,2CAYP,OADAA,KAAKqjE,MAAQ,QACNrjE,uCAaLxG,IAAKN,OAEP,OADA8G,KAAKkjE,MAAM1jE,QAAQ,SAAA2L,MAAI,OAAIA,KAAKojD,KAAK/0D,IAAKN,SACnC8G,yCAUJ+tD,WAAW,IAAAt9B,OAAAzwB,KAQd,OAPA+tD,UAAUmV,MAAM1jE,QAAQ,WAAe,QAAAukE,KAAAj9D,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXh1D,OAAWg1D,MAAAl9D,UAAAk9D,MACnC,IAAM9vC,GAAKzD,OAAKizC,UAAYjzC,OAAKizC,UAAL5iE,MAAA2vB,OAAkBzhB,QAAWA,OAAO,GAAGklB,IAAMllB,OAAO,GAChFyhB,OAAK0yC,OAAOjvC,IAAMllB,OAAO,GACzByhB,OAAKyyC,MAAM1hE,KAAKwN,OAAO,MAG3BhP,KAAKsjE,cACEtjE,yCAcP,OAJAA,KAAKqjE,MAAQ,OAINrjE,uCAGLkd,IAAI,IAAA2T,OAAA7wB,KAIN,OAHArH,OAAO6O,KAAKxH,KAAKmjE,QAAQ3jE,QAAQ,SAACrF,EAAGlC,GACjCilB,GAAG2T,OAAKsyC,OAAOhpE,GAAI02B,OAAKuyC,SAASjpE,GAAIlC,KAElC+H,qCAGNkd,IAAI,IAAA+mD,OAAAjkE,KAKL,OAJArH,OAAO6O,KAAKxH,KAAKmjE,QAAQ3jE,QAAQ,WAAe,QAAA0kE,MAAAp9D,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXn1D,OAAWm1D,OAAAr9D,UAAAq9D,OAC5C,IAAM3qE,IAAMwV,OAAO,GACnBi1D,OAAKd,OAAO3pE,KAAO0jB,GAAEpc,WAAF,GAAGmjE,OAAKd,OAAO3pE,MAAfyS,OAAwB+C,QAAQi1D,OAAKb,SAAS5pE,UAE9DwG,6CAUMA,KAAA,IAAAiM,OAASjM,KAAKqjE,MAAd,SAER7jE,QAAQ,SAAA2L,MAAI,OAAIA,KAAKy3B,WACP,KAAf5iC,KAAKqjE,OACLrjE,KAAK2iC,KAAK,SAAAxoC,GAAC,OAAIA,EAAEyoC,WAErB5iC,KAAA,IAAAiM,OAASjM,KAAKqjE,MAAd,YACArjE,KAAKqjE,MAAQ,8mECjJDxrE,OAAOusE,YAA3B,IAEMz5C,eAAiB,SAAjBA,eAAkBphB,KAEpB,GAAmB,WAAf86D,oBAAO96D,KAAkB,CACzB,GAAY,OAARA,IAAgB,OAAO,EAE3B,GAAc,oBADN5Q,OAAOoB,UAAUsK,SAASjM,KAAKmR,KAEnC,MAA8E,YAAtEA,IAAIqN,YAAYvS,WAAWqF,MAAM,4BAA8B,GAG/E,OAAO,GAQP+B,YAAc,SAAdA,cAAc,YAAAQ,QAAY,IAAInK,MAAO4J,WAAvBO,OAAmCrL,KAAK+K,MAAsB,IAAhB/K,KAAKgL,YAO/D1K,MAAQ,SAARA,MAASxI,GACX,IACIkkB,EADEo8B,UAEN,IAAK,IAAMx/C,OAAOd,OACPsB,eAAe5B,KAAKM,EAAGc,OAC1BojB,EAAIlkB,EAAEc,KACNw/C,OAAOx/C,KAAOmxB,eAAe/N,GAAK1b,MAAM0b,GAAKA,GAGrD,OAAOo8B,QAoBLsrB,mBACO,SAAAC,QAAC/8D,KAAM+B,KACZ,GAAmB,WAAf86D,oBAAO96D,KACP,OAAO8G,MAAM,iCAGjB,IAAMm0D,gBAjBS,SAAjBC,eAAkBj9D,KAAM+B,KAC1B,IAAMi7D,mBAON,OANAh9D,KAAKhI,QAAQ,SAAChG,KACNA,OAAO+P,KAGXi7D,gBAAgBhjE,KAAKhI,OAElBgrE,gBASqBC,CAAej9D,KAAM+B,KAC7C,OAAIi7D,gBAAgBllE,OACT+Q,MAAK,+BAAApE,OAAgCu4D,gBAAgB1/D,KAAK,QAE9DyE,KAiBTm7D,OAAS,SAATA,OAAUpkE,KAAMyM,OAAP,OAAiBnM,KAAKG,IAALD,MAAAF,KAAI+jE,mBAAQrkE,KAAK+d,OAAO,SAAA9lB,GAAC,OAAKif,MAAMjf,EAAEwU,UAASzD,IAAI,SAAA/Q,GAAC,OAAIA,EAAEwU,YAQpF63D,OAAS,SAATA,OAAUtkE,KAAMyM,OAAP,OAAiBnM,KAAKC,IAALC,MAAAF,KAAI+jE,mBAAQrkE,KAAK+d,OAAO,SAAA9lB,GAAC,OAAKif,MAAMjf,EAAEwU,UAASzD,IAAI,SAAA/Q,GAAC,OAAIA,EAAEwU,YAUpF83D,+BAAoB,SAApBA,kBAAqBvkE,KAAM0J,OAAQxJ,WAAc,IAAAP,KAC/CS,OACAokE,OAEJ,OADAxkE,KAAOA,KAAK,aAAc2J,MAAQ3J,MAAQA,MAClCE,WACR,KAAKlC,gCAAiBC,YAClBmC,QAAST,SAAGgM,OAAHnL,MAAAb,KAAA0kE,mBAAarkE,KAAKgJ,IAAI,SAAAuC,KAAG,OAAIA,IAAIvC,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyR,OAAO,MAAKqU,OAAO,SAAA9lB,GAAC,YAAUi7B,IAANj7B,QAC7E,MACJ,QACIusE,OAASxkE,KAAKgJ,IAAI,SAACuC,KACf,IAAMk5D,SAAWH,OAAO/4D,IAAK7B,OAAO,IAC9Bg7D,UAAYJ,OAAO/4D,IAAK7B,OAAO,IAC/Bi7D,SAAWP,OAAO74D,IAAK7B,OAAO,IAC9Bk7D,UAAYR,OAAO74D,IAAK7B,OAAO,IACrC,OAAQpJ,KAAKC,IAAIkkE,SAAUC,WAAYpkE,KAAKG,IAAIkkE,SAAUC,cAE9DxkE,QAAUE,KAAKC,IAALC,MAAAF,KAAI+jE,mBAAQG,OAAOx7D,IAAI,SAAA/Q,GAAC,OAAIA,EAAE,OAAMqI,KAAKG,IAALD,MAAAF,KAAI+jE,mBAAQG,OAAOx7D,IAAI,SAAA/Q,GAAC,OAAIA,EAAE,QAGhF,OAAOmI,QASLykE,yBAAc,SAAdA,YAAeC,QAAS5kE,WAC1B,IAAIE,OAE4C0hB,OADhDgjD,QAAUA,QAAQ/mD,OAAO,SAAAgnD,KAAG,OAAIA,KAAOA,IAAI/lE,SACvCkB,YAAclC,gCAAiBC,aAC/BmC,OAASA,QAAS0hB,UAAGnW,OAAHnL,MAAAshB,MAAAuiD,mBAAaS,UAE/B1kE,QAAUE,KAAKC,IAALC,MAAAF,KAAI+jE,mBAAQS,QAAQ97D,IAAI,SAAA/Q,GAAC,OAAIA,EAAE,OAAMqI,KAAKG,IAALD,MAAAF,KAAI+jE,mBAAQS,QAAQ97D,IAAI,SAAA/Q,GAAC,OAAIA,EAAE,QAGlF,OAAOmI,QAGL4kE,WACFtG,OAAQuG,cACRC,MAAOC,aACP7P,QAAS8P,QACTzP,OAAQ0P,OACR3P,KAAM4P,KACNxP,IAAKyP,IACL1P,SAAU2P,UAGRC,SACFC,MAAOC,WACPC,OAAQC,UACR1yB,OCxNG,SAASA,kBAAOt6C,GACrB,OAAQA,GDwNNitE,QAASC,WACTC,KAAMC,UACNC,KAAMC,UACNzH,OEpNG,SAAS0H,YAAYvtE,GAC1B,QAASA,GAAK,IAAM,EAAI,EAAIyH,KAAKkU,KAAK,EAAI3b,EAAIA,GAAKyH,KAAKkU,KAAK,GAAK3b,GAAK,GAAKA,GAAK,GAAK,IFuQxD8rC,+BAAoB,SAApBA,kBAAqBp5B,IAAK3S,MAAOisC,MAS7D,IARA,IAIIxzB,IACA0zB,GALAC,IAAM,EAENC,KADW15B,IAAIvM,OACC,EAMbgmC,IAAMC,MACT5zB,IAAM/Q,KAAKgR,OAAO0zB,IAAMC,MAAQ,GAChCF,GAAKzkC,KAAKuL,IAAIN,IAAI8F,KAAOzY,OACpB0H,KAAKuL,IAAIN,IAAI8F,IAAM,GAAKzY,QAEnBmsC,GACNC,IAAM3zB,IAAM,EAEZ4zB,KAAO5zB,IAIf,IAAKwzB,KACD,OAAOI,KAGX,IAAMH,QAAUv5B,IAAI05B,MACpB,OAAIH,UAAYlsC,MACLqsC,KACAH,QAAUlsC,MACJ,IAATqsC,KAAqBA,KACT,SAATJ,KAAkBI,KAAO,EAAIA,KAEpCA,OAAS15B,IAAIvM,OAAS,EAAYimC,KACtB,SAATJ,KAAkBI,KAAOA,KAAO,GAoEXohC,uBAvDJ77C,sBAEG87C,qBAqDyB,SAAxBD,sBAAyBE,IAAK3yC,GAAI2nB,QAE9D,OADAgrB,IAAMA,IAAItkE,QAAQ,OAAQ,KACnB,GAAA0J,OAAI4vC,OAAJ,KAAA5vC,OAAc46D,KAAd,GAAA56D,OAAwB4vC,OAAxB,KAAA5vC,OAAkC46D,IAAlC,KAAA56D,OAAyCioB,OAYnB4yC,aAAe,SAAfA,aAAgBl+D,MAAO1P,OACpD,YAAqB,IAAV0P,OAA2C,WAAjBy7D,oBAAOz7D,SAAuBA,MACxD1P,MAEJ0P,OAULm+D,mBAAqB,SAArBA,mBAAsBz1C,OA4BxB,IA3BA,IAAM01C,mBACAC,WACAz/D,KAAO7O,OAAO6O,KAAK8pB,OAQnB41C,MAAQ,SAARA,MAAS1uE,MACX,GAAIwuE,gBAAgB1nE,SAAWkI,KAAKlI,OAChC,OAAO,EAEX2nE,QAAQzuE,OAAQ,EAEhB,IADA,IAAM80B,MAAQgE,MAAM94B,MACX2B,EAAI,EAAGA,EAAImzB,MAAMhuB,OAAQnF,IAAK,CACnC,IAAMgzB,IAAMG,MAAMnzB,GACb8sE,QAAQ95C,MACT+5C,MAAM/5C,KAKd,OADA65C,gBAAgBxlE,KAAKhJ,OACd,GAGFP,EAAI,EAAGA,EAAIuP,KAAKlI,SACjB4nE,MAAM1/D,KAAKvP,IADcA,KAIjC,OAAO+uE,iBASLG,eAAiB,SAAjBA,eAAkB59D,IAAK2T,IACzB,IAAK,IAAM1jB,OAAO+P,IACV5Q,OAAOqB,eAAe5B,KAAKmR,IAAK/P,MAChC0jB,GAAG1jB,IAAK+P,MAUa69D,gCAK7B,SAAAA,QAAa9mE,MAAM+mE,4BAAArnE,KAAAonE,SACfpnE,KAAKsnE,SAAWtE,cAAU5uD,EAAE,SAAA7b,GAAC,OAAIA,EAAE6b,IAAG7O,EAAE,SAAAhN,GAAC,OAAIA,EAAEgN,IAC/CvF,KAAKM,KAAKA,+EAQRA,OAIF,OAHIA,QACAN,KAAKunE,WAAavnE,KAAKsnE,SAAShnE,QAE7BN,uCAULoU,EAAG7O,EAAGo9D,QACR,OAAO3iE,KAAKunE,WAAW3/C,KAAKxT,EAAG7O,EAAGo9D,uBAIpC6E,uBAAyB,SAAzBA,uBAA0BC,aAAcvqD,GAAI4a,SAC9C,IAAIt+B,IAAMiuE,aAAajuE,IACjBkuE,UAAYD,aAAaC,UAC3BA,YACC5vC,QAAQ6vC,WAAWD,aAAe5vC,QAAQ6vC,WAAWD,eACjDluE,MACDA,IAAMb,OAAO6O,KAAKswB,QAAQ6vC,WAAWD,YAAYpoE,QAErDw4B,QAAQ6vC,WAAWD,WAAWluE,KAAO0jB,KAErC1jB,IAAMb,OAAO6O,KAAKswB,QAAQ6vC,YAAYroE,OACtCw4B,QAAQ6vC,WAAWnuE,KAAO0jB,KAW5B0qD,WAAa,SAAbA,WAAcr+D,KAChB,QAAYiqB,IAARjqB,KAA6B,OAARA,IACrB,OAAOA,IAFwB,IAInC,IAAIuD,OAASvD,IAJsBw6D,KAAAj9D,UAAAxH,OAAX0K,OAAW,IAAAC,MAAA85D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXh6D,OAAWg6D,KAAA,GAAAl9D,UAAAk9D,MAKnC,IAAK,IAAI/rE,EAAI,EAAGmU,IAAMpC,OAAO1K,OAAQrH,EAAImU,WAEtBonB,KADf1mB,OAASA,OAAO9C,OAAO/R,MACgB,OAAX6U,QAFc7U,KAM9C,OAAO6U,QAYL+6D,8BAMF,SAAAA,MAAa54D,QAAQo4D,4BAAArnE,KAAA6nE,OAEjB7nE,KAAK6b,MAAQgX,mBAAMt5B,OAAO0V,QAC1BjP,KAAK2nE,iGAWL,OAAO3nE,KAAK6b,MAAMisD,kDAUdC,SAAU7uE,OAEd8G,KAAK6b,MAAM6T,KAAKq4C,SAAU7uE,6EAWoB8uE,UAAWC,SAAUh2C,aAAgC,IAAnBw1C,aAAmB3gE,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC/F6oB,MAAQq4C,UACP/9D,MAAMuB,QAAQw8D,aACfr4C,OAASq4C,YAEb,IAAM9qD,GAAKld,KAAK6b,MAAM3I,KAAKyc,MAAOs4C,SAAUh2C,aAE5C,OADAu1C,uBAAuBC,aAAcvqD,GAAIld,MAClCA,iFAU2CgoE,UAAWC,SAAUh2C,aAAgC,IAAnBw1C,aAAmB3gE,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACnG6oB,MAAQq4C,UACP/9D,MAAMuB,QAAQw8D,aACfr4C,OAASq4C,YAEb,IAAM9qD,GAAKld,KAAK6b,MAAMqsD,GAAGv4C,MAAOs4C,SAAUh2C,aAE1C,OADAu1C,uBAAuBC,aAAcvqD,GAAIld,MAClCA,qCAUN+nE,UACD,OAAO/nE,KAAK6b,MAAM6T,KAAKq4C,oDAWjBA,SAAUE,UAChB,OAAOjoE,KAAK6b,MAAMssD,eAAeJ,SAAUE,gDAGvCF,SAAU7uE,OAEd,OADA8G,KAAK6b,MAAMuU,OAAO23C,SAAU7uE,OACrB8G,6DAKP,OADArH,OAAOgkB,OAAO3c,KAAK2nE,YAAYnoE,QAAQ,SAAA0d,IAAE,OAAIA,OACtCld,uDAGqB,IAAnBynE,aAAmB3gE,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACpB4gE,UAAmBD,aAAnBC,UAAWluE,IAAQiuE,aAARjuE,IACbqyB,UAAY7rB,KAAK2nE,WAAWD,WAClC,GAAIluE,IAAK,CACL,IAAM0jB,GAAK0qD,WAAW/7C,UAAWryB,KACjC0jB,IAAMA,UAENvkB,OAAOgkB,OAAOkP,WAAWrsB,QAAQ,SAAA0d,IAAE,OAAIA,OACvCld,KAAK2nE,WAAWD,cAEpB,OAAO1nE,kBAUTooE,aAAe,SAAfA,aAAgBhoE,KAClB,IAAMyL,IAAMzL,IAAIiE,WAAWqF,MAAM,eACjC,OAAKmC,IAKExI,SAASwI,IAAI,GAAI,IAHb,MAyBTw8D,wBAAa,SAAbA,WAAcC,OAAQngE,QAAS0T,OAA6B,IAC1DqE,KADoCunD,aAAsB3gE,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAExDiD,MAAQ8R,OAASA,iBAAiBgX,mBAAQhX,MAAQgX,mBAAMt5B,WACxDgvE,cACN,IAAK,IAAM74C,QAAQvnB,QACf,MAAOnO,eAAe5B,KAAK+P,QAASunB,MAAO,CAEvC,IAAM84C,cADNtoD,KAAO/X,QAAQunB,OACU9gB,MAAOsR,KAAKtR,KAAK45D,YACtCC,mBAAa,EACXf,UAAYD,aAAaC,UAE3Be,cADAf,UACa,GAAAz7D,OAAMy7D,UAAN,KAAAz7D,OAAmByjB,MAEhBA,KAEf3lB,MAAM2lB,KAAN,GAAAzjB,OAAcw8D,kBACfF,WAAW74C,MAAQxP,KAAKhnB,QAER,IAAhBsvE,cACAF,OAAO54C,MAAS,SAACoI,QAASlpB,KAAM85D,QAAhB,OAA2B,WAAe,IACtD,IAAItoE,IACAuoE,UAFkDzE,MAAAp9D,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXn1D,OAAWm1D,OAAAr9D,UAAAq9D,OAGtD,IAAMyE,UAAY55D,OAAO1P,OACnBupE,QAAU9+D,MAAM2lB,KAAKg5C,QAC3B,GAAIE,UAAW,CAEX,IAAME,aAAel6D,MAAQA,KAAKk6D,aAClC1oE,IAAM4O,OACN,IAAM2N,UACN,GAAI/N,KAAM,CACN,IAAK,IAAI3W,EAAI,EAAGA,EAAI2wE,UAAW3wE,IAAK,CAChCmI,IAAM4O,OAAO/W,GACb,IAAM8wE,aAAen6D,KAAKm6D,eAAiBD,aAAel6D,KAAKm6D,aAAa9wE,GACxE2W,KAAKm6D,cACHC,UAAYp6D,KAAKo6D,YAAcF,aAAel6D,KAAKo6D,UAAU/wE,GAAK2W,KAAKo6D,WAM7E,GALID,cAAwC,mBAAjBA,eAEvB3oE,IAAM2oE,aAAa3oE,IAAKyoE,QAASP,SAGjCU,UAEA,GAAyB,mBAAdA,UAA0B,CACjC,IAAIC,aAAer6D,KAAKq6D,aACpBA,cAAgBH,eAChBG,aAAeA,aAAahxE,IAG5B0wE,UADAM,eAGY,EAGZD,UAAU5oE,OAASuoE,WACnBhsD,OAAOnb,KAAKpB,UAEb,GAAyB,iBAAd4oE,WACd,GAAkB,gBAAdA,UAA6B,CAC7B,IAAMC,cAAeH,aAAel6D,KAAKq6D,aAAahxE,GAClD2W,KAAKq6D,aACL7oE,KAAQA,IAAIwW,YAAYpe,OAASywE,eACjCtsD,OAAOnb,KAAKpB,WAKpBuc,OAAOnb,KAAKpB,UAGhBuc,OAAOnb,KAAKpB,KAGpB,IAAM8oE,OAASt6D,KAAKs6D,OACdC,UAAYrxC,QAAQpI,KAAKg5C,QAC/BQ,QAAUA,OAAOvsD,OAAO,GAAI2rD,QACxBQ,cACAK,UAAU3pE,QAAQ,SAACtG,MAAOjB,QACJu7B,IAAd7W,OAAO1kB,KACP0kB,OAAO1kB,GAAKiB,SAIxByjB,OAAOrd,QAAUw4B,QAAQpI,KAAKg5C,OAAQI,aAAensD,OAASA,OAAO,SAErEmb,QAAQpI,KAAKg5C,OAAQI,aAAe1oE,IAAMA,IAAI,IAElD,OAAOkoE,OAGX,OAAOxwC,QAAQpI,KAAKg5C,SAtER,CAuEb3+D,MAAOmW,KAAKtR,KAAM65D,gBAKjC,QAA+Bj1C,IAA3Bi0C,aAAaC,UACb39D,MAAMqmB,OAAOm4C,gBACV,CACH,IAAMb,WAAYD,aAAaC,UAC/B39D,MAAMqmB,OAAOs3C,WAAWa,YAG5B,OAAQD,OAAQv+D,QASdq/D,sBAAwB,SAAxBA,sBAAyBtxC,QAASnI,OACpCh3B,OAAO4c,QAAQoa,OAAOnwB,QAAQ,SAAC6pE,UAC3B,IAAM35C,KAAO25C,SAAS,GAChBC,YAAcD,SAAS,GAAGC,YAC1BpmE,OAASmmE,SAAS,GAAGvC,aACrBiC,aAAeM,SAAS,GAAGN,aAC3BhvE,UAAY+9B,QAAQlhB,YAAY7c,UAChCpB,OAAOqB,eAAe5B,KAAK2B,UAAW21B,QACpCxsB,SACA40B,QAAO,IAAA7rB,OAAKyjB,OAAUxsB,QAE1B40B,QAAQpI,MAAQ,WACZ,GAAI5oB,UAAOxH,OAAQ,CACf,IAAIpG,MAAK4N,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GAIT,OAHIiiE,eACA7vE,MAAQ6vE,aAAajxC,QAADhxB,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,KAEpBwiE,cAAgBA,YAAYpwE,OACrB4+B,QAAO,IAAA7rB,OAAKyjB,QAEvBoI,QAAO,IAAA7rB,OAAKyjB,OAAUx2B,MACf4+B,SACT,OAAOA,QAAO,IAAA7rB,OAAKyjB,YAwC/B65C,qBAAU,SAAVA,QAAUxuE,MAAI,OAAI,SAACyuE,OAAQC,QAC7B,MAAa,UAAT1uE,OACKyuE,QAlBO,SAAdE,YAAep9D,KAAMC,MACvB,GAAID,KAAKhN,SAAWiN,KAAKjN,OAAU,OAAO,EAC1C,IAAK,IAAIrH,EAAIqU,KAAKhN,OAAQrH,GAAK,EAAGA,IAC9B,GAAIqU,KAAKrU,KAAOsU,KAAKtU,GAAM,OAAO,EAGtC,OAAO,EAeIyxE,CAAYF,OAAQC,QACX,WAAT1uE,KACApC,OAAOgxE,GAAGH,OAAQC,QACpBD,SAAWC,SAqBlBG,WACFC,eAAgB,0BASdC,eAAiB,SAAjBA,eAAkBloD,OAAQmoD,MAC5B,IAAK,IAAMr6C,QAAQq6C,KACXp/C,eAAe/I,OAAO8N,QAAU/E,eAAeo/C,KAAKr6C,OACpDo6C,eAAeloD,OAAO8N,MAAOq6C,KAAKr6C,OAC3Bq6C,KAAKr6C,gBAAiB/2B,QAAUoxE,KAAKr6C,MAAM9Y,cAAgBje,QAClEipB,OAAO8N,SACPo6C,eAAeloD,OAAO8N,MAAOq6C,KAAKr6C,QAElC9N,OAAO8N,MAAQq6C,KAAKr6C,MAG5B,OAAO9N,QAaLooD,6BAAkB,SAAlBA,gBAAmBC,IAAKC,UAAW5pE,KAAM6pE,MAC3C,IAAIpc,UAAYkc,KGn5BL,SAASG,aAAuB,IAAX9pE,KAAWwG,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC3C,OAAO,IAAIm8D,qBAAU3iE,MHk5BE8pE,KAKjBC,iBAHNtc,UAAYA,UAAUztD,KAAKA,KAAM6pE,OAET7b,QAAQl+B,OAAO85C,WACTl/D,MAAM+iD,WAGpC,OADAA,UAAUK,QAAUL,UAAUK,OAAOxrB,SAC9BynC,iBAqDLjf,0BAAe,SAAfA,eAAe,OAAMjT,WAMrBmyB,gCAAqB,SAArBA,qBAAqB,OAAMC,YAwB3BC,mCAAwB,SAAxBA,wBAAwB,OAAMtyB,qBAsBpC,IA8BMuyB,SAAW,SAAXA,SAAY1xE,EAAGgS,EAAG5F,GAAa,IAAV9K,EAAUyM,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAAN,EAC3B/N,GAAKA,EAAGgS,GAAKA,EAAG5F,GAAKA,EAAG9K,GAAKA,EAC7BtB,GAAK,IAAKgS,GAAK,IAAK5F,GAAK,IACzB,IAEIkrC,EACAn2C,EAHE6G,IAAMH,KAAKG,IAAIhI,EAAGgS,EAAG5F,GACrBtE,IAAMD,KAAKC,IAAI9H,EAAGgS,EAAG5F,GAGrBjN,GAAK6I,IAAMF,KAAO,EAExB,GAAIE,MAAQF,IACRwvC,EAAIn2C,EAAI,MACL,CACH,IAAM3B,EAAIwI,IAAMF,IAEhB,OADA3G,EAAIhC,EAAI,GAAMK,GAAK,EAAIwI,IAAMF,KAAOtI,GAAKwI,IAAMF,KACvCE,KACR,KAAKhI,EAAGs3C,GAAKtlC,EAAI5F,GAAK5M,GAAKwS,EAAI5F,EAAI,EAAI,GAAI,MAC3C,KAAK4F,EAAGslC,GAAKlrC,EAAIpM,GAAKR,EAAI,EAAG,MAC7B,KAAK4M,EAAGkrC,GAAKt3C,EAAIgS,GAAKxS,EAAI,EAG1B83C,GAAK,EAET,OAAQA,EAAGn2C,EAAGhC,EAAGmC,IAgDfqwE,YAAc,SAAdA,YAAeC,KAWjB,MAViB,yCAUJptE,KAAKotE,MALA,iHAKkBptE,KAAKotE,KAC9B,MAVM,0CAWGptE,KAAKotE,MALP,sGAKyBptE,KAAKotE,KACrC,MALM,yBAMGptE,KAAKotE,KACd,MACFA,KA0EPC,sBAAwB,SAAxBA,sBAAyBtuD,UAAW3N,SAAUvV,MAChD,GAAiB,OAAbuV,SACA,OAAO,KAEX,IAAMk8D,UAAYlyE,OAAO6O,KAAKmH,UAU9B,OAAO2N,UAAUW,OATH,SAAR6tD,MAAQ9gE,QAAM,OAAI6gE,UAAUp2D,MAAM,SAAC1H,OACrC,IAAM3M,IAAM4J,OAAO+C,OAAO7T,MACpBqK,MAAQoL,SAAS5B,OAAO,aAAc9C,MAAQ0E,SAAS5B,OAAO,GAAK4B,SAAS5B,OAClF,MAAwB,iBAAbxJ,MAAM,QACyBiwB,IAA/BjwB,MAAMqkB,KAAK,SAAArvB,GAAC,OAAIA,IAAM6H,OAE1BmD,OAAQnD,KAAOmD,MAAM,IAAMnD,KAAOmD,MAAM,OAI/C4Z,WAAW,EACX/jB,aAWF2xE,yCAA8B,SAA9BA,4BAA+BzuD,UAAWyE,YAAa3nB,MACzD,IAAI4xE,kBACJ,GAAIjqD,uBAAuB9W,MAAO,CAC9B,IAAMuS,aAAeF,UAAUG,kBAEzBwuD,QAAUlqD,YAAYxG,MAAM,EAAGwG,YAAYzhB,QACjD,GAAIyhB,uBAAuBjX,SACvBkhE,kBAAoBjqD,YAAYzE,cAAe,QAC5C,GAAIyE,uBAAuB9W,OAAS8W,YAAY,GAAGzhB,OAAQ,CAC9D,IAAM4rE,eAAiBnqD,YAAY,GAAG1C,OAAO,SAAA9lB,GAAC,OAAIA,KAAKikB,eACvDwuD,kBAAoB1uD,UAAUW,OAAO,SAACjT,QAClC,IAAImhE,SAAU,EAMd,OALAD,eAAe1rE,QAAQ,SAACud,UAAW5J,KAC/B,IAAMja,MAAQ8Q,OAAO+S,WAAWC,UAC1BhZ,MAAQinE,QAAQxnD,UAAU,SAAAlrB,GAAC,OAAIA,EAAE4a,OAASja,QAChDiyE,QAAUA,UAAsB,IAAXnnE,QAElBmnE,UAEPhuD,WAAW,EACX/jB,kBAIR4xE,kBAAoBJ,sBAAsBtuD,UAAWyE,YAAa3nB,MAEtE,OAAO4xE,mBASLI,+BAAoB,SAApBA,kBAAqBtzC,QAASuzC,aAA2B,QAAAC,MAAAxkE,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAAqhE,MAAA,EAAAA,MAAA,KAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXv8D,OAAWu8D,MAAA,GAAAzkE,UAAAykE,OAC3D,IAAMC,gBAAkBH,YAAWvqE,WAAX,GAAYg3B,SAAZ7rB,OAAwB+C,SAChD,IAAK,IAAMxV,OAAOgyE,gBACd,MAAOxxE,eAAe5B,KAAKozE,gBAAiBhyE,KAAM,CAC9C,IAAMkuE,UAAY14D,OAAO,GACrB1V,GAAK,KACLouE,YACApuE,GAAKouE,UAAU+D,OAEnB,IAAMC,OAASF,gBAAgBhyE,KACzBmyE,SAAWD,OAAO3wE,KAClB40B,MAAQ+7C,OAAO/7C,MACfi8C,WAAaF,OAAOG,SAC1B/zC,QAAQ/tB,QAAQ4hE,UAAUh8C,MAAOi8C,YAAY,GACzClE,UAAWpuE,OAMrBwyE,aAAe,SAAfA,aAAe5yE,OAAK,OAAKse,MAAMte,QAAUA,SAAWsb,KAAYtb,QAAUsb,KA0B1Egc,QAAU,SAAVA,QAAU3kB,KAAG,OAAKA,eAAe5B,MAAQ4B,KAAOA,MAmEhDkgE,uBAAY,SAAZA,UAAYhxE,MAAI,OIt2CP,WACb,IAAIA,KAAO44C,sBAASqrB,eAChBlpC,KAAO6d,sBAAS,IAChB7b,QAAU,KAEd,SAASiiB,SACP,IAAIua,OAGJ,GAFKx8B,UAASA,QAAUw8B,OAAStG,YACjCjzD,KAAK+F,MAAMd,KAAM8G,WAAW0uD,KAAK19B,SAAUhC,KAAKh1B,MAAMd,KAAM8G,YACxDwtD,OAAQ,OAAOx8B,QAAU,KAAMw8B,OAAS,IAAM,KAepD,OAZAva,OAAOh/C,KAAO,SAAS+jB,GACrB,OAAOhY,UAAUxH,QAAUvE,KAAoB,mBAAN+jB,EAAmBA,EAAI60B,sBAAS70B,GAAIi7B,QAAUh/C,MAGzFg/C,OAAOjkB,KAAO,SAAShX,GACrB,OAAOhY,UAAUxH,QAAUw2B,KAAoB,mBAANhX,EAAmBA,EAAI60B,uBAAU70B,GAAIi7B,QAAUjkB,MAG1FikB,OAAOjiB,QAAU,SAAShZ,GACxB,OAAOhY,UAAUxH,QAAUw4B,QAAe,MAALhZ,EAAY,KAAOA,EAAGi7B,QAAUjiB,SAGhEiiB,OJ80CiBA,GAASh/C,KAAKuqE,UAAUvqE,QAE5CixE,aAAWC,gBAAAC,gBK13CS,OL23CKC,YADdF,gBAAAC,aK53Cc,YL83CKE,iBAFnBH,gBAAAC,aK33Ce,aCCjB,SAAS/R,QACtB,OAAOv5B,gBAAUu5B,QAAQr4B,YNy3CVoqC,cAKXG,cAAYJ,gBAAAK,iBK93Cc,YEHjB,SAASnS,OAAQh2C,OAC9B,IAAOzqB,EAAIygE,OAAO76D,QAAU,EAC5B,IAAK,IAAIrH,EAAUM,EAAG04D,GAAIsb,GAAIC,GAAI9yE,EAAtB4gB,EAAI,EAAqBjiB,EAAI8hE,OAAOh2C,MAAM,IAAI7kB,OAAQgb,EAAIjiB,IAAKiiB,EACzE,IAAKiyD,GAAKC,GAAK,EAAGv0E,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3Bg5D,IAAM14D,EAAI4hE,OAAOh2C,MAAMlsB,IAAIqiB,IAAI,GAAK/hB,EAAE,KAAO,GAChDA,EAAE,GAAKg0E,GAAIh0E,EAAE,GAAKg0E,IAAMtb,IACfA,GAAK,GACd14D,EAAE,GAAKi0E,GAAIj0E,EAAE,GAAKi0E,IAAMvb,IAExB14D,EAAE,GAAKg0E,KPw3CGN,gBAAAK,cK73CS,OL+3CKG,MAFdR,gBAAAK,cK53CW,SGHd,SAASnS,OAAQh2C,OAC9B,IAAOzqB,EAAIygE,OAAO76D,QAAU,EAA5B,CACA,IAAK,IAAIrH,EAAGyB,EAAgC6L,EAA7B+U,EAAI,EAAGjiB,EAAI8hE,OAAO,GAAG76D,OAAWgb,EAAIjiB,IAAKiiB,EAAG,CACzD,IAAK/U,EAAItN,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGsN,GAAK40D,OAAOliE,GAAGqiB,GAAG,IAAM,EACpD,GAAI/U,EAAG,IAAKtN,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGkiE,OAAOliE,GAAGqiB,GAAG,IAAM/U,EAEpD20D,KAAKC,OAAQh2C,URy3CG8nD,gBAAAK,cK33CW,SIJd,SAASnS,OAAQh2C,OAC9B,IAAOzqB,EAAIygE,OAAO76D,QAAU,IAASjH,GAAK8gE,GAAKgB,OAAOh2C,MAAM,KAAK7kB,QAAU,EAA3E,CACA,IAAK,IAAkB65D,GAAI9gE,EAAGqB,EAArB6L,EAAI,EAAG+U,EAAI,EAAaA,EAAIjiB,IAAKiiB,EAAG,CAC3C,IAAK,IAAIriB,EAAI,EAAGuyB,GAAK,EAAGC,GAAK,EAAGxyB,EAAIyB,IAAKzB,EAAG,CAK1C,IAJA,IAAIy0E,GAAKvS,OAAOh2C,MAAMlsB,IAClB00E,KAAOD,GAAGpyD,GAAG,IAAM,EAEnBsyD,IAAMD,MADCD,GAAGpyD,EAAI,GAAG,IAAM,IACF,EAChBpO,EAAI,EAAGA,EAAIjU,IAAKiU,EAAG,CAC1B,IAAI2gE,GAAK1S,OAAOh2C,MAAMjY,IAGtB0gE,KAFWC,GAAGvyD,GAAG,IAAM,IACZuyD,GAAGvyD,EAAI,GAAG,IAAM,GAG7BkQ,IAAMmiD,KAAMliD,IAAMmiD,GAAKD,KAEzBxT,GAAG7+C,EAAI,GAAG,IAAM6+C,GAAG7+C,EAAI,GAAG,GAAK/U,EAC3BilB,KAAIjlB,GAAKklB,GAAKD,IAEpB2uC,GAAG7+C,EAAI,GAAG,IAAM6+C,GAAG7+C,EAAI,GAAG,GAAK/U,EAC/B20D,KAAKC,OAAQh2C,UT22CGmoD,eAQZQ,mBAAQ,SAARA,MAAQ99D,QAAM,OlBh4CL,WACb,IAAIxH,KAAOmsC,0BACPxvB,MAAQ4oD,WACR7uB,OAAS8uB,KACT9zE,MAAQmhE,WAEZ,SAASyS,MAAMxsE,MACb,IACIrI,EAIAg1E,GALAC,GAAK1lE,KAAK1G,MAAMd,KAAM8G,WAEtBzO,EAAIiI,KAAKhB,OACT5F,EAAIwzE,GAAG5tE,OACP6tE,GAAK,IAAIljE,MAAMvQ,GAGnB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG,CACtB,IAAK,IAAkDm1E,IAA9CC,GAAKH,GAAGj1E,GAAIy0E,GAAKS,GAAGl1E,GAAK,IAAIgS,MAAM5R,GAAIiiB,EAAI,EAAQA,EAAIjiB,IAAKiiB,EACnEoyD,GAAGpyD,GAAK8yD,KAAO,GAAIl0E,MAAMoH,KAAKga,GAAI+yD,GAAI/yD,EAAGha,OACzC8sE,IAAI9sE,KAAOA,KAAKga,GAElBoyD,GAAGlzE,IAAM6zE,GAGX,IAAKp1E,EAAI,EAAGg1E,GAAK9oD,MAAMgpD,IAAKl1E,EAAIyB,IAAKzB,EACnCk1E,GAAGF,GAAGh1E,IAAI+L,MAAQ/L,EAIpB,OADAimD,OAAOivB,GAAIF,IACJE,GAmBT,OAhBAL,MAAMtlE,KAAO,SAASsX,GACpB,OAAOhY,UAAUxH,QAAUkI,KAAoB,mBAANsX,EAAmBA,EAAI60B,sBAASp5B,yBAAMniB,KAAK0mB,IAAKguD,OAAStlE,MAGpGslE,MAAM5zE,MAAQ,SAAS4lB,GACrB,OAAOhY,UAAUxH,QAAUpG,MAAqB,mBAAN4lB,EAAmBA,EAAI60B,uBAAU70B,GAAIguD,OAAS5zE,OAG1F4zE,MAAM3oD,MAAQ,SAASrF,GACrB,OAAOhY,UAAUxH,QAAU6kB,MAAa,MAALrF,EAAYiuD,WAAyB,mBAANjuD,EAAmBA,EAAI60B,sBAASp5B,yBAAMniB,KAAK0mB,IAAKguD,OAAS3oD,OAG7H2oD,MAAM5uB,OAAS,SAASp/B,GACtB,OAAOhY,UAAUxH,QAAU4+C,OAAc,MAALp/B,EAAYkuD,KAAaluD,EAAGguD,OAAS5uB,QAGpE4uB,MkBk1CeQ,GAAU9lE,KAAKwH,OAAOxH,MAAM02C,OAAOmuB,aAAar9D,OAAOkvC,SAC9D/5B,MAAM6nD,YAAYh9D,OAAOmV,OADlBmpD,CAC0Bt+D,OAAO1O,OAenDitE,mBACFlZ,yBACAmZ,yBACAC,2BACAC,qBACAC,iCACA1T,UAAWuT,UACX5U,WAAY+U,iBACZlsC,KAAMisC,WACN1T,WAAYyT,WACZh6B,OAAQ4gB,cAGNuZ,SACFC,SxDtvCG,SAASA,SAASvsE,OACvB,OAAO6rD,UAAKlsB,UAAM3/B,QwDsvChBwsE,UxD/vCG,SAASA,UAAUxsE,OACxB,OAAO6rD,UAAKjsB,WAAO5/B,QwD+vCjBysE,QxDpwCG,SAASA,QAAQzsE,OACtB,OAAO6rD,UAAKrvB,SAAKx8B,QwDowCf0sE,WxD7vCG,SAASA,WAAW1sE,OACzB,OAAO6rD,UAAKJ,YAAQzrD,QwD6vClBktD,cACAiG,cACAwZ,IUx6CW,WACb,IAAI/0E,MAAQ8zB,sBACRgW,WAAakrC,eACb18D,KAAO,KACPqgD,WAAale,sBAAS,GACtBoe,SAAWpe,sBAASmb,UACpBmD,SAAWte,sBAAS,GAExB,SAASs6B,IAAI3tE,MACX,IAAIrI,EAEAqiB,EACApO,EAMAkF,GAGAwL,EAXAljB,EAAI4G,KAAKhB,OAGTyU,IAAM,EACN/P,MAAQ,IAAIiG,MAAMvQ,GAClBy0E,KAAO,IAAIlkE,MAAMvQ,GACjBo3D,IAAMe,WAAW/wD,MAAMd,KAAM8G,WAC7BqqD,GAAKvwD,KAAKC,IAAIiuD,SAAKluD,KAAKG,KAAK+tD,SAAKiD,SAASjxD,MAAMd,KAAM8G,WAAagqD,KAEpE72D,EAAI2G,KAAKC,IAAID,KAAKuL,IAAIglD,IAAMz3D,EAAGu4D,SAASnxD,MAAMd,KAAM8G,YACpDsnE,GAAKn0E,GAAKk3D,GAAK,GAAK,EAAI,GAG5B,IAAKl5D,EAAI,EAAGA,EAAIyB,IAAKzB,GACd2kB,EAAIuxD,KAAKnqE,MAAM/L,GAAKA,IAAMiB,MAAMoH,KAAKrI,GAAIA,EAAGqI,OAAS,IACxDyT,KAAO6I,GASX,IAJkB,MAAdomB,WAAoBh/B,MAAMwN,KAAK,SAASvZ,EAAGqiB,GAAK,OAAO0oB,WAAWmrC,KAAKl2E,GAAIk2E,KAAK7zD,MACnE,MAAR9I,MAAcxN,MAAMwN,KAAK,SAASvZ,EAAGqiB,GAAK,OAAO9I,KAAKlR,KAAKrI,GAAIqI,KAAKga,MAGxEriB,EAAI,EAAGiU,EAAI6H,KAAOo9C,GAAKz3D,EAAI00E,IAAMr6D,IAAM,EAAG9b,EAAIyB,IAAKzB,EAAG64D,GAAK1/C,GAC9DkJ,EAAItW,MAAM/L,GAAiBmZ,GAAK0/C,KAAlBl0C,EAAIuxD,KAAK7zD,IAAmB,EAAIsC,EAAI1Q,EAAI,GAAKkiE,GAAID,KAAK7zD,IAClEha,KAAMA,KAAKga,GACXtW,MAAO/L,EACPiB,MAAO0jB,EACPi1C,WAAYf,GACZiB,SAAU3gD,GACV6gD,SAAUh4D,GAId,OAAOk0E,KA2BT,OAxBAF,IAAI/0E,MAAQ,SAAS4lB,GACnB,OAAOhY,UAAUxH,QAAUpG,MAAqB,mBAAN4lB,EAAmBA,EAAI60B,uBAAU70B,GAAImvD,KAAO/0E,OAGxF+0E,IAAIjrC,WAAa,SAASlkB,GACxB,OAAOhY,UAAUxH,QAAU0jC,WAAalkB,EAAGtN,KAAO,KAAMy8D,KAAOjrC,YAGjEirC,IAAIz8D,KAAO,SAASsN,GAClB,OAAOhY,UAAUxH,QAAUkS,KAAOsN,EAAGkkB,WAAa,KAAMirC,KAAOz8D,MAGjEy8D,IAAIpc,WAAa,SAAS/yC,GACxB,OAAOhY,UAAUxH,QAAUuyD,WAA0B,mBAAN/yC,EAAmBA,EAAI60B,uBAAU70B,GAAImvD,KAAOpc,YAG7Foc,IAAIlc,SAAW,SAASjzC,GACtB,OAAOhY,UAAUxH,QAAUyyD,SAAwB,mBAANjzC,EAAmBA,EAAI60B,uBAAU70B,GAAImvD,KAAOlc,UAG3Fkc,IAAIhc,SAAW,SAASnzC,GACtB,OAAOhY,UAAUxH,QAAU2yD,SAAwB,mBAANnzC,EAAmBA,EAAI60B,uBAAU70B,GAAImvD,KAAOhc,UAGpFgc,KVi2CLpd,IpDl2CW,WACb,IAAIY,YAAcD,eACdG,YAAcD,eACd2c,aAAe16B,sBAAS,GACxB26B,UAAY,KACZzc,WAAaD,cACbG,SAAWD,YACXG,SAAWD,YACXl6B,QAAU,KAEd,SAAS+4B,MACP,IAAIyD,OACAv7D,EACA+rC,IAAM2sB,YAAY3wD,MAAMd,KAAM8G,WAC9Bi+B,IAAM4sB,YAAY7wD,MAAMd,KAAM8G,WAC9BgqD,GAAKe,WAAW/wD,MAAMd,KAAM8G,WAAawqD,OACzClgD,GAAK2gD,SAASjxD,MAAMd,KAAM8G,WAAawqD,OACvCH,GAAKhlD,IAAIiF,GAAK0/C,IACdI,GAAK9/C,GAAK0/C,GAQd,GANKh5B,UAASA,QAAUw8B,OAAStG,YAG7BjpB,GAAKD,KAAI/rC,EAAIgsC,GAAIA,GAAKD,GAAIA,GAAK/rC,GAG7BgsC,GAAKioB,aAGN,GAAImE,GAAKrC,SAAM9B,aAClBl1B,QAAQu3B,OAAOtqB,GAAK6M,IAAIkf,IAAK/rB,GAAK8M,IAAIif,KACtCh5B,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAI+rB,GAAI1/C,IAAK8/C,IAC3BpsB,GAAKkoB,eACPl1B,QAAQu3B,OAAOvqB,GAAK8M,IAAIxgC,IAAK0zB,GAAK+M,IAAIzgC,KACtC0mB,QAAQ+4B,IAAI,EAAG,EAAG/rB,GAAI1zB,GAAI0/C,GAAII,SAK7B,CACH,IAWI7f,GACAC,GAZAi9B,IAAMzd,GACN0d,IAAMp9D,GACNq9D,IAAM3d,GACN4d,IAAMt9D,GACNu9D,IAAMxd,GACNyd,IAAMzd,GACN0d,GAAK5c,SAASnxD,MAAMd,KAAM8G,WAAa,EACvCgoE,GAAMD,GAAK7hB,eAAashB,WAAaA,UAAUxtE,MAAMd,KAAM8G,WAAagO,UAAKgwB,GAAKA,GAAKC,GAAKA,KAC5FotB,GAAKtxD,SAAIsL,IAAI44B,GAAKD,IAAM,GAAIupC,aAAavtE,MAAMd,KAAM8G,YACrDioE,IAAM5c,GACN6c,IAAM7c,GAKV,GAAI2c,GAAK9hB,aAAS,CAChB,IAAIiiB,GAAK1d,KAAKud,GAAKhqC,GAAK+M,IAAIg9B,KACxBK,GAAK3d,KAAKud,GAAK/pC,GAAK8M,IAAIg9B,MACvBF,KAAY,EAALM,IAAUjiB,cAA8ByhB,KAArBQ,IAAO/d,GAAK,GAAK,EAAewd,KAAOO,KACjEN,IAAM,EAAGF,IAAMC,KAAO5d,GAAK1/C,IAAM,IACjCw9D,KAAY,EAALM,IAAUliB,cAA8BuhB,KAArBW,IAAOhe,GAAK,GAAK,EAAesd,KAAOU,KACjEN,IAAM,EAAGL,IAAMC,KAAO1d,GAAK1/C,IAAM,GAGxC,IAAI6+C,IAAMlrB,GAAK6M,IAAI28B,KACfre,IAAMnrB,GAAK8M,IAAI08B,KACf/b,IAAM1tB,GAAK8M,IAAI88B,KACfjc,IAAM3tB,GAAK+M,IAAI68B,KAGnB,GAAIvc,GAAKnF,aAAS,CAChB,IAIImiB,GAJA7c,IAAMvtB,GAAK6M,IAAI48B,KACfjc,IAAMxtB,GAAK8M,IAAI28B,KACf9b,IAAM5tB,GAAK8M,IAAI68B,KACf9b,IAAM7tB,GAAK+M,IAAI48B,KAInB,GAAItd,IAAMrC,SAAM9B,eAAYmiB,GAlIpC,SAASC,UAAUtyB,GAAIgT,GAAI/S,GAAI0S,GAAIE,GAAIC,GAAIyf,GAAIC,IAC7C,IAAI9c,IAAMzV,GAAKD,GAAI2V,IAAMhD,GAAKK,GAC1Byf,IAAMF,GAAK1f,GAAI6f,IAAMF,GAAK1f,GAC1Bz2D,EAAIq2E,IAAMhd,IAAM+c,IAAM9c,IAC1B,KAAIt5D,EAAIA,EAAI6zD,cAEZ,OAAQlQ,IADR3jD,GAAKo2E,KAAOzf,GAAKF,IAAM4f,KAAO1yB,GAAK6S,KAAOx2D,GACzBq5D,IAAK1C,GAAK32D,EAAIs5D,KA4HQ2c,CAAUnf,IAAKC,IAAKwC,IAAKC,IAAKL,IAAKC,IAAKC,IAAKC,MAAO,CACnF,IAAIwK,GAAKhN,IAAMkf,GAAG,GACdjS,GAAKhN,IAAMif,GAAG,GACdxQ,GAAKrM,IAAM6c,GAAG,GACdvQ,GAAKrM,IAAM4c,GAAG,GACdM,GAAK,EAAI59B,IDlJhB,SAAS6e,KAAKt8C,GACnB,OAAOA,EAAI,EAAI,EAAIA,GAAK,EAAIy6C,QAAKjuD,KAAK8vD,KAAKt8C,GCiJlBs8C,EAAMuM,GAAK0B,GAAKzB,GAAK0B,KAAO9pD,UAAKmoD,GAAKA,GAAKC,GAAKA,IAAMpoD,UAAK6pD,GAAKA,GAAKC,GAAKA,MAAQ,GAC/F8Q,GAAK56D,UAAKq6D,GAAG,GAAKA,GAAG,GAAKA,GAAG,GAAKA,GAAG,IACzCJ,IAAMluE,SAAIsxD,IAAKrtB,GAAK4qC,KAAOD,GAAK,IAChCT,IAAMnuE,SAAIsxD,IAAKptB,GAAK2qC,KAAOD,GAAK,KAK9Bb,IAAM5hB,aAGHgiB,IAAMhiB,cACb3b,GAAK6gB,eAAeQ,IAAKC,IAAK1C,IAAKC,IAAKnrB,GAAIiqC,IAAK9d,IACjD5f,GAAK4gB,eAAeI,IAAKC,IAAKC,IAAKC,IAAK1tB,GAAIiqC,IAAK9d,IAEjDp5B,QAAQu3B,OAAOhe,GAAGgiB,GAAKhiB,GAAG4e,IAAK5e,GAAGiiB,GAAKjiB,GAAG6e,KAGtC8e,IAAM7c,GAAIr6B,QAAQ+4B,IAAIxf,GAAGgiB,GAAIhiB,GAAGiiB,GAAI0b,IAAK38B,MAAMhB,GAAG6e,IAAK7e,GAAG4e,KAAM5d,MAAMf,GAAG4e,IAAK5e,GAAG2e,MAAOiB,KAI1Fp5B,QAAQ+4B,IAAIxf,GAAGgiB,GAAIhiB,GAAGiiB,GAAI0b,IAAK38B,MAAMhB,GAAG6e,IAAK7e,GAAG4e,KAAM5d,MAAMhB,GAAGkhB,IAAKlhB,GAAGihB,MAAOpB,IAC9Ep5B,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAIsN,MAAMhB,GAAGiiB,GAAKjiB,GAAGkhB,IAAKlhB,GAAGgiB,GAAKhiB,GAAGihB,KAAMjgB,MAAMf,GAAGgiB,GAAKhiB,GAAGihB,IAAKjhB,GAAG+hB,GAAK/hB,GAAGghB,MAAOpB,IACrGp5B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAI0b,IAAK38B,MAAMf,GAAGihB,IAAKjhB,GAAGghB,KAAMjgB,MAAMf,GAAG4e,IAAK5e,GAAG2e,MAAOiB,OAK7Ep5B,QAAQu3B,OAAOY,IAAKC,KAAMp4B,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAIwpC,IAAKC,KAAMtd,KArB1Cp5B,QAAQu3B,OAAOY,IAAKC,KAyBpCprB,GAAKkoB,cAAc2hB,IAAM3hB,aAGtB+hB,IAAM/hB,cACb3b,GAAK6gB,eAAeM,IAAKC,IAAKH,IAAKC,IAAKztB,IAAKiqC,IAAK7d,IAClD5f,GAAK4gB,eAAejC,IAAKC,IAAKwC,IAAKC,IAAK7tB,IAAKiqC,IAAK7d,IAElDp5B,QAAQy3B,OAAOle,GAAGgiB,GAAKhiB,GAAG4e,IAAK5e,GAAGiiB,GAAKjiB,GAAG6e,KAGtC6e,IAAM5c,GAAIr6B,QAAQ+4B,IAAIxf,GAAGgiB,GAAIhiB,GAAGiiB,GAAIyb,IAAK18B,MAAMhB,GAAG6e,IAAK7e,GAAG4e,KAAM5d,MAAMf,GAAG4e,IAAK5e,GAAG2e,MAAOiB,KAI1Fp5B,QAAQ+4B,IAAIxf,GAAGgiB,GAAIhiB,GAAGiiB,GAAIyb,IAAK18B,MAAMhB,GAAG6e,IAAK7e,GAAG4e,KAAM5d,MAAMhB,GAAGkhB,IAAKlhB,GAAGihB,MAAOpB,IAC9Ep5B,QAAQ+4B,IAAI,EAAG,EAAG/rB,GAAIuN,MAAMhB,GAAGiiB,GAAKjiB,GAAGkhB,IAAKlhB,GAAGgiB,GAAKhiB,GAAGihB,KAAMjgB,MAAMf,GAAGgiB,GAAKhiB,GAAGihB,IAAKjhB,GAAG+hB,GAAK/hB,GAAGghB,KAAMpB,IACpGp5B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAIyb,IAAK18B,MAAMf,GAAGihB,IAAKjhB,GAAGghB,KAAMjgB,MAAMf,GAAG4e,IAAK5e,GAAG2e,MAAOiB,MAK7Ep5B,QAAQ+4B,IAAI,EAAG,EAAG/rB,GAAI4pC,IAAKD,IAAKvd,IArBIp5B,QAAQy3B,OAAOiD,IAAKC,UA1F1C36B,QAAQu3B,OAAO,EAAG,GAoHvC,GAFAv3B,QAAQw3B,YAEJgF,OAAQ,OAAOx8B,QAAU,KAAMw8B,OAAS,IAAM,KAyCpD,OAtCAzD,IAAI8e,SAAW,WACb,IAAI52E,IAAM04D,YAAY3wD,MAAMd,KAAM8G,aAAc6qD,YAAY7wD,MAAMd,KAAM8G,YAAc,EAClFzM,IAAMw3D,WAAW/wD,MAAMd,KAAM8G,aAAcirD,SAASjxD,MAAMd,KAAM8G,YAAc,EAAI+nD,QAAK,EAC3F,OAAQjd,IAAIv3C,GAAKtB,EAAG84C,IAAIx3C,GAAKtB,IAG/B83D,IAAIY,YAAc,SAAS3yC,GACzB,OAAOhY,UAAUxH,QAAUmyD,YAA2B,mBAAN3yC,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOY,aAG9FZ,IAAIc,YAAc,SAAS7yC,GACzB,OAAOhY,UAAUxH,QAAUqyD,YAA2B,mBAAN7yC,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOc,aAG9Fd,IAAIwd,aAAe,SAASvvD,GAC1B,OAAOhY,UAAUxH,QAAU+uE,aAA4B,mBAANvvD,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOwd,cAG/Fxd,IAAIyd,UAAY,SAASxvD,GACvB,OAAOhY,UAAUxH,QAAUgvE,UAAiB,MAALxvD,EAAY,KAAoB,mBAANA,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOyd,WAG/Gzd,IAAIgB,WAAa,SAAS/yC,GACxB,OAAOhY,UAAUxH,QAAUuyD,WAA0B,mBAAN/yC,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOgB,YAG7FhB,IAAIkB,SAAW,SAASjzC,GACtB,OAAOhY,UAAUxH,QAAUyyD,SAAwB,mBAANjzC,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOkB,UAG3FlB,IAAIoB,SAAW,SAASnzC,GACtB,OAAOhY,UAAUxH,QAAU2yD,SAAwB,mBAANnzC,EAAmBA,EAAI60B,uBAAU70B,GAAI+xC,KAAOoB,UAG3FpB,IAAI/4B,QAAU,SAAShZ,GACrB,OAAOhY,UAAUxH,QAAWw4B,QAAe,MAALhZ,EAAY,KAAOA,EAAI+xC,KAAO/4B,SAG/D+4B,KoD4qCL3tB,eAGE0sC,QACFxrC,KAAMyrC,MAGJC,gBAAkB,SAAlBA,gBAAmBC,QAGrB,IADA,IAAI93D,SADJ83D,OAASA,OAAOv+D,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,KACd,GAAK4qE,OAAO,GACxB93E,EAAI,EAAGA,EAAI83E,OAAOzwE,OAAQrH,IAC/BggB,QAAUrX,KAAKC,IAAIoX,QAAS83D,OAAO93E,GAAK83E,OAAO93E,EAAI,IAGvD,OAAOggB,SW77CA+3D,OX88CWn4E,OAAOizB,uBAAyBjzB,OAAOkzB,6BACzDlzB,OAAOmzB,0BAA4BnzB,OAAOozB,wBAA0BpzB,OAAOqzB,wBW/8C5D,gCAEJ+kD,gBACbnwC,IAAK,6BACLkwC,MAAOA,MACPE,MAAO,+BACPC,IAAK,uCACLC,MAAO,iCCLMC,cAAA,SAAS73E,MACtB,IAAIqjD,OAASrjD,MAAQ,GAAIP,EAAI4jD,OAAOl0C,QAAQ,KAE5C,OADI1P,GAAK,GAAqC,WAA/B4jD,OAASrjD,KAAK+hB,MAAM,EAAGtiB,MAAiBO,KAAOA,KAAK+hB,MAAMtiB,EAAI,IACtEq4E,eAAWt2E,eAAe6hD,SAAW00B,MAAOD,eAAWz0B,QAAS4vB,MAAOjzE,MAAQA,MCczE,IAAAg4E,QAAA,SAASh4E,MACtB,IAAIi4E,SAAW/I,cAAUlvE,MACzB,OAAQi4E,SAAShF,MARnB,SAASiF,aAAaD,UACpB,OAAO,WACL,OAAOzwE,KAAK2wE,cAAc1wC,gBAAgBwwC,SAASF,MAAOE,SAAShF,SAZvE,SAASmF,eAAep4E,MACtB,OAAO,WACL,IAAIk7B,SAAW1zB,KAAK2wE,cAChBE,IAAM7wE,KAAK8wE,aACf,OAAOD,MAAQb,OAASt8C,SAASujB,gBAAgB65B,eAAiBd,MAC5Dt8C,SAASkJ,cAAcpkC,MACvBk7B,SAASuM,gBAAgB4wC,IAAKr4E,SAchBi4E,WCvBxB,SAASvW,iBAEM,IAAA6W,aAAA,SAASC,UACtB,OAAmB,MAAZA,SAAmB9W,cAAO,WAC/B,OAAOl6D,KAAKixE,cAAcD,YCJ9B,SAASluC,oBACP,SAGa,IAAAouC,YAAA,SAASF,UACtB,OAAmB,MAAZA,SAAmBluC,kBAAQ,WAChC,OAAO9iC,KAAKmxE,iBAAiBH,YCNlBI,QAAA,SAASJ,UACtB,OAAO,WACL,OAAOhxE,KAAKqxE,QAAQL,YCFTM,OAAA,SAASxgD,QACtB,OAAO,IAAI7mB,MAAM6mB,OAAOxxB,SCMnB,SAASiyE,UAAU5tD,OAAQpR,OAChCvS,KAAK2wE,cAAgBhtD,OAAOgtD,cAC5B3wE,KAAK8wE,aAAentD,OAAOmtD,aAC3B9wE,KAAKwxE,MAAQ,KACbxxE,KAAK6gB,QAAU8C,OACf3jB,KAAKyxE,SAAWl/D,MAGlBg/D,UAAUx3E,WACR6c,YAAa26D,UACbryC,YAAa,SAAAA,YAAS1wB,OAAS,OAAOxO,KAAK6gB,QAAQ8b,aAAanuB,MAAOxO,KAAKwxE,QAC5E70C,aAAc,SAAAA,aAASnuB,MAAO0E,MAAQ,OAAOlT,KAAK6gB,QAAQ8b,aAAanuB,MAAO0E,OAC9E+9D,cAAe,SAAAA,cAASD,UAAY,OAAOhxE,KAAK6gB,QAAQowD,cAAcD,WACtEG,iBAAkB,SAAAA,iBAASH,UAAY,OAAOhxE,KAAK6gB,QAAQswD,iBAAiBH,YCpB/D,ICIXU,UAAY,IAEhB,SAASC,UAAUhuD,OAAQw3B,MAAOmT,MAAOx9B,OAAQs9B,KAAM9tD,MASrD,IARA,IACI0rB,KADA/zB,EAAI,EAEJ25E,YAAcz2B,MAAM77C,OACpBuyE,WAAavxE,KAAKhB,OAKfrH,EAAI45E,aAAc55E,GACnB+zB,KAAOmvB,MAAMljD,KACf+zB,KAAKylD,SAAWnxE,KAAKrI,GACrB64B,OAAO74B,GAAK+zB,MAEZsiC,MAAMr2D,GAAK,IAAIs5E,UAAU5tD,OAAQrjB,KAAKrI,IAK1C,KAAOA,EAAI25E,cAAe35E,GACpB+zB,KAAOmvB,MAAMljD,MACfm2D,KAAKn2D,GAAK+zB,MAKhB,SAAS8lD,QAAQnuD,OAAQw3B,MAAOmT,MAAOx9B,OAAQs9B,KAAM9tD,KAAM9G,KACzD,IAAIvB,EACA+zB,KAKAuX,SAJAwuC,kBACAH,YAAcz2B,MAAM77C,OACpBuyE,WAAavxE,KAAKhB,OAClB0yE,UAAY,IAAI/nE,MAAM2nE,aAK1B,IAAK35E,EAAI,EAAGA,EAAI25E,cAAe35E,GACzB+zB,KAAOmvB,MAAMljD,MACf+5E,UAAU/5E,GAAKsrC,SAAWmuC,UAAYl4E,IAAIpB,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,OACnE5X,YAAYwuC,eACd3jB,KAAKn2D,GAAK+zB,KAEV+lD,eAAexuC,UAAYvX,MAQjC,IAAK/zB,EAAI,EAAGA,EAAI45E,aAAc55E,GAExB+zB,KAAO+lD,eADXxuC,SAAWmuC,UAAYl4E,IAAIpB,KAAKurB,OAAQrjB,KAAKrI,GAAIA,EAAGqI,SAElDwwB,OAAO74B,GAAK+zB,KACZA,KAAKylD,SAAWnxE,KAAKrI,GACrB85E,eAAexuC,UAAY,MAE3B+qB,MAAMr2D,GAAK,IAAIs5E,UAAU5tD,OAAQrjB,KAAKrI,IAK1C,IAAKA,EAAI,EAAGA,EAAI25E,cAAe35E,GACxB+zB,KAAOmvB,MAAMljD,KAAQ85E,eAAeC,UAAU/5E,MAAQ+zB,OACzDoiC,KAAKn2D,GAAK+zB,MClDhB,SAAS4U,eAAUvmC,EAAG8K,GACpB,OAAO9K,EAAI8K,GAAK,EAAI9K,EAAI8K,EAAI,EAAI9K,GAAK8K,EAAI,EAAI07B,ICoBhC,IC1CAoxC,WAAA,SAASjmD,MACtB,OAAQA,KAAK2kD,eAAiB3kD,KAAK2kD,cAAcz5B,aACzClrB,KAAK0H,UAAY1H,MAClBA,KAAKkrB,aC4BP,SAASg7B,WAAWlmD,KAAMxzB,MAC/B,OAAOwzB,KAAKmJ,MAAMkiB,iBAAiB7+C,OAC5B0+C,WAAYlrB,MAAMorB,iBAAiBprB,KAAM,MAAMqrB,iBAAiB7+C,MCjCzE,SAAS25E,WAAW38B,QAClB,OAAOA,OAAO99B,OAAOnY,MAAM,SAG7B,SAAS6yE,UAAUpmD,MACjB,OAAOA,KAAKomD,WAAa,IAAIC,UAAUrmD,MAGzC,SAASqmD,UAAUrmD,MACjBhsB,KAAKuvB,MAAQvD,KACbhsB,KAAKsyE,OAASH,WAAWnmD,KAAK2iC,aAAa,UAAY,IAuBzD,SAAS4jB,WAAWvmD,KAAMi2B,OAExB,IADA,IAAI31B,KAAO8lD,UAAUpmD,MAAO/zB,GAAK,EAAGyB,EAAIuoD,MAAM3iD,SACrCrH,EAAIyB,GAAG4yB,KAAKrD,IAAIg5B,MAAMhqD,IAGjC,SAASu6E,cAAcxmD,KAAMi2B,OAE3B,IADA,IAAI31B,KAAO8lD,UAAUpmD,MAAO/zB,GAAK,EAAGyB,EAAIuoD,MAAM3iD,SACrCrH,EAAIyB,GAAG4yB,KAAKsW,OAAOqf,MAAMhqD,IA3BpCo6E,UAAUt4E,WACRkvB,IAAK,SAAAA,IAASzwB,MACJwH,KAAKsyE,OAAO3qE,QAAQnP,MACpB,IACNwH,KAAKsyE,OAAO9wE,KAAKhJ,MACjBwH,KAAKuvB,MAAM4P,aAAa,QAASn/B,KAAKsyE,OAAOxtE,KAAK,QAGtD89B,OAAQ,SAAAA,OAASpqC,MACf,IAAIP,EAAI+H,KAAKsyE,OAAO3qE,QAAQnP,MACxBP,GAAK,IACP+H,KAAKsyE,OAAOxpE,OAAO7Q,EAAG,GACtB+H,KAAKuvB,MAAM4P,aAAa,QAASn/B,KAAKsyE,OAAOxtE,KAAK,QAGtD2tE,SAAU,SAAAA,SAASj6E,MACjB,OAAOwH,KAAKsyE,OAAO3qE,QAAQnP,OAAS,IC7BxC,SAASk6E,aACP1yE,KAAKw3B,YAAc,GCDrB,SAASm7C,aACP3yE,KAAK40B,UAAY,GCDnB,SAAS8oB,cACH19C,KAAK4yE,aAAa5yE,KAAK08B,WAAWwC,YAAYl/B,MCDpD,SAAS6yE,QACH7yE,KAAK8yE,iBAAiB9yE,KAAK08B,WAAWC,aAAa38B,KAAMA,KAAK08B,WAAWq2C,YCE/E,SAASC,eACP,OAAO,KCJT,SAASpwC,gBACP,IAAIjf,OAAS3jB,KAAK08B,WACd/Y,QAAQA,OAAOH,YAAYxjB,MCFjC,SAASizE,yBACP,OAAOjzE,KAAK08B,WAAWC,aAAa38B,KAAKkzE,WAAU,GAAQlzE,KAAK4yE,aAGlE,SAASO,sBACP,OAAOnzE,KAAK08B,WAAWC,aAAa38B,KAAKkzE,WAAU,GAAOlzE,KAAK4yE,aAGlD,ICRXQ,gBAEOC,SAAQ,KAEK,oBAAb3/C,WAEH,iBADQA,SAASujB,kBAErBm8B,cAAgBE,WAAY,YAAaC,WAAY,cAIzD,SAASC,sBAAsB3H,SAAU7nE,MAAOm3C,OAE9C,OADA0wB,SAAW4H,gBAAgB5H,SAAU7nE,MAAOm3C,OACrC,SAASk4B,OACd,IAAIK,QAAUL,MAAMM,cACfD,UAAYA,UAAY1zE,MAAkD,EAAxC0zE,QAAQE,wBAAwB5zE,QACrE6rE,SAASzzE,KAAK4H,KAAMqzE,QAK1B,SAASI,gBAAgB5H,SAAU7nE,MAAOm3C,OACxC,OAAO,SAAS04B,QACd,IAAIC,OAAST,SACbA,SAAQQ,OACR,IACEhI,SAASzzE,KAAK4H,KAAMA,KAAKyxE,SAAUztE,MAAOm3C,OAD5C,QAGEk4B,SAAQS,SAad,SAASC,SAASC,UAChB,OAAO,WACL,IAAI9L,GAAKloE,KAAKi0E,KACd,GAAK/L,GAAL,CACA,IAAK,IAAkCxvE,EAA9B4hB,EAAI,EAAGriB,GAAK,EAAGI,EAAI6vE,GAAG5oE,OAAWgb,EAAIjiB,IAAKiiB,EAC7C5hB,EAAIwvE,GAAG5tD,GAAM05D,SAASj5E,MAAQrC,EAAEqC,OAASi5E,SAASj5E,MAASrC,EAAEF,OAASw7E,SAASx7E,KAGjF0vE,KAAKjwE,GAAKS,EAFVsH,KAAKk0E,oBAAoBx7E,EAAEqC,KAAMrC,EAAEmzE,SAAUnzE,EAAEy7E,WAK7Cl8E,EAAGiwE,GAAG5oE,OAASrH,SACT+H,KAAKi0E,OAIrB,SAASG,MAAMJ,SAAU96E,MAAOi7E,SAC9B,IAAIE,KAAOjB,aAAap5E,eAAeg6E,SAASj5E,MAAQy4E,sBAAwBC,gBAChF,OAAO,SAASl7E,EAAGN,EAAGkjD,OACpB,IAAoBziD,EAAhBwvE,GAAKloE,KAAKi0E,KAASpI,SAAWwI,KAAKn7E,MAAOjB,EAAGkjD,OACjD,GAAI+sB,GAAI,IAAK,IAAI5tD,EAAI,EAAGjiB,EAAI6vE,GAAG5oE,OAAQgb,EAAIjiB,IAAKiiB,EAC9C,IAAK5hB,EAAIwvE,GAAG5tD,IAAIvf,OAASi5E,SAASj5E,MAAQrC,EAAEF,OAASw7E,SAASx7E,KAI5D,OAHAwH,KAAKk0E,oBAAoBx7E,EAAEqC,KAAMrC,EAAEmzE,SAAUnzE,EAAEy7E,SAC/Cn0E,KAAKs0E,iBAAiB57E,EAAEqC,KAAMrC,EAAEmzE,SAAWA,SAAUnzE,EAAEy7E,QAAUA,cACjEz7E,EAAEQ,MAAQA,OAId8G,KAAKs0E,iBAAiBN,SAASj5E,KAAM8wE,SAAUsI,SAC/Cz7E,GAAKqC,KAAMi5E,SAASj5E,KAAMvC,KAAMw7E,SAASx7E,KAAMU,MAAOA,MAAO2yE,SAAUA,SAAUsI,QAASA,SACrFjM,GACAA,GAAG1mE,KAAK9I,GADJsH,KAAKi0E,MAAQv7E,IA0BnB,SAAS67E,YAAYV,OAAQhI,SAAUvV,KAAM9tD,MAClD,IAAIsrE,OAAST,SACbQ,OAAOW,YAAcnB,SACrBA,SAAQQ,OACR,IACE,OAAOhI,SAAS/qE,MAAMw1D,KAAM9tD,MAD9B,QAGE6qE,SAAQS,QCtGZ,SAASW,cAAczoD,KAAMjxB,KAAMiU,QACjC,IAAInX,OAASq/C,WAAYlrB,MACrBqnD,MAAQx7E,OAAO68E,YAEE,mBAAVrB,MACTA,MAAQ,IAAIA,MAAMt4E,KAAMiU,SAExBqkE,MAAQx7E,OAAO67B,SAASihD,YAAY,SAChC3lE,QAAQqkE,MAAMuB,UAAU75E,KAAMiU,OAAO6lE,QAAS7lE,OAAO8lE,YAAazB,MAAM0B,OAAS/lE,OAAO+lE,QACvF1B,MAAMuB,UAAU75E,MAAM,GAAO,IAGpCixB,KAAKyoD,cAAcpB,OAeN,ICGJ97E,gBAAQ,MAEZ,SAAS0rE,oBAAU+R,OAAQC,SAChCj1E,KAAKk1E,QAAUF,OACfh1E,KAAKm1E,SAAWF,QAGlB,SAASlnB,sBACP,OAAO,IAAIkV,sBAAYvvC,SAASujB,kBAAmB1/C,gBAGrD0rE,oBAAUlpE,UAAYg0D,oBAAUh0D,WAC9B6c,YAAaqsD,oBACbhmD,OC1Ca,SAASA,QACA,mBAAXA,SAAuBA,OAAS+zD,aAAS/zD,SAEpD,IAAK,IAAI+3D,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,UAAY,IAAInrE,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC3F,IAAK,IAAiF0R,KAAMqpD,QAAnFl6B,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAQg2E,SAAWF,UAAU96D,GAAK,IAAIrQ,MAAMvQ,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9G+zB,KAAOmvB,MAAMljD,MAAQo9E,QAAUp4D,OAAO7kB,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,UAClE,aAAcnvB,OAAMqpD,QAAQ5D,SAAWzlD,KAAKylD,UAChD6D,SAASr9E,GAAKo9E,SAKpB,OAAO,IAAIpS,oBAAUmS,UAAWp1E,KAAKm1E,WD+BrClnB,UE3Ca,SAAShxC,QACA,mBAAXA,SAAuBA,OAASi0D,YAAYj0D,SAEvD,IAAK,IAAI+3D,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,aAAgBH,WAAc36D,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC/F,IAAK,IAAyC0R,KAArCmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAcrH,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9D+zB,KAAOmvB,MAAMljD,MACfm9E,UAAU5zE,KAAKyb,OAAO7kB,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,QACnD85B,QAAQzzE,KAAKwqB,OAKnB,OAAO,IAAIi3C,oBAAUmS,UAAWH,UFgChC52D,OG5Ca,SAAS3U,OACD,mBAAVA,QAAsBA,MAAQ0nE,QAAQ1nE,QAEjD,IAAK,IAAIsrE,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,UAAY,IAAInrE,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC3F,IAAK,IAAuE0R,KAAnEmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAQg2E,SAAWF,UAAU96D,MAAeriB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3F+zB,KAAOmvB,MAAMljD,KAAOyR,MAAMtR,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,QAC1Dm6B,SAAS9zE,KAAKwqB,MAKpB,OAAO,IAAIi3C,oBAAUmS,UAAWp1E,KAAKm1E,WHkCrC70E,Kf4Ba,SAASpH,MAAOM,KAC7B,IAAKN,MAGH,OAFAoH,KAAO,IAAI2J,MAAMjK,KAAK81B,QAASxb,GAAK,EACpCta,KAAK2iC,KAAK,SAASpqC,GAAK+H,OAAOga,GAAK/hB,IAC7B+H,KAGT,IAAI7G,KAAOD,IAAMs4E,QAAUH,UACvBsD,QAAUj1E,KAAKm1E,SACfH,OAASh1E,KAAKk1E,QAEG,mBAAVh8E,QAAsBA,MDvFpB,SAASkb,GACtB,OAAO,WACL,OAAOA,GCqFgCu/B,CAASz6C,QAElD,IAAK,IAAIb,EAAI28E,OAAO11E,OAAQwxB,OAAS,IAAI7mB,MAAM5R,GAAIi2D,MAAQ,IAAIrkD,MAAM5R,GAAI+1D,KAAO,IAAInkD,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAAG,CAC/G,IAAIqJ,OAASsxD,QAAQ36D,GACjB6gC,MAAQ65B,OAAO16D,GACfs3D,YAAcz2B,MAAM77C,OACpBgB,KAAOpH,MAAMd,KAAKurB,OAAQA,QAAUA,OAAO8tD,SAAUn3D,EAAG26D,SACxDpD,WAAavxE,KAAKhB,OAClBi2E,WAAajnB,MAAMh0C,GAAK,IAAIrQ,MAAM4nE,YAClC2D,YAAc1kD,OAAOxW,GAAK,IAAIrQ,MAAM4nE,YAGxCp4E,KAAKkqB,OAAQw3B,MAAOo6B,WAAYC,YAFhBpnB,KAAK9zC,GAAK,IAAIrQ,MAAM2nE,aAEoBtxE,KAAM9G,KAK9D,IAAK,IAAoB2kD,SAAUjrC,KAA1BuvB,GAAK,EAAG8X,GAAK,EAAmB9X,GAAKovC,aAAcpvC,GAC1D,GAAI0b,SAAWo3B,WAAW9yC,IAAK,CAE7B,IADIA,IAAM8X,KAAIA,GAAK9X,GAAK,KACfvvB,KAAOsiE,YAAYj7B,QAAUA,GAAKs3B,aAC3C1zB,SAASqzB,MAAQt+D,MAAQ,MAQ/B,OAHA4d,OAAS,IAAImyC,oBAAUnyC,OAAQmkD,UACxBQ,OAASnnB,MAChBx9B,OAAO4kD,MAAQtnB,KACRt9B,QenEPw9B,MjB9Ca,WACb,OAAO,IAAI2U,oBAAUjjE,KAAKy1E,QAAUz1E,KAAKk1E,QAAQ5rE,IAAIgoE,QAAStxE,KAAKm1E,WiB8CnE/mB,KI/Ca,WACb,OAAO,IAAI6U,oBAAUjjE,KAAK01E,OAAS11E,KAAKk1E,QAAQ5rE,IAAIgoE,QAAStxE,KAAKm1E,WJ+ClErwE,KKnDa,SAAS6wE,QAASC,SAAUC,QACzC,IAAIvnB,MAAQtuD,KAAKsuD,QAASx9B,OAAS9wB,KAAMouD,KAAOpuD,KAAKouD,OAIrD,OAHAE,MAA2B,mBAAZqnB,QAAyBA,QAAQrnB,OAASA,MAAMl+B,OAAOulD,QAAU,IAChE,MAAZC,WAAkB9kD,OAAS8kD,SAAS9kD,SAC1B,MAAV+kD,OAAgBznB,KAAKxrB,SAAeizC,OAAOznB,MACxCE,OAASx9B,OAASw9B,MAAMtjD,MAAM8lB,QAAQ3M,QAAU2M,QL+CvD9lB,MMlDa,SAAS+iD,WAEtB,IAAK,IAAI+nB,QAAU91E,KAAKk1E,QAASa,QAAUhoB,UAAUmnB,QAASc,GAAKF,QAAQx2E,OAAQoxC,GAAKqlC,QAAQz2E,OAAQjH,EAAIuI,KAAKC,IAAIm1E,GAAItlC,IAAKulC,OAAS,IAAIhsE,MAAM+rE,IAAK17D,EAAI,EAAGA,EAAIjiB,IAAKiiB,EACpK,IAAK,IAAmG0R,KAA/FkqD,OAASJ,QAAQx7D,GAAI67D,OAASJ,QAAQz7D,GAAI5gB,EAAIw8E,OAAO52E,OAAQ0L,MAAQirE,OAAO37D,GAAK,IAAIrQ,MAAMvQ,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxH+zB,KAAOkqD,OAAOj+E,IAAMk+E,OAAOl+E,MAC7B+S,MAAM/S,GAAK+zB,MAKjB,KAAO1R,EAAI07D,KAAM17D,EACf27D,OAAO37D,GAAKw7D,QAAQx7D,GAGtB,OAAO,IAAI2oD,oBAAUgT,OAAQj2E,KAAKm1E,WNqClChxD,MOrDa,WAEb,IAAK,IAAI6wD,OAASh1E,KAAKk1E,QAAS56D,GAAK,EAAGjiB,EAAI28E,OAAO11E,SAAUgb,EAAIjiB,GAC/D,IAAK,IAA8D2zB,KAA1DmvB,MAAQ65B,OAAO16D,GAAIriB,EAAIkjD,MAAM77C,OAAS,EAAG4T,KAAOioC,MAAMljD,KAAYA,GAAK,IAC1E+zB,KAAOmvB,MAAMljD,MACXib,MAA6C,EAArC8Y,KAAK4nD,wBAAwB1gE,OAAWA,KAAKwpB,WAAWC,aAAa3Q,KAAM9Y,MACvFA,KAAO8Y,MAKb,OAAOhsB,MP2CPwR,KdpDa,SAASuvB,SAGtB,SAASq1C,YAAY/7E,EAAG8K,GACtB,OAAO9K,GAAK8K,EAAI47B,QAAQ1mC,EAAEo3E,SAAUtsE,EAAEssE,WAAap3E,GAAK8K,EAHrD47B,UAASA,QAAUH,gBAMxB,IAAK,IAAIo0C,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ+2E,WAAa,IAAIpsE,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAAG,CAC/F,IAAK,IAAmF0R,KAA/EmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAQg3E,UAAYD,WAAW/7D,GAAK,IAAIrQ,MAAMvQ,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxG+zB,KAAOmvB,MAAMljD,MACfq+E,UAAUr+E,GAAK+zB,MAGnBsqD,UAAU9kE,KAAK4kE,aAGjB,OAAO,IAAInT,oBAAUoT,WAAYr2E,KAAKm1E,UAAUhxD,ScqChD/rB,KQvDa,WACb,IAAIiH,SAAWyH,UAAU,GAGzB,OAFAA,UAAU,GAAK9G,KACfX,SAASyB,MAAM,KAAMgG,WACd9G,MRoDPsuB,MSxDa,WACb,IAAIA,MAAQ,IAAIrkB,MAAMjK,KAAK81B,QAAS79B,GAAK,EAEzC,OADA+H,KAAK2iC,KAAK,WAAarU,QAAQr2B,GAAK+H,OAC7BsuB,OTsDPtC,KUzDa,WAEb,IAAK,IAAIgpD,OAASh1E,KAAKk1E,QAAS56D,EAAI,EAAGjiB,EAAI28E,OAAO11E,OAAQgb,EAAIjiB,IAAKiiB,EACjE,IAAK,IAAI6gC,MAAQ65B,OAAO16D,GAAIriB,EAAI,EAAGyB,EAAIyhD,MAAM77C,OAAQrH,EAAIyB,IAAKzB,EAAG,CAC/D,IAAI+zB,KAAOmvB,MAAMljD,GACjB,GAAI+zB,KAAM,OAAOA,KAIrB,OAAO,MViDP8J,KW1Da,WACb,IAAIA,KAAO,EAEX,OADA91B,KAAK2iC,KAAK,aAAe7M,OAClBA,MXwDPgN,MY3Da,WACb,OAAQ9iC,KAAKgsB,QZ2Db2W,Ka5Da,SAAStjC,UAEtB,IAAK,IAAI21E,OAASh1E,KAAKk1E,QAAS56D,EAAI,EAAGjiB,EAAI28E,OAAO11E,OAAQgb,EAAIjiB,IAAKiiB,EACjE,IAAK,IAAgD0R,KAA5CmvB,MAAQ65B,OAAO16D,GAAIriB,EAAI,EAAGyB,EAAIyhD,MAAM77C,OAAcrH,EAAIyB,IAAKzB,GAC9D+zB,KAAOmvB,MAAMljD,KAAIoH,SAASjH,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,OAI/D,OAAOn7C,MbqDPuuD,KbnBa,SAAS/1D,KAAMU,OAC5B,IAAIu3E,SAAW/I,cAAUlvE,MAEzB,GAAIsO,UAAUxH,OAAS,EAAG,CACxB,IAAI0sB,KAAOhsB,KAAKgsB,OAChB,OAAOykD,SAAShF,MACVz/C,KAAKuqD,eAAe9F,SAASF,MAAOE,SAAShF,OAC7Cz/C,KAAK2iC,aAAa8hB,UAG1B,OAAOzwE,KAAK2iC,MAAe,MAATzpC,MACXu3E,SAAShF,MA7ClB,SAAS+K,aAAa/F,UACpB,OAAO,WACLzwE,KAAKy2E,kBAAkBhG,SAASF,MAAOE,SAAShF,SARpD,SAASiL,WAAWl+E,MAClB,OAAO,WACLwH,KAAK22E,gBAAgBn+E,QAiDgD,mBAAVU,MACtDu3E,SAAShF,MApBlB,SAASmL,eAAenG,SAAUv3E,OAChC,OAAO,WACL,IAAI0jB,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WACjB,MAAL8V,EAAW5c,KAAKy2E,kBAAkBhG,SAASF,MAAOE,SAAShF,OAC1DzrE,KAAKkgC,eAAeuwC,SAASF,MAAOE,SAAShF,MAAO7uD,KAZ7D,SAASi6D,aAAar+E,KAAMU,OAC1B,OAAO,WACL,IAAI0jB,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WACjB,MAAL8V,EAAW5c,KAAK22E,gBAAgBn+E,MAC/BwH,KAAKm/B,aAAa3mC,KAAMokB,KAyBxB6zD,SAAShF,MAnClB,SAASqL,eAAerG,SAAUv3E,OAChC,OAAO,WACL8G,KAAKkgC,eAAeuwC,SAASF,MAAOE,SAAShF,MAAOvyE,SARxD,SAAS69E,aAAav+E,KAAMU,OAC1B,OAAO,WACL8G,KAAKm/B,aAAa3mC,KAAMU,UAuC+Bu3E,SAAUv3E,SaOnEi8B,MXxCa,SAAS38B,KAAMU,MAAO89E,UACnC,OAAOlwE,UAAUxH,OAAS,EACpBU,KAAK2iC,MAAe,MAATzpC,MAtBnB,SAAS+9E,YAAYz+E,MACnB,OAAO,WACLwH,KAAKm1B,MAAM+hD,eAAe1+E,QAqBe,mBAAVU,MAXnC,SAASi+E,cAAc3+E,KAAMU,MAAO89E,UAClC,OAAO,WACL,IAAIp6D,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WACjB,MAAL8V,EAAW5c,KAAKm1B,MAAM+hD,eAAe1+E,MACpCwH,KAAKm1B,MAAMiiD,YAAY5+E,KAAMokB,EAAGo6D,YAVzC,SAASK,cAAc7+E,KAAMU,MAAO89E,UAClC,OAAO,WACLh3E,KAAKm1B,MAAMiiD,YAAY5+E,KAAMU,MAAO89E,aAiBXx+E,KAAMU,MAAmB,MAAZ89E,SAAmB,GAAKA,WAC1D9E,WAAWlyE,KAAKgsB,OAAQxzB,OWmC9BsB,Sc3Ca,SAAStB,KAAMU,OAC5B,OAAO4N,UAAUxH,OAAS,EACpBU,KAAK2iC,MAAe,MAATzpC,MAtBnB,SAASo+E,eAAe9+E,MACtB,OAAO,kBACEwH,KAAKxH,QAqB8B,mBAAVU,MAXpC,SAASq+E,iBAAiB/+E,KAAMU,OAC9B,OAAO,WACL,IAAI0jB,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WACjB,MAAL8V,SAAkB5c,KAAKxH,MACtBwH,KAAKxH,MAAQokB,IAVtB,SAAS46D,iBAAiBh/E,KAAMU,OAC9B,OAAO,WACL8G,KAAKxH,MAAQU,SAiBaV,KAAMU,QAC5B8G,KAAKgsB,OAAOxzB,OdsClBi/E,QVHa,SAASj/E,KAAMU,OAC5B,IAAI+oD,MAAQkwB,WAAW35E,KAAO,IAE9B,GAAIsO,UAAUxH,OAAS,EAAG,CAExB,IADA,IAAIgtB,KAAO8lD,UAAUpyE,KAAKgsB,QAAS/zB,GAAK,EAAGyB,EAAIuoD,MAAM3iD,SAC5CrH,EAAIyB,GAAG,IAAK4yB,KAAKmmD,SAASxwB,MAAMhqD,IAAK,OAAO,EACrD,OAAO,EAGT,OAAO+H,KAAK2iC,MAAuB,mBAAVzpC,MAf3B,SAASw+E,gBAAgBz1B,MAAO/oD,OAC9B,OAAO,YACJA,MAAM4H,MAAMd,KAAM8G,WAAayrE,WAAaC,eAAexyE,KAAMiiD,SAc5C/oD,MA5B1B,SAASy+E,YAAY11B,OACnB,OAAO,WACLswB,WAAWvyE,KAAMiiD,SAIrB,SAAS21B,aAAa31B,OACpB,OAAO,WACLuwB,cAAcxyE,KAAMiiD,UAsBFA,MAAO/oD,SUR3BoJ,KThDa,SAASpJ,OACtB,OAAO4N,UAAUxH,OACXU,KAAK2iC,KAAc,MAATzpC,MACNw5E,YAA+B,mBAAVx5E,MAVjC,SAAS2+E,aAAa3+E,OACpB,OAAO,WACL,IAAI0jB,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WAC1B9G,KAAKw3B,YAAmB,MAAL5a,EAAY,GAAKA,IATxC,SAASk7D,aAAa5+E,OACpB,OAAO,WACL8G,KAAKw3B,YAAct+B,SAgBGA,QAClB8G,KAAKgsB,OAAOwL,aS2ClBugD,KRjDa,SAAS7+E,OACtB,OAAO4N,UAAUxH,OACXU,KAAK2iC,KAAc,MAATzpC,MACNy5E,YAA+B,mBAAVz5E,MAVjC,SAAS8+E,aAAa9+E,OACpB,OAAO,WACL,IAAI0jB,EAAI1jB,MAAM4H,MAAMd,KAAM8G,WAC1B9G,KAAK40B,UAAiB,MAALhY,EAAY,GAAKA,IATtC,SAASq7D,aAAa/+E,OACpB,OAAO,WACL8G,KAAK40B,UAAY17B,SAgBKA,QAClB8G,KAAKgsB,OAAO4I,WQ4ClB8oB,MP/Da,WACb,OAAO19C,KAAK2iC,KAAK+a,cO+DjBm1B,MNhEa,WACb,OAAO7yE,KAAK2iC,KAAKkwC,QMgEjBziD,OenEa,SAAS53B,MACtB,IAAIe,OAAyB,mBAATf,KAAsBA,KAAOg4E,QAAQh4E,MACzD,OAAOwH,KAAKid,OAAO,WACjB,OAAOjd,KAAKk/B,YAAY3lC,OAAOuH,MAAMd,KAAM8G,efiE7C2nD,OL/Da,SAASj2D,KAAM0mE,QAC5B,IAAI3lE,OAAyB,mBAATf,KAAsBA,KAAOg4E,QAAQh4E,MACrDykB,OAAmB,MAAViiD,OAAiB8T,aAAiC,mBAAX9T,OAAwBA,OAAS8R,aAAS9R,QAC9F,OAAOl/D,KAAKid,OAAO,WACjB,OAAOjd,KAAK28B,aAAapjC,OAAOuH,MAAMd,KAAM8G,WAAYmW,OAAOnc,MAAMd,KAAM8G,YAAc,SK4D3F87B,OJlEa,WACb,OAAO5iC,KAAK2iC,KAAKC,gBIkEjB1hC,MHhEa,SAASg3E,MACtB,OAAOl4E,KAAKid,OAAOi7D,KAAO/E,oBAAsBF,yBGgEhD1gE,MgBzEa,SAASrZ,OACtB,OAAO4N,UAAUxH,OACXU,KAAKlG,SAAS,WAAYZ,OAC1B8G,KAAKgsB,OAAOylD,UhBuElBvJ,GFEa,SAAS8L,SAAU96E,MAAOi7E,SACvC,IAA+Cl8E,EAAyBkB,EAApEg/E,UA5CN,SAASC,eAAeD,WACtB,OAAOA,UAAUzgE,OAAOnY,MAAM,SAAS+J,IAAI,SAASnQ,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEwO,QAAQ,KAE7B,OADI1P,GAAK,IAAGO,KAAOW,EAAEohB,MAAMtiB,EAAI,GAAIkB,EAAIA,EAAEohB,MAAM,EAAGtiB,KAC1C8C,KAAM5B,EAAGX,KAAMA,QAwCT4/E,CAAepE,SAAW,IAAQt6E,EAAIy+E,UAAU74E,OAEhE,KAAIwH,UAAUxH,OAAS,GAAvB,CAcA,IAFA4oE,GAAKhvE,MAAQk7E,MAAQL,SACN,MAAXI,UAAiBA,SAAU,GAC1Bl8E,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG+H,KAAK2iC,KAAKulC,GAAGiQ,UAAUlgF,GAAIiB,MAAOi7E,UAC1D,OAAOn0E,KAdL,IAAIkoE,GAAKloE,KAAKgsB,OAAOioD,KACrB,GAAI/L,GAAI,IAAK,IAA0BxvE,EAAtB4hB,EAAI,EAAGjiB,EAAI6vE,GAAG5oE,OAAWgb,EAAIjiB,IAAKiiB,EACjD,IAAKriB,EAAI,EAAGS,EAAIwvE,GAAG5tD,GAAIriB,EAAIyB,IAAKzB,EAC9B,IAAKkB,EAAIg/E,UAAUlgF,IAAI8C,OAASrC,EAAEqC,MAAQ5B,EAAEX,OAASE,EAAEF,KACrD,OAAOE,EAAEQ,OETjBm/E,SD9Ca,SAASt9E,KAAMiU,QAC5B,OAAOhP,KAAK2iC,MAAwB,mBAAX3zB,OAP3B,SAASspE,iBAAiBv9E,KAAMiU,QAC9B,OAAO,WACL,OAAOylE,cAAcz0E,KAAMjF,KAAMiU,OAAOlO,MAAMd,KAAM8G,cARxD,SAASyxE,iBAAiBx9E,KAAMiU,QAC9B,OAAO,WACL,OAAOylE,cAAcz0E,KAAMjF,KAAMiU,WAaXjU,KAAMiU,WC8CjB++C,sCiB5EAyqB,WAAA,SAASxH,UACtB,MAA2B,iBAAbA,SACR,IAAI/N,sBAAYvvC,SAASu9C,cAAcD,aAAct9C,SAASujB,kBAC9D,IAAIgsB,sBAAY+N,WAAYz5E,iBCLhCkhF,OAAS,EAMb,SAASC,QACP14E,KAAK8e,EAAI,OAAS25D,QAAQp0E,SAAS,IAGrCq0E,MAAM3+E,UARS,SAAS0xE,QACtB,OAAO,IAAIiN,OAOW3+E,WACtB6c,YAAa8hE,MACb5/E,IAAK,SAAAA,IAASkzB,MAEZ,IADA,IAAIkI,GAAKl0B,KAAK8e,IACLoV,MAAMlI,OAAO,KAAMA,KAAOA,KAAK0Q,YAAa,OACrD,OAAO1Q,KAAKkI,KAEdxhB,IAAK,SAAAA,IAASsZ,KAAM9yB,OAClB,OAAO8yB,KAAKhsB,KAAK8e,GAAK5lB,OAExB0pC,OAAQ,SAAAA,OAAS5W,MACf,OAAOhsB,KAAK8e,KAAKkN,aAAeA,KAAKhsB,KAAK8e,IAE5Cza,SAAU,SAAAA,WACR,OAAOrE,KAAK8e,ICtBD,IAAA01D,YAAA,WAEb,IADA,IAAqB5yD,OAAjB+2D,QAAUtF,SACPzxD,OAAS+2D,QAAQnE,aAAamE,QAAU/2D,OAC/C,OAAO+2D,SCLMC,UAAA,SAAS5sD,KAAMqnD,OAC5B,IAAIvzC,IAAM9T,KAAK6sD,iBAAmB7sD,KAElC,GAAI8T,IAAIg5C,eAAgB,CACtB,IAAIhlB,MAAQh0B,IAAIg5C,iBAGhB,OAFAhlB,MAAM1/C,EAAIi/D,MAAM0F,QAASjlB,MAAMvuD,EAAI8tE,MAAM2F,UACzCllB,MAAQA,MAAMmlB,gBAAgBjtD,KAAKktD,eAAeC,YACpC/kE,EAAG0/C,MAAMvuD,GAGzB,IAAI6rD,KAAOplC,KAAKotD,wBAChB,OAAQ/F,MAAM0F,QAAU3nB,KAAKnwB,KAAOjV,KAAKqtD,WAAYhG,MAAM2F,QAAU5nB,KAAKtzB,IAAM9R,KAAKstD,YCRxEC,MAAA,SAASvtD,MACtB,IAAIqnD,MAAQmB,cAEZ,OADInB,MAAMmG,iBAAgBnG,MAAQA,MAAMmG,eAAe,IAChD1lB,UAAM9nC,KAAMqnD,QCHNoG,UAAA,SAASztD,KAAM0tD,QAASC,YACjC7yE,UAAUxH,OAAS,IAAGq6E,WAAaD,QAASA,QAAUlF,cAAcgF,gBAExE,IAAK,IAA6CI,MAAzC3hF,EAAI,EAAGyB,EAAIggF,QAAUA,QAAQp6E,OAAS,EAAUrH,EAAIyB,IAAKzB,EAChE,IAAK2hF,MAAQF,QAAQzhF,IAAI0hF,aAAeA,WACtC,OAAO7lB,UAAM9nC,KAAM4tD,OAIvB,OAAO,MCZLvjB,eAAQn9D,MAAO,SAAAA,WAEnB,SAASm/E,oBACP,IAAK,IAAyCl/E,EAArClB,EAAI,EAAGyB,EAAIoN,UAAUxH,OAAQwf,KAAW7mB,EAAIyB,IAAKzB,EAAG,CAC3D,KAAMkB,EAAI2N,UAAU7O,GAAK,KAAQkB,KAAK2lB,EAAI,MAAM,IAAIzO,MAAM,iBAAmBlX,GAC7E2lB,EAAE3lB,MAEJ,OAAO,IAAI0gF,SAAS/6D,GAGtB,SAAS+6D,SAAS/6D,GAChB9e,KAAK8e,EAAIA,EAqDX,SAAShmB,aAAIiC,KAAMvC,MACjB,IAAK,IAA4BF,EAAxBL,EAAI,EAAGyB,EAAIqB,KAAKuE,OAAWrH,EAAIyB,IAAKzB,EAC3C,IAAKK,EAAIyC,KAAK9C,IAAIO,OAASA,KACzB,OAAOF,EAAEY,MAKf,SAASwZ,aAAI3X,KAAMvC,KAAM6G,UACvB,IAAK,IAAIpH,EAAI,EAAGyB,EAAIqB,KAAKuE,OAAQrH,EAAIyB,IAAKzB,EACxC,GAAI8C,KAAK9C,GAAGO,OAASA,KAAM,CACzBuC,KAAK9C,GAAKo+D,cAAMt7D,KAAOA,KAAKwf,MAAM,EAAGtiB,GAAGgU,OAAOlR,KAAKwf,MAAMtiB,EAAI,IAC9D,MAIJ,OADgB,MAAZoH,UAAkBtE,KAAKyG,MAAMhJ,KAAMA,KAAMU,MAAOmG,WAC7CtE,KAzDT8+E,SAAS9/E,UAAYs+E,kBAASt+E,WAC5B6c,YAAaijE,SACb3R,GAAI,SAAAA,GAAS8L,SAAU30E,UACrB,IAEIlG,EAFA2lB,EAAI9e,KAAK8e,EACTg7D,EAbR,SAAS1B,wBAAeD,UAAW4B,OACjC,OAAO5B,UAAUzgE,OAAOnY,MAAM,SAAS+J,IAAI,SAASnQ,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEwO,QAAQ,KAE7B,GADI1P,GAAK,IAAGO,KAAOW,EAAEohB,MAAMtiB,EAAI,GAAIkB,EAAIA,EAAEohB,MAAM,EAAGtiB,IAC9CkB,IAAM4gF,MAAM//E,eAAeb,GAAI,MAAM,IAAIkX,MAAM,iBAAmBlX,GACtE,OAAQ4B,KAAM5B,EAAGX,KAAMA,QAQf4/E,CAAepE,SAAW,GAAIl1D,GAElC7mB,GAAK,EACLyB,EAAIogF,EAAEx6E,OAGV,KAAIwH,UAAUxH,OAAS,GAAvB,CAOA,GAAgB,MAAZD,UAAwC,mBAAbA,SAAyB,MAAM,IAAIgR,MAAM,qBAAuBhR,UAC/F,OAASpH,EAAIyB,GACX,GAAIP,GAAK66E,SAAW8F,EAAE7hF,IAAI8C,KAAM+jB,EAAE3lB,GAAKuZ,aAAIoM,EAAE3lB,GAAI66E,SAASx7E,KAAM6G,eAC3D,GAAgB,MAAZA,SAAkB,IAAKlG,KAAK2lB,EAAGA,EAAE3lB,GAAKuZ,aAAIoM,EAAE3lB,GAAI66E,SAASx7E,KAAM,MAG1E,OAAOwH,KAZL,OAAS/H,EAAIyB,GAAG,IAAKP,GAAK66E,SAAW8F,EAAE7hF,IAAI8C,QAAU5B,EAAIL,aAAIgmB,EAAE3lB,GAAI66E,SAASx7E,OAAQ,OAAOW,GAc/FgrC,KAAM,SAAAA,OACJ,IAAIA,QAAWrlB,EAAI9e,KAAK8e,EACxB,IAAK,IAAI3lB,KAAK2lB,EAAGqlB,KAAKhrC,GAAK2lB,EAAE3lB,GAAGohB,QAChC,OAAO,IAAIs/D,SAAS11C,OAEtB/rC,KAAM,SAAAA,KAAS2C,KAAMu7D,MACnB,IAAK58D,EAAIoN,UAAUxH,OAAS,GAAK,EAAG,IAAK,IAAgC5F,EAAGP,EAA/BqP,KAAO,IAAIyB,MAAMvQ,GAAIzB,EAAI,EAASA,EAAIyB,IAAKzB,EAAGuQ,KAAKvQ,GAAK6O,UAAU7O,EAAI,GACnH,IAAK+H,KAAK8e,EAAE9kB,eAAee,MAAO,MAAM,IAAIsV,MAAM,iBAAmBtV,MACrE,IAAuB9C,EAAI,EAAGyB,GAAzBP,EAAI6G,KAAK8e,EAAE/jB,OAAoBuE,OAAQrH,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAM4H,MAAMw1D,KAAM9tD,OAEjF1H,MAAO,SAAAA,MAAS/F,KAAMu7D,KAAM9tD,MAC1B,IAAKxI,KAAK8e,EAAE9kB,eAAee,MAAO,MAAM,IAAIsV,MAAM,iBAAmBtV,MACrE,IAAK,IAAI5B,EAAI6G,KAAK8e,EAAE/jB,MAAO9C,EAAI,EAAGyB,EAAIP,EAAEmG,OAAQrH,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAM4H,MAAMw1D,KAAM9tD,QAuBxE6vE,mCCjFR,SAAS2B,gBACd3G,SAAM4G,2BAGO,IAAAC,QAAA,WACb7G,SAAM8G,iBACN9G,SAAM4G,4BCLOG,OAAA,SAASC,MACtB,IAAI9iF,KAAO8iF,KAAK3mD,SAASujB,gBACrB8W,UAAY9wC,WAAOo9D,MAAMnS,GAAG,iBAAkBgS,SAAS,GACvD,kBAAmB3iF,KACrBw2D,UAAUma,GAAG,mBAAoBgS,SAAS,IAE1C3iF,KAAK+iF,WAAa/iF,KAAK49B,MAAMolD,cAC7BhjF,KAAK49B,MAAMolD,cAAgB,SCVhB,IAAAC,qBAAA,SAASpmE,GACtB,OAAO,WACL,OAAOA,ICFI,SAASqmE,UAAU5hC,OAAQ99C,KAAM2/E,QAASxmD,GAAIymD,OAAQvmE,EAAG7O,EAAGyrD,GAAIC,GAAIonB,UACjFr4E,KAAK64C,OAASA,OACd74C,KAAKjF,KAAOA,KACZiF,KAAK06E,QAAUA,QACf16E,KAAK25E,WAAazlD,GAClBl0B,KAAK26E,OAASA,OACd36E,KAAKoU,EAAIA,EACTpU,KAAKuF,EAAIA,EACTvF,KAAKgxD,GAAKA,GACVhxD,KAAKixD,GAAKA,GACVjxD,KAAK8e,EAAIu5D,SCFX,SAASuC,gBACP,OAAQvH,SAAMwH,OAGhB,SAASC,mBACP,OAAO96E,KAAK08B,WAGd,SAASq+C,eAAexiF,GACtB,OAAY,MAALA,GAAa6b,EAAGi/D,SAAMj/D,EAAG7O,EAAG8tE,SAAM9tE,GAAKhN,EAGhD,SAASyiF,mBACP,MAAO,iBAAkBh7E,KDR3By6E,UAAU1gF,UAAUmuE,GAAK,WACvB,IAAIhvE,MAAQ8G,KAAK8e,EAAEopD,GAAGpnE,MAAMd,KAAK8e,EAAGhY,WACpC,OAAO5N,QAAU8G,KAAK8e,EAAI9e,KAAO9G,OCSpB,IAAA+hF,SAAA,WACb,IAOIC,WACAC,WACAC,YACAC,YAVAh9D,OAASu8D,cACTzmD,UAAY2mD,iBACZJ,QAAUK,eACVO,UAAYN,iBACZO,YACA1vD,UAAYwsD,aAAS,QAAS,OAAQ,OACtCsC,OAAS,EAKTa,eAAiB,EAErB,SAASC,KAAK1tB,WACZA,UACKma,GAAG,iBAAkBwT,aACvBr9D,OAAOi9D,WACLpT,GAAG,kBAAmByT,cACtBzT,GAAG,iBAAkB0T,YACrB1T,GAAG,iCAAkC2T,YACrC1mD,MAAM,eAAgB,QACtBA,MAAM,8BAA+B,iBAG5C,SAASumD,cACP,IAAIL,aAAgBh9D,OAAOvd,MAAMd,KAAM8G,WAAvC,CACA,IAAIg1E,QAAUC,YAAY,QAAS5nD,UAAUrzB,MAAMd,KAAM8G,WAAYyyE,MAAOv5E,KAAM8G,WAC7Eg1E,UACL7+D,WAAOo2D,SAAMgH,MAAMnS,GAAG,iBAAkB8T,YAAY,GAAM9T,GAAG,eAAgB+T,YAAY,GACzF7B,OAAO/G,SAAMgH,MACbL,gBACAoB,aAAc,EACdF,WAAa7H,SAAM0F,QACnBoC,WAAa9H,SAAM2F,QACnB8C,QAAQ,WAGV,SAASE,aAEP,GADA9B,WACKkB,YAAa,CAChB,IAAIpqB,GAAKqiB,SAAM0F,QAAUmC,WAAYjqB,GAAKoiB,SAAM2F,QAAUmC,WAC1DC,YAAcpqB,GAAKA,GAAKC,GAAKA,GAAKuqB,eAEpCD,SAAShC,MAAM,QAGjB,SAAS0C,aACPh/D,WAAOo2D,SAAMgH,MAAMnS,GAAG,8BAA+B,MH1DlD,SAASgU,QAAQ7B,KAAM8B,SAC5B,IAAI5kF,KAAO8iF,KAAK3mD,SAASujB,gBACrB8W,UAAY9wC,WAAOo9D,MAAMnS,GAAG,iBAAkB,MAC9CiU,UACFpuB,UAAUma,GAAG,aAAcgS,SAAS,GACpC/uD,WAAW,WAAa4iC,UAAUma,GAAG,aAAc,OAAU,IAE3D,kBAAmB3wE,KACrBw2D,UAAUma,GAAG,mBAAoB,OAEjC3wE,KAAK49B,MAAMolD,cAAgBhjF,KAAK+iF,kBACzB/iF,KAAK+iF,YGgDZ4B,CAAQ7I,SAAMgH,KAAMe,aACpBlB,UACAqB,SAAShC,MAAM,OAGjB,SAASoC,eACP,GAAKt9D,OAAOvd,MAAMd,KAAM8G,WAAxB,CACA,IAEwB7O,EAAG6jF,QAFvBpC,QAAUrG,SAAMmG,eAChBlhF,EAAI67B,UAAUrzB,MAAMd,KAAM8G,WAC1BpN,EAAIggF,QAAQp6E,OAEhB,IAAKrH,EAAI,EAAGA,EAAIyB,IAAKzB,GACf6jF,QAAUC,YAAYrC,QAAQzhF,GAAG0hF,WAAYrhF,EAAGshF,UAAO55E,KAAM8G,cAC/DkzE,gBACA8B,QAAQ,WAKd,SAASF,aACP,IACwB3jF,EAAG6jF,QADvBpC,QAAUrG,SAAMmG,eAChB9/E,EAAIggF,QAAQp6E,OAEhB,IAAKrH,EAAI,EAAGA,EAAIyB,IAAKzB,GACf6jF,QAAUP,SAAS7B,QAAQzhF,GAAG0hF,eAChCO,UACA4B,QAAQ,SAKd,SAASD,aACP,IACwB5jF,EAAG6jF,QADvBpC,QAAUrG,SAAMmG,eAChB9/E,EAAIggF,QAAQp6E,OAIhB,IAFI+7E,aAAae,aAAaf,aAC9BA,YAAclwD,WAAW,WAAakwD,YAAc,MAAS,KACxDpjF,EAAI,EAAGA,EAAIyB,IAAKzB,GACf6jF,QAAUP,SAAS7B,QAAQzhF,GAAG0hF,eAChCK,gBACA8B,QAAQ,QAKd,SAASC,YAAY7nD,GAAIC,UAAW2/B,MAAOwC,KAAM9tD,MAC/C,IAA8BtO,EAAG82D,GAAIC,GAAjCh3D,EAAI65D,MAAM3/B,UAAWD,IACrBmoD,aAAexwD,UAAUsY,OAE7B,GAAKowC,YAAY,IAAIkG,UAAUgB,KAAM,cAAevhF,EAAGg6B,GAAIymD,OAAQ1gF,EAAE,GAAIA,EAAE,GAAI,EAAG,EAAGoiF,cAAe,WAClG,OAAuD,OAAlDhJ,SAAMqH,QAAUxgF,EAAIwgF,QAAQ55E,MAAMw1D,KAAM9tD,SAC7CwoD,GAAK92D,EAAEka,EAAIna,EAAE,IAAM,EACnBg3D,GAAK/2D,EAAEqL,EAAItL,EAAE,IAAM,GACZ,KAGT,OAAO,SAAS6hF,QAAQ/gF,MACtB,IAAYrB,EAARu1E,GAAKh1E,EACT,OAAQc,MACN,IAAK,QAASwgF,SAASrnD,IAAM4nD,QAASpiF,EAAIihF,SAAU,MACpD,IAAK,aAAcY,SAASrnD,MAAOymD,OACnC,IAAK,OAAQ1gF,EAAI65D,MAAM3/B,UAAWD,IAAKx6B,EAAIihF,OAE7CpG,YAAY,IAAIkG,UAAUgB,KAAM1gF,KAAMb,EAAGg6B,GAAIx6B,EAAGO,EAAE,GAAK+2D,GAAI/2D,EAAE,GAAKg3D,GAAIh3D,EAAE,GAAKg1E,GAAG,GAAIh1E,EAAE,GAAKg1E,GAAG,GAAIoN,cAAeA,aAAav7E,MAAOu7E,cAAethF,KAAMu7D,KAAM9tD,QA6BpK,OAzBAizE,KAAKp9D,OAAS,SAASS,GACrB,OAAOhY,UAAUxH,QAAU+e,OAAsB,mBAANS,EAAmBA,EAAI60B,uBAAW70B,GAAI28D,MAAQp9D,QAG3Fo9D,KAAKtnD,UAAY,SAASrV,GACxB,OAAOhY,UAAUxH,QAAU60B,UAAyB,mBAANrV,EAAmBA,EAAI60B,qBAAS70B,GAAI28D,MAAQtnD,WAG5FsnD,KAAKf,QAAU,SAAS57D,GACtB,OAAOhY,UAAUxH,QAAUo7E,QAAuB,mBAAN57D,EAAmBA,EAAI60B,qBAAS70B,GAAI28D,MAAQf,SAG1Fe,KAAKH,UAAY,SAASx8D,GACxB,OAAOhY,UAAUxH,QAAUg8E,UAAyB,mBAANx8D,EAAmBA,EAAI60B,uBAAW70B,GAAI28D,MAAQH,WAG9FG,KAAKvT,GAAK,WACR,IAAIhvE,MAAQ2yB,UAAUq8C,GAAGpnE,MAAM+qB,UAAW/kB,WAC1C,OAAO5N,QAAU2yB,UAAY4vD,KAAOviF,OAGtCuiF,KAAKa,cAAgB,SAASx9D,GAC5B,OAAOhY,UAAUxH,QAAUk8E,gBAAkB18D,GAAKA,GAAKA,EAAG28D,MAAQ76E,KAAKkU,KAAK0mE,iBAGvEC,mSCrKT,IAIIc,SACAC,SALAC,YAAQ,EACRC,QAAU,EACV7/B,eAAW,EACX8/B,UAAY,IAGZC,UAAY,EACZC,SAAW,EACXC,UAAY,EACZC,MAA+B,YAAvB,oBAAOC,YAAP,YAAAC,aAAOD,eAA4BA,YAAYE,IAAMF,YAAcl7E,KAC3Eq7E,SAA6B,YAAlB,oBAAOtlF,OAAP,YAAAolF,aAAOplF,UAAuBA,OAAOizB,sBAAwBjzB,OAAOizB,sBAAsBrxB,KAAK5B,QAAU,SAASmiB,GAAKmR,WAAWnR,EAAG,KAE7I,SAASkjE,MACd,OAAOL,WAAaM,SAASC,UAAWP,SAAWE,MAAMG,MAAQJ,WAGnE,SAASM,WACPP,SAAW,EAGN,SAASQ,QACdr9E,KAAKs9E,MACLt9E,KAAKu9E,MACLv9E,KAAKwxE,MAAQ,KA0BR,SAASgM,MAAMn+E,SAAUo+E,MAAO72B,MACrC,IAAIztD,EAAI,IAAIkkF,MAEZ,OADAlkF,EAAEukF,QAAQr+E,SAAUo+E,MAAO72B,MACpBztD,EAcT,SAASwkF,OACPd,UAAYD,UAAYG,MAAMG,OAASJ,UACvCL,YAAQC,QAAU,EAClB,KAdK,SAASkB,aACdV,QACET,YAEF,IADA,IAAkBtiF,EAAdhB,EAAIojF,SACDpjF,IACAgB,EAAI0iF,SAAW1jF,EAAEokF,QAAU,GAAGpkF,EAAEmkF,MAAMllF,KAAK,KAAM+B,GACtDhB,EAAIA,EAAEq4E,QAENiL,YAOAmB,GADF,QAGEnB,YAAQ,EAWZ,SAASoB,MACP,IAAIxsC,GAAmBE,GAAfD,GAAKirC,SAAc31B,KAAOpyC,IAClC,KAAO88B,IACDA,GAAGgsC,OACD12B,KAAOtV,GAAGisC,QAAO32B,KAAOtV,GAAGisC,OAC/BlsC,GAAKC,GAAIA,GAAKA,GAAGkgC,QAEjBjgC,GAAKD,GAAGkgC,MAAOlgC,GAAGkgC,MAAQ,KAC1BlgC,GAAKD,GAAKA,GAAGmgC,MAAQjgC,GAAKgrC,SAAWhrC,IAGzCirC,SAAWnrC,GACXysC,MAAMl3B,MAtBJi3B,GACAhB,SAAW,GAIf,SAASkB,OACP,IAAIb,IAAMH,MAAMG,MAAOO,MAAQP,IAAMN,UACjCa,MAAQd,YAAWG,WAAaW,MAAOb,UAAYM,KAkBzD,SAASY,MAAMl3B,MACT61B,cACAC,UAASA,QAAUN,aAAaM,UACxB91B,KAAOi2B,SACP,IACNj2B,KAAOpyC,MAAUkoE,QAAUvxD,WAAWwyD,KAAM/2B,KAAOm2B,MAAMG,MAAQJ,YACjEjgC,iBAAUA,eAAWmhC,cAAcnhC,mBAElCA,iBAAU+/B,UAAYG,MAAMG,MAAOrgC,eAAWohC,YAAYF,KAAMpB,YACrEF,YAAQ,EAAGU,SAASQ,QAjFxBN,MAAMtjF,UAAYyjF,MAAMzjF,WACtB6c,YAAaymE,MACbK,QAAS,SAAAA,QAASr+E,SAAUo+E,MAAO72B,MACjC,GAAwB,mBAAbvnD,SAAyB,MAAM,IAAIgW,UAAU,8BACxDuxC,MAAgB,MAARA,KAAes2B,OAASt2B,OAAkB,MAAT62B,MAAgB,GAAKA,OACzDz9E,KAAKwxE,OAASgL,WAAax8E,OAC1Bw8E,SAAUA,SAAShL,MAAQxxE,KAC1Bu8E,SAAWv8E,KAChBw8E,SAAWx8E,MAEbA,KAAKs9E,MAAQj+E,SACbW,KAAKu9E,MAAQ32B,KACbk3B,SAEFt8C,KAAM,SAAAA,OACAxhC,KAAKs9E,QACPt9E,KAAKs9E,MAAQ,KACbt9E,KAAKu9E,MAAQ/oE,IACbspE,WC1CS,IAAAI,YAAA,SAAS7+E,SAAUo+E,MAAO72B,MACvC,IAAIztD,EAAI,IAAIkkF,MAMZ,OALAI,MAAiB,MAATA,MAAgB,GAAKA,MAC7BtkF,EAAEukF,QAAQ,SAASS,SACjBhlF,EAAEqoC,OACFniC,SAAS8+E,QAAUV,QAClBA,MAAO72B,MACHztD,GCNLilF,QAAU/F,aAAS,QAAS,MAAO,SAAU,aAC7CgG,cAEOC,QAAU,EACVC,UAAY,EACZC,SAAW,EACXC,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,MAAQ,EAEJC,oBAAA,SAAS7yD,KAAMxzB,KAAM07B,GAAIlwB,MAAOm3C,MAAO2jC,QACpD,IAAIC,UAAY/yD,KAAKgzD,aACrB,GAAKD,WACA,GAAI7qD,MAAM6qD,UAAW,YADV/yD,KAAKgzD,iBAmCvB,SAASzlF,gBAAOyyB,KAAMkI,GAAI+qD,MACxB,IACIC,MADAH,UAAY/yD,KAAKgzD,aAgBrB,SAASrhF,MAAMwgF,SACb,IAAIlmF,EAAGqiB,EAAG5gB,EAAGhB,EAGb,GAAIumF,KAAKE,QAAUZ,UAAW,OAAO/8C,OAErC,IAAKvpC,KAAK8mF,UAER,IADArmF,EAAIqmF,UAAU9mF,IACRO,OAASymF,KAAKzmF,KAApB,CAKA,GAAIE,EAAEymF,QAAUV,QAAS,OAAO/B,YAAQ/+E,OAGpCjF,EAAEymF,QAAUT,SACdhmF,EAAEymF,MAAQP,MACVlmF,EAAE8kF,MAAMh8C,OACR9oC,EAAEwvE,GAAG9vE,KAAK,YAAa4zB,KAAMA,KAAKylD,SAAU/4E,EAAEsL,MAAOtL,EAAEyiD,cAChD4jC,UAAU9mF,KAITA,EAAIi8B,KACZx7B,EAAEymF,MAAQP,MACVlmF,EAAE8kF,MAAMh8C,OACR9oC,EAAEwvE,GAAG9vE,KAAK,SAAU4zB,KAAMA,KAAKylD,SAAU/4E,EAAEsL,MAAOtL,EAAEyiD,cAC7C4jC,UAAU9mF,IAoBrB,GAZAykF,YAAQ,WACFuC,KAAKE,QAAUV,UACjBQ,KAAKE,MAAQT,QACbO,KAAKzB,MAAME,QAAQxvB,KAAM+wB,KAAKxB,MAAOwB,KAAKr4B,MAC1CsH,KAAKiwB,YAMTc,KAAKE,MAAQX,SACbS,KAAK/W,GAAG9vE,KAAK,QAAS4zB,KAAMA,KAAKylD,SAAUwN,KAAKj7E,MAAOi7E,KAAK9jC,OACxD8jC,KAAKE,QAAUX,SAAnB,CAKA,IAJAS,KAAKE,MAAQV,QAGbS,MAAQ,IAAIj1E,MAAMvQ,EAAIulF,KAAKC,MAAM5/E,QAC5BrH,EAAI,EAAGqiB,GAAK,EAAGriB,EAAIyB,IAAKzB,GACvBS,EAAIumF,KAAKC,MAAMjnF,GAAGiB,MAAMd,KAAK4zB,KAAMA,KAAKylD,SAAUwN,KAAKj7E,MAAOi7E,KAAK9jC,UACrE+jC,QAAQ5kE,GAAK5hB,GAGjBwmF,MAAM5/E,OAASgb,EAAI,GAGrB,SAAS4zC,KAAKiwB,SAKZ,IAJA,IAAIhlF,EAAIglF,QAAUc,KAAKG,SAAWH,KAAKI,KAAKjnF,KAAK,KAAM+lF,QAAUc,KAAKG,WAAaH,KAAKzB,MAAME,QAAQl8C,MAAOy9C,KAAKE,MAAQR,OAAQ,GAC9H1mF,GAAK,EACLyB,EAAIwlF,MAAM5/E,SAELrH,EAAIyB,GACXwlF,MAAMjnF,GAAGG,KAAK4zB,KAAM7yB,GAIlB8lF,KAAKE,QAAUR,SACjBM,KAAK/W,GAAG9vE,KAAK,MAAO4zB,KAAMA,KAAKylD,SAAUwN,KAAKj7E,MAAOi7E,KAAK9jC,OAC1D3Z,QAIJ,SAASA,OAIP,IAAK,IAAIvpC,KAHTgnF,KAAKE,MAAQP,MACbK,KAAKzB,MAAMh8C,cACJu9C,UAAU7qD,IACH6qD,UAAW,cAClB/yD,KAAKgzD,aA7FdD,UAAU7qD,IAAM+qD,KAChBA,KAAKzB,MAAQA,MAEb,SAAS8B,SAASnB,SAChBc,KAAKE,MAAQZ,UACbU,KAAKzB,MAAME,QAAQ//E,MAAOshF,KAAKxB,MAAOwB,KAAKr4B,MAGvCq4B,KAAKxB,OAASU,SAASxgF,MAAMwgF,QAAUc,KAAKxB,QAPrB,EAAGwB,KAAKr4B,MAxCrCrtD,CAAOyyB,KAAMkI,IACX17B,KAAMA,KACNwL,MAAOA,MACPm3C,MAAOA,MACP+sB,GAAIkW,QACJc,MAAOb,WACPz3B,KAAMk4B,OAAOl4B,KACb62B,MAAOqB,OAAOrB,MACd2B,SAAUN,OAAOM,SACjBC,KAAMP,OAAOO,KACb7B,MAAO,KACP2B,MAAOb,WAIJ,SAAS/qD,KAAKvH,KAAMkI,IACzB,IAAIorD,SAAWxmF,aAAIkzB,KAAMkI,IACzB,GAAIorD,SAASH,MAAQb,QAAS,MAAM,IAAIjuE,MAAM,+BAC9C,OAAOivE,SAGF,SAAS5sE,aAAIsZ,KAAMkI,IACxB,IAAIorD,SAAWxmF,aAAIkzB,KAAMkI,IACzB,GAAIorD,SAASH,MAAQV,QAAS,MAAM,IAAIpuE,MAAM,6BAC9C,OAAOivE,SAGF,SAASxmF,aAAIkzB,KAAMkI,IACxB,IAAIorD,SAAWtzD,KAAKgzD,aACpB,IAAKM,YAAcA,SAAWA,SAASprD,KAAM,MAAM,IAAI7jB,MAAM,wBAC7D,OAAOivE,SCqBF,SAASC,WAAW7wB,WAAYl2D,KAAMU,OAC3C,IAAIg7B,GAAKw6B,WAAW8wB,IAOpB,OALA9wB,WAAW/rB,KAAK,WACd,IAAI28C,SAAW5sE,aAAI1S,KAAMk0B,KACxBorD,SAASpmF,QAAUomF,SAASpmF,WAAaV,MAAQU,MAAM4H,MAAMd,KAAM8G,aAG/D,SAASklB,MACd,OAAOlzB,aAAIkzB,KAAMkI,IAAIh7B,MAAMV,OC3EhB,IAAAinF,uBAAA,SAASplF,EAAG8K,GACzB,IAAI7M,EACJ,OAAqB,iBAAN6M,EAAiBolE,WAC1BplE,aAAawqC,YAAQ+vC,SACpBpnF,EAAIq3C,YAAMxqC,KAAOA,EAAI7M,EAAGonF,SACzBC,YAAmBtlF,EAAG8K,ICAf,ICNX89D,+BAAYlV,cAAUh0D,UAAU6c,YCiBpC,SAASqgE,kBAAYz+E,MACnB,OAAO,WACLwH,KAAKm1B,MAAM+hD,eAAe1+E,OCNf,ICKX07B,cAAK,EAEF,SAAS0rD,WAAW5K,OAAQC,QAASz8E,KAAM07B,IAChDl0B,KAAKk1E,QAAUF,OACfh1E,KAAKm1E,SAAWF,QAChBj1E,KAAK6/E,MAAQrnF,KACbwH,KAAKw/E,IAAMtrD,GAON,SAAS4rD,QACd,QAAS5rD,cAGX,IAAI6rD,oBAAsBhyB,cAAUh0D,UAEpC6lF,WAAW7lF,UAVI,SAAS20D,0BAAWl2D,MACjC,OAAOu1D,gBAAYW,WAAWl2D,OASEuB,WAChC6c,YAAagpE,WACb3iE,OCrCa,SAASA,QACtB,IAAIzkB,KAAOwH,KAAK6/E,MACZ3rD,GAAKl0B,KAAKw/E,IAEQ,mBAAXviE,SAAuBA,OAAS+zD,aAAS/zD,SAEpD,IAAK,IAAI+3D,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,UAAY,IAAInrE,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC3F,IAAK,IAAiF0R,KAAMqpD,QAAnFl6B,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAQg2E,SAAWF,UAAU96D,GAAK,IAAIrQ,MAAMvQ,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9G+zB,KAAOmvB,MAAMljD,MAAQo9E,QAAUp4D,OAAO7kB,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,UAClE,aAAcnvB,OAAMqpD,QAAQ5D,SAAWzlD,KAAKylD,UAChD6D,SAASr9E,GAAKo9E,QACdiK,oBAAShK,SAASr9E,GAAIO,KAAM07B,GAAIj8B,EAAGq9E,SAAUx8E,aAAIkzB,KAAMkI,MAK7D,OAAO,IAAI0rD,WAAWxK,UAAWp1E,KAAKm1E,SAAU38E,KAAM07B,KDsBtD+5B,UEtCa,SAAShxC,QACtB,IAAIzkB,KAAOwH,KAAK6/E,MACZ3rD,GAAKl0B,KAAKw/E,IAEQ,mBAAXviE,SAAuBA,OAASi0D,YAAYj0D,SAEvD,IAAK,IAAI+3D,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,aAAgBH,WAAc36D,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC/F,IAAK,IAAyC0R,KAArCmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAcrH,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAI+zB,KAAOmvB,MAAMljD,GAAI,CACnB,IAAK,IAA2DuW,MAAvD0kB,SAAWjW,OAAO7kB,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,OAAe6kC,QAAUlnF,aAAIkzB,KAAMkI,IAAKhoB,EAAI,EAAGhU,EAAIg7B,SAAS5zB,OAAQ4M,EAAIhU,IAAKgU,GAC/HsC,MAAQ0kB,SAAShnB,KACnBozE,oBAAS9wE,MAAOhW,KAAM07B,GAAIhoB,EAAGgnB,SAAU8sD,SAG3C5K,UAAU5zE,KAAK0xB,UACf+hD,QAAQzzE,KAAKwqB,MAKnB,OAAO,IAAI4zD,WAAWxK,UAAWH,QAASz8E,KAAM07B,KFmBhD7V,OGxCa,SAAS3U,OACD,mBAAVA,QAAsBA,MAAQ0nE,QAAQ1nE,QAEjD,IAAK,IAAIsrE,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQ81E,UAAY,IAAInrE,MAAM5R,GAAIiiB,EAAI,EAAGA,EAAIjiB,IAAKiiB,EAC3F,IAAK,IAAuE0R,KAAnEmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAQg2E,SAAWF,UAAU96D,MAAeriB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3F+zB,KAAOmvB,MAAMljD,KAAOyR,MAAMtR,KAAK4zB,KAAMA,KAAKylD,SAAUx5E,EAAGkjD,QAC1Dm6B,SAAS9zE,KAAKwqB,MAKpB,OAAO,IAAI4zD,WAAWxK,UAAWp1E,KAAKm1E,SAAUn1E,KAAK6/E,MAAO7/E,KAAKw/E,MH8BjEx0E,MI1Ca,SAAS0jD,YACtB,GAAIA,WAAW8wB,MAAQx/E,KAAKw/E,IAAK,MAAM,IAAInvE,MAE3C,IAAK,IAAIylE,QAAU91E,KAAKk1E,QAASa,QAAUrnB,WAAWwmB,QAASc,GAAKF,QAAQx2E,OAAQoxC,GAAKqlC,QAAQz2E,OAAQjH,EAAIuI,KAAKC,IAAIm1E,GAAItlC,IAAKulC,OAAS,IAAIhsE,MAAM+rE,IAAK17D,EAAI,EAAGA,EAAIjiB,IAAKiiB,EACrK,IAAK,IAAmG0R,KAA/FkqD,OAASJ,QAAQx7D,GAAI67D,OAASJ,QAAQz7D,GAAI5gB,EAAIw8E,OAAO52E,OAAQ0L,MAAQirE,OAAO37D,GAAK,IAAIrQ,MAAMvQ,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxH+zB,KAAOkqD,OAAOj+E,IAAMk+E,OAAOl+E,MAC7B+S,MAAM/S,GAAK+zB,MAKjB,KAAO1R,EAAI07D,KAAM17D,EACf27D,OAAO37D,GAAKw7D,QAAQx7D,GAGtB,OAAO,IAAIslE,WAAW3J,OAAQj2E,KAAKm1E,SAAUn1E,KAAK6/E,MAAO7/E,KAAKw/E,MJ4B9DzxB,UHzCa,WACb,OAAO,IAAIkV,+BAAUjjE,KAAKk1E,QAASl1E,KAAKm1E,WGyCxCzmB,WK3Ca,WAKb,IAJA,IAAIl2D,KAAOwH,KAAK6/E,MACZI,IAAMjgF,KAAKw/E,IACXU,IAAMJ,QAED9K,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQgb,EAAI,EAAGA,EAAIjiB,IAAKiiB,EACjE,IAAK,IAAyC0R,KAArCmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAcrH,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAI+zB,KAAOmvB,MAAMljD,GAAI,CACnB,IAAI+nF,QAAUlnF,aAAIkzB,KAAMi0D,KACxBX,oBAAStzD,KAAMxzB,KAAM0nF,IAAKjoF,EAAGkjD,OAC3ByL,KAAMo5B,QAAQp5B,KAAOo5B,QAAQvC,MAAQuC,QAAQZ,SAC7C3B,MAAO,EACP2B,SAAUY,QAAQZ,SAClBC,KAAMW,QAAQX,OAMtB,OAAO,IAAIO,WAAW5K,OAAQh1E,KAAKm1E,SAAU38E,KAAM0nF,MLyBnD9nF,KAAM2nF,oBAAoB3nF,KAC1Bk2B,MAAOyxD,oBAAoBzxD,MAC3BtC,KAAM+zD,oBAAoB/zD,KAC1B8J,KAAMiqD,oBAAoBjqD,KAC1BgN,MAAOi9C,oBAAoBj9C,MAC3BH,KAAMo9C,oBAAoBp9C,KAC1BulC,GM5Ba,SAAS1vE,KAAMqzE,UAC5B,IAAI33C,GAAKl0B,KAAKw/E,IAEd,OAAO14E,UAAUxH,OAAS,EACpBxG,aAAIkH,KAAKgsB,OAAQkI,IAAIg0C,GAAGA,GAAG1vE,MAC3BwH,KAAK2iC,KApBb,SAASw9C,WAAWjsD,GAAI17B,KAAMqzE,UAC5B,IAAIuU,IAAKC,IAAKC,IAThB,SAAS3iF,SAAMnF,MACb,OAAQA,KAAO,IAAIkf,OAAOnY,MAAM,SAASkV,MAAM,SAAStb,GACtD,IAAIlB,EAAIkB,EAAEwO,QAAQ,KAElB,OADI1P,GAAK,IAAGkB,EAAIA,EAAEohB,MAAM,EAAGtiB,KACnBkB,GAAW,UAANA,IAKKwE,CAAMnF,MAAQ+6B,KAAO7gB,aACzC,OAAO,WACL,IAAI4sE,SAAWgB,IAAItgF,KAAMk0B,IACrBg0C,GAAKoX,SAASpX,GAKdA,KAAOkY,MAAMC,KAAOD,IAAMlY,IAAI/jC,QAAQ+jC,GAAG1vE,KAAMqzE,UAEnDyT,SAASpX,GAAKmY,KASAF,CAAWjsD,GAAI17B,KAAMqzE,YNwBrCtd,KOiBa,SAAS/1D,KAAMU,OAC5B,IAAIu3E,SAAW/I,cAAUlvE,MAAOP,EAAiB,cAAbw4E,SAA2Bn6B,wBAAuB6B,uBACtF,OAAOn4C,KAAKugF,UAAU/nF,KAAuB,mBAAVU,OAC5Bu3E,SAAShF,MAlBlB,SAASmL,oBAAenG,SAAUt4B,YAAaj/C,OAC7C,IAAIsnF,SACAC,SACAC,aACJ,OAAO,WACL,IAAIC,QAA+BC,QAAtBC,OAAS3nF,MAAM8G,MAC5B,GAAc,MAAV6gF,OAGJ,OAFAF,QAAU3gF,KAAKu2E,eAAe9F,SAASF,MAAOE,SAAShF,WACvDmV,QAAUC,OAAS,IACU,KACvBF,UAAYH,UAAYI,UAAYH,SAAWC,cAC9CD,SAAWG,QAASF,aAAevoC,YAAYqoC,SAAWG,QAASE,SAL1C7gF,KAAKy2E,kBAAkBhG,SAASF,MAAOE,SAAShF,SArBpF,SAASoL,kBAAar+E,KAAM2/C,YAAaj/C,OACvC,IAAIsnF,SACAC,SACAC,aACJ,OAAO,WACL,IAAIC,QAA+BC,QAAtBC,OAAS3nF,MAAM8G,MAC5B,GAAc,MAAV6gF,OAGJ,OAFAF,QAAU3gF,KAAK2uD,aAAan2D,UAC5BooF,QAAUC,OAAS,IACU,KACvBF,UAAYH,UAAYI,UAAYH,SAAWC,cAC9CD,SAAWG,QAASF,aAAevoC,YAAYqoC,SAAWG,QAASE,SAL1C7gF,KAAK22E,gBAAgBn+E,SA2BAi4E,SAAUx4E,EAAGsnF,WAAWv/E,KAAM,QAAUxH,KAAMU,QACtF,MAATA,OAAiBu3E,SAAShF,MAhElC,SAAS+K,kBAAa/F,UACpB,OAAO,WACLzwE,KAAKy2E,kBAAkBhG,SAASF,MAAOE,SAAShF,SARpD,SAASiL,gBAAWl+E,MAClB,OAAO,WACLwH,KAAK22E,gBAAgBn+E,SAoE4Ci4E,WAC5DA,SAAShF,MA/ClB,SAASqL,oBAAerG,SAAUt4B,YAAa0oC,QAC7C,IAAIL,SAEAE,aADAE,QAAUC,OAAS,GAEvB,OAAO,WACL,IAAIF,QAAU3gF,KAAKu2E,eAAe9F,SAASF,MAAOE,SAAShF,OAC3D,OAAOkV,UAAYC,QAAU,KACvBD,UAAYH,SAAWE,aACvBA,aAAevoC,YAAYqoC,SAAWG,QAASE,UApBzD,SAAS9J,kBAAav+E,KAAM2/C,YAAa0oC,QACvC,IAAIL,SAEAE,aADAE,QAAUC,OAAS,GAEvB,OAAO,WACL,IAAIF,QAAU3gF,KAAK2uD,aAAan2D,MAChC,OAAOmoF,UAAYC,QAAU,KACvBD,UAAYH,SAAWE,aACvBA,aAAevoC,YAAYqoC,SAAWG,QAASE,WAmDApQ,SAAUx4E,EAAGiB,SPrBpEqnF,UQnBa,SAAS/nF,KAAMU,OAC5B,IAAIM,IAAM,QAAUhB,KACpB,GAAIsO,UAAUxH,OAAS,EAAG,OAAQ9F,IAAMwG,KAAKk/E,MAAM1lF,OAASA,IAAI8T,OAChE,GAAa,MAATpU,MAAe,OAAO8G,KAAKk/E,MAAM1lF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAImX,MAC3C,IAAIogE,SAAW/I,cAAUlvE,MACzB,OAAOwH,KAAKk/E,MAAM1lF,KAAMi3E,SAAShF,MA5BnC,SAASqV,YAAYrQ,SAAUv3E,OAC7B,IAAIm4C,GAAI5O,GACR,SAASy8C,QACP,IAAIjnF,EAAIiB,MAAM4H,MAAMd,KAAM8G,WAE1B,OADI7O,IAAMwqC,KAAI4O,IAAM5O,GAAKxqC,IAV7B,SAAS8oF,kBAAkBtQ,SAAUx4E,GACnC,OAAO,SAASkB,GACd6G,KAAKkgC,eAAeuwC,SAASF,MAAOE,SAAShF,MAAOxzE,EAAEkB,KAQvB4nF,CAAkBtQ,SAAUx4E,IACpDo5C,GAGT,OADA6tC,MAAM5xE,OAASpU,MACRgmF,OAGT,SAASqB,UAAU/nF,KAAMU,OACvB,IAAIm4C,GAAI5O,GACR,SAASy8C,QACP,IAAIjnF,EAAIiB,MAAM4H,MAAMd,KAAM8G,WAE1B,OADI7O,IAAMwqC,KAAI4O,IAAM5O,GAAKxqC,IA3B7B,SAAS+oF,gBAAgBxoF,KAAMP,GAC7B,OAAO,SAASkB,GACd6G,KAAKm/B,aAAa3mC,KAAMP,EAAEkB,KAyBK6nF,CAAgBxoF,KAAMP,IAC9Co5C,GAGT,OADA6tC,MAAM5xE,OAASpU,MACRgmF,QAS2DzO,SAAUv3E,SRc5Ei8B,MFYa,SAAS38B,KAAMU,MAAO89E,UACnC,IAAI/+E,EAAqB,cAAhBO,MAAQ,IAAsB89C,wBAAuB6B,uBAC9D,OAAgB,MAATj/C,MAAgB8G,KAClBihF,WAAWzoF,KAjElB,SAAS0oF,UAAU1oF,KAAM2/C,aACvB,IAAIqoC,SACAC,SACAC,aACJ,OAAO,WACL,IAAIC,QAAUxrD,WAAMn1B,KAAMxH,MACtBooF,SAAW5gF,KAAKm1B,MAAM+hD,eAAe1+E,MAAO28B,WAAMn1B,KAAMxH,OAC5D,OAAOmoF,UAAYC,QAAU,KACvBD,UAAYH,UAAYI,UAAYH,SAAWC,aAC/CA,aAAevoC,YAAYqoC,SAAWG,QAASF,SAAWG,UAwD5CM,CAAU1oF,KAAMP,IACjCiwE,GAAG,aAAe1vE,KAAMy+E,kBAAYz+E,OACpB,mBAAVU,MAAuB8G,KAC7BihF,WAAWzoF,KArClB,SAAS2+E,oBAAc3+E,KAAM2/C,YAAaj/C,OACxC,IAAIsnF,SACAC,SACAC,aACJ,OAAO,WACL,IAAIC,QAAUxrD,WAAMn1B,KAAMxH,MACtBqoF,OAAS3nF,MAAM8G,MACf4gF,QAAUC,OAAS,GAEvB,OADc,MAAVA,SAAoC7gF,KAAKm1B,MAAM+hD,eAAe1+E,MAA9CooF,QAAUC,OAA2C1rD,WAAMn1B,KAAMxH,OAC9EmoF,UAAYC,QAAU,KACvBD,UAAYH,UAAYI,UAAYH,SAAWC,cAC9CD,SAAWG,QAASF,aAAevoC,YAAYqoC,SAAWG,QAASE,UA0BtD1J,CAAc3+E,KAAMP,EAAGsnF,WAAWv/E,KAAM,SAAWxH,KAAMU,SAC1EypC,KAvBP,SAASw+C,iBAAiBjtD,GAAI17B,MAC5B,IAAI4nF,IAAKC,IAAKe,UAAwDx+C,OAA7CppC,IAAM,SAAWhB,KAAM66E,MAAQ,OAAS75E,IACjE,OAAO,WACL,IAAI8lF,SAAW5sE,aAAI1S,KAAMk0B,IACrBg0C,GAAKoX,SAASpX,GACd2D,SAAkC,MAAvByT,SAASpmF,MAAMM,KAAeopC,SAAWA,OAASq0C,kBAAYz+E,YAASg7B,EAKlF00C,KAAOkY,KAAOgB,YAAcvV,WAAWwU,KAAOD,IAAMlY,IAAI/jC,QAAQ+jC,GAAGmL,MAAO+N,UAAYvV,UAE1FyT,SAASpX,GAAKmY,KAWNc,CAAiBnhF,KAAKw/E,IAAKhnF,OACjCwH,KACCihF,WAAWzoF,KApDlB,SAAS6+E,oBAAc7+E,KAAM2/C,YAAa0oC,QACxC,IAAIL,SAEAE,aADAE,QAAUC,OAAS,GAEvB,OAAO,WACL,IAAIF,QAAUxrD,WAAMn1B,KAAMxH,MAC1B,OAAOmoF,UAAYC,QAAU,KACvBD,UAAYH,SAAWE,aACvBA,aAAevoC,YAAYqoC,SAAWG,QAASE,SA4CjCxJ,CAAc7+E,KAAMP,EAAGiB,OAAQ89E,UAChD9O,GAAG,aAAe1vE,KAAM,OErB7ByoF,WSxCa,SAASzoF,KAAMU,MAAO89E,UACnC,IAAIx9E,IAAM,UAAYhB,MAAQ,IAC9B,GAAIsO,UAAUxH,OAAS,EAAG,OAAQ9F,IAAMwG,KAAKk/E,MAAM1lF,OAASA,IAAI8T,OAChE,GAAa,MAATpU,MAAe,OAAO8G,KAAKk/E,MAAM1lF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAImX,MAC3C,OAAOrQ,KAAKk/E,MAAM1lF,IAhBpB,SAASynF,WAAWzoF,KAAMU,MAAO89E,UAC/B,IAAI79E,EAAGspC,GACP,SAASy8C,QACP,IAAIjnF,EAAIiB,MAAM4H,MAAMd,KAAM8G,WAE1B,OADI7O,IAAMwqC,KAAItpC,GAAKspC,GAAKxqC,IAV5B,SAASopF,iBAAiB7oF,KAAMP,EAAG++E,UACjC,OAAO,SAAS79E,GACd6G,KAAKm1B,MAAMiiD,YAAY5+E,KAAMP,EAAEkB,GAAI69E,WAQLqK,CAAiB7oF,KAAMP,EAAG++E,WACjD79E,EAGT,OADA+lF,MAAM5xE,OAASpU,MACRgmF,MAQgB+B,CAAWzoF,KAAMU,MAAmB,MAAZ89E,SAAmB,GAAKA,YToCvE10E,KD3Ca,SAASpJ,OACtB,OAAO8G,KAAKk/E,MAAM,OAAyB,mBAAVhmF,MARnC,SAAS2+E,kBAAa3+E,OACpB,OAAO,WACL,IAAI2nF,OAAS3nF,MAAM8G,MACnBA,KAAKw3B,YAAwB,MAAVqpD,OAAiB,GAAKA,QAMrChJ,CAAa0H,WAAWv/E,KAAM,OAAQ9G,QAf9C,SAAS4+E,kBAAa5+E,OACpB,OAAO,WACL8G,KAAKw3B,YAAct+B,OAcf4+E,CAAsB,MAAT5+E,MAAgB,GAAKA,MAAQ,MCyChD0pC,OJnDa,WACb,OAAO5iC,KAAKkoE,GAAG,aATjB,SAASoZ,eAAeptD,IACtB,OAAO,WACL,IAAIvQ,OAAS3jB,KAAK08B,WAClB,IAAK,IAAIzkC,KAAK+H,KAAKg/E,aAAc,IAAK/mF,IAAMi8B,GAAI,OAC5CvQ,QAAQA,OAAOH,YAAYxjB,OAKJshF,CAAethF,KAAKw/E,OImDjDN,MNTa,SAAS1mF,KAAMU,OAC5B,IAAIg7B,GAAKl0B,KAAKw/E,IAId,GAFAhnF,MAAQ,GAEJsO,UAAUxH,OAAS,EAAG,CAExB,IADA,IACkCnG,EAD9B+lF,MAAQpmF,aAAIkH,KAAKgsB,OAAQkI,IAAIgrD,MACxBjnF,EAAI,EAAGyB,EAAIwlF,MAAM5/E,OAAWrH,EAAIyB,IAAKzB,EAC5C,IAAKkB,EAAI+lF,MAAMjnF,IAAIO,OAASA,KAC1B,OAAOW,EAAED,MAGb,OAAO,KAGT,OAAO8G,KAAK2iC,MAAe,MAATzpC,MAhEpB,SAASqoF,YAAYrtD,GAAI17B,MACvB,IAAIgpF,OAAQC,OACZ,OAAO,WACL,IAAInC,SAAW5sE,aAAI1S,KAAMk0B,IACrBgrD,MAAQI,SAASJ,MAKrB,GAAIA,QAAUsC,OAEZ,IAAK,IAAIvpF,EAAI,EAAGyB,GADhB+nF,OAASD,OAAStC,OACS5/E,OAAQrH,EAAIyB,IAAKzB,EAC1C,GAAIwpF,OAAOxpF,GAAGO,OAASA,KAAM,EAC3BipF,OAASA,OAAOlnE,SACTzR,OAAO7Q,EAAG,GACjB,MAKNqnF,SAASJ,MAAQuC,SAIrB,SAASC,cAAcxtD,GAAI17B,KAAMU,OAC/B,IAAIsoF,OAAQC,OACZ,GAAqB,mBAAVvoF,MAAsB,MAAM,IAAImX,MAC3C,OAAO,WACL,IAAIivE,SAAW5sE,aAAI1S,KAAMk0B,IACrBgrD,MAAQI,SAASJ,MAKrB,GAAIA,QAAUsC,OAAQ,CACpBC,QAAUD,OAAStC,OAAO3kE,QAC1B,IAAK,IAAIphB,GAAKX,KAAMA,KAAMU,MAAOA,OAAQjB,EAAI,EAAGyB,EAAI+nF,OAAOniF,OAAQrH,EAAIyB,IAAKzB,EAC1E,GAAIwpF,OAAOxpF,GAAGO,OAASA,KAAM,CAC3BipF,OAAOxpF,GAAKkB,EACZ,MAGAlB,IAAMyB,GAAG+nF,OAAOjgF,KAAKrI,GAG3BmmF,SAASJ,MAAQuC,UAmB4CvtD,GAAI17B,KAAMU,SMLzEukF,MU/Ca,SAASvkF,OACtB,IAAIg7B,GAAKl0B,KAAKw/E,IAEd,OAAO14E,UAAUxH,OACXU,KAAK2iC,MAAuB,mBAAVzpC,MAhB1B,SAASyoF,cAAcztD,GAAIh7B,OACzB,OAAO,WACLq6B,KAAKvzB,KAAMk0B,IAAIupD,OAASvkF,MAAM4H,MAAMd,KAAM8G,aAI9C,SAAS86E,cAAc1tD,GAAIh7B,OACzB,OAAOA,OAASA,MAAO,WACrBq6B,KAAKvzB,KAAMk0B,IAAIupD,MAAQvkF,SAUAg7B,GAAIh7B,QACvBJ,aAAIkH,KAAKgsB,OAAQkI,IAAIupD,OVyC3B2B,SWhDa,SAASlmF,OACtB,IAAIg7B,GAAKl0B,KAAKw/E,IAEd,OAAO14E,UAAUxH,OACXU,KAAK2iC,MAAuB,mBAAVzpC,MAhB1B,SAAS2oF,iBAAiB3tD,GAAIh7B,OAC5B,OAAO,WACLwZ,aAAI1S,KAAMk0B,IAAIkrD,UAAYlmF,MAAM4H,MAAMd,KAAM8G,aAIhD,SAASg7E,iBAAiB5tD,GAAIh7B,OAC5B,OAAOA,OAASA,MAAO,WACrBwZ,aAAI1S,KAAMk0B,IAAIkrD,SAAWlmF,SAUCg7B,GAAIh7B,QAC1BJ,aAAIkH,KAAKgsB,OAAQkI,IAAIkrD,UX0C3BC,KYtDa,SAASnmF,OACtB,IAAIg7B,GAAKl0B,KAAKw/E,IAEd,OAAO14E,UAAUxH,OACXU,KAAK2iC,KAXb,SAASo/C,aAAa7tD,GAAIh7B,OACxB,GAAqB,mBAAVA,MAAsB,MAAM,IAAImX,MAC3C,OAAO,WACLqC,aAAI1S,KAAMk0B,IAAImrD,KAAOnmF,OAQP6oF,CAAa7tD,GAAIh7B,QAC3BJ,aAAIkH,KAAKgsB,OAAQkI,IAAImrD,MZkD3B1/E,Ia9Da,WACb,IAAIygF,IAAKC,IAAK/pB,KAAOt2D,KAAMk0B,GAAKoiC,KAAKkpB,IAAK1pD,KAAOwgC,KAAKxgC,OACtD,OAAO,IAAIksD,QAAQ,SAAS57D,QAAS67D,QACnC,IAAIC,QAAUhpF,MAAO+oF,QACjBtiF,KAAOzG,MAAO,SAAAA,QAA4B,KAAT48B,MAAY1P,YAEjDkwC,KAAK3zB,KAAK,WACR,IAAI28C,SAAW5sE,aAAI1S,KAAMk0B,IACrBg0C,GAAKoX,SAASpX,GAKdA,KAAOkY,OACTC,KAAOD,IAAMlY,IAAI/jC,QACbrlB,EAAEojE,OAAO1gF,KAAK0gF,QAClB7B,IAAIvhE,EAAEqjE,UAAU3gF,KAAK0gF,QACrB7B,IAAIvhE,EAAEnf,IAAI6B,KAAK7B,MAGjB2/E,SAASpX,GAAKmY,UCjBpB,IAAI+B,eACFx7B,KAAM,KACN62B,MAAO,EACP2B,SAAU,IACVC,KAAMgD,YAGR,SAASrC,mBAAQh0D,KAAMkI,IAErB,IADA,IAAI4qD,SACKA,OAAS9yD,KAAKgzD,iBAAmBF,OAASA,OAAO5qD,MACxD,KAAMlI,KAAOA,KAAK0Q,YAChB,OAAO0lD,cAAcx7B,KAAOs2B,MAAOkF,cAGvC,OAAOtD,OCfT/wB,cAAUh0D,UAAUooF,UCFL,SAAS3pF,MACtB,OAAOwH,KAAK2iC,KAAK,YCDJ,SAAS3W,KAAMxzB,MAC5B,IACI8mF,SACA3E,OAEA1iF,EAJA8mF,UAAY/yD,KAAKgzD,aAGjBl8C,OAAQ,EAGZ,GAAKi8C,UAAL,CAIA,IAAK9mF,KAFLO,KAAe,MAARA,KAAe,KAAOA,KAAO,GAE1BumF,WACHO,SAAWP,UAAU9mF,IAAIO,OAASA,MACvCmiF,OAAS2E,SAASH,MAAQX,UAAYc,SAASH,MAAQR,OACvDW,SAASH,MAAQP,MACjBU,SAAS9B,MAAMh8C,OACf89C,SAASpX,GAAG9vE,KAAKuiF,OAAS,YAAc,SAAU3uD,KAAMA,KAAKylD,SAAU6N,SAASt7E,MAAOs7E,SAASnkC,cACzF4jC,UAAU9mF,IAL8B6qC,OAAQ,EAQrDA,cAAc9W,KAAKgzD,cDlBrBmD,CAAUniF,KAAMxH,SDCpBu1D,cAAUh0D,UAAU20D,WDiBL,SAASl2D,MACtB,IAAI07B,GACA4qD,OAEAtmF,gBAAgBonF,YAClB1rD,GAAK17B,KAAKgnF,IAAKhnF,KAAOA,KAAKqnF,QAE3B3rD,GAAK4rD,SAAUhB,OAASsD,eAAex7B,KAAOs2B,MAAO1kF,KAAe,MAARA,KAAe,KAAOA,KAAO,IAG3F,IAAK,IAAIw8E,OAASh1E,KAAKk1E,QAAS78E,EAAI28E,OAAO11E,OAAQgb,EAAI,EAAGA,EAAIjiB,IAAKiiB,EACjE,IAAK,IAAyC0R,KAArCmvB,MAAQ65B,OAAO16D,GAAI5gB,EAAIyhD,MAAM77C,OAAcrH,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9D+zB,KAAOmvB,MAAMljD,KACfqnF,oBAAStzD,KAAMxzB,KAAM07B,GAAIj8B,EAAGkjD,MAAO2jC,QAAUkB,mBAAQh0D,KAAMkI,KAKjE,OAAO,IAAI0rD,WAAW5K,OAAQh1E,KAAKm1E,SAAU38E,KAAM07B,oTI7BrD,IAAMouD,6BAAgB,SAAhBA,cAAgBC,SAAO,OAAItlE,WAAOslE,UAUlCC,YAAc,SAAdA,YAAe7+D,OAAQ8+D,SAAUniF,KAAM0wE,UAAoC,IAA1B0R,UAA0B57E,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAAV67E,MAAU77E,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,GACxE7P,kBAAkBygD,aAAezgD,kBAAkBi/D,cACpDj/D,OAAS2+D,6BAAc3+D,SAG3B,IAMItF,OANEwkE,YAAc7R,SAAWA,SAAS,GAAK,KACzC8R,aAAe,KACfC,eAAiB,KACjBR,QAAU,KACVS,SAAW,KACXC,SAAW,KAEXJ,YACoB,MAAhBA,aACAC,aAAe,KACfC,eAAiB/R,WAEjB8R,aAAe,QACfC,eAAiC,MAAhB/R,SAAS,GAAaA,SAAtB,IAAA/kE,OAAqC+kE,YAG1D+R,eAAiBN,SACjBpkE,QAAS,GAEbkkE,QAAU5+D,OAAOsqC,UAAU80B,gBAE3B1kE,SAAWkkE,QAAUA,QAAQlkE,OAAO,WAChC,OAAOre,KAAK08B,aAAe/Y,OAAOqI,UAItCg3D,UAFAT,QAAUA,QAAQjiF,KAAKA,KAAMqiF,QAEVr0B,QACMl+B,OAAOqyD,UAAY,OAC5CC,UAAUp0B,OAAS00B,SAASrgD,KAAK,WAAqB,QAAAohC,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAClD0e,UAAUp0B,MAAVxtD,MAAA4hF,WAAgBJ,6BAActiF,OAArBiM,OAA+B+C,WAG5Ci0E,SAAWD,SAASh4E,MAAMu3E,SAC1BG,UAAU5xD,QAAUmyD,SAAStgD,KAAK,WAAqB,QAAAuhC,MAAAp9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAARn1D,OAAQm1D,OAAAr9D,UAAAq9D,OACnDue,UAAU5xD,OAAVhwB,MAAA4hF,WAAiBJ,6BAActiF,OAAtBiM,OAAgC+C,WAExB,UAAjB8zE,aACAG,SAASxL,QAAwB,MAAhBoL,YAAsB7R,SAASxrE,UAAU,EAAGwrE,SAAS1xE,QAAU0xE,UAAU,GAClE,OAAjB8R,cACPG,SAAS10B,KAAK,KAAMyiB,SAASxrE,UAAU,EAAGwrE,SAAS1xE,SAEvD,IAAM4jF,QAAUX,QAAQn0B,OASxB,OAPIs0B,UAAUt0B,KACV80B,QAAQvgD,KAAK,WAAqB,QAAA2oC,MAAAxkE,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAAqhE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAARv8D,OAAQu8D,OAAAzkE,UAAAykE,OAC9BmX,UAAUt0B,KAAVttD,MAAA4hF,WAAeJ,6BAActiF,OAApBiM,OAA8B+C,WAG3Ck0E,QAAQtgD,SAELqgD,UASLE,WAAa,SAAbA,WAAc79D,KAAMma,UAItB,OAHA9mC,OAAO4c,QAAQkqB,UAAUjgC,QAAQ,SAACjH,GAC9B+sB,KAAK6P,MAAM58B,EAAE,GAAIA,EAAE,aAEhB+sB,MAiBL89D,gBAAkB,SAAlBA,gBAAmBb,QAASc,OAC9B,IAAK,IAAM7pF,OAAO6pF,WACPrpF,eAAe5B,KAAKirF,MAAO7pF,MAC9B+oF,QAAQh0B,KAAK/0D,IAAK6pF,MAAM7pF,OAY9B8pF,wBAAW,SAAXA,SAAYf,QAASc,MAAOhnD,WAO9B,OANMkmD,mBAAmBx0B,gBACrBw0B,QAAUD,6BAAcC,eAEd/uD,IAAd6I,UAA0BkmD,QAAQt0B,UAAR,IAAAhiD,OAAsBowB,YAAasG,KAAK,WAC9DygD,gBAAgBnmE,WAAOjd,MAAOqjF,SAC7BD,gBAAgBb,QAASc,OACvBd,SAyCLgB,yBAAY,SAAZA,UAAahB,QAASiB,QAIxB,IAAK,IAAMhqF,OAHL+oF,mBAAmBx0B,gBACrBw0B,QAAUD,6BAAcC,UAEViB,YACPxpF,eAAe5B,KAAKorF,OAAQhqF,MAC/B+oF,QAAQptD,MAAM37B,IAAKgqF,OAAOhqF,MAGlC,OAAO+oF,SAYLkB,8BAAiB,SAAjBA,eAAkBz0E,QACpB,IACI1O,KACA2pE,IAFE91C,UAAYlX,WAAOjO,OAAOmlB,WAKZ,iBADpB7zB,KAAO0O,OAAO1O,QAEVA,KAAO2J,MAAM3J,MAAMu5C,OAAOvwC,IAAI,SAAC/Q,EAAGN,GAAJ,OAAUA,KAE5CgyE,IAAM91C,UAAU85B,UAAUj/C,OAAOgiE,UAAU1wE,KAAKA,OAEhD2pE,IAAM91C,UAAU85B,UAAUj/C,OAAOgiE,UAAU3yD,OAAO,WAC9C,OAAOre,KAAK08B,aAAevI,UAAUnI,SACtC1rB,KAAK0O,OAAO1O,OAEYguD,QAAQl+B,OAAOphB,OAAOohB,QAAQplB,MAAMi/D,KAAKtnC,KAAK,SAAUpqC,EAAGN,GAClF+W,OAAO2zB,KAAKpqC,EAAG0kB,WAAOjd,MAAO/H,KAGlBs2D,KAAK,QAASv/C,OAAOqtB,WAAa,IACjD4tC,IAAI7b,OAAOxrB,UA0CT8gD,8BAAiB,SAAjBA,iBACF,IAAMC,IAAMC,UAAW9iF,WAAX,EAAAgG,WACZ,OACIsN,EAAGuvE,IAAI,GACPp+E,EAAGo+E,IAAI,KAeTE,wBAAW,SAAXA,WAAW,OAAMC,UAMjBC,yBAAY,SAAZA,YAAY,OAAMC,UAElBC,qCAAwB,SAAxBA,sBAAyB9oC,MAAO+oC,KAClC,IAAIC,OAEEC,gBACFC,eAAgB,GAEdhoD,UAA2B,iBAAR6nD,IAAmBA,IAAOA,eAAej6E,MAAQi6E,IAAIp/E,KAAK,UAAO0uB,EAGtF2wD,OADAhpC,MAAMnvB,iBAAkBo4C,YACfjpB,MAAM/qB,OAAO,OAAO2nD,KAPhB,KASJ58B,MAAM/qB,OAAO,QAAQ9tB,KATjB,KAYb+5B,UACA8nD,OAAO51B,KAAK,QAASlyB,WACC,WAAfioD,sBAAOJ,cACPA,IAAI,gBACXpa,eAAesa,eAAgBF,MAGnCC,OAAOhvD,MAAMivD,gBACb,IAAMG,cAAgB1sF,OAAOu/C,iBAAiB+sC,OAAOn4D,QAC/Cw4D,oBACF7tD,SAAU4tD,cAAc5tD,SACxBC,WAAY2tD,cAAc3tD,WAC1BC,WAAY0tD,cAAc1tD,WAC1BC,UAAWytD,cAAcztD,WAK7B,OAFAqtD,OAAOvhD,SAEA4hD,oBAGLC,SAAW,SAAXA,WAAW,MAAM,iBAAkB/wD,SAASujB,6HC1T5CytC,QACF,cACA,eACA,UACA,aACA,QACA,eACA,UACA,gBAaEC,eATF,SACA,OACA,QACA,OACA,gBACA,SACA,WAKSnlF,QAAQ,SAAColF,aAClBF,OAAOllF,QAAQ,SAAC6zE,OACZsR,WAAWnjF,KAAX,GAAAyK,OAAmB24E,YAAnB,KAAA34E,OAAkConE,YAI3BsR,+TClBf,IAAM93D,2BAAW,SAAXA,SAAWg4D,WAAS,OAAI,SAAAC,cAAY,OAAID,UAAUC,gBASlDC,OAAS,SAATA,OAAUnjE,OAAQ9nB,UAAT,OAAsBnB,OAAOoB,UAAUC,eAAe5B,KAAKwpB,OAAQ9nB,WClBnEkrF,6BDkCX,SAAAA,mLAAeC,CAAAjlF,KAAAglF,kBACXhlF,KAAKklF,WAAaP,WAClB3kF,KAAKmlF,UAAY,IAAI9yE,IACrBrS,KAAKolF,cACLplF,KAAKqlF,eACLrlF,KAAKslF,yBACLtlF,KAAKulF,8TASLvlF,KAAKolF,WAAaplF,KAAKklF,WAAWlyE,OAAO,SAACC,IAAKza,MAE3C,OADAya,IAAIza,MAAQq0B,2BACL5Z,SAEXjT,KAAKwlF,6DAWCv9D,WACN,OAAOjoB,KAAKmlF,UAAUrsF,IAAImvB,6EAURA,WAAW,IAAAxmB,MAAAzB,KAC7B,OAAO,IAAIgiF,QAAQ,SAAC57D,SAChB3kB,MAAK2jF,WAAWn9D,WAAa4E,2BAASzG,uEAU1B,IAAA5Q,OAAAxV,KAChBA,KAAKklF,WAAW1lF,QAAQ,SAACyoB,WACrB,IAAMw9D,QAAUjwE,OAAKkwE,qBAAqBz9D,WAC1CzS,OAAK2vE,UAAUzyE,IAAIuV,UAAWw9D,SEpFb,SAAhBE,cAAiBF,QAASx9D,UAAW6P,SAC9C2tD,QAAQG,KAAK,WACT,IAAMC,IAAM/tD,QAAQ4tD,qBAAqBz9D,WACzC6P,QAAQqtD,UAAUzyE,IAAIuV,UAAW49D,KACjCF,cAAcE,IAAK59D,UAAW6P,WFiF1B6tD,CAAcF,QAASx9D,UAAWzS,kEAezByS,UAAW68D,cACxB9kF,KAAKolF,WAAWn9D,WAAW68D,oDAYvBA,cAGJ,IAAMF,YAAcE,aAAagB,YAAchB,aAAaiB,OAAOnvE,YAAYkvE,aAC/EhB,aAAagB,WAAalB,YAC1B5kF,KAAKgmF,4BACLhmF,KAAKimF,QAAQrB,YAAaE,sDAcrBF,YAAaE,cAClB,IAAMoB,MAAQpB,aAAa1jE,OACrB6G,UAAS,GAAAhc,OAAM24E,YAAN,KAAA34E,OAAqBi6E,OAGpClmF,KAAKmmF,gBAAgBl+D,UAAW68D,cAGhC,IAAMW,QAAUzlF,KAAKomF,SAASn+D,WAE1BjoB,KAAKqlF,YAAYT,cACb5kF,KAAKqlF,YAAYT,aAAasB,OAE9BlmF,KAAKqmF,uBAAuBzB,YAAasB,MAAOT,SAMpDzlF,KAAKsmF,cAAc1B,YAAasB,MAAOT,+EAYvBb,YAAasB,MAAOT,SACxC,IAAMx9D,UAAS,GAAAhc,OAAM24E,YAAN,KAAA34E,OAAqBi6E,OACpClmF,KAAKqlF,YAAYT,aAAasB,OAAOT,SACrCzlF,KAAKumF,oBAAoBt+D,yFASA,IAAAwI,OAAAzwB,KACJrH,OAAO6O,KAAKxH,KAAKslF,uBACzB9lF,QAAQ,SAAColF,aACHjsF,OAAO6O,KAAKipB,OAAK60D,sBAAsBV,cAC/CplF,QAAQ,SAAC0mF,OACZ,GAAIz1D,OAAK40D,YAAYT,cACbn0D,OAAK40D,YAAYT,aAAasB,OAAQ,CAEtC,IAAMT,QAAUh1D,OAAK60D,sBAAsBV,aAAasB,OAExDz1D,OAAK41D,uBAAuBzB,YAAasB,MAAOT,gBAEzCh1D,OAAK60D,sBAAsBV,aAAasB,gEAepDtB,YAAasB,MAAOT,SAC1BV,OAAO/kF,KAAKslF,sBAAuBV,eACpC5kF,KAAKslF,sBAAsBV,iBAG1BG,OAAO/kF,KAAKslF,sBAAsBV,aAAcsB,SACjDlmF,KAAKslF,sBAAsBV,aAAasB,WAE5ClmF,KAAKslF,sBAAsBV,aAAasB,OAAST,oDAS1B,IAAjBe,WAAiB1/E,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACvB9G,KAAKqlF,YAAcmB,WAGnBxmF,KAAKgmF,4FASY/9D,WAAW,IAAA4I,OAAA7wB,KAC5BmrB,WAAW,WACP0F,OAAKu0D,WAAWn9D,WAAa4E,2BAC7BgE,OAAKs0D,UAAUzyE,IAAIuV,UAAW4I,OAAK60D,qBAAqBz9D,aACzD,2BGrPEw+D,KAAO,OACPC,MAAQ,QACRC,cAAgB,gBAChBC,MAAQ,QACRC,UAAY,YACZC,UAAY,YACZC,YAAc,ICNrBC,oBAAsB,EACtBC,oBAAsB,EACtBC,eAAiB,EACjBC,oBAAsB,EACtBC,oBAAsB,uSCFbC,6BCkBX,SAAAA,aAAaC,YAAaC,uKAAWC,CAAAxnF,KAAAqnF,cACjCrnF,KAAKsnF,YAAcA,YACnBtnF,KAAKoqB,KAAOk9D,YAAYt0E,OAAO,SAACzJ,IAAK/P,KAEjC,OADA+P,IAAI/P,KAAO0tF,eACJ39E,SAEXvJ,KAAKunF,UAAYA,UACjBvnF,KAAKynF,kBAAoBH,YAAYhoF,OACrCU,KAAK0nF,oBACL1nF,KAAK2nF,WAAY,kSAWhBC,KACD5nF,KAAK2nF,WAAY,EAEjB,IAAMj1E,IAAM1S,KAAKoqB,KAMjB,IAAK,IAAM5wB,OAJXouF,IAAIpoF,QAAQ,SAACvH,GACTya,IAAIza,GAAK+uF,sBAGKt0E,IACVA,IAAIlZ,OAASwtF,qBAAuBt0E,IAAIlZ,OAAS2tF,sBACjDz0E,IAAIlZ,KAAOkZ,IAAIlZ,KAAO,EAAI4tF,mBAAqBH,oBAGvD,OAAOjnF,2CAUH4nF,KACJ,IAAMl1E,IAAM1S,KAAKoqB,KAMjB,OAJAw9D,IAAIpoF,QAAQ,SAACvH,GACTya,IAAIza,GAAKkvF,sBAGNnnF,uDAYP,IAAM0S,IAAM1S,KAAKoqB,KAGjB,IAAK,IAAM5wB,OAAOkZ,IACdA,IAAIlZ,KAAOkZ,IAAIlZ,OAASwtF,oBAAsBG,oBAAsBz0E,IAAIlZ,KAE5E,OAAOwG,qDAaP,IAAM0S,IAAM1S,KAAKoqB,KAEjB,IAAK,IAAM5wB,OAAOkZ,IACdA,IAAIlZ,KAAOkZ,IAAIlZ,OAASytF,mBAAqBG,mBAAqB10E,IAAIlZ,KAE1E,OAAOwG,2CAWH4nF,KACJ5nF,KAAK2nF,WAAY,EAEjB,IAAMj1E,IAAM1S,KAAKoqB,KAKjB,IAAK,IAAM5wB,OAJXouF,IAAIpoF,QAAQ,SAACvH,GACTya,IAAIza,GAAKgvF,qBAGKv0E,IACVA,IAAIlZ,OAASytF,oBAAsBv0E,IAAIlZ,OAAS4tF,qBAChD10E,IAAIlZ,KAAoB,IAAbkZ,IAAIlZ,KAAawtF,oBAAsBG,qBAI1D,OAAOnnF,+CAIP,IAAM0S,IAAM1S,KAAKoqB,KACXtd,QACF+6E,iBACAC,gBACAR,gBAGJ,IAAK,IAAM9tF,OAAOkZ,IACVA,IAAIlZ,KAAO,GACXkZ,IAAIlZ,OAAS2tF,qBAAuBr6E,OAAO+6E,SAAS,GAAGrmF,KAAKhI,KAC5DkZ,IAAIlZ,OAASwtF,qBAAuBl6E,OAAO+6E,SAAS,GAAGrmF,KAAKhI,MACrDkZ,IAAIlZ,KAAO,IAClBkZ,IAAIlZ,OAAS4tF,oBAAsBt6E,OAAOg7E,QAAQ,GAAGtmF,KAAKhI,KAC1DkZ,IAAIlZ,OAASytF,oBAAsBn6E,OAAOg7E,QAAQ,GAAGtmF,KAAKhI,MAE9DsT,OAAOw6E,YAAY9lF,KAAKhI,KAQ5B,OALC,WAAY,WAAWgG,QAAQ,SAACzE,MAC7B+R,OAAO/R,MAAQ+R,OAAO/R,MAAMuO,IAAI,SAAAnP,GAAC,OAAIA,EAAEmP,IAAI8N,YAE/CtK,OAAOw6E,YAAcx6E,OAAOw6E,YAAYh+E,IAAI8N,QAErCtK,2CAaJ86E,KACH,IAAMl1E,IAAM1S,KAAKoqB,KACjB,GAAIw9D,IACAA,IAAIpoF,QAAQ,SAACvH,GACTya,IAAIza,GAAKivF,qBAEV,CACH,IAAMa,UAAY/nF,KAAK0nF,iBACvB,IAAK,IAAMluF,OAAOkZ,IACRlZ,OAAOuuF,YACTr1E,IAAIlZ,KAAO0tF,gBAKvB,OADAlnF,KAAK2nF,WAAY,EACV3nF,uDAWP,IAAM0S,IAAM1S,KAAKoqB,KACX49D,UAEN,IAAK,IAAMxuF,OAAOkZ,IACdA,IAAIlZ,OAASwtF,qBAAuBgB,OAAOxmF,KAAKhI,KAGpD,OAAOwuF,uEAWUA,QACjB,IAAMt1E,IAAM1S,KAAKoqB,KACjB,OAAO49D,OAAO3pE,OAAO,SAAA9lB,GAAC,OAAIma,IAAIna,KAAOyuF,qBAAuBt0E,IAAIna,KAAO4uF,oFAWvDc,WAChB,IAAMv1E,IAAM1S,KAAKoqB,KACjB,OAAO69D,UAAU5pE,OAAO,SAAA9lB,GAAC,OAAIma,IAAIna,KAAO0uF,oBAAsBv0E,IAAIna,KAAO6uF,uEAQzE,IAAM10E,IAAM1S,KAAKoqB,KACX89D,aAEN,IAAK,IAAM1uF,OAAOkZ,IACdA,IAAIlZ,OAAS2tF,qBAAuBe,UAAU1mF,KAAKhI,KAEvD,OAAO0uF,0DAQP,IAAMx1E,IAAM1S,KAAKoqB,KACX89D,aAEN,IAAK,IAAM1uF,OAAOkZ,IACdA,IAAIlZ,OAAS4tF,oBAAsBc,UAAU1mF,KAAKhI,KAGtD,OAAO0uF,0DAUP,IAAMx1E,IAAM1S,KAAKoqB,KACX69D,aAEN,IAAK,IAAMzuF,OAAOkZ,IACdA,IAAIlZ,OAASytF,oBAAsBgB,UAAUzmF,KAAKhI,KAEtD,OAAOyuF,kEAUP,IAAMv1E,IAAM1S,KAAKoqB,KACXk9D,eAEN,IAAK,IAAM9tF,OAAOkZ,IACd40E,YAAY9lF,KAAKhI,KAGrB,OAAO8tF,8EAIP,OAAOtnF,KAAKynF,8DAIZ,OAAOznF,KAAK2nF,kDAQZ,IAAMj1E,IAAM1S,KAAKoqB,KAEjB,IAAK,IAAM5wB,OAAOkZ,IACVA,IAAIlZ,OAASwtF,oBACbt0E,IAAIlZ,KAAOytF,mBACJv0E,IAAIlZ,OAASytF,mBACpBv0E,IAAIlZ,KAAOwtF,oBACJt0E,IAAIlZ,OAAS2tF,oBACpBz0E,IAAIlZ,KAAO4tF,mBAEX10E,IAAIlZ,KAAO2tF,oBAInB,OAAOnnF,mfChUR,IAmCMmoF,6BAA+B,SAA/BA,6BAAgCrwD,QAAS5a,GAAIkrE,UACtD,IAAMC,YAAcvwD,QAAQuwD,cAC5B,IAAK,IAAM7uF,OAAO6uF,YACd,MAAOruF,eAAe5B,KAAKiwF,YAAa7uF,KAAM,CAC1C,IAAI8uF,QAAS,EACTprE,KAAkB,IAAZA,GAAG1jB,OACT8uF,QAAS,GAETA,SACAF,SAAWC,YAAY7uF,KAAK+uF,SAAWF,YAAY7uF,KAAKgvF,aAM3DC,aAAe,SAAfA,aAAe/1E,KAAG,OAAAg2E,yBAAQ,IAAI/nF,OAAJsL,OAAAy8E,yBAAYh2E,IAAI,IAAhBg2E,yBAAuBh2E,IAAI,QAe5Di2E,eACFC,UAAWC,qBACXC,UAAWD,qBACXE,aAAcF,oBAA+BA,qBAC7CG,SAAUH,oBACVI,SAAUJ,oBACVK,YAAaL,mBAA8BA,oBAC3CM,aAaSC,WAAa,SAAbA,WAAcruF,KAAM2X,IAAKzD,QAClC,IAAI4M,MAAQ,KACNmvD,kBAAoB/7D,OAAO+7D,kBAC3Bqe,aAAep6E,OAAOo6E,aAU5B,OATKp6E,OAAOoQ,gBAMD2rD,oBACPnvD,MAAiB,gBAAT9gB,KAAyBiwE,kBAAkB,GAAKA,kBAAkB,IALtEnvD,MADAwtE,aAAaC,WACL,KAhBW,SAAlBC,gBAAmBxuF,KAAM8gB,MAAOnJ,KACzC,OAAImJ,MACOA,MAAMoB,OAAO,SAACjT,OAAQ/R,GAAT,OAChB0wF,cAAc5tF,MAAM+hB,KAAK,SAAA0sE,WAAS,OAAI92E,IAAIza,KAAOuxF,cAC9CrsE,WAAW,IAGf,KAWSosE,CAAgBxuF,KAAMkU,OAAOqN,UAAWrN,OAAOo6E,aAAaj/D,OAMxE5F,KAAM9R,IACNpT,OAAQoT,IAAIpT,OACZuc,mjCC1Ea4tE,6BACjB,SAAAA,SAAa3xD,QAASjQ,QAASwgE,YAAaqB,2KAAoBC,CAAA3pF,KAAAypF,UAC5DzpF,KAAK83B,QAAUA,QACf93B,KAAK4pF,0BACL5pF,KAAK6pF,gBACL7pF,KAAK8pF,mBACL9pF,KAAK+pF,UACDC,eACAC,aAEJjqF,KAAKkqF,iBACLlqF,KAAKmqF,yBACLnqF,KAAKoqF,sBACLpqF,KAAKqqF,oBACDC,aAAc,SAAAA,eAAA,OAAM,IAExBtqF,KAAKuqF,4BACLvqF,KAAKwqF,qBACLxqF,KAAKyqF,uBACLzqF,KAAK0qF,WACL1qF,KAAK2qF,uBACL3qF,KAAK4qF,iBACL5qF,KAAK6qF,kBACL7qF,KAAK8qF,sBAEL9qF,KAAK+qF,eAAerB,oBACpB1pF,KAAKgrF,2BAA2BnjE,QAAQmiE,aACxChqF,KAAKirF,oBAAoB5C,aACzBroF,KAAKkrF,+BAA+BrjE,QAAQsjE,wBAC5CnrF,KAAKorF,wBAAwBvjE,QAAQoiE,+RAIrC,OAAInjF,UAAOxH,QACPU,KAAK0qF,QAAU5gB,eAAe9pE,KAAK0qF,QAAN5jF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACtB9G,MAEJA,KAAK0qF,8DAGAW,cACZ,IAAM3B,mBAAqB1pF,KAAK2qF,oBAChC,IAAK,IAAMnxF,OAAO6xF,aACd,MAAOrxF,eAAe5B,KAAKizF,aAAc7xF,KAAM,CAC3C,IAAM6uF,YAAcgD,aAAa7xF,SAC7B8xF,uBAAwB,EACxBC,iBAAW,EACX5gE,eAAe09D,cACfkD,YAAclD,YAAYmD,QAC1BF,sBAAwBjD,YAAYiD,uBAEpCC,YAAclD,aAEjBqB,mBAAmBlwF,OAASkwF,mBAAmBlwF,SAChDwG,KAAK2qF,oBAAoBnxF,KAAzBiyF,2BAAoC,IAAI9qF,IAAI2qF,sBAAwBC,eAAHt/E,OAAAw/E,2BACzD/B,mBAAmBlwF,MADsCiyF,2BAC7BF,gBAG5C,OAAOvrF,mFAGiB6nB,SACxB,IAAM6jE,WD3E8B,SAA/BC,6BAAgC7zD,QAASjQ,SAClD,IAAM+jE,0BAMN,OAJA/jE,QAAUA,mBAAmB5d,MAAQ4d,QAAUlvB,OAAOgkB,OAAOkL,UACrDroB,QAAQ,SAACqsF,QACbD,uBAAuBC,OAAO/F,cAAgB,IAAI+F,OAAO/zD,WAEtD8zD,uBCoEgBD,CAA6B3rF,KAAM6nB,SAGtD,OAFA7nB,KAAK8rF,qBAAqBJ,YAC1B/yF,OAAOmgB,OAAO9Y,KAAK+pF,SAASC,YAAa0B,YAClC1rF,yEAIP,OAAOA,qEAGUqoF,aACjB,IAAK,IAAM7uF,OAAO6uF,YACdroF,KAAK4pF,uBAAuBvB,YAAY7uF,KAAKssF,cAAgBuC,YAAY7uF,KAG7E,OADAwG,KAAK+rF,wBACE/rF,+DAGOqoF,YAAagB,aAAc7pE,SAAS,IAAA/d,MAAAzB,KAC5CgsF,gBAAkBhsF,KAAKqoF,cACvB4D,cAAgBjsF,KAAK6qF,eACrBqB,kBAAoBlsF,KAAK8qF,mBA6B/B,OA5BAzC,YAAY7oF,QAAQ,SAAC2sF,YACjB,IAAIhkF,QACA3P,KACEgzF,QAAUW,WAAWX,QACrBE,WAAaS,WAAWT,WACxBU,YDIO,SAAZC,UAAav0D,QAAS4zD,YAC/B,IAAIU,eACEE,QACFvD,YAAa,KACbG,WAAY,MAqBhB,OAnBAwC,WAAWlsF,QAAQ,SAAC+sF,WAChB,IAAMC,aAAe10D,QAAQ8yD,cAAc2B,WACvCC,eACAJ,YAAczzF,OAAOmgB,OAAOszE,YAAalrF,MAAMsrF,gBAC9C,cAAe,cAAchtF,QAAQ,SAACzE,MACnC,IAAM8gB,MAAQ2wE,aAAazxF,MAAM8gB,MAC7B4wE,cAAgBH,OAAOvxF,MAKvB0xF,cAJCA,cAEM,GAAAxgF,OAAG4P,MAAM6wE,YAAYpjF,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAAMgZ,UAAtC,GAAAvF,OACJwgF,cAAcC,YAAYpjF,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAAMgZ,QAC9B86E,OAAOvxF,MAAQ8gB,MAAMzF,MAAMq2E,eAE3B5wE,MALAywE,OAAOvxF,MAAQ8gB,MAOnCuwE,YAAYrxF,MAAM8gB,MAAQ4wE,mBAI/BL,YC7BqBC,CAAU5qF,MAAMiqF,YACpCF,QAAQhsF,QAAQ,SAACmtF,QACS,WAAlBC,gBAAOD,SACPn0F,KAAOm0F,OAAOn0F,KACd2P,QAAUwkF,OAAOxkF,SAEjB3P,KAAOm0F,OAGX,IAAME,mBAAqBb,gBAAgBxzF,MACvCq0F,mBAAmBC,eACdD,mBAAmBj2E,YAAYm2E,WAChCp0F,OAAOgkB,OAAOsvE,eAAenvE,KAAK,SAAAvkB,GAAC,OAAIA,EAAEmvB,kBACzCwkE,kBAAiB,GAAAjgF,OAAIzT,KAAJ,KAAAyT,OAAYy/E,WAAW5mF,UACpCtM,UACAwW,QAASo9E,YAAa5sE,QAASrX,UAGnC1G,MAAKurF,mBAAmBx0F,KAAM4zF,YAAa5sE,QAASrX,cAK7DnI,mEAGSxH,KAAM6wF,aAAc7pE,SAAuB,IAAdrX,QAAcrB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACrDklF,gBAAkBhsF,KAAKqoF,cACvB8D,WAAaH,gBAAgBxzF,MAC/BgwF,SAAU,EACVrgF,QAAQkW,QAAUlW,QAAQkW,OAAO8tE,cACjC3D,SAAU,IAEbA,SAAWwD,gBAAgBxzF,MAAMsI,MAAMuoF,aAAc7pE,QAASrX,iGAGlCmB,KAE7B,OADAtJ,KAAKuqF,yBAA2B5xF,OAAOmgB,OAAO9Y,KAAKuqF,yBAA0BjhF,SACtEtJ,iEAGQusF,UAAW/sE,SAA+B,IAAtBytE,gBAAsBnmF,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACnDomF,eAA0C15D,IAA9By5D,gBAAgBC,WAA0BD,gBAAgBC,UAEtE9rE,OADqBphB,KAAK+pF,SAASC,YACPuC,WAE5BlE,YDzDgB,SAAjB8E,eAAkBZ,UAAW7C,oBACtC,IAAMrB,eACN,IAAK,IAAM7uF,OAAOkwF,mBAAoB,CAClC,IAAMgC,WAAalyF,IAAI+F,MAAM,KACfmsF,WAAW5uE,KAAK,SAAAvkB,GAAC,OAAIA,IAAMg0F,aAErClE,YAAY7mF,MACRgqF,QAAS9B,mBAAmBlwF,KAC5BkyF,wBAIZ,OAAOrD,YC6CiB8E,CAAeZ,UADRvsF,KAAK2qF,qBAIhC,GAFA3qF,KAAK8pF,gBAAkBmD,gBAEnB7rE,OAAQ,CACR,IAAMioE,aAAejoE,OAAOi3D,SAAS74D,SAC/B4tE,wBAA0BptF,KAAKqtF,2BAA2BhE,cAChErpF,KAAK4qF,cAAc2B,WAAaa,wBAChC,IAAME,uBAAyBttF,KAAKstF,uBAAuBJ,WAK3D,GAHIA,WACAltF,KAAKktF,UAAUX,UAAW/sE,QAAS6pE,aAAazhE,KAAK,SAAArvB,GAAC,OAAIA,EAAEg1F,qBAAqBlF,aAEjFiF,uBAAwB,CACxB,IAAME,sBAAwBxtF,KAAKytF,yBAAyBpF,YAAa7oE,QAASytE,iBAClFjtF,KAAK0tF,iBAAiBF,sBAAuBJ,wBAAyB5tE,UAI9E,OAAOxf,mFAGiBqpF,cACxB,OAAOA,aAAazhE,KAAK,SAAArvB,GAAC,OAAKA,EAAEg1F,6FAIjC,OAAO,8FAGwBhB,UAAWrzF,OAM1C,OALIA,iBAAiB4Q,SACjB9J,KAAKwqF,kBAAkB+B,WAAarzF,MAEpC8G,KAAKwqF,kBAAkB+B,WAAa,kBAAMrzF,OAEvC8G,mGAGyBmsF,WAAYjzF,OACxCA,iBAAiB4Q,SACjB9J,KAAKqqF,mBAAmB8B,YAAcjzF,MAEtC8G,KAAKqqF,mBAAmB8B,YAAc,kBAAMjzF,qDAKhD,OAAO8G,uDAIP,OAAI8G,UAAYxH,QACZU,KAAK6pF,aAAL/iF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK6pF,yEAGG3sE,IAEf,OADAirE,6BAA6BnoF,KAAMkd,IAAI,GAChCld,mEAGSkd,IAEhB,OADAirE,6BAA6BnoF,KAAMkd,IAAI,GAChCld,qEAGUusF,UAAWoB,gBAC5B,IAAMC,mBAAqB5tF,KAAKyqF,oBAChC,IAAK,IAAMjxF,OAAOo0F,mBACd,GAAIp0F,MAAQm0F,eAAgB,CACxB,IAAME,aAAeD,mBAAmBp0F,KACxCq0F,aAAanC,WAAamC,aAAanC,WAAWrtE,OAAO,SAAA9lB,GAAC,OAAIA,IAAMg0F,YACpEvsF,KAAK8tF,uBAAuBt0F,KAIpC,OAAOwG,uEAGWmsF,WAAYI,WAC9B,IAAM7C,mBAAqB1pF,KAAK2qF,oBAEhC,OADAjB,mBAAmB6C,WAAa7C,mBAAmB6C,WAAWluE,OAAO,SAAA9lB,GAAC,OAAKA,EAAEC,MAAQD,KAAO4zF,aACrFnsF,+EAGeqoF,aACtB,OAAOA,wFAGgB/rE,WAGvB,OAFAA,UAAUyxE,YAAY,eACtBzxE,UAAU4rD,GAAG,cAAeloE,KAAKguF,0BAC1BhuF,6EAGe,IAAAwV,OAAAxV,KACtB,OAAO,SAACiuF,WACJ,IAAMzuE,QAAUyuE,UAAUzuE,QACpB4B,OAAS5B,QAAQ4B,OAEvB5L,OAAK04E,kBAAkB9sE,OAAQ5B,SAC3B0tE,WAAW,mEAKHiB,UAAWC,oBAC3B,IAAM1C,WAAa0C,oBAAsBpuF,KAAK+pF,SAASC,YACjDX,aAAerpF,KAAKkqF,cACpBmE,qBAAuBruF,KAAKmqF,sBAElC,IAAK,IAAM3wF,OAAOkyF,gBACP1xF,eAAe5B,KAAKszF,WAAYlyF,OACnC6vF,aAAa7vF,KAAO,IAAI6tF,kBAAa8G,WACrCE,qBAAqB70F,KAAO,IAAI6tF,kBAAa8G,WAAW,IAKhE,OAFAnuF,KAAKmqF,sBAAwBkE,qBAC7BruF,KAAKqpF,aAAaA,cACXrpF,yDAIP,OAAI8G,UAAaxH,QACbU,KAAKkqF,cAALpjF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKkqF,oFAIZ,IAAMoE,sBAAwBtuF,KAAK4pF,uBAEnC,OADA5pF,KAAKqoF,YDxSwB,SAAxB0D,sBAAyBj0D,QAASuwD,aAC3C,IAAMkG,eAAiBz2D,QAAQ+xD,aACzB56E,OAAS6oB,QAAQ7oB,SASvB,OARAo5E,YAAcA,uBAAuBp+E,MAAQo+E,YAAc1vF,OAAOgkB,OAAO0rE,cAC7D7oF,QAAQ,SAACgvF,YACjB,IAAM1I,WAAa0I,WAAW1I,aACxB+G,mBAAqB0B,eAAezI,YAC1CyI,eAAezI,YAAc+G,oBAAsB,IAAI2B,WAAW12D,SAClE,IAAM22D,eAAiBx/E,OAAO62E,YAC9B2I,gBAAkBF,eAAezI,YAAY72E,OAAOw/E,kBAEjDF,eC6RcxC,CAAsB/rF,KAAMsuF,wBACtCtuF,6EAGc6nB,SACrB,IAAM6mE,cDrR2B,SAA5BC,0BAA6B72D,QAASjQ,SAC/C,IAAM+mE,mBAEN,IAAK,IAAMp2F,QAAQqvB,aACL7tB,eAAe5B,KAAKI,KAAMqvB,WAChC+mE,gBAAgBp2F,MAAQqvB,QAAQrvB,MAAMs/B,UAG9C,OAAO82D,gBC6QmBD,CAA0B3uF,KAAM6nB,SAEtD,OADAlvB,OAAOmgB,OAAO9Y,KAAK+pF,SAASE,SAAUyE,eAC/B1uF,yDAiBIohB,OAAQpX,QAAwB,IAAhBomB,OAAgBtpB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,IAAAA,UAAA,GACrCsnF,mBAAqBpuF,KAAK+pF,SAASC,YACzC,GAAIhgF,OAAO1K,OAAQ,CACf,GAAI8hB,SAAW2lE,YACX,IAAK,IAAMvtF,OAAO40F,mBACdpuF,KAAKoqF,mBAAmB5wF,MACpBwQ,cACAomB,oBAIRpwB,KAAKoqF,mBAAmBhpE,SACpBpX,cACAomB,eAGR,OAAOpwB,KAEX,OAAOA,KAAKoqF,yFAOQyE,WACpB,IAAMC,sBAAwB9uF,KAAK+pF,SAASE,SACtC3gF,IAAMtJ,KAAKyqF,oBAEjB,IAAK,IAAMrpE,UAAU9X,IACjB,OAAUtP,eAAe5B,KAAKgpB,OAAQ9X,MAAQ8X,UAAYytE,WAAaztE,QAAS,CAC5E,IAAIy3B,YAAM,EACJ6yB,OAASpiE,IAAI8X,QACnBy3B,OAAS6yB,OAAO7yB,OAChB,IAAM+gC,MAAQlO,OAAOkO,MAChB/gC,SACDA,OAAS74C,KAAK83B,QAAQi3D,8BAEbtK,YAAuB,IAAV7K,YAA4BpmD,IAAVomD,OAAuBA,QAC3D55E,KAAKgvF,wBAAwBF,sBAAsB1tE,QACvDy3B,OAAQ6yB,OAAOggB,YAG3B,OAAO1rF,2FAGqBsJ,KAE5B,OADAtJ,KAAKyqF,oBAAsB3gB,eAAe9pE,KAAKyqF,oBAAqBnhF,KAC7DtJ,6EAWcohB,OAAQ6tE,QAASC,eAAe,IAAAz+D,OAAAzwB,KAiBrD,MAhByB,iBAAbivF,UACRA,SAAWA,UAEfA,QAAQzvF,QAAQ,SAACq5C,QACb,IAAM3pB,MAAQuB,OAAKqH,QAAQ5I,QACrBZ,MAAQuqB,OAAO7sB,gBAAgBliB,SAAW+uC,OAASypC,6BAAcpzD,OAAO++B,UAAUpV,QACnFvqB,MAAMwU,UACHxU,iBAAiBrkB,MACjBqkB,MAAM9uB,QAAQ,SAACwsB,MACX5K,OAAOkhE,6BAAct2D,MAAOkjE,iBAGhC9tE,OAAOkN,MAAO4gE,kBAInBlvF,mEAIP,OAAOA,KAAK8pF,oFAGOn7E,UAA+B,IAArBwgF,eAAqBroF,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC5CgxB,QAAU93B,KAAK83B,QACfkzC,kBAAoBmkB,eAAe7uF,KAAO6uF,eAAe7uF,KAC3Dw3B,QAAQizC,4BAA4Bp8D,SAAU,OAC5CygF,QAAUt3D,QAAQ9tB,SAASoK,MAC3Bi7E,QAAUv3D,QAAQ9tB,SAASzE,MAC3B+pF,UAAYF,QAAQ36E,MAAM,SAAA1H,OAAK,OAAIA,MAAMhS,SAAW6D,yBAAUC,UAC9D0wF,UAAYF,QAAQ56E,MAAM,SAAA1H,OAAK,OAAIA,MAAMhS,SAAW6D,yBAAUC,UACpE,OACIgd,MAAOmvD,kBACPxmD,KAAmB,OAAb7V,SAAoB,KAAQwgF,eAAe7uF,KrG2uB9B,SAAzB2b,uBAA0BJ,MAAOU,UAAWyJ,UAAa,IAEvDwpE,cAFuDC,mBAClClzE,UAAUhc,UAA3BD,KADmDmvF,mBACnDnvF,KAAMqB,OAD6C8tF,mBAC7C9tF,OAEd,GAAIA,OAAOrC,OAAQ,CACf,IAAMowF,SAAW7zE,MAAMY,kBACvB+yE,cAAgB3zE,MAAMoB,OAAO,SAACjT,QAQ1B,OAPgB1J,KAAKwc,KAAK,SAAAtC,KAAG,OAAI7Y,OAAO8S,MAAM,SAACsI,UAAW5J,KACtD,QAAK6S,UAAejJ,UAAUvkB,QAAQk3F,UAC9BA,SAAS3yE,UAAUvkB,MAAMqkB,IAAI9hB,OAAS6D,yBAAUC,UAGjD2b,IAAIrH,OAASnJ,OAAO+S,UAAUvkB,MAAMwkB,gBAI/CG,WAAW,SAGfqyE,cAAgBjzE,UAGpB,OAAOizE,cqGhwByDvzE,CAAuBjc,KAAK2vF,cAChFR,eAAe7uF,KAAK,GAAIgvF,WAAaC,WAAWhvF,UAAUikB,KAAOwmD,kBAAkB,GAAGzqE,UAAUikB,gEAI1FpD,QACd,IAAM1B,SAAW1f,KAAK83B,QAAQ5D,KAExB07D,mBADiB5vF,KAAK8pF,qBACapqE,SACrCmwE,2BAQJ,OAPID,oBAAsBlwE,WACtBmwE,yBAA2B7vF,KAAKmqF,sBAAsB/oE,UAGtDwuE,mBACAC,wBAAwBruF,KAAKxB,KAAKqpF,eAAejoE,SAE9CyuE,0EAIP,OAAO7vF,KAAK83B,QAAQx3B,mDAIpB,OAAON,KAAK2nF,kEAYC4E,WACb,OAAOvsF,KAAK4qF,cAAc2B,0TC5bbuD,oCACjB,SAAAA,iBAAaC,gKAAUC,CAAAhwF,KAAA8vF,kBACnB9vF,KAAK+vF,SAAWA,SAChB/vF,KAAKiwF,UAAW,8RAYVzwE,SAAS,IAAA/d,MAAAzB,KACT2O,SAAW6Q,QAAQ7Q,SACnBohF,SAAW/vF,KAAK+vF,SAChBjK,WAAa9lF,KAAK4W,YAAYkvE,aAC9BoK,cAAgBH,SAASI,iBAAiBrK,YAJjCsK,sBAQXpwF,KAAK+vF,SAASM,sBAAsB1hF,SAAU3O,KAAK+vF,SAASO,qBAFrDtlB,kBANIolB,sBAMXv0E,MACA2I,KAPW4rE,sBAOX5rE,KAOJ,OALsB0rE,cAAc5mF,IAAI,SAAC+/E,cAErC,OADA5nF,MAAK8uF,gBAAgB/rE,KAAM6kE,cACpB5nF,MAAK+uF,gBAAgBnH,aAAcre,kBAAmBxrD,qEAiBjE,OAAOxf,6DAGMqpF,aAAcre,kBAAmBxrD,SAAS,IAAAixE,sBAKnDpH,aAAaqH,UAHb7I,SAFmD4I,sBAEnD5I,SACAC,QAHmD2I,sBAGnD3I,QACAR,YAJmDmJ,sBAInDnJ,YAEE6H,eAAiBnvF,KAAK+vF,SAASO,oBAC/Bh0E,UAAYtc,KAAK+vF,SAASJ,cAC1BgB,WACFC,qBAAsBzB,eAAeyB,qBACrCt0E,oBACA0uD,oCACA3rD,gBAAiB8vE,eAAe7uF,KAChC+oF,2BAGJ,OACIxB,UAAWuB,WAAW,WAAYvB,SAAS,GAAI8I,WAC3CvH,WAAW,WAAYvB,SAAS,GAAI8I,YACxC7I,SAAUsB,WAAW,WAAYtB,QAAQ,GAAI6I,WACzCvH,WAAW,UAAWtB,QAAQ,GAAI6I,YACtC5H,YAAaK,WAAW,cAAeX,aAAaZ,UAAW8I,WAC/DzH,WAAYE,WAAW,aAAcX,aAAaX,SAAU6I,WAC5DrJ,YAAa8B,WAAW,WAAY9B,YAAaqJ,WACjDC,qBAAsBzB,eAAeyB,qBACrC5mF,OF1BmB,SAAlB6mF,gBAAmB1B,gBAAkC,IAAlBxgF,SAAkB7H,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACxD2Y,kBAAoB0vE,eAAe1vE,kBASzC,OAPIA,kBACeA,kBAAkBitE,YAAYpjF,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OACjDmW,oBAAoB1E,MACZ0E,SAAS,GAEThW,OAAO6O,KAAKmH,cEkBfkiF,CAAgB1B,eAAgB3vE,QAAQ7Q,UAChD4+E,oBAA+C,IAA3BlE,aAAa9B,mDASrCvnF,KAAKiwF,UAAW,4CAIhBjwF,KAAKiwF,UAAW,gDAIhB,OAAOjwF,KAAKiwF,qDAZZ,OAAO,6qCCnFMa,mtBAA0BhB,iUAC1B9H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO1oF,OAAQ,CAEtB,IAAM0xF,eAAiBhJ,OAAO3pE,OAAO,SAAA9lB,GAAC,OAAI8wF,aAAaj/D,KAAK7xB,KAAOswF,qBACxDQ,aAAaj/D,KAAK7xB,KAAOswF,sBACpCQ,aAAa4H,aAJS,IAKdpJ,SAAawB,aAAaqH,UAA1B7I,SACRwB,aAAa0H,MAAMtI,aAAaZ,WAChCwB,aAAapgE,IAAI++D,QACjBqB,aAAav4D,OAAOkgE,qBAEpB3H,aAAazmD,OAAOymD,aAAa6H,2CClBhCC,MAAQ,QACRC,UAAY,YACZC,QAAU,UACVC,OAAS,SACT9jF,OAAS,stCCDD+jF,+vBAA2BT,oUAExC,OAAOM,ysCCGMI,mtBAAuBV,oTAEpC,OAAOW,2sCCPMC,8tBAAwBZ,wTAErC,OAAOQ,iDAIP,OAAO,gvCCLMK,ywBAA4B7B,yUAC5B9H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO1oF,OAAQ,CACtB,IAAM6vF,eAAiBnvF,KAAK+vF,SAASO,oBAE/BU,eAAiBhJ,OAAO3pE,OAAO,SAAA9lB,GAAC,OAAI8wF,aAAaj/D,KAAK7xB,KAAOswF,qBAC5DQ,aAAaj/D,KAAK7xB,KAAOswF,sBAChC,IAAiC,IAA7BsG,eAAejC,UAAqB,CACpC7D,aAAa4H,aADuB,IAE5BpJ,SAAawB,aAAaqH,UAA1B7I,SACRwB,aAAa0H,MAAMtI,aAAaZ,WAChCwB,aAAapgE,IAAI++D,QACjBqB,aAAav4D,OAAOkgE,oBACjB,CAECA,eAAe1xF,QACf+pF,aAAa4H,aACb5H,aAAazmD,OAAOouD,kBAEpB3H,aAAauI,cACbvI,aAAapgE,IAAI++D,SAPlB,IASKF,QAAYuB,aAAaqH,UAAzB5I,QACF+J,cAAgBpJ,aAAaX,SAC7BgK,iBAAmBzI,aAAa6H,iBAAiB5xF,OACnDuyF,cAAcvyF,SAAWwyF,kBACzBzI,aAAa0H,cAIrB1H,aAAazmD,OAAOymD,aAAa6H,kBAGrC,OAAOlxF,guCCpCM+xF,guBAAwBJ,4TAErC,OAAOnkF,8BCkFAwkF,mBAhFwC,SAAtBA,oBAAuBC,WAAYhjF,OAAQuN,cACxE,IAAMy1E,WAAWC,KAAK99E,IAAK69E,WAAWC,KAAK3sF,EACvC,OACIoJ,SAAU,MAIlB,IAAMujF,KAAOD,WAAWC,KAClBC,MAAQD,KAAK99E,EAAE,GACfg+E,MAAQF,KAAK3sF,EAAE,GACf8sF,WAAaJ,WAAWjoF,OACxBsoF,OAASD,WAAWj+E,EAAE,GAAGm+E,aAAa,GACtCC,OAASH,WAAW9sF,EAAE,GAAGgtF,aAAa,GACtCE,WAAaj2E,aAAa81E,QAAQz1E,IAAI/E,QACtC46E,WAAal2E,aAAag2E,QAAQ31E,IAAI/E,QACtCiO,cACA4sE,MAAQ1jF,OAAO2jF,SACfC,OAAS5jF,OAAO4jF,OAEtB,GAAIF,MAAMv+E,IAAMy+E,OAAOz+E,GAAKu+E,MAAMptF,IAAMstF,OAAOttF,EAC3C,OACIoJ,SAAU,MAIlB,IAAMmkF,QAAUL,aAAe/zF,8BAAeq0F,WAAcL,aAAeh0F,8BAAeq0F,YACrF,IAAK,MAAQ,MAAS,KACrBpkF,YACAqkF,aAAeP,aAAen0F,gCAAiBC,YAC/C00F,aAAeP,aAAep0F,gCAAiBC,YAC/C20F,OAAsC,SAA7Bf,MAAMv7E,YAAY7b,OAAoBo3F,MAAM7wF,QAAQujC,aAAa8tD,MAAMv+E,EAAGy+E,OAAOz+E,GAC5F+9E,MAAMjtD,OAAOytD,MAAMv+E,EAAGy+E,OAAOz+E,GAC3B++E,OAAsC,SAA7Bf,MAAMx7E,YAAY7b,OAAoBq3F,MAAM9wF,QAAQujC,aAAa8tD,MAAMptF,EAAGstF,OAAOttF,GAC5F6sF,MAAMltD,OAAOytD,MAAMptF,EAAGstF,OAAOttF,GAC3B6tF,iBACFh/E,EAAGu+E,MAAMv+E,IAAMy+E,OAAOz+E,KAAU4+E,aAAeE,OAASA,OAAO1hF,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,IAClFI,EAAGotF,MAAMptF,IAAMstF,OAAOttF,KAAU0tF,aAAeE,OAASA,OAAO3hF,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,KAEhFkuF,YAEN,GAAuB,IAAnBP,QAAQxzF,QAGR,GAFA+zF,SAASf,QAAUc,gBAAgBh/E,EACnCi/E,SAASb,QAAUY,gBAAgB7tF,EAC/B+sF,SAAWE,OAAQ,CACnB,IAAMc,KAAOF,gBAAgBh/E,EACvBm/E,KAAOH,gBAAgB7tF,EACvB1E,IAAMyyF,KAAK,GAAKC,KAAK,GAAKA,KAAOD,KACjCvyF,IAAMF,MAAQ0yF,KAAOD,KAAOC,KAC9B1yF,IAAI,GAAKE,IAAI,GACbsyF,SAASf,WAETe,SAASf,SAAWvxF,IAAI,GAAIF,IAAI,GAAKE,IAAI,GAAKF,IAAI,GAAKE,IAAI,IAE/DglB,WAAW3R,GAAKu+E,MAAMv+E,EAAGy+E,OAAOz+E,GAChC2R,WAAWxgB,GAAKotF,MAAMptF,EAAGstF,OAAOttF,SAGpCoJ,SAASmkF,QAAQ,IAAMM,gBAAgBN,QAAQ,QAE5B,MAAfA,QAAQ,IACRO,SAASf,QAAU3jF,SAASyF,EACxBq+E,aAAen0F,gCAAiBC,cAChCwnB,WAAW3R,EAAKnF,OAAOukF,MAAQb,MAAMv+E,IAAMy+E,OAAOz+E,EAAK+9E,MAAMsB,gBAAgBd,MAAMv+E,EAAGy+E,OAAOz+E,IACxFu+E,MAAMv+E,EAAGy+E,OAAOz+E,MAGzBi/E,SAASb,QAAU7jF,SAASpJ,EACxBmtF,aAAep0F,gCAAiBC,cAChCwnB,WAAWxgB,EAAK0J,OAAOukF,MAAQb,MAAMptF,IAAMstF,OAAOttF,EAAK6sF,MAAMqB,gBAAgBd,MAAMptF,EAAGstF,OAAOttF,IACxFotF,MAAMptF,EAAGstF,OAAOttF,KAKjC,OACIoJ,SAAU0kF,SACVttE,wBCtEK2tE,2BAAkB,SAAlBA,gBAAmBC,SAAUjI,WAAYqE,SAAUnW,OAC5D,IAEIga,WAGAC,WALAjB,YACAC,UAGEiB,OAAS/P,2BAEf4P,SAASv7F,KAAK07F,SAAS5rB,GAAG,QAAS,WAC/B,IAAMmL,MAAQwQ,0BACd+O,UACIx+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,GAEbquF,WAAa7D,SAASj4D,QAAQi8D,oBAC9BF,YAAa,IAAI/xF,MAAO4J,YACzBw8D,GAAG,OAAQ,WACV,IAAMmL,MAAQwQ,0BAKd,GAJAgP,QACIz+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,KAETq0E,OAASh5E,KAAKuL,IAAIymF,SAASx+E,EAAIy+E,OAAOz+E,IAAM,GAAhD,CAGAy+E,OAAOz+E,EAAIxT,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOz+E,EAAGw/E,WAAW38D,QACrD47D,OAAOttF,EAAI3E,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOttF,EAAGquF,WAAW18D,SAErD,IAAM1X,QAAUwyE,mBAAoBjC,SAASj4D,QAAQk8D,iBACjDpB,kBACAC,eACD9C,SAASj4D,QAAQx3B,OAAOmc,mBAC3BivE,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKz0E,cAC3D0oD,GAAG,MAAO,WACT,IAAMmL,MAAQwQ,0BACdgP,QACIz+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,GAEb,IAAM65E,UAAW,IAAIt9E,MAAO4J,UAAYmoF,WAExC,KAAIja,OAASwF,SAAW,KAAOx+E,KAAKuL,IAAIymF,SAASx+E,EAAIy+E,OAAOz+E,IAAM,GAAlE,CAGAy+E,OAAOz+E,EAAIxT,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOz+E,EAAGw/E,WAAW38D,QACrD47D,OAAOttF,EAAI3E,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOttF,EAAGquF,WAAW18D,SAErD,IAAM1X,QAAUwyE,mBAAoBjC,SAASj4D,QAAQk8D,iBACjDpB,kBACAC,cACAW,MAAM,GACPzD,SAASj4D,QAAQx3B,OAAOmc,mBAC3B+C,QAAQ00E,SAAU,EAClBxI,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKz0E,gBCvBnD20E,eAjC0B,SAARA,MAAQpE,UAAQ,OAAI,SAAC4D,SAAUjI,YAC5D,IAAMwC,kBAAoB,SAApBA,kBAA8B1lF,MAChC,IAAM6qE,MAAQwQ,0BACR/rD,QAAUi4D,SAASj4D,QAEnB1+B,KADc0+B,QAAQ7oB,SAASmlF,YAAYC,QACxBj7F,KACnBuqF,IAAMD,8BAAe5rD,QAAQi8D,oBAAoBO,aAAcjhB,OAC/DkhB,aAAez8D,QAAQ08D,gBAAgB7Q,IAAIvvE,EAAGuvE,IAAIp+E,GACpDkvF,aChBgB,iBDgBFr7F,MCfA,eDeyBA,KACvCkH,KAAMkI,KACN6qE,cAEE7zD,SACF7Q,SAAU4lF,aAAeA,aAAargE,GAAK,KAC3CwgE,eAAgBH,aAAaG,eAC7B77C,OAAQ07C,aAAa17C,OACrBhb,SAAU8lD,IACVvqF,WAGJsyF,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKz0E,WAC1D6zD,MAAM/gD,mBAGVqhE,SAASzrB,GAAG,YAAagmB,mBACRhmB,GAAG,YAAagmB,mBAChBhmB,GAAG,WAAY,WACZwjB,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,KACjDtlF,SAAU,aEnCzBgmF,iCAA2B,SAA3BA,yBAAqCnsF,KAAM6qE,MAAO0c,UAC3D,IAAMj4D,QAAUi4D,SAASj4D,QACnB6rD,IAAMD,8BAAe5rD,QAAQi8D,oBAAoBO,aAAcjhB,MAAMqG,QAAUrG,MAAMqG,QAAQ,GAAKrG,OAClGkhB,aAAez8D,QAAQ08D,gBAAgB7Q,IAAIvvE,EAAGuvE,IAAIp+E,GACpDjF,KAAMkI,KACN6qE,cAEJ,OACI1kE,SAAU4lF,aAAeA,aAAargE,GAAK,KAC3CwgE,eAAgBH,aAAaG,eAC7B77C,OAAQ07C,aAAa17C,OACrBhb,SAAU8lD,MCMHiR,eAV0B,SAARA,MAAQ7E,UAAQ,OAAI,SAAC4D,SAAUjI,YAQ5DiI,SAASzrB,GAAG,QAPc,SAApBgmB,kBAA8B1lF,MAChC,IAAM6qE,MAAQwQ,0BACRrkE,QAAUm1E,iCAAyBnsF,KAAM6qE,MAAO0c,UACtDrE,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKz0E,WAC1D6zD,MAAM/gD,kMCPP,IAAMs8D,iBAAeiG,wBAAAC,oBACvBC,KCAmC,SAAPtZ,KAAOsU,UAAQ,OAAI,SAAC4D,SAAUjI,YAC3DgI,2BAAgBC,SAAUjI,WAAYqE,aDFd8E,wBAAAC,iBAEvBC,MAAoBZ,gBAFGU,wBAAAC,iBAGvBC,MAAoBH,gBAHGC,wBAAAC,iBAIvBC,UEDoB,SAAZC,UAAYjF,UAAQ,OAAI,SAAC4D,SAAUjI,YAC5C,IAAIrY,MACA4hB,SAOJA,UAAW,EACX5hB,MAAQwQ,0BACR8P,SAASzrB,GAAG,aAAc,SAAC1/D,MACvB6qE,MAAQwQ,0BACRoR,UAAW,EACX9pE,WAAW,WACF8pE,SAGDvJ,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,KACjDtlF,SAAU,SAhBA,SAApBu/E,kBAA8B1lF,MAChC,IAAMgX,QAAUm1E,iCAAyBnsF,KAAM6qE,MAAO0c,UACtDrE,WAAWlsF,QAAQ,SAAAy0F,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKz0E,WAC1D6zD,MAAM/gD,kBAUE47D,CAAkB1lF,OAMvB,OACJ0/D,GAAG,WAAY,WACd+sB,UAAW,OF3BSJ,wBAAAC,iBAKvBC,UGJoB,SAAZG,UAAYnF,UAAQ,OAAI,SAAC4D,SAAUjI,YAC5CgI,2BAAgBC,SAAUjI,WAAYqE,UAAU,MHFxB+E,4TILbK,mBCYX,SAAAA,kBAAapF,2KAAUqF,CAAAp1F,KAAAm1F,mBACnBn1F,KAAK+vF,SAAWA,SAChB/vF,KAAKiwF,UAAW,EAChBjwF,KAAKq1F,UAAY,UACjBr1F,KAAK0qF,WACL1qF,KAAKw/E,IAAM/zE,cACXzL,KAAKs1F,eACLt1F,KAAKiP,OAAOjP,KAAK4W,YAAY4H,6UAiD7B,OAAI1X,UAAOxH,QACPU,KAAK0qF,QAAU5gB,eAAe9pE,KAAK0qF,QAAN5jF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACtB9G,MAEJA,KAAK0qF,kDAKZ,OADA1qF,KAAKiwF,UAAW,EACTjwF,6CAKP,OADAA,KAAKiwF,UAAW,EACTjwF,mDAIP,OAAOA,KAAKiwF,+CAyBZ,OAAOjwF,qDAWExH,KAAM0kB,IAEf,OADAld,KAAKs1F,YAAY98F,MAAQ0kB,GAClBld,6DA/FP,yDAUA,MAAO,kDAIP,MAAO,gDAWP,OAAO,wuCC9BMu1F,0vBAA4BJ,iUA2BtBziF,KAA0C5L,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,IAAAA,UAAA,OAAxB0uF,gBAAwB1uF,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAP1yB,MAAOgG,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAI7D,OAHexzB,KAAK+vF,SAASj4D,QAAQ29D,SAC9Bj2F,QAAQ,SAAAk2F,OAAK,OAAmC,IAA/BA,MAAMzmF,SAAS0mF,aACnCD,MAAME,sBAAsBJ,gBAAiB9iF,IAAI8R,KAAM1jB,SACpDd,6uCC7BM61F,owBAA4BV,iTAY9BhhE,UAAWsuD,SAAUniF,KAAM+7B,UAAWqmD,WACjD,OAAOF,YAAYruD,UAAWsuD,SAAUniF,KAAM+7B,UAAWqmD,mEAiBzD,OAAI57E,UAAexH,QACfU,KAAK81F,gBAALhvF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK81F,sDAIZ,OAAO91F,yCAIP,OAAOA,slBCpER,IA2GM+1F,wBAAmB,SAAnBA,iBAAoBj+D,QAASk+D,gBAAiBC,SACvD,IAAMhnF,OAAS6oB,QAAQ7oB,SACjBotB,UAAYptB,OAAOinF,aACnBC,YAAclnF,OAAOknF,YAC3B7T,6BAAc0T,iBAAiB/nC,UAA/B,IAAAhiD,OAA6CkqF,YAA7C,KAAAlqF,OAA4DowB,YAC3ClH,MAAM,UAAW8gE,QAAU,QAAU,8vCCuB3CG,8uBAxHYP,4TAmChBxM,aAAc7pE,SACjB,IAAIpL,EACA7O,EACA0xB,MACAC,OACEjoB,OAASjP,KAAK0qF,QACd2L,QAAUpnF,OAAOqnF,IACjBvG,SAAW/vF,KAAK+vF,SAChB6D,WAAa5zF,KAAKu2F,iBAClB9kE,WAAamiE,WAAWoC,gBACxBQ,UAAY5C,WAAW38D,MACvBw/D,WAAa7C,WAAW18D,OACxBi/D,YAAclnF,OAAOknF,YACrBO,wBAA0BznF,OAAOinF,aAEvC,GAAyB,OAArB12E,QAAQ7Q,SAER,OADA3O,KAAK22F,KAAK/C,YACH5zF,KAGX,IAAM42F,UAAY7G,SAASj4D,QAAQk8D,gBApBT6C,sBDlDS,SAA9BC,4BAA+Bt3E,QAAS0yE,KAAMG,YACvD,IAAIt1C,GACA4S,GACAF,GACAG,GACAsjC,OACAC,OACA4D,UACEpoF,SAAW6Q,QAAQ7Q,SACnBoX,WAAavG,QAAQuG,eACrBixE,KAAOjxE,WAAW3R,EAClB6iF,KAAOlxE,WAAWxgB,EAExB,GAAiB,OAAboJ,SACA,OAAO,KAGX,IAAMwjF,MAAQD,KAAK99E,EAAE,GACfg+E,MAAQF,KAAK3sF,EAAE,GACf2xF,QAAuC,WAA7B/E,MAAMv7E,YAAY7b,OAC5Bo8F,QAAuC,WAA7B/E,MAAMx7E,YAAY7b,OAC5Bu3F,OAAM,GAAArmF,OAAMomF,WAAWj+E,EAAE,IACzBo+E,OAAM,GAAAvmF,OAAMomF,WAAW9sF,EAAE,IACzB6xF,UAAYzoF,SAAS2jF,QACrB+E,UAAY1oF,SAAS6jF,QAU3B,GARI4E,WAAaA,UAAU,aAAcntF,OACrCipF,OAASkE,UAAU,GACnBjE,OAASiE,UAAU,KAEnBlE,OAASkE,cACTjE,OAASkE,eAEbN,UAAYK,WAAaC,UAAY,OAAUD,UAAY,WAAa,aACpElE,QAAUA,OAAO5zF,OACjB,GAAkC,SAA7B8yF,MAAMx7E,YAAY7b,QAAqBm8F,QACxCn6C,GAAK4S,QAAKn8B,EACVujE,UAAY,iBACT,CACH,IAEIO,MACAC,MAHE72F,OAASyxF,MAAMzxF,SACf82F,UAAyC,SAA7BrF,MAAMv7E,YAAY7b,OAGpC,GAAIy8F,UAAW,CACX,IAAIC,cAAgB/2F,OAAOiH,QAAQurF,OAAO,IACtCwE,cAAgBh3F,OAAOiH,QAAQurF,OAAOA,OAAO5zF,OAAS,IAF/Cq4F,OAAAC,sBAGuBH,cAAeC,eAAelmF,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,IAHxE,GAGVsyF,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXL,MAAQ52F,OAAO+2F,eACfF,MAAQ72F,OAAOg3F,oBAEfJ,MAAQpE,OAAO,GACfqE,MAAQrE,OAAOA,OAAO5zF,OAAS,GAEnCy9C,GAAKo1C,MAAM0F,cAAcP,OACzB3nC,GAAKwiC,MAAM0F,cAAcN,OACzB5nC,IAAM6nC,UAAYrF,MAAM2F,eAAiB,OAG7C/6C,GAAK4S,QAAKn8B,EAEd,GAAI2/D,QAAUA,OAAO7zF,OACjB,GAAkC,SAA7B6yF,MAAMv7E,YAAY7b,QAAqBo8F,QACxC1nC,GAAKG,QAAKp8B,EACVujE,UAAY,eACT,CACH,IAEIgB,MACAC,MAHEt3F,QAAS0xF,MAAM1xF,SAIrB,GAH+C,SAA7B0xF,MAAMx7E,YAAY7b,OAGrB,CACX,IAAIk9F,cAAgBv3F,QAAOiH,QAAQwrF,OAAO,IACtC+E,cAAgBx3F,QAAOiH,QAAQwrF,OAAOA,OAAO7zF,OAAS,IAF/C64F,OAAAP,sBAGuBK,cAAeC,eAAe1mF,KAAM,SAACnX,EAAG8K,GAAJ,OAAUA,EAAI9K,IAHzE,GAGV49F,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXJ,MAAQr3F,QAAOu3F,eACfD,MAAQt3F,QAAOw3F,oBAEfH,MAAQ5E,OAAO,GACf6E,MAAQ7E,OAAOA,OAAO7zF,OAAS,GAEnCmwD,GAAK2iC,MAAMyF,cAAcE,OACzBnoC,GAAKwiC,MAAMyF,cAAcG,OACzBpoC,IAAmC,SAA7BwiC,MAAMx7E,YAAY7b,OAAoBq3F,MAAM0F,eAAiB,OAGvEroC,GAAKG,QAAKp8B,EAGd,GAAK2jE,SAAWD,UAAa13E,QAAQ00E,QAAS,CAC1C,GAAI8C,KAAM,KAAAoB,MAAAR,qBACKZ,KADL,GACLj6C,GADKq7C,MAAA,GACDzoC,GADCyoC,MAAA,GAGV,GAAInB,KAAM,KAAAoB,MAAAT,qBACKX,KADL,GACLxnC,GADK4oC,MAAA,GACDzoC,GADCyoC,MAAA,IAKd,OACIC,WACIv7C,MACA4S,MACAF,MACAG,OAEJmnC,qBChCiCD,CAA4Bt3E,QAASo3E,UAAU1E,KAC5E0E,UAAU5sF,QADNsuF,UArBkBzB,sBAqBlByB,UAAWvB,UArBOF,sBAqBPE,UAEbroC,WAAalvC,QAAQ00E,SAAWjlF,OAAOy/C,WAE3B,SAAdqoC,WAAsC,aAAdA,WACxB3iF,EAAIxT,KAAKC,IAAIy3F,UAAUv7C,GAAIu7C,UAAU3oC,IACrC14B,MAAQr2B,KAAKuL,IAAImsF,UAAU3oC,GAAK2oC,UAAUv7C,MAE1C3oC,EAAI,EACJ6iB,MAAQu/D,WAEM,SAAdO,WAAsC,eAAdA,WACxBxxF,EAAI3E,KAAKC,IAAIy3F,UAAU7oC,GAAI6oC,UAAU1oC,IACrC14B,OAASt2B,KAAKuL,IAAImsF,UAAU1oC,GAAK0oC,UAAU7oC,MAE3Cv4B,OAASu/D,WACTlxF,EAAI,GAERvF,KAAKu4F,KAAK3E,YAEV,IAAM7jB,SAEE37D,IACA7O,IACA0xB,YACAC,gBAMFi1D,WAAansF,KACb+tD,UAHiBy0B,YAAYF,6BAAc7wD,YAAa,KAAM,GAAlC,IAAAxlB,OAC1BkqF,YAD0B,KAAAlqF,OACXyqF,0BAEUzoC,UAAU,QAAQ3tD,KAAKyvE,QAClDua,aAAev8B,UAAUO,QAAQl+B,OAAO,QAC7BuS,KAAK,YCpGE,SAAnB61D,iBAAmBzI,UAAQ,OAAI,SAAC4D,SAAUjI,YACnD,IAAIhR,QACAkZ,WACE97D,QAAUi4D,SAASj4D,QACnB2gE,OAAS,SAATA,OAAUj5E,SACZksE,WAAWlsF,QAAQ,SAAA4hB,QAAM,OAAI2uE,SAAS7B,kBAAkB9sE,OAAQ5B,YAE9Ds0E,OAAS/P,2BAEf4P,SAASv7F,KAAK07F,SAAS5rB,GAAG,QAAS,WAC/B,IAAMmL,MAAQwQ,0BACd+P,WAAa97D,QAAQi8D,oBACrBrZ,QAAUrH,MAAMqH,UACjBxS,GAAG,OAAQ,WACV,IAAMmL,MAAQwQ,0BACdnJ,QAAQtmE,GAAKi/D,MAAMriB,GACnB0pB,QAAQn1E,GAAK8tE,MAAMpiB,GACnB,IAAMh6B,MAAQ28D,WAAW38D,MACnBC,OAAS08D,WAAW18D,OACpB9iB,EAAIxT,KAAKC,IAAIo2B,MAAQyjD,QAAQzjD,MAAOr2B,KAAKG,IAAI25E,QAAQtmE,EAAG,IACxD7O,EAAI3E,KAAKC,IAAIq2B,OAASwjD,QAAQxjD,OAAQt2B,KAAKG,IAAI25E,QAAQn1E,EAAG,IAC1DqqD,GAAKrqD,EAAIm1E,QAAQxjD,OACjBy4B,GAAKv7C,EAAIsmE,QAAQzjD,MAEvB,GAAI7iB,GAAK,GAAKu7C,IAAM14B,OAAS1xB,GAAK,GAAKqqD,IAAM14B,OAAQ,CACjD,IAAM1X,QAAUwyE,mBAAoBl6D,QAAQk8D,iBACxCpB,UACIx+E,IACA7O,KAEJstF,QACIz+E,EAAGu7C,GACHpqD,EAAGqqD,KAER93B,QAAQx3B,OAAOmc,mBAClBg8E,OAAOj5E,YAEZ0oD,GAAG,MAAO,WACT,IAAMjxC,MAAQ28D,WAAW38D,MACnBC,OAAS08D,WAAW18D,OACpB9iB,EAAIxT,KAAKC,IAAIo2B,MAAQyjD,QAAQzjD,MAAOr2B,KAAKG,IAAI25E,QAAQtmE,EAAG,IACxD7O,EAAI3E,KAAKC,IAAIq2B,OAASwjD,QAAQxjD,OAAQt2B,KAAKG,IAAI25E,QAAQn1E,EAAG,IAC1DqqD,GAAKrqD,EAAIm1E,QAAQxjD,OACjBy4B,GAAKv7C,EAAIsmE,QAAQzjD,MAEvB,GAAI7iB,GAAK,GAAKu7C,IAAM14B,OAAS1xB,GAAK,GAAKqqD,IAAM14B,OAAQ,CACjD,IAAM1X,QAAUwyE,mBAAoBl6D,QAAQk8D,iBACxCpB,UACIx+E,IACA7O,KAEJstF,QACIz+E,EAAGu7C,GACHpqD,EAAGqqD,IAEP4jC,MAAM,GACP17D,QAAQx3B,OAAOmc,mBAClB+C,QAAQ00E,SAAU,EAClBuE,OAAOj5E,cD2CSg5E,CAAiBzI,SAAjByI,CAA2BlW,6BAActiF,OAAQ,SAAUmsF,cAE9DnhF,MAAM+iD,WACNprB,KAAK,SAAU0gD,OACZ,IAAId,QAAUD,6BAActiF,MAE5B,IAAK,IAAMxG,OADXk1D,aAAe6zB,QAAUA,QAAQ7zB,aAAa0wB,SAAS1wB,WAAW0wB,WAChDiE,WACPrpF,eAAe5B,KAAKirF,MAAO7pF,MAC9BsyE,aAAauX,MAAM7pF,OAAS+oF,QAAQh0B,KAAK/0D,IAAK6pF,MAAM7pF,QAK1Ek/F,aAAe/xB,sBAAsB0vB,QAAQH,aAAcl2F,KAAKw/E,IAAK2W,aAI3E,OAHA7L,aAAa7S,QAAQihB,aAAa5zF,KAAK,MAAM,GAC7CwlF,aAAa7S,QAAQ4e,QAAQh6D,WAAW,GAEjCr8B,uCAGL4zF,YACFmC,wBAAiB/1F,KAAM4zF,WAAWoC,iBAAiB,qCAGjDpC,YACFmC,wBAAiB/1F,KAAM4zF,WAAWoC,iBAAiB,2DA9GnD,OACIE,aAAc,sBACd75D,UAAW,GACX85D,YZ1Be,OY2BfG,KACIJ,aAAc,gBACd75D,UAAW,IAEfqyB,YACI0wB,SAAU,sDAMlB,MAAO,mCE7BFuZ,eACT96D,SAAU,WACV5G,MAAO,EACPC,OAAQ,GCVC1Y,8BACT23E,YDHuB,OCIvBD,aAAc,cACd0C,mBAAoB,qBACpBv8D,UAAW,GACX7hB,KACIq+E,OAAQ,GAEZC,SACInrC,QAAS,EACTorC,kBAAmB,GACnBC,UAAW,EACXC,UAAW,SACXC,UAAW,UACXC,UAAW,MACXN,OAAQ,GACRO,UAAW,IACX/8D,UAAW,4BACXg9D,gBAAiB,oCAErBC,OACIxjE,KAAM,GACNyjE,UAAU,EACVrD,aAAc,gBACd75D,UAAW,GACXsT,MAAO,2BCxBF6pD,mBAAc,SAAdA,YAAepsC,OAAQqsC,IAAKC,YAAazqF,QAClD,IAAI0qF,SACIvlF,EAA8BslF,YAA9BtlF,EAAG7O,EAA2Bm0F,YAA3Bn0F,EAAGq0F,UAAwBF,YAAxBE,UAAWC,SAAaH,YAAbG,SAEnBC,WADgB7qF,OAAOqqF,MAAMC,SACA,EAAItqF,OAAOqqF,MAAMxjE,KAEpD,GFLsB,SEKlBs3B,QFRmB,UEQMA,OAAwB,CACjD,IAAIzvD,MAAQ,EACRoO,KAAO6tF,UAAY,EACjBG,WAAaN,IAAIl0F,EAAIk0F,IAAIviE,OACzB8iE,UAAYz0F,EAAIq0F,UAElBH,IAAIl0F,EAAIA,GACR5H,MAAQ87F,IAAIl0F,EAAIA,EAChBwG,MAAQguF,YAAcC,UAAaA,UAAYP,IAAIl0F,EAAKk0F,IAAIviE,QAAU,GAC/D8iE,UAAYD,aACnBhuF,KAAOnL,KAAKuL,IAAI5G,GAAKk0F,IAAIl0F,EAAIk0F,IAAIviE,SAAW,GAEhDyiE,SAAWh8F,MAAQoO,KAAO+tF,WAAa,MACpC,CACH,IAAIn8F,OAAQ,EACRoO,MAAO8tF,SAAW,EAChBI,UAAYR,IAAIrlF,EAAIqlF,IAAIxiE,MACxBijE,SAAW9lF,EAAIylF,SAEjBJ,IAAIrlF,EAAIA,GACRzW,OAAQ87F,IAAIrlF,EAAIA,EAChBrI,OAAQkuF,WAAaC,SAAYA,SAAWT,IAAIrlF,EAAKqlF,IAAIxiE,OAAS,GAC3DijE,SAAWD,YAClBluF,MAAOnL,KAAKuL,IAAIiI,GAAKqlF,IAAIrlF,EAAIqlF,IAAIxiE,QAAU,GAE/C0iE,SAAWh8F,OAAQoO,MAAO+tF,WAAa,EAE3C,OAAOH,UAUEQ,kBAAa,SAAbA,WAAcriE,QAAS+F,SAAU87D,UAC1C,IAAMS,aAAetiE,QAAQuiE,cACvBC,kBAAoBxiE,QAAQyiE,mBAC5BtrF,OAAS6oB,QAAQ4yD,QACjByL,YAAclnF,OAAOknF,YACrBqE,UAAYvrF,OAAOqqF,MACnBj9D,UAAYsqC,sBAAsB6zB,UAAUtE,aAAcp+D,QAAQ0nD,IAAKvwE,OAAOknF,aAEpFiE,aAAajlE,MAAM,UAAW,SAC9BilE,aAAa7rC,KAAK,QAAlB,GAAAtiD,OAA8BowB,UAAUv3B,KAAK,OFlDrB,SEmDpB+4B,UFlDqB,UEkDQA,UAC7Bu8D,aAAajlE,MAAM,MAAnB,GAAAlpB,OAA6B0tF,SAA7B,OACAS,aAAajlE,MAAM,OAAQ,IAC3BmlE,kBAAkBnlE,MAAM,MAAxB,GAAAlpB,OAAkC0tF,SAAlC,OACAW,kBAAkBnlE,MAAM,OAAQ,MFrDV,WEuDtB0I,SAA8Bu8D,aAAajlE,MAAM,MAAO,QAAUilE,aAAajlE,MAAM,MAAnB,IAAAlpB,OAC1DuuF,UAAU1kE,KADgD,OAElEskE,aAAajlE,MAAM,OAAnB,GAAAlpB,OAA8B0tF,SAA9B,OFzDsB,WE0DtB97D,SAA8By8D,kBAAkBnlE,MAAM,MAAO,QAAUmlE,kBAAkBnlE,MAAM,MAAxB,IAAAlpB,OAC/DuuF,UAAU1kE,KAAO,EAD8C,OAEvEwkE,kBAAkBnlE,MAAM,OAAxB,GAAAlpB,OAAmC0tF,SAAnC,QAEJS,aAAa3iB,QAAb,GAAAxrE,OAAwBkqF,YAAxB,mBAAqD,GACrDiE,aAAa3iB,QAAb,GAAAxrE,OAAwBkqF,YAAxB,mBAAAlqF,OAAqD6rB,QAAQ2iE,oBAAqB,GAClFL,aAAa3iB,QAAb,GAAAxrE,OAAwBkqF,YAAxB,mBAAAlqF,OAAqD4xB,WAAY,GACjEy8D,kBAAkB7iB,QAAlB,GAAAxrE,OAA6BkqF,YAA7B,8BAAqE,GACrEmE,kBAAkB7iB,QAAlB,GAAAxrE,OAA6BkqF,YAA7B,8BAAAlqF,OAAqE6rB,QAAQ2iE,oBAAqB,GAClGH,kBAAkB7iB,QAAlB,GAAAxrE,OAA6BkqF,YAA7B,8BAAAlqF,OAAqE4xB,WAAY,y3CClErF,IAAM68D,aACFt8C,YAAa,yBACbG,OAAQ,sBACRE,OAAQ,mBACRC,KAAM,mBACN35C,IAAK,gBACLK,MAAO,QACPK,KAAM,MAEJk1F,gBACD,cAAe,SAAU,SAAU,OAAQ,MAAO,QAAS,SAC3D,EAAG,IAAM,IAAO,KAAS,MAAU,OAAY,UAO9CC,oBAAa,SAAbA,WAAaz2F,WAAS,IAAAlE,KAAA,OAAA46F,wBAAA56F,QACvB3B,gCAAiBE,SAAW,SAACtF,MAAO2jD,UACjC,IAAMi+C,gBAPa,SAArBC,mBAAsBl+C,UACxB,IAAM74C,MAAQihC,+BAAkB01D,cAAc,GAAI99C,UAClD,OAAO89C,cAAc,GAAG32F,OAKI+2F,CAAmBl+C,UAC3C,OAAO76C,iCAAkB6F,SAAS3O,MAAOwhG,YAAYI,oBAHjCD,wBAAA56F,KAKvBvB,8BAAeq0F,WAAa,SAAA75F,OAAK,OAAIiL,UAAUjL,MAAQA,MAAM0hD,QAAQ,GAAK1hD,SALnD2hG,wBAAA56F,KAMvB3B,gCAAiBC,YAAc,SAAArF,OAAK,OAAIA,QANjB+G,MAStB+6F,sCAA+B,SAA/BA,+BAA+B,OAAAl0F,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAAa8zF,sBAAat8F,gCAAiBC,cAmBnE08F,0BAAmB,SAAnBA,iBAAoB3+E,WAAoC,IAAzBrN,OAAyBnI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAAZgxB,QAAYhxB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAC7D0nE,eACE7+E,QAAUC,UAAU/b,UACpBD,KAAO+b,QAAQ/b,KACfqB,OAAS0a,QAAQ1a,OACjBy3F,UAAYnqF,OAAOmqF,UACnB58E,aAAeF,UAAUG,kBACzB0+E,WAAa7+E,UAAUtM,gBACvBorF,oBAAsBtjE,QAAQsjE,oBAC9BlJ,KAAOp6D,QAAQo6D,KACfmJ,aAAevjE,QAAQujE,iBACvBt1E,WAAapkB,OAAO0c,OAAO,SAAA9lB,GAAC,OAAIA,EAAEwC,OAAS6D,yBAAUE,YACrDknB,SAAWrkB,OAAO0c,OAAO,SAAA9lB,GAAC,OAAIA,EAAEwC,OAAS6D,yBAAUC,UAEnDy8F,oBAAsB35F,OAAOimB,KAAK,SAAArvB,GAAC,OAAsC,IAAlC8iG,aAAa1zF,QAAQpP,EAAEC,QAC9D+iG,UAAYzjE,QAAQyjE,UACpBC,QAAUl7F,KAAKhB,OACfm8F,cAAgB,SAAhBA,cAAiB1uF,MAAOhS,MAC1B,IAAI7B,MACAwiG,eACAC,aACEh/E,UACA3Y,MAAQwY,aAAazP,OAAO/I,MAC5B64C,SAAWrgC,aAAazP,OAAO8P,IAAI/E,UAAYxZ,gCAAiBE,SAC9D+8F,UAAUxuF,OAAS,EACrB6uF,YAAcZ,sCAA6BJ,oBAAW,SAAAx6F,KAAG,OAAIA,MAAKrF,OAExE,GAAc,OAAV7B,MAAgB,CAChB,IAAI4S,WAAa/Q,OAAS2D,8BAAeq0F,WAAazyF,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,SAArD63F,2BACT,IAAIl7F,IAAIL,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,WAChC8H,WAAaA,WAAWuS,OAAO,SAAA9lB,GAAC,MAAU,KAANA,IACpC,IAAMujG,UAAY5J,KAAKviD,MAAM,GACvBosD,UAAY7J,KAAK8J,MAAM,GACvBC,SAAW/J,KAAKp8D,KAAK,GACrBomE,gBAAkBJ,WAAaC,WAAaE,WAAaT,QAAU,GACjEzgG,OAAS2D,8BAAeq0F,WAEhCjnF,WAAWtM,QAAQ,SAACY,IAAKnI,GACrB,IAAIuB,IACE2iG,mBAAqBf,oBAAoBruF,OAE/C,GAAIovF,oBAAsBA,mBAAmB78F,QAAUk8F,QAAU,EAAG,CAChEhiG,IAAM4G,IACN,IAAIg8F,MACAljG,MAAO,IAWX,GARIgjG,iBACAE,MACIrhG,KAAM,OACN40C,MAAOmsD,UAAUO,SAASj8F,KAC1B47F,MAAOD,UAAUO,SAASl8F,KAC1B01B,KAAMmmE,SAASM,QAAQn8F,KAAO6O,OAAO+pF,YAGzCmD,mBAAmB78F,OAAS,EAC5Bqd,OAAOnb,MAAM46F,KAAD,GAAAnwF,OAAUzS,OACtB2iG,mBAAmB38F,QAAQ,SAACg9F,SACxBb,aAAen/E,aAAaggF,SAASx4F,MACrC9K,MAAQoH,KAAKrI,GAAG0jG,cAChB,IAAMxkF,aAAegkF,WAAWnxF,OAAO2xF,cAAcxkF,eAC/CslF,iBAAmBzB,sCACrBJ,oBAAWzjF,cAAczY,8BAAeq0F,aAC5C2I,eAAiBe,iBAAiBvjG,MAAO2jD,UACzClgC,OAAOnb,OACHtI,MAAK,GAAA+S,OAAKuwF,SAALvwF,OAAemtF,WACpBjkE,OACIunE,cAAA,GAAAzwF,OAAkBgD,OAAO4pF,OAAzB,QAEJx8D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,kBAETj9F,MAAK,GAAA+S,OAAKyvF,gBACVr/D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,2BAGd,CACHwF,aAAen/E,aAAa2/E,mBAAmB,IAAIn4F,MACnD9K,MAAQoH,KAAKrI,GAAG0jG,cAChB,IAAMxkF,aAAegkF,WAAWnxF,OAAO2xF,cAAcxkF,eAC/CslF,iBAAmBzB,sCACrBJ,oBAAWzjF,cAAczY,8BAAeq0F,aAC5C2I,eAAiBe,iBAAiBvjG,MAAO2jD,UACzClgC,OAAOnb,MAAM46F,MACTljG,MAAK,GAAA+S,OAAKzS,KAALyS,OAAWmtF,WAChB/8D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,kBAETj9F,MAAK,GAAA+S,OAAKyvF,gBACVr/D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,2BAIjB38F,IAAMuT,MAEN2uF,eAAiBE,YADjB1iG,MAAQkH,IAC4By8C,UACpClgC,OAAOnb,OACHtI,MAAK,GAAA+S,OAAKzS,KAALyS,OAAWmtF,WAChB/8D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,kBAETj9F,MAAK,GAAA+S,OAAKyvF,gBACVr/D,UAAS,GAAApwB,OAAKgD,OAAOknF,YAAZ,uBAKzB,OAAOx5E,QAEPggF,cAAgB,WAEpB,GAAInB,QAAU,GAAKF,oBACfJ,YA9He,SAAjB0B,eAAkBt8F,KAAMqB,OAAQw5F,WAAYI,WAC9C,IAAMthF,QAaN,OAZAA,KAAKzY,KAAKG,OAAO2H,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,QAC5B8H,KAAKd,QAAQ,SAACjH,GACV,IAAMiiB,OACN7Y,OAAOnC,QAAQ,SAACq9F,SAAU5kG,GACtB,IAAM4kD,SAAWggD,SAAS/kF,UAAYxZ,gCAAiBE,SAAW+8F,UAAUsB,SAASrkG,MAAQ,EACvF2e,aAAe0lF,SAAS9hG,OAAS6D,yBAAUC,SAAWs8F,WAAWnxF,OAAO/R,GAAGkf,eAE3Eje,MADc8hG,sCAA6BJ,oBAAWzjF,cAAc0lF,SAAS/kF,SACrE8jF,CAAYrjG,EAAEN,GAAI4kD,UAChCriC,IAAIhZ,KAAKtI,SAEb+gB,KAAKzY,KAAKgZ,OAEPP,KAgHW2iF,CAAet8F,KAAMqB,OAAQw5F,WAAYI,WACvDoB,cAAgB,YACb,CACH52E,WAAWvmB,QAAQ,SAAC2L,MAChB,IAAMpQ,KAAOoQ,KAAK2M,QAAU3M,KAAK2M,QAAU3M,KAAKpQ,KAChDmgG,eAAWjvF,OAAA4vF,2BAAOX,aAAPW,2BAAuBJ,cAActwF,KAAK3S,KAAMuC,UAG/D,IAAM+hG,YAAcjB,2BAAAkB,WAAQp8F,IAAXk7F,2BAAkBljG,OAAOgkB,OAAOy+E,yBACxBI,QAAU,EAAIx1E,SAAS3H,OAAO,SAAA9lB,GAAC,OAAqC,IAAjCukG,YAAYn1F,QAAQpP,EAAEC,QAC5EwtB,UAEWxmB,QAAQ,SAAC2L,MACtB,IAAMpQ,KAAOoQ,KAAK2M,QAAU3M,KAAK2M,QAAU3M,KAAKpQ,KAChDmgG,eAAWjvF,OAAA4vF,2BAAOX,aAAPW,2BAAuBJ,cAActwF,KAAK3S,KAAMuC,UAInE,OACI+9F,QAASoC,YACTyB,8BAQKK,mBACTz5D,SAAU,SAAAA,SAACjjC,KAAM2O,OAAQ6oB,SAErB,OADemjE,0BAAiB36F,KAAM2O,OAAQ6oB,WAKzCmlE,iBAAmB,0SCvLXC,2BAIjB,SAAAA,gKAAeC,CAAAn9F,KAAAk9F,SACXl9F,KAAKo9F,OAAS,KACdp9F,KAAKq1F,UAAY4H,iBACjBj9F,KAAKq9F,WAAa,KAClBr9F,KAAK0qF,QAAU1qF,KAAK4W,YAAY4H,iSAahC,OAAI1X,UAAExH,OAAS,GACXU,KAAK0qF,QAAU5gB,eAAe9pE,KAAK0qF,QAAN5jF,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACtB9G,MAEJA,KAAK0qF,8CAORv/E,MAIJ,OAHAnL,KAAKo9F,OAASjyF,KAAK0Q,MACnB7b,KAAKq1F,eAA8B7hE,IAAlBroB,KAAK6xF,SAAyB7xF,KAAK6xF,SAAWC,iBAC/Dj9F,KAAKq9F,WAAalyF,KAAKhH,UAChBnE,6CAGFs9F,KAEL,OADAt9F,KAAK63B,SAAWylE,IACTt9F,2CAGHkvB,OACJ,IAAI5uB,KACE2O,OAASjP,KAAK0qF,QACdqO,kBAAoB9pF,OAAO8pF,kBAC3B50F,UAAYnE,KAAKq9F,WACjBlE,UAAYlqF,OAAOkqF,UACnBt9E,MAAQ7b,KAAKo9F,OAUnB,GARAp9F,KAAKu9F,OAASruE,OAEV5uB,KADAub,iBAAiB5R,MACV4R,MAEA1X,qBAAqB2F,SAAW3F,UAAUnE,KAAKo9F,OAAQp9F,KAAK63B,UAC/DmlE,kBAASh9F,KAAKq1F,WAAWr1F,KAAKo9F,OAAQp9F,KAAKiP,SAAUjP,KAAK63B,qBAG9C/tB,SAChBolB,MAAM6oD,KAAKz3E,YACR,CACH,IAAIw4F,QAAUx4F,KACVq8F,cAAgB,UAEhBhyE,eAAerqB,QACfw4F,QAAUx4F,KAAKw4F,QACf6D,cAAgBr8F,KAAKq8F,eAGzB,IAAM19D,KAAOujD,YAAYtzD,MAAO,OAAQytE,eAAhB,GAAA1wF,OAAmCgD,OAAOknF,YAA1C,uBACpB,SAAA59F,GAAC,OAAIA,IAET,GAAsB,UAAlBokG,cAA2B,CAC3B,IAAMa,MAAQhb,YAAYvjD,KAAM,SAAU,GAAjB,GAAAhzB,OAAwBgD,OAAOknF,YAA/B,mBACnBsH,MAAQjb,YAAYgb,MAAO,SAAU,GAAlB,GAAAvxF,OAAyBgD,OAAOknF,YAAhC,yBACnBl8E,KAAOuoE,YAAYib,MAAO,KAAM3E,QAAd,GAAA7sF,OAA0BgD,OAAOknF,YAAjC,uBACxBl8E,KAAK0oB,KAAK,SAAUpqC,EAAGN,GACnBqqF,6BAActiF,MAAMy3E,QAApB,GAAAxrE,OAA+BgD,OAAOknF,YAAtC,uBAAAlqF,OAAuEhU,IAAK,KAElEuqF,YAAYvoE,KAAM,KAAM,SAAA1hB,GAAC,OAAIA,GAAlB,GAAA0T,OAAwBgD,OAAOknF,YAA/B,wBACnBxzD,KAAK,SAAUpqC,GACjB+pF,6BAActiF,MAAM+3E,KAAKx/E,SAE1B,CACH,IAAM0hB,MAAOuoE,YAAYvjD,KAAM,MAAO65D,QAAd,GAAA7sF,OAA0BgD,OAAOknF,YAAjC,iBAClBv5B,OAAQ4lB,YAAYvoE,MAAM,OAAQ,SAAA1hB,GAAC,OAAIA,GAApB,GAAA0T,OAA0BgD,OAAOknF,YAAjC,qBACzBv5B,OAAMrO,KAAK,QAAX,GAAAtiD,OAAuBgD,OAAOknF,YAA9B,qBACA5S,yBAAUtpE,OACN4+E,OAAQM,YAEZ5V,yBAAU3mB,QACNl8B,QAAS,eACTg9D,eAAA,GAAAzxF,OAAmBgD,OAAO0+C,QAA1B,QAGJiP,OAAMj6B,KAAK,SAAUpqC,GACjB,IAAMolG,GAAKrb,6BAActiF,MAEzB,GADA29F,GAAG5lB,KAAK,IACJx/E,aAAaI,OACb,GAAe,SAAXJ,EAAEwC,KAAiB,CACnB,IAAM+kC,IAAM0iD,YAAYmb,GAAI,OAAQ,IAC9B3vC,KAAOw0B,YAAY1iD,IAAK,QAAS,IACjCk8D,MAAQzjG,EAAEyjG,iBAAiBlyF,SAAWvR,EAAEyjG,MAAQjwB,uBAAUxzE,EAAEyjG,OAElE1Y,wBAASxjD,KACL1rB,EAAG,EACH7O,EAAG,EACH0xB,MAAO8hE,kBACP7hE,OAAQ6hE,oBAEZzV,wBAASt1B,MACLz1D,EAAGyjG,MAAMlmE,KAAKv9B,EAAEu9B,KAAbkmE,GACH7kD,UAAS,aAAAlrC,OAAe8sF,kBAAoB,EAAnC,MAAA9sF,OAAyC8sF,kBAAoB,EAA7D,OAEbxV,yBAAUv1B,MACNnU,KAAMthD,EAAEo3C,QAEZ4zC,yBAAUzjD,KACN7I,MAAK,GAAAhrB,OAAK8sF,kBAAL,MACL7hE,OAAM,GAAAjrB,OAAK8sF,kBAAL,aAGV4E,GAAG5lB,KAAKx/E,EAAEW,OACVX,EAAE8jC,WAAashE,GAAGlmB,QAAQl/E,EAAE8jC,WAAW,GACvCknD,yBAAUoa,GAAIplG,EAAE48B,YAGpBwoE,GAAG5lB,KAAKx/E,MAKxB,OAAOyH,2CAKP,OADAA,KAAKo9F,OAAS,KACPp9F,6DA5HP,IAAMiP,OAASuP,6BAAcs6E,QAE7B,OADA7pF,OAAOknF,YAAc33E,6BAAc23E,YAC5BlnF,qTCZM2uF,2BAMjB,SAAAA,QAAaC,cAAevJ,oKAAcwJ,CAAA99F,KAAA49F,SACtC,IAAIG,mBAAqBzJ,aACzBt0F,KAAKw/E,IAAM/zE,cACXzL,KAAK0qF,WACL1qF,KAAKiP,WACL,IAAM+uF,YAAch+F,KAAK0qF,QACnByL,YAAc6H,YAAY7H,YAC1B8H,aAAeD,YAAYlF,QAAQO,gBACnCllE,UAAYquD,YAAYqb,cAAe,OAAQ,GAAxB,GAAA5xF,OAA+BkqF,YAA/B,uBAC7Bn2F,KAAKq2B,WAAalC,UAClBn0B,KAAKk+F,kBAAoB/pE,UAAU/D,OAAO,OAAO+E,MAAM,WAAY,YACnEn1B,KAAKm+F,kBAAoBn+F,KAAKk+F,kBAAkB9tE,OAAO,OAAOm+B,KAAK,QAA1C,GAAAtiD,OAAsDkqF,YAAtD,KAAAlqF,OAAqEgyF,eAC9Fj+F,KAAKu6F,mBAAqBv6F,KAAKk+F,kBAAkB9tE,OAAO,OAAO+E,MAAM,WAAY,YACjFn1B,KAAKq6F,cAAgBr6F,KAAKk+F,kBAAkB9tE,OAAO,OAE9CkkE,eACDyJ,mBAAqBF,cAAcztE,OAAO,OAAO+E,MAAM,iBAAkB,SAE7En1B,KAAKo+F,aACLp+F,KAAKq+F,2BAA6B/b,6BAAcyb,oBAC3C3tE,OAAO,KACPm+B,KAAK,QAFwB,GAAAtiD,OAEZ+xF,YAAY7H,YAFA,KAAAlqF,OAEe+xF,YAAYpF,qBAC7D,IAAM1kE,GAAKl0B,KAAKw/E,IACV0W,aAAe8H,YAAY9H,aAC3BoI,mBAAqB33B,sBAAsBuvB,aAAchiE,GAAI8pE,YAAY7H,aAE/E5S,yBAAUvjF,KAAKq6F,cAAe1B,eAC9BpV,yBAAUvjF,KAAKu6F,mBAAoB5B,eACnC34F,KAAKu+F,SAASD,mBAAmBx5F,KAAK,MACtC9E,KAAKu+F,SAASP,YAAY3hE,WAC1Br8B,KAAK22F,wRASL,GAAI7vF,UAAOxH,OAAS,EAAG,CACnB,IAAMk/F,QAAU10B,kBAAmB9pE,KAAK4W,YAAY4H,iBAEpD,OADAxe,KAAK0qF,QAAU5gB,eAAe00B,QAAD13F,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACtB9G,KAEX,OAAOA,KAAK0qF,kDAeNruD,WAEN,OADAr8B,KAAKk+F,kBAAkBzmB,QAAQp7C,WAAW,GACnCr8B,+CAIP,OAAI8G,UAAIxH,QACJU,KAAK63B,SAAL/wB,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK63B,iDAGPr/B,KAAM8H,MAA0B,IAApBm+F,cAAoB33F,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC/BmI,OAASjP,KAAKiP,SACZknF,YAAgBlnF,OAAhBknF,YACF8H,aAAehvF,OAAO6pF,QAAQz8D,UAC9Bl4B,UAAY8K,OAAO9K,UACnBk4B,UAAYoiE,cAAcpiE,WAAd,GAAApwB,OAA8BkqF,YAA9B,KAAAlqF,OAA6CgyF,aAA7C,KAAAhyF,OAA6DzT,MACzEsgG,QAAU94F,KAAKo+F,UAAU5lG,MAAQwH,KAAKo+F,UAAU5lG,OAAS,IAAI0kG,gBAC7D/oE,UAAYquD,YAAYxiF,KAAKm+F,kBAAmB,OAAQM,cAAct6E,OAAQkY,WACpFlI,UAAUo6B,KAAK,QAAf,GAAAtiD,OAA2BkqF,YAA3B,KAAAlqF,OAA0CgyF,aAA1C,KAAAhyF,OAA0DowB,YH5BjC,SAApBqiE,kBAAqBtpE,gBAAiBiH,WAC/CjH,gBAAgB64B,UAAU5xB,WAAW7qB,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,IG4BpDu5F,CAAkB1+F,KAAKm+F,kBAAN,IAAAlyF,OAA6BkqF,YAA7B,KAAAlqF,OAA4CgyF,eAC7D,IAAMU,YAAc1vF,OAAO6pF,QAoB3B,OAnBA2F,cAActI,YAAcn2F,KAAK0qF,QAAQyL,YACzC2C,QAAQ7pF,OAAO0vF,aAEF,OAATr+F,MACAw4F,QAAQj2D,QACR1O,UAAUyO,gBACH5iC,KAAKo+F,UAAU5lG,QAEtBsgG,QAAQhoE,QACJjV,MAAOvb,KACP6D,UAAWs6F,cAAct6F,WAAaA,YAE1C20F,QAAQhhE,QAAQ93B,KAAK63B,UACrBihE,QAAQ8F,OAAOzqE,YAGdx7B,OAAO6O,KAAKxH,KAAKo+F,WAAW9+F,QAC7BU,KAAK22F,OAEF32F,uDAIP,OAAOrH,OAAOgkB,OAAO3c,KAAKo+F,qDASpBhqF,EAAG7O,GAAc,IAAX2a,KAAWpZ,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACvB,IAAKnO,OAAO6O,KAAKxH,KAAKo+F,WAAW9+F,OAE7B,OADAU,KAAK22F,OACE32F,KAEXA,KAAKu4F,OACL,IAAM1/C,OAAS74C,KAAK6+F,QACdC,gBAAkB5+E,KAAK4+E,gBAE7B,GAAIjmD,QAAUimD,gBAAiB,CAC3B,IAAM9yE,KAAOhsB,KAAKk+F,kBAAkBlyE,OAC9B/c,OAASjP,KAAK0qF,QACdqU,cAAgB9vF,OAAOqqF,MAAMC,SAC7BO,WAAaiF,cAAgB,EAAI9vF,OAAOqqF,MAAMxjE,KAC9CkpE,YAAch/F,KAAKy6F,kBACnBwE,YLxJQ,SKwJMD,aL3JL,UK2JmCA,YAC7Cz5F,EAAIymB,KAAKgJ,aAAe8kE,WAAcjhD,OAAOtzC,GAAKA,EAAKszC,OAAOtzC,EAAIszC,OAAO3hB,OACzE9iB,EAAI4X,KAAKiJ,YAAc6kE,WAAcjhD,OAAOzkC,GAAKA,EAAKykC,OAAOzkC,EAAIykC,OAAO5hB,MAE7E,IAAK8nE,cACD,GAAIE,YAAa,CACb,IAAIjxC,KACJhuD,KAAKq6F,cAAcllE,MAAM,UAAW,QACpCn1B,KAAKu6F,mBAAmBplE,MAAM,UAAW,QACzCn1B,KAAKq+F,2BAA2BlpE,MAAM,UAAW,SACjD,IAAM+pE,UAAYl/F,KAAKq+F,2BAA2BpwC,UAAU,QAAQ3tD,MAAM,IACpEguD,MAAQ4wC,UAAU5wC,QAAQl+B,OAAO,QLnKjC,SKoKF4uE,YACAhxC,KAAO,KAAA/hD,OAAKmI,EAAL,KAAAnI,OAAU1G,EAAIymB,KAAKgJ,aAAe,EAAlC,OAAA/oB,OAAyC4sC,OAAOzkC,EAAIykC,OAAO5hB,OAA3D,IAAAhrB,OACG4sC,OAAOtzC,EAAIszC,OAAO3hB,OAAS,GLzKlC,UK0KI8nE,YACPhxC,KAAO,KAAA/hD,OAAKmI,EAAI4X,KAAKiJ,YAAd,KAAAhpB,OAA6B1G,EAAIymB,KAAKgJ,aAAe,GAArD,MAAA/oB,OACS4sC,OAAOzkC,EADhB,KAAAnI,OACqB4sC,OAAOtzC,EAAIszC,OAAO3hB,OAAS,GL1KnD,WK2KG8nE,cACPhxC,KAAO,KAAA/hD,OAAKmI,EAAI4X,KAAKiJ,YAAc,EAA5B,KAAAhpB,OAAiC1G,EAAIymB,KAAKgJ,cAA1C,MAAA/oB,OACK4sC,OAAOzkC,EAAIykC,OAAO5hB,MAAQ,EAD/B,KAAAhrB,OACoC4sC,OAAOtzC,IAEtD+oD,MAAMtjD,MAAMk0F,WAAW3wC,KAAK,IAAKP,MAAM74B,MAAM,UAAW,aACrD,CACH,IAAMwkE,SAAWH,mBAAYwF,YAAanmD,QACtCzkC,IACA7O,IACAq0F,UAAW5tE,KAAKgJ,aAChB6kE,SAAU7tE,KAAKiJ,aAChBj1B,KAAK0qF,SAERyP,kBAAWn6F,KAAMA,KAAKy6F,kBAAmBd,UACzC35F,KAAKq+F,2BAA2BlpE,MAAM,UAAW,SAK7D,IAAM+oB,OAASl+C,KAAKm/F,UAChB/qF,EAAG,EACH7O,EAAG,GAKP,OAHAvF,KAAKk+F,kBAAkB/oE,MAAM,OAA7B,GAAAlpB,OAAwCiyC,OAAO9pC,EAAIA,EAAnD,OAA0D+gB,MAAM,MAAhE,GAAAlpB,OACOiyC,OAAO34C,EAAIA,EADlB,OAGOvF,mEAQSy5F,KAAuB,IACnClwF,IADmC9H,MAAAzB,KAAlBg+F,YAAkBl3F,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAEnCs4F,YAAcpB,YAAYoB,YAE9B,GADAp/F,KAAKu4F,QACAkB,IAED,OADAz5F,KAAK22F,OACE32F,KAGX,IAAMohE,OAASphE,KAAKq/F,QACdrzE,KAAOhsB,KAAKk+F,kBAAkBlyE,OAEpChsB,KAAKk+F,kBAAkB/oE,MAAM,MAAO,OACnBA,MAAM,OAAQ,OAC/B,IAAMF,YAAcjJ,KAAKiJ,YAAc,EACjCD,aAAehJ,KAAKgJ,aAAe,EACnC/lB,OAASjP,KAAK0qF,QACdxsC,OAASl+C,KAAKm/F,QACdJ,cAAgB9vF,OAAOqqF,MAAMC,SAC7B+F,UAAYP,cAAgB,EAAI9vF,OAAOqqF,MAAMxjE,KAC7C0/B,UAA4BhiC,IAArBwqE,YAAYxoC,MAAqBwoC,YAAYxoC,KACpD+pC,SAAW9F,IAAIl0F,EAEfi6F,KAAO/F,IAAIrlF,EAAIqlF,IAAIxiE,MAAQinB,OAAO9pC,EAClCqrF,WAAar+B,OAAOnqC,MAAQuoE,KAC5BE,UAAYjG,IAAIrlF,EAAI8pC,OAAO9pC,EAAIgtD,OAAOhtD,EACtCurF,YAAcJ,SAAYvqE,aAAesqE,UACzCM,cAAgBH,YAAcxqE,YAAcqqE,UAC5CO,aAAeH,WAAazqE,YAAcqqE,UAwGhD,OA/BAt/F,KAAK6+F,QAAUpF,IACV2F,cAEGA,YADAO,YACc,WACPC,eAAiBC,aACV,aAEA,YAIF,eAAhBT,YACA71F,IAnFuB,SAArBu2F,qBACF,IAAIjiE,SACAzpB,EAAIqlF,IAAIrlF,EAAIqlF,IAAIxiE,MAChB1xB,EAAIk0F,IAAIl0F,EAwBZ,OAtBIq6F,eACA/hE,SL/OY,OKgPZzpB,GAAKkrF,WACEO,cACPzrF,EAAIqlF,IAAIrlF,EAAI6gB,YACZ4I,SLlPa,QKmPbzpB,GAAKkrF,YAELzhE,SAAW,OACXzpB,GAAKkrF,WAEL7F,IAAIviE,OAASlC,eACbzvB,EAAI3E,KAAKG,IAAI,EAAG04F,IAAIl0F,EAAIk0F,IAAIviE,OAAS,EAAIlC,aAAe,KAWxD6I,kBACA87D,SATaH,mBAAY37D,SAAU47D,KACnCrlF,IACA7O,IACAq0F,UAAW5kE,aACX6kE,SAAU5kE,aACXxzB,MAAKipF,SAKJt2E,IACA7O,KAoDEu6F,GACiB,aAAhBV,cACP71F,IAlDqB,SAAnBw2F,mBACF,IAAIliE,SACAt4B,EAEA6O,EAAIqlF,IAAIrlF,EAAI6gB,YAAc,EAAIwkE,IAAIxiE,MAAQ,EAwB9C,OArBKmqC,OAAOnqC,OAASwiE,IAAIrlF,EAAI8pC,OAAO9pC,GAAM6gB,YACtC7gB,EAAIgtD,OAAOnqC,MAAQhC,YAAcipB,OAAO9pC,EAChCA,EAAI8pC,OAAO9pC,EAAKgtD,OAAOhtD,IAC/BA,EAAIgtD,OAAOhtD,GAGXurF,aACAp6F,EAAIk0F,IAAIl0F,EAAIyvB,aAAesqE,UAC3BzhE,SLzRc,WK2Rdt4B,EAAIk0F,IAAIl0F,EAAIk0F,IAAIviE,OAASooE,UACzBzhE,SL3RW,QKsSXA,kBACA87D,SATaH,mBAAY37D,SAAU47D,KACnCrlF,IACA7O,IACAq0F,UAAW5kE,aACX6kE,SAAU5kE,aACXxzB,MAAKipF,SAKJt2E,IACA7O,KAkBEw6F,IAGV//F,KAAKggG,WACD5rF,EAAG7K,IAAI6K,EACP7O,EAAGgE,IAAIhE,GAGXvF,KAAKigG,UAAY12F,IAAIowF,SAChBoF,eAGD/+F,KAAKq6F,cAAcllE,MAAM,UAAW,QACpCn1B,KAAKu6F,mBAAmBplE,MAAM,UAAW,SAHzCglE,kBAAWn6F,KAAMuJ,IAAIs0B,SAAUt0B,IAAIowF,UAKvC35F,KAAKy6F,kBAAoBlxF,IAAIs0B,SAC7B23B,MAAQx1D,KAAK69B,SAASt0B,IAAI6K,EAAG7K,IAAIhE,GAC1BvF,yCAUP,OAFAA,KAAKk+F,kBAAkB/oE,MAAM,UAAW,QACxCn1B,KAAKq+F,2BAA2BlpE,MAAM,UAAW,QAC1Cn1B,yCASP,OADAA,KAAKk+F,kBAAkB/oE,MAAM,UAAW,SACjCn1B,2CAGHohE,SAEJ,OADAphE,KAAKq/F,QAAUj+B,QACRphE,2CAGHk+C,SAEJ,OADAl+C,KAAKm/F,QAAUjhD,QACRl+C,6CAOP,OAHAA,KAAKk+F,kBAAkBt7D,SACvB5iC,KAAKu6F,mBAAmB33D,SACxB5iC,KAAKq+F,2BAA2Bz7D,SACzB5iC,6DA1SP,OAAOwe,shBC5ER,IAAM0hF,uBACTC,kBAAmB,SAAAA,kBAACxsF,IAChB,IAAM0I,QAAU1I,GAAGpT,UACbylB,SAAW3J,QAAQ1a,OAAO0c,OAAO,SAAA9lB,GAAC,OAAIA,EAAEwC,OAAS6D,yBAAUC,UAC3DuhG,gBAAkBzsF,GAAGyM,SAAS,IAAK4F,SAAShT,OAAO,SAACC,IAAK2J,GAE3D,OADA3J,IAAI2J,EAAEpkB,MAAuB,UAAfokB,EAAErb,SAAuB,MAAQqb,EAAErb,SAC1C0R,UAELpG,UAAY8G,GAAG3D,gBAAgBnD,YAC/BwzF,WAAaD,gBAAgB3jF,kBAC/BE,SACAzjB,MAAK,GAAA+S,OAAKoQ,QAAQ/b,KAAKhB,QACvB61B,OACIkJ,cAAe,SAEpB,kBACGiiE,aAAet6E,SAAS1c,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAUzC,OATI8nG,aAAahhG,SACbqd,UAAM1Q,OAAAs0F,6BAAO5jF,SAAW,IAAA1Q,OAAKY,UAAUyzF,aAAa,IAAI/+F,WAAWw5C,cAA3C,MAAA9uC,OAA6Dq0F,aAAa,KAE1FpnG,MAAK,GAAA+S,OAAKm0F,gBAAgB7/F,UAAUD,KAAK,GAAG+/F,WAAWC,aAAa,IAAIt8F,OAAO42C,QAAQ,IACvFzlB,OACIkJ,cAAe,aAIvB1hB,ssDCnBKihF,4DACjB,SAAAA,UAAwB,IAAA4C,iBAAA/+F,yKAAAg/F,CAAAzgG,KAAA49F,SAAA,QAAA75B,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAi/F,kCAAA1gG,MAAAwgG,iBAAAG,uBAAA/C,UAAAxlG,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJ4xF,aACLn/F,MAAK6zF,YAAc4K,sBACnBz+F,MAAK4zF,UAAY,UAJG5zF,yXADSo0F,4UAsB1BxM,aAAc7pE,SAAuB,IAAdrX,QAAcrB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACpC+5F,YAAc,EACdC,WAAa,EACXxkF,UAAY+sE,aAAaN,YAAYltE,MACrCic,QAAU93B,KAAK+vF,SAASj4D,QACxB87D,WAAa5zF,KAAKu2F,iBACxB,GAAKj6E,UAAUykF,WAAkC,OAArBvhF,QAAQ7Q,WAA4D,IAAtC06E,aAAauH,qBAEnE,OADA5wF,KAAK22F,KAAKxuF,QAAS,MACZnI,KAGX,IAAMghG,SAAWhhG,KAAK4gG,UAChB3xF,OAASjP,KAAKiP,SACdgyF,UACFhqE,MAAO28D,WAAW38D,MAClBC,OAAQ08D,WAAW18D,QAEjBw9D,eAAiBl1E,QAAQk1E,eACzB3yF,IAAMkN,OAAO+uB,QACbkjE,cACAC,WrBjDY,eqBiDClyF,OAAO7V,KACpBw9F,UAAY9+D,QAAQk8D,gBACpBhqF,OAAS4sF,UAAU5sF,OAEnBo3F,oBADYp3F,OAAOoK,EAAE,IAAKpK,OAAOoK,EAAE,GAAGrZ,SAAW6D,yBAAUE,WAE3DuiG,WAAa7hF,QAAQqe,SACrByjE,SACAhzC,SACA9pC,KAAOlI,UAAU/b,UAAUikB,KAC7B28E,WACAD,WAAW1/F,KAAXV,MAAAogG,WAAUK,0BAAS/8E,KAAKlb,IAAI,SAAA/Q,GAAC,OAAI+jB,UAAUW,OAAO,SAACyI,UAAWztB,GAAZ,OAAkBA,IAAMM,IACtE4kB,WAAW,QAGf+jF,WAAW1/F,KAAK8a,WAGpB,IAAIu8B,OAASr5B,QAAQq5B,OACjBhmC,gBACJ,GAAIgmC,OAAQ,CACRhmC,aAAegmC,OAAO,OAGtB,IAFA,IAAM2oD,aAAehiF,QAAQgiF,aACvBC,WACGxpG,EAAI,EAAGmU,IAAMyG,aAAavT,OAAQrH,EAAImU,IAAKnU,KACD,IAA3CupG,aAAa75F,QAAQkL,aAAa5a,KAClCwpG,QAAQjgG,KAAKvJ,GAGrB4gD,OAASA,OAAOvvC,IAAI,SAAA/Q,GAAC,OAAIA,EAAE8lB,OAAO,SAACzB,EAAG3kB,GAAJ,OAAkC,IAAxBwpG,QAAQ95F,QAAQ1P,OAQhE,IALA,IAAMypG,eAAiB5pE,QAAQ6pE,6BAA6B9oD,QAAUr5B,QAAQ7Q,UAC1E8oB,SAAS,IAIJx/B,GAAI,EAAGA,GAAIipG,WAAW5hG,OAAQrH,KAAK,CACxC,IAAI2pG,QAAUF,eAAezpG,IAC7B,GAAIkpG,WAAY,CACZ,IAAMp7E,WAAam7E,WAAWjpG,IAAGsI,UAAUoB,OAAO0c,OAAO,SAAA9lB,GAAC,OAAIA,EAAEwC,OAAS6D,yBAAUE,YAC9EwK,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAEhBopG,SADAA,QAAU9pE,QAAQ6pE,6BAA6BT,WAAWjpG,IAAG+nB,QAAQ+F,aAAe0R,SAAS,MACxEmqE,QAAQ,GAGjC,IAAIC,GAAKX,WAAWjpG,IAChBgX,OAAOjF,SACP63F,GAAKA,GAAG7hF,QAAQ/Q,OAAOjF,QACnBmT,WAAW,KAGflO,OAAO6yF,gBACPD,GAAK5yF,OAAO6yF,cAAcD,GAAI5pG,KAGlCq2D,MAAMr2D,KAAK,EAnB6B,IAoBf8pG,gBAA+CnO,WAAhEx+D,gBAAkC4sE,0BAA8BpO,WAA9BoO,0BACpCC,eAAiBF,gBAAgB3oB,wBACjC8oB,aAAetO,WAAWiK,cAAczkB,wBAExC58C,WAAa0lE,aAAajhE,KAAOghE,eAAehhE,KAChDxE,UAAYylE,aAAapkE,IAAMmkE,eAAenkE,IAC9CqkE,YAAcnB,SAAS/oG,IAAK+oG,SAAS/oG,KAAM,IAAImqG,gBAAgBL,gBAC7DnO,WAAWU,cAEnBsC,UAAUp3E,QAAUA,QACpBo3E,UAAU7G,SAAW/vF,KAAK+vF,SAC1B6G,UAAUyE,aAAevjE,QAAQujE,eACjCzE,UAAU2E,UAAYzjE,QAAQuqE,mBAC9BF,YAAYrqE,QAAQ8+D,WACpB,IAAMoG,SAAWkD,sBAAW/3F,QAAQ60F,UAiBpC,GAhBAmF,YAAYrJ,QAAQ3wF,QAAQ60F,UAAYh9F,KAAKq1F,UAAWwM,IACpD19F,UAAW64F,SACX74E,MAAOhc,QAAQgc,QAEFlV,OAAOjP,KAAKiP,UACZmyD,QACGhtD,EAAG,EACH7O,EAAG,EACH0xB,MAAO+qE,0BAA0B/qE,MACjCC,OAAQ8qE,0BAA0B9qE,SAErCgnB,QACG9pC,EAAGooB,YAAcvtB,OAAOivC,OAAO9pC,GAAK,GACpC7O,EAAGk3B,WAAaxtB,OAAOivC,OAAO34C,GAAK,KAGnDmvF,eACAyN,YAAYtkE,SAASwjE,WAAWjtF,EAAIrS,IAAKs/F,WAAW97F,EAAIxD,SACrD,KAAI6/F,QAUJ,CACHO,YAAYxL,OACZ,MAXAwL,YAAYG,oBACRluF,EAAGwtF,QAAQxtF,EACX7O,EAAGq8F,QAAQr8F,EACX0xB,MAAO2qE,QAAQ3qE,OAAS,EACxBC,OAAQ0qE,QAAQ1qE,QAAU,IAE1BkoE,YAAa+B,WACRC,eAAiB,aAAe,gBAAc5tE,IAO3D,GAAI2tE,WAAY,CACZ,IAAMtjE,SAAWskE,YAAYnC,UACvBuC,gBAAkBJ,YAAYjE,kBAAkBlyE,OAAOotD,wBAI7D,GAFAynB,aAAe0B,gBAAgBrrE,OAASn1B,IACxC++F,YAAcyB,gBAAgBtrE,MAAQl1B,IAClCq/F,eAAiBP,YAAcjN,WAAW18D,OAAS4pE,WAAalN,WAAW38D,MAC3E,MAEJqqE,MAAM9/F,MACF4S,EAAGypB,SAASzpB,EACZ7O,EAAGs4B,SAASt4B,EACZ0xB,MAAOsrE,gBAAgBtrE,MACvBC,OAAQqrE,gBAAgBrrE,OACxBm9D,QAAS8N,eAKrB,IAAK,IAAM3oG,OAAOwnG,SACd,IAAK1yC,MAAM90D,KAAM,CACb,IAAM66F,QAAU2M,SAASxnG,KACzB66F,QAAQyE,QAAQt5E,QAAQ4B,OAAQ,MAC3BizE,QAAQmO,cAAcljG,SACvB+0F,QAAQzxD,gBACDo+D,SAASxnG,MAU5B,OANI2nG,cCxLiB,SAAhBsB,cAAiBnB,MAAOlgC,OAAQggC,gBACzC,IAAI77F,EACA2xB,OACA9iB,EACA6iB,MACAh/B,EAEEmU,IAAMk1F,MAAMhiG,OACZojG,kBAAoB,SAApBA,kBAAqBC,SAAUC,UAAWC,UAC5CzuF,EAAIuuF,SAASvuF,EACb6iB,MAAQ0rE,SAAS1rE,MACjB1xB,EAAIo9F,SAASp9F,EACb2xB,OAASyrE,SAASzrE,OAClB,IAAM61B,OAASxnD,EAAI2xB,OACbgK,MAAQ9sB,EAAI6iB,MAEdmqE,gBACIyB,SAAWt9F,EAAKq9F,UAAUr9F,EAAIq9F,UAAU1rE,OAAU61B,OAAS61C,UAAUr9F,KACrEq9F,UAAUr9F,EAAIs9F,SAAWF,SAASp9F,EAAIq9F,UAAU1rE,OAZhD,EAaQ61B,OAbR,IAeG81C,SAAWzuF,EAAKwuF,UAAUxuF,EAAIwuF,UAAU3rE,MAASiK,MAAQ0hE,UAAUxuF,KAC1EwuF,UAAUxuF,EAAIyuF,SAAWF,SAASvuF,EAAIwuF,UAAU3rE,MAhB5C,EAiBIiK,MAjBJ,IAwBZ,IAHAogE,MAAM9vF,KAAK,SAACnX,EAAG8K,GAAJ,OAAWi8F,eAAiB/mG,EAAEkL,EAAIJ,EAAEI,EAAIlL,EAAE+Z,EAAIjP,EAAEiP,IAC3Dnc,EAAI,EAECA,EAAI,EAAGA,EAAImU,IAAM,EAAGnU,IACrByqG,kBAAkBpB,MAAMrpG,GAAIqpG,MAAMrpG,EAAI,IAG1C,GAAKqpG,MAAMrpG,GAAGsN,EAAI+7F,MAAMrpG,GAAGi/B,OAAUkqC,OAAOlqC,QACnCoqE,MAAMrpG,GAAGmc,EAAIktF,MAAMrpG,GAAGg/B,MAASmqC,OAAOnqC,MAM3C,IALImqE,eACAE,MAAMrpG,GAAGsN,GAAM+7F,MAAMrpG,GAAGi/B,OAASoqE,MAAMrpG,GAAGsN,EAAK67D,OAAOlqC,OAEtDoqE,MAAMrpG,GAAGmc,GAAMktF,MAAMrpG,GAAGg/B,MAAQqqE,MAAMrpG,GAAGmc,EAAKgtD,OAAOnqC,MAEpDh/B,EAAImU,IAAM,EAAGnU,EAAI,EAAGA,IACrByqG,kBAAkBpB,MAAMrpG,GAAIqpG,MAAMrpG,EAAI,IAAI,GD+I1CwqG,CAAcnB,MAAOL,SAAUG,gBAC/BE,MAAM9hG,QAAQ,SAAA82F,KAAG,OAAIA,IAAIjC,QAAQx2D,SAASy4D,IAAIliF,EAAGkiF,IAAI/wF,GACjDu5F,iBAAiB,OAGlB9+F,uCAGLmI,SACF,IAAM64F,SAAWhhG,KAAK4gG,UACtB,IAAK,IAAMpnG,OAAOwnG,SACd,MAAOhnG,eAAe5B,KAAK4oG,SAAUxnG,KAAM,CACvC,IAAMwjG,SAAW70F,QAAQ60F,UAAYh9F,KAAKq1F,UAC1C2L,SAASxnG,KAAKs/F,QAAQkE,SAAU,MAChCgE,SAASxnG,KAAKm9F,gEArLtB,OACI34D,QAAS,EACTkgB,QACI9pC,EAAG,EACH7O,EAAG,oDAMX,MAAO,ouDEtBMu9F,otBAAkBjN,6SAa5BxM,aAAc7pE,SAAS,IACtB0X,OACA6rE,UACAppC,GACA1iC,MAJsBx1B,MAAAzB,KAAAgjG,aAStBhjG,KAAKiP,SAHLotB,UANsB2mE,aAMtB3mE,UACA4mE,UAPsBD,aAOtBC,UACAC,UARsBF,aAQtBE,UAEE5mF,UAAY+sE,aAAaN,YAAYltE,MACrC+3E,WAAa5zF,KAAKu2F,iBACxB,GAAI/2E,QAAQ7Q,UAAY2N,WAAaA,UAAUykF,UAC3C,OAAO/gG,KAEX,GAAyB,OAArBwf,QAAQ7Q,WAAsB2N,UAE9B,OADAtc,KAAK22F,OACE32F,KAGX,IAAMqc,QAAUC,UAAU/b,UACpBq2F,UAAY52F,KAAK+vF,SAASj4D,QAAQk8D,gBAClC9B,KAAO0E,UAAU1E,KACjBG,WAAauE,UAAU5sF,OACvBA,OAASq/E,aAAar/E,OACtB1J,KAAO+b,QAAQ/b,KACfkc,aAAeF,UAAUG,kBACzB63E,aAAeV,WAAWoC,gBAE1BmN,YA+BN,GA9BAn5F,OAAOxK,QAAQ,SAACuN,OACZ,IAAM7C,WAAasS,aAAazP,QAAUyP,aAAazP,OAAO/I,MACxDinE,QAAU3qE,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE2R,cAC1Bk5F,YAAc,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAIx7E,KAAK,SAAC/b,KAC7D,IAAMw3F,UAAYhR,WAAWxmF,IAAI,IAAIA,IAAI,IACzC,OAAOw3F,WAAaA,UAAUtoG,SAAW6D,yBAAUE,YACJ,IAA3CukG,UAAU9Q,aAAa5qF,QAAQoF,SAEvC,QAAkBymB,IAAd4vE,WAA2B9iG,KAAKhB,OAAQ,CACxC,IAAMvE,KAAOqoG,UAAU,GACjBj2C,KAAO+kC,KAAKn3F,MAAMqoG,UAAU,IAC5BlqG,MAAQ+xE,QAAQ,GACtB83B,UAAY51C,KAAK2qC,gBAAkB,EACnCn+B,GAAKxM,KAAK0qC,cAAc3+F,OAAS6pG,UAAY,EAAInP,WAAW0P,QAC5D,IAAMC,UAAY3iG,KAAKG,IAALD,MAAAF,KAAI4iG,4BAAQ/hG,MAAKsuF,SAASj4D,QAAQ29D,SAASnsF,IAAI,SAAAosF,OAAK,OAAIA,MAAM+N,cAAc1oG,UACxFgH,IAAMnB,KAAKG,IAALD,MAAAF,KAAI4iG,4BAAQ/hG,MAAKsuF,SAASj4D,QAAQ29D,SAASnsF,IAAI,SAAAosF,OAAK,OAAIA,MAAMgO,iBAAiB3oG,UAC3Fm8B,OAAS08D,WAAW18D,OACpBD,MAAQ28D,WAAW38D,MACnB,IAAM0sE,QAAUhqC,GAAK4pC,UAAY,EAAIxhG,IAAM,EACrC6hG,MAAQjqC,GAAK4pC,UAAY,EAAIxhG,IAAM,EACnC8hG,aAEFA,UAAUtrG,EADD,MAATwC,KACA,OAAAkR,OAAqB03F,QAArB,SAAA13F,OAAoC23F,MAApC,OAAA33F,OAA+CgrB,MAA/C,KAAAhrB,OAAwD23F,MAAxD,OAAA33F,OAAmEgrB,MAAnE,KAAAhrB,OAA4E03F,QAA5E,MAEA,KAAA13F,OAAmB03F,QAAnB,SAAA13F,OAAkC23F,MAAlC,SAAA33F,OAA+C23F,MAA/C,KAAA33F,OAAwDirB,OAAxD,OAAAjrB,OAAoE03F,QAApE,KAAA13F,OAA+EirB,OAA/E,MAEJ2sE,UAAUxnE,UAAYknE,UAAYN,UAAYC,UAC9CC,SAAS3hG,KAAKqiG,cAGlBV,SAAS7jG,OAAQ,CACjB,IAAMwkG,YAAc9jG,KAAK48B,cAAc03D,aAAc,KAAM,GAAIj4D,WAClDr8B,KAAK48B,cAAcknE,YAAa,OAAQX,UAChD50C,KAAK,IAAK,SAAAh2D,GAAC,OAAIA,EAAEA,IAAG48B,MAAM,iBAAkB,QAChCo5B,KAAK,QAAS,SAAAh2D,GAAC,OAAIA,EAAE8jC,YAE1C,OAAOr8B,yCAIP,IAAMq8B,UAAYr8B,KAAKiP,SAASotB,UAC1Bu3D,WAAa5zF,KAAKu2F,iBACxBjU,6BAAcsR,WAAWoC,iBAAiB/nC,UAA1C,IAAAhiD,OAAwDowB,YAAauG,iEAnFrE,OACIvG,UAAS,GAAApwB,OvBTM,OuBSN,oBACTg3F,UAAS,GAAAh3F,OvBVM,OuBUN,cACTi3F,UAAS,GAAAj3F,OvBXM,OuBWN,+DAKb,MAAO,6BCAFi0F,qBACT6D,KAjBW,SAATC,OAAUtxF,IAAKolB,QAASklE,UAAa,IAEnCjU,YAIAr2E,IAJAq2E,YACAG,WAGAx2E,IAHAw2E,WACApB,QAEAp1E,IAFAo1E,QACAR,YACA50E,IADA40E,YAGCyB,YAAYzpF,QAAW4pF,WAAW5pF,QAGnCw4B,QAAQ89D,sBAAsB9N,QAAQ,MAAQkV,UAAU,GACxDllE,QAAQ89D,sBAAsB7M,eAAiBiU,UAAU,IAHzDllE,QAAQ89D,sBAAsBtO,eAAiB0V,UAAU,IAS7DiH,MAAO,SAAAA,MAACvxF,IAAKolB,SAAY,IAEjBixD,YAGAr2E,IAHAq2E,YACAG,WAEAx2E,IAFAw2E,WACA5B,YACA50E,IADA40E,YAECyB,YAAYzpF,QAAW4pF,WAAW5pF,QAGnCw4B,QAAQ89D,sBAAsB1M,cAAgB,SAAS,GACvDpxD,QAAQ89D,sBAAsB7M,eAAiB,SAAS,IAHxDjxD,QAAQ89D,sBAAsBtO,eAAiB,SAAS,IAMhE4c,UAAW,SAAAA,UAACxxF,IAAKolB,SAAY,IAErBixD,YAKAr2E,IALAq2E,YACAG,WAIAx2E,IAJAw2E,WACArB,SAGAn1E,IAHAm1E,SACAC,QAEAp1E,IAFAo1E,QACAR,YACA50E,IADA40E,YAECyB,YAAYzpF,QAAW4pF,WAAW5pF,QAGnCw4B,QAAQ89D,sBAAsB/N,SAAS,MAAQ,aAAa,GAC5D/vD,QAAQ89D,sBAAsB9N,QAAQ,MAAQ,aAAa,IAH3DhwD,QAAQ89D,sBAAsBtO,eAAiB,aAAa,wxCCrCnD6c,gEACjB,SAAAA,kBAAwB,IAAA3D,iBAAA/+F,qKAAA2iG,CAAApkG,KAAAmkG,iBAAA,QAAApgC,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAA4iG,2CAAArkG,MAAAwgG,iBAAA8D,gCAAAH,kBAAA/rG,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJqmF,UAAY,YACjB5zF,MAAK6zF,YAAc4K,oBAHCz+F,mZADiB8zF,8TAelClM,aAAc7pE,SAAuB,IAAdrX,QAAcrB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAClCk2F,SAAWh9F,KAAKs1F,YAAYntF,QAAQ60F,UAAYh9F,KAAKq1F,WAM3D,OAJ0C,IAAtChM,aAAauH,sBACboM,SAAS3T,aAAcrpF,KAAMmI,QAAQ60F,UAAYh9F,KAAKq1F,WAGnDr1F,uDAdP,MAAO,sDAIP,MAAO,s1CCbMukG,2wBAAqBhP,oUAa/BlM,aAAc7pE,SACjB,IAAMsY,QAAU93B,KAAK+vF,SAASj4D,QACxBxX,WAAa+oE,aAAaN,YAAYltE,MAM5C,OALyB,OAArB2D,QAAQ7Q,SACRmpB,QAAQ0sE,eAAeC,YAEvB3sE,QAAQ4sE,gBAAgBpkG,KAAKggB,YAE1BtgB,uDAnBP,MAAO,iDAIP,MAAO,wDAIP,OAAO,swDCNf,IAAM2kG,iBAAW,SAAXA,SAAYC,UAAWC,cAAe/sE,QAASq0D,YACjD,IAAMsJ,UAwCN,OAvCImP,WACAA,UAAUplG,QAAQ,SAACslG,UACf,IAAMC,KAAOD,SAASC,KAChBC,SAAWH,cAAcE,MAC/B,GAAIC,UAAYA,SAASC,oBAAqB,CAC1C,IAAMC,iBAAmBJ,SAASjoF,IAAIsoF,SAChCA,UACF/wF,EAAGwzD,WAAWs9B,iBAAkB,IAAK,SACrC3/F,EAAGqiE,WAAWs9B,iBAAkB,IAAK,SACrCv1D,MAAOi4B,WAAWs9B,iBAAkB,QAAS,SAC7CpvE,MACI/oB,MAAO66D,WAAWs9B,iBAAkB,OAAQ,SAC5ChsG,MAAOizF,WAAWiZ,qBAGpB5sG,KAAI,GAAAyT,OAAM64F,SAASjoF,IAAIrkB,KAAnB,KAAAyT,OAA2BkgF,WAAWv1E,YAAYkvE,cACtDuf,UACFC,UAAWxtE,QAAQ6sE,UACfnsG,UACAusG,KAAM,QACN1oE,UAAW8vD,WAAWv1E,YAAY4H,gBAAgB6d,UAClD8oE,kBACAhuD,WACIp8C,KAAM,YAEV2zD,WAAYy9B,WAAWoZ,sBACvBC,iBAAiB,EACjB5jF,OAAQ,SAAAA,OAAAjO,IAAE,OAAIA,GAAGsJ,OAAO,kBAAM,IAC1BE,WAAW,KAEfw4E,aAAa,EACbiJ,QAAQ,IAEZ6G,YAAaX,SAASjoF,IAAIrkB,MAE9Bi9F,OAAOj0F,KAAK6jG,aAIjB5P,QAGUiQ,oDACjB,SAAAA,eAAwB,IAAAlF,iBAAA/+F,4JAAAkkG,CAAA3lG,KAAA0lG,cAAA,QAAA3hC,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAmkG,kCAAA5lG,MAAAwgG,iBAAAqF,uBAAAH,eAAAttG,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJ82F,cACLrkG,MAAKskG,kBAHetkG,8XADco0F,gUAqBnB,IAAArgF,OAAAxV,KACT83B,QAAU93B,KAAK+vF,SAASj4D,QACxBkuE,QAAUluE,QAAQkuE,UAClBnB,cAAgB/sE,QAAQmuE,WAAWpB,cACnCqB,aAAepuE,QAAQgtE,WAM7B,OALAhtE,QAAQ/tB,QAAQo8F,0BAAhB,GAAAl6F,OACOm6F,0BAAiBn6C,qBADxB,KAAAhgD,OACgD+5F,QAAQt+B,UADxD,aAC8E,SAAAznE,MAAmB,IAAf2kG,UAAeyB,sBAAApmG,KAAA,MACzFuV,OAAK8wF,QAAU3B,iBAASC,UAAWC,cAAe/sE,QAAStiB,UAEnExV,KAAKsmG,QAAU3B,iBAASuB,aAAcrB,cAAe/sE,QAAS93B,MACvDA,uEAIP,OACIu5F,UAAU,+DASd,OAAO,wCAGJlQ,cACH,IAAMpK,KAAOj/E,KACPsc,UAAY+sE,aAAaN,YAAYltE,MAC3C,IAA0C,IAAtCwtE,aAAauH,qBAAgC,CAC7C,IACMoF,gBADah2F,KAAKu2F,iBACWP,gBAC7B35D,UAAS,GAAApwB,OAAMjM,KAAKiP,SAASotB,WAC7Bo5D,OAASz1F,KAAKsmG,QACdxC,YAAc9jG,KAAK48B,cAAco5D,gBAAiB,KAAM,GAA1C,GAAA/pF,OAAiDowB,UAAjD,eACCr8B,KAAK48B,cAAcknE,YAAa,IAAKnrG,OAAOgkB,OAAO84E,SAC3D9yD,KAAK,SAAU+yD,OACxB,IAAM4P,UAAY5P,MAAM4P,UAClBiB,MAAQtnB,KAAKriD,cAAc58B,KAAM,IAAKslG,UAAWjpE,WAFxBmqE,uBAAAH,sBAGXpnB,KAAK8Q,SAASj4D,QAAQ2uE,eAAe/Q,MAAM+P,aACjBiB,kCAAkCpqF,WAJjD,GAIxBqqF,gBAJwBH,uBAAA,GAIP7kG,OAJO6kG,uBAAA,GAKzBI,qBAAuB,IAAI7oG,oBAAU4oG,gBAAiBhlG,QAC5D4kG,MAAM5jE,KAAK,SAAUpqC,EAAGN,GACpBqtG,UAAUrtG,GAAGqI,KAAKsmG,sBAAsB13E,MAAMlvB,UAI1D,OAAOA,+CA7DP,MAAO,oEAIP,OACIq8B,UAAS,GAAApwB,O3B/DM,O2B+DN,mEAKb,MAAO,q0CCjEM46F,2yBAA0BnB,qWAYvC,OACInM,UAAU,qDAXd,MAAO,2EAIP,OACIl9D,UAAS,GAAApwB,O5BVM,O4BUN,0zCCPA66F,ovBAAqBpB,iVAYlC,OACInM,UAAU,qDAXd,MAAO,sEAIP,OACIl9D,UAAS,GAAApwB,O7BVM,O6BUN,+NCRd,IAAMy9E,yCAAkBqd,oCAAApc,uBAC1Bqc,OAAoB,gBACjBxuG,KAAM,cACN2P,SACI60F,SAAU,SAEf,kBANwB+J,oCAAApc,oBAAA,GAAA1+E,OAOvB+6F,MAPuB,KAAA/6F,OAOH+6F,UACpBxuG,KAAM,UACN2P,SACI60F,SAAU,oBACV74E,MAAO,EACP9F,OAAQ,SAAAA,OAAAyZ,SAAO,MAA8B,eAA1BA,QAAQ7oB,SAAS7V,UAZjB2tG,oCAAApc,oBAe1Bqc,YACGxuG,KAAM,cACN2P,SACI60F,SAAU,cAEf,aACCxkG,KAAM,UACN2P,SACIgc,MAAO,OAEZ,YAzBwB4iF,oCAAApc,oBA0B1Bqc,QAAqB,WA1BKD,oCAAApc,oBA2B1Bqc,SACGxuG,KAAM,cACN2P,SACI60F,SAAU,UAEf,uBAhCwBrS,qBCDlBsc,MAAQ,QAGRC,MAAQ,QACRC,OAAS,SACTC,KAAO,OACPC,MAAQ,QACRC,MAAQ,QAGRC,UACTzsD,EAAG,IACHn1C,EAAG,IACH6hG,GAAI,KACJC,GAAI,MCbKjpF,mCACT23E,YDHuB,OCIvBD,aAAc,aACd75D,UAAW,GACX8b,YAAa,SACbhB,WACIp8C,KAAMksG,OAEV7S,eAGAsT,sBAAuB,GACvBvC,UACIx1D,SACAv7B,KACA7O,KACAuqD,MACA63C,eACIzuG,MAAO,IAGfw1D,YACIi+B,OAAQ,QACRvN,SAAU,KAEdwoB,iBAAiB,2TCbAC,qhBAGb,MAAM,IAAIx3F,MAAMu5D,UAAUC,oEAS1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wDAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,oDAW1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8DAQ1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,gDAQ1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,4FAa1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,gFAc1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,4FAY1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8DAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,0EAQ1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wEAQ1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,4EAQ1B,OAAO7pE,6DAIP,MAAM,IAAIqQ,MAAMu5D,UAAUC,sDAQ1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wDAI1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,mCCxJrBl6C,aACTuiE,QACAhjE,SACAwqE,eACAsM,WACA1lG,QACA2O,+LCOG,cAAM64F,wBAAS,SACTC,qBAAM,MACNC,sBAAO,OACPC,uBAAQ,QAMRC,oBAAkBC,gCAAAC,uBAC1BC,sBAAuBz6B,QAAQC,UADLs6B,gCAAAC,oBAE1BC,wBAAyBz6B,QAAQI,YAFPm6B,gCAAAC,oBAG1BC,uBAAwBz6B,QAAQE,WAHNq6B,gCAAAC,oBAI1BC,qBAAsBz6B,QAAQG,SAJJq6B,qBCjBlBE,OAAS,SACTC,KAAO,OACPC,KAAO,WACPnB,iBAAQ,QACRoB,QAAU,UACVC,SAAW,WACXC,SAAW,WACXC,IAAM,MACNC,IAAM,MACNC,oBAAW,WACXC,WAAa,aACbC,UAAY,YCdZC,mCAAY,aACZtqG,SAAW,WACXoqG,qBAAa,aACbN,kBAAU,UACVH,iBAAS,SAETI,mBAAW,WASXQ,OAAS,8LCHlBC,YAcAC,uBAdAD,YACAE,eAaAD,uBAbAC,eACAC,SAYAF,uBAZAE,SACAC,SAWAH,uBAXAG,SACAC,cAUAJ,uBAVAI,cACAC,aASAL,uBATAK,aACAC,gBAQAN,uBARAM,gBACAC,cAOAP,uBAPAO,cACAC,cAMAR,uBANAQ,cAIA/5B,UAEAu5B,uBAFAv5B,UACAg6B,UACAT,uBADAS,UAESC,UAAQC,6BAAAC,aAChBC,OAAmBd,aADHY,6BAAAC,UAEhBC,KAAiBp6B,WAFDk6B,6BAAAC,UAGhBC,SAAqBN,eAHLI,6BAAAC,UAIhBC,SAAqBL,eAJLG,6BAAAC,UAKhBC,UAAsBZ,gBALNU,6BAAAC,UAMhBC,WAAuBP,iBANPK,6BAAAC,UAOhBC,IAAgBX,UAPAS,6BAAAC,UAQhBC,IAAgBV,UARAQ,6BAAAC,UAShBC,oBAAqBT,eATLO,6BAAAC,UAUhBC,KAAiBJ,WAVDE,6BAAAC,UAWhBC,iBAAkBd,aAXFY,6BAAAC,UAYhBC,QAAoBR,cAZJO,WA6Dd,SAASE,0BAAal7F,QACzB,IAAKA,OAAOjU,OAAS+uG,SAAS96F,OAAOjU,MACjC,MAAM,IAAIsV,MAAJ,GAAApE,OAAa+C,OAAOjU,KAApB,+BAEV,IAAKkP,MAAMuB,QAAQwD,OAAOzL,OACtB,MAAM,IAAI8M,MAAM,oCAEpB,IAAI85F,aAAe,KACb5mG,MAAQyL,OAAOzL,MAErB,GAAIyL,OAAOjU,OAASutG,kBAAUt5F,OAAOo8C,aAAc,CAE/C,GADA++C,aAAeL,SAAS96F,OAAOo8C,cAC3Bp8C,OAAOo8C,eAAiB6+C,IACxB,OAAOE,eAAe5mG,MAAMA,OAAOk3C,SAASzrC,OAAOyrC,UAChD,GAAIzrC,OAAOo8C,eAAiB6+C,IAC/B,OAAOE,eAAe5mG,MAAMA,OAAO25C,MAAMluC,OAAOkuC,YAGpDitD,aAAeL,SAAS96F,OAAOjU,MAMnC,OAHIiU,OAAOjU,OAAS2tG,oBAChByB,eAAevtD,OAEZutD,eAAe5mG,MAAMA,OC3GzB,IAAMib,6CACT0V,GAAIzoB,cACJ2+F,UACIlU,aAAc,aAElBmU,gBAAiB,GACjBntD,KAAM,GACNi5C,YFduB,OEevB95D,UAAS,GAAApwB,OFfc,OEed,SACTwuC,SAAU,EACV2Q,aAAc,SACdk/C,eAAe,EACfC,QACIC,SAAU,KACVC,WAAY,MAEhBrL,YAAa,OACbjoF,aAAc,SAAAA,aAAA/W,KAAG,OAAIA,KACrB49B,QAAS,GACT4e,MAAM,EACN8tD,cAAe,GACf10D,QAAQ,EACRuiD,MAAM,EACNoS,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChB11E,SACAp6B,KAAM,SACN4hD,WAAY,KACZ2Q,WAAY,KACZg2C,QAAS,EACTwH,QAAS,GCvBPC,yBAAa,SAAbA,WAAcC,SAAUC,SAAUC,cACpC,IAAIV,SACEr9C,KAAO69C,SAAS79C,OAChBl+C,OAAS+7F,SAAS/7F,SAClBk8F,aAAeH,SAASG,eACxBV,WAAaO,SAASP,aACtBnpG,MAAQ6rD,KAAK7rD,QAEbygC,OADYzgC,MAAMygC,OAASzgC,MAAMihC,UAAYjhC,MAAMZ,UAGrD0+F,YAGAnwF,OAHAmwF,YACAkL,cAEAr7F,OAFAq7F,cACAvvG,KACAkU,OADAlU,KAGAwvG,OACAY,aADAZ,OAGJC,SAAWD,OAAOC,SAElB,IAAM57C,SAAWo8C,SAASI,cAsD1B,OArDAH,SAAStoE,KAAK,SAAUpqC,EAAGyL,OACvB,IAAIqnG,OACAC,OACA/4F,MAAQk4F,WAAWzmG,OAASymG,WAAWzmG,OAAO1B,KAAO/J,EAEnDgzG,cAAgBp+C,KAAKxQ,aAAewQ,KAAKxQ,WAAa,KAI5DpqC,OAFaq8C,SAAY28C,cAAgBA,gBAAgBh5F,OAASA,MAAS,IAE9DlO,WAEb,IAAMmnG,aAAeN,aAAa3vE,WAAWhpB,OAEvC0kB,MAA6B,GAArBu0E,aAAav0E,MACrBC,OAA+B,GAAtBs0E,aAAat0E,OAExBszE,SAAW,IACXA,SAAW,IAAMA,UAGrB,IAAMiB,SAAW,EAAI7qG,KAAKgR,MAAM44F,SAAW,IACrCkB,oBAAuBD,SAAW,GAAM,EAAKjB,SAAW,IAAM5pG,KAAK68B,KAAK+sE,SAAW,KAAOA,UAAY,IAE5Ga,OAASzqG,KAAKkU,KAAKlU,KAAAoU,IAAAkiB,OAAU,GAAVt2B,KAAAoU,IAAciiB,MAAS,IAAKr2B,KAAKixC,IzJ64BtC,SAAhB85D,cAAgBC,OAAK,OAAIA,MAAQhrG,KAAKowC,GAAK,IyJ74Be26D,CAAcD,qBAEpD,IAAbD,UAA+B,IAAbA,UAAqBC,mBAAqB,MAAQA,oBAAsB,KAC3FL,QAAmB,EAATn0E,QAEdo0E,OAASr0E,MAGLq0E,OADa,KAAbd,SACStzE,OACW,MAAbszE,UACGtzE,OAED,EAGTkoE,cAAgBiJ,sBAChBiD,OAAUhB,eAAiBvoE,MAAM,KAAOxpC,GAAKwC,OAASutG,iBAAUgD,OAASA,OAAS,EAAIA,OACtFhpB,6BAActiF,MACGuuD,KAAK,YADtB,aAAAtiD,QACiDq/F,OAAS18C,SAD1D,sCAAA3iD,QAEuBo/F,OAASz8C,SAFhC,aAAA3iD,OAEoDu+F,SAFpD,QAIAc,OAAUhB,eAAiBvoE,MAAM,KAAOxpC,GAAKwC,OAASutG,iBAAUgD,OAASA,OAAS,EAAIA,OAEtFhpB,6BAActiF,MACGuuD,KAAK,YADtB,aAAAtiD,OACgDq/F,OAAS18C,SADzD,sCAAA3iD,OAEsBo/F,OAASz8C,SAF/B,aAAA3iD,OAEmDu+F,SAFnD,OAIJloB,6BAActiF,MAAM0uD,aACH0wB,SAAS,KAAM98E,KAAKiQ,SAElC04F,UASLY,oCAAwB,SAAxBA,sBAAyBC,gBAAiBC,aAAcn9C,UAAa,IAEnEo9C,YACAD,aADAC,YAEE/8F,OAAS88F,aAAa98F,SACtBk8F,aAAeY,aAAaZ,eAC5BD,aAAea,aAAa5wG,eAAe+vG,aAE7C9L,YAEAnwF,OAFAmwF,YACAjJ,YACAlnF,OADAknF,YAGAoU,OACAY,aADAZ,OAGAC,SAEAD,OAFAC,SACYyB,aACZ1B,OADAE,WAGEQ,SAAWa,gBAAgB79C,UAAU,cAI3C,GAHAg9C,SAASh9C,UAAU,SAASrrB,UAGxB4nE,UHrGW,QGqGEpL,aHtGC,WGsGsBA,YAEjC,GAAKoL,UAAayB,aAElB,CAEH,GADAhB,SAAS3oG,KAAK,IH1GH,QG2GP88F,aH5GU,WG4GaA,YACvB6L,SAAS18C,KAAK,IAAK,GACFA,KAAK,IAAK,GACVA,KAAK,YAAa,IAClBjsD,KAAK,IACRkgF,YAAYyoB,SAAU,QAAS,SAAC1yG,EAAGN,GAC7C,OAAI+zG,YAAY/zG,GACL+zG,YAAY/zG,GAAG09B,UAFL,GAAA1pB,OAInBkqF,YAJmB,gBAMnB5nC,KAAK,KAAM,KACAp5B,MAAM,UAAW,KAEjBu5B,aACA0wB,SAAS,KACTlX,GAAG,MAAO6jC,aAAaG,6BACvB39C,KAAK,KAAM,SAACh2D,EAAGN,GACZ,MH9HV,WG8HcmnG,aAAgC,IAANnnG,EACnB+zG,YAAY,GAAG9wE,eAElB8wE,YAAY,GAAG9wE,eAAiB8wE,YAAY,GAAGr2E,MAAMr2B,OAAS,GAAKsvD,WAE9Ez5B,MAAM,UAAW,GACjB7yB,KAAK,SAAAnI,GAAC,OAAIA,IACVo0D,KAAK,IAAK,QAEbi0B,YAAYyoB,SAAU,QAAS,SAAC1yG,EAAGN,GAAJ,OAAU+zG,YAAY/zG,GAAG09B,OAA7C,GAAA1pB,OAAuDkqF,YAAvD,gBACnB7zF,KAAK,SAAAnI,GAAC,OAAIA,SA/BpB8wG,SAAS18C,KAAK,YAAa,SAF3Bw8C,yBAAWgB,aAAcd,SAAUC,cAqCvC,OAAOD,UAGLkB,+BAAmB,SAAnBA,iBAAoBJ,cAGlBA,aAAa98F,SADbq7F,eAGAyB,aAAaI,oBAWfC,6BAAiB,SAAjBA,eAAkBC,SAAUjN,YAAap5E,UAAa,IAEpDsmF,eAIAtmF,SAJAsmF,eACAxB,QAGA9kF,SAHA8kF,QACAyB,YAEAvmF,SAFAumF,YACAC,eACAxmF,SADAwmF,eAEJ,OAAQpN,aACR,KAAKiJ,sBACDgE,SAAS99C,KAAK,YAAd,aAAAtiD,SACmBugG,eAAev1E,MAAQq1E,gBAD1C,KAAArgG,OAC6D6+F,QAAUyB,YADvE,iBAEA,MACJ,KAAKlE,uBACDgE,SAAS99C,KAAK,YAAd,aAAAtiD,OACmBugG,eAAev1E,MAAQq1E,eAD1C,KAAArgG,OAC6D6+F,QAAUyB,YADvE,gBAEA,MACJ,KAAKlE,qBACDgE,SAAS99C,KAAK,YAAd,aAAAtiD,OACkBugG,eAAev1E,MAAQ,EADzC,KAAAhrB,QAC+CugG,eAAet1E,OAASo1E,eADvE,MAEA,MACJ,KAAKjE,wBACDgE,SAAS99C,KAAK,YAAd,aAAAtiD,OACkBugG,eAAev1E,MAAQ,EADzC,KAAAhrB,OAC8CugG,eAAet1E,OAASo1E,eAAiB,EADvF,MAKJ,OAAOD,UC1MX,IAAMI,aAAe,SAAfA,aAAgB30E,QAAS/8B,KAAM2xG,YAAaxuD,QAC9CpmB,QAAQv0B,MAAMmpG,aACdxuD,QAAUpmB,QAAQ7oB,uLAAR09F,IAAA,GAAA1gG,OAAqBlR,KAArB,UAAoCmjD,UAcrC0uD,yBAAc,SAAdA,YAAe30F,QAAS1U,MAAO7C,OAAQ0+F,aAChD,IAAMrzF,KAZY,SAAhB8gG,cAAiBC,SAAUvpG,MAAO7C,QACpC,IACMu2B,MADMr2B,KAAKuL,IAAI5I,MAAM,GAAKA,MAAM,KAAO7C,OAAO,GAAKA,OAAO,IAC3CosG,SACfC,QAAWxpG,MAAM,GAAKA,MAAM,GAC5BypG,KAAOD,QAAU91E,MAIvB,OAFa81E,QADIA,SAAWC,KAAO,GACDA,MAEpB,EAIDH,CAAc50F,QAAS1U,MAAO7C,QAS3C,OAPI0+F,cAAgB2I,sBAAO3I,cAAgB0I,yBACvCvkG,MAAM,IAAMwI,KACZxI,MAAM,IAAMwI,OAEZxI,MAAM,IAAMwI,KACZxI,MAAM,IAAMwI,MAETxI,OAGE0pG,YAAc,SAAdA,YAAen1E,QAASo1E,aACjC,IAAI1iD,aACA2iD,eAF6CC,sBAO7Ct1E,QAAQ00E,iBAHDa,WAJsCD,sBAI7Cn2E,MACQq2E,YALqCF,sBAK7Cl2E,OACA8G,QAN6CovE,sBAM7CpvE,QAGAF,IAIAE,QAJAF,IACAmD,KAGAjD,QAHAiD,KACA8rB,OAEA/uB,QAFA+uB,OACA7rB,MACAlD,QADAkD,MAGAqsE,SACAL,YADAK,SAf6CC,sBAoB7C11E,QAAQqzE,eAFRR,aAlB6C6C,sBAkB7C7C,aACAJ,OAnB6CiD,sBAmB7CjD,OAGAC,SACAD,OADAC,SAtB6CiD,iBA6B7C31E,QAAQ7oB,SAJRmwF,YAzB6CqO,iBAyB7CrO,YACAkL,cA1B6CmD,iBA0B7CnD,cACAD,gBA3B6CoD,iBA2B7CpD,gBACA/8C,WA5B6CmgD,iBA4B7CngD,WA5B6CogD,sBAmC7C51E,QAAQ61E,oBAJRC,eA/B6CF,sBA+B7CE,eACAC,kBAhC6CH,sBAgC7CG,kBACAC,mBAjC6CJ,sBAiC7CI,mBACAl/C,SAlC6C8+C,sBAkC7C9+C,SAGQm/C,cAERH,eAFA12E,OACO82E,aACPJ,eADA32E,MAEEg3E,YAActD,aAAeN,gBAAkB,EAC/C6D,aAAgBzD,YAAY,EAAMD,SAAUD,OAAOC,UACnD2D,gBAAkBr2E,QAAQs2E,iBAC1BC,aAAev2E,QAAQw2E,cACvBr2F,QAAU6f,QAAQy2E,SAClB7tG,OAASo3B,QAAQp3B,SACjB4rG,eAAiBwB,mBAAmB52E,OAE1C,OACI0vB,MACIxyC,EAAG,SAAAA,IACC,IAAMo6F,YAAcR,aAAe,EA+BnC,OA7BAvB,aAAa30E,QAAS,IAAK80E,yBAAY30F,SAClCu2F,YAAanB,WAAapsE,KAAOC,MAAQstE,aAAc9tG,OAAQ0+F,aAC5DmO,SAAWD,YAAc,MAEjC9iD,aAAiB6iD,WAAcv1E,QAAQ22E,gBAAgBnvG,OAChC6uG,gBAAgBl3E,MAEvCk2E,eAAiBG,YAAcQ,mBAAmBR,YAAc1+C,SAAWq/C,YAEvEzjD,aAAe6jD,aAAap3E,OAAsB,IAAbuzE,WAErC0D,YAAY1D,SAA+B,OAApBD,OAAOC,UAAqB,GAAKA,SAGpDhgD,aAAe6jD,aAAan3E,SAC5Bi2E,eAAiBG,YACjB9iD,aAAe6jD,aAAan3E,OAC5BY,QAAQqzE,cAAeP,gBAAgB,EAAOC,gBAAgB,MAGlEyC,YAAchB,gBACdx0E,QAAQqzE,cAAe5S,MAAM,IAGjCzgE,QAAQ42E,eACJz3E,MAAOuzB,aACPtzB,OAAQi2E,eACR50E,OAAqB,OAAbiyE,WAEL0D,aAEX3oG,EAAG,SAAAA,IACC,IAAIopG,cAAgBtB,WACdmB,YAAcT,cAAgB,EAmBpC,OAjBAtB,aAAa30E,QAAS,IAAK80E,yBAAY30F,SAClCq1F,YAAcxvE,IAAMivB,OAASyhD,YAAaA,aAAc9tG,OAAQ0+F,aAC7DmO,SAAWF,WAAa,MAE3BA,WAAaf,eAAiB2B,aAAgBE,gBAAgBl3E,QAC/D03E,cAAgB,EAChB72E,QAAQqzE,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlE/yE,QAAQ42E,eACJz3E,MAAO03E,cACPz3E,OAAQo2E,YACR/0E,QAAQ,IAER80E,WAAaf,gBACbx0E,QAAQqzE,cAAe5S,MAAM,IAE1B2V,cAGf9pE,MACIhwB,EAAG,SAAAA,IACCq4F,aAAa30E,QAAS,KAAM,EAAGu1E,WAAapsE,KAAOC,OAAQqsE,SAAWD,YAAc,MACpF,IAAM/pG,MAAQu0B,QAAQv0B,QAQtB,GALAinD,cAAiBjnD,MAAM,GAAKA,MAAM,KAAO+pD,YAAc5sD,QAAQpB,OAAU6uG,gBAAgBl3E,MAGzFk2E,eAAiBG,YAAchB,eAAiB19C,SAAWq/C,YAEvDzjD,aAAe6jD,aAAap3E,OAAsB,IAAbuzE,SAErC0D,YAAY1D,SAAwB,OAAbA,UAAqB,GAAKA,SACjD0D,YAAYzD,YAAa,EAGrBjgD,aAAe6jD,aAAan3E,SAC5Bi2E,eAAiB,EACjB3iD,aAAe,EACf1yB,QAAQqzE,cAAeP,gBAAgB,EAAOC,gBAAgB,IAC9D/yE,QAAQv0B,OAAO8qG,aAAan3E,OAAS,EAAGm2E,WAAagB,aAAan3E,OAAS,UAE5E,GAAIo2B,WAAY,CACD+/C,WAAa3sG,OAAOpB,OAAU6uG,gBAAgBl3E,MACjDo3E,aAAap3E,OACxBa,QAAQv0B,OAAO8qG,aAAan3E,OAAS,EAAGm2E,WAAagB,aAAan3E,OAAS,IAYnF,OATIo2E,YAAchB,gBACdx0E,QAAQqzE,cAAe5S,MAAM,EAAOqS,gBAAgB,EAAOC,gBAAgB,IAG/E/yE,QAAQ42E,eACJz3E,MAAOuzB,aACPtzB,OAAQi2E,eACR50E,OAAqB,OAAbiyE,WAEL0D,aAEX3oG,EAAG,SAAAA,IACCknG,aAAa30E,QAAS,KAAMw1E,YAAcvgD,OAAQjvB,KAAMyvE,SAAWF,WAAa,MAEhF,IAAIsB,cAAgBtB,WAcpB,OAbIA,WAAaf,eAAiB2B,aAAeE,gBAAgBl3E,QAC7D03E,cAAgB,EAChB72E,QAAQqzE,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlE/yE,QAAQ42E,eACJz3E,MAAO03E,cACPz3E,OAAQo2E,YACR/0E,QAAQ,IAER80E,WAAaf,gBACbx0E,QAAQqzE,cAAe5S,MAAM,IAE1B2V,cAGfU,WACIx6F,EAAG,SAAAA,IACC85F,YAAYzD,YAAa,EACzB,IAAM+D,YAAcZ,eAAe32E,MAAQ,EAG3Cw1E,aAAa30E,QAAS,MAFLwyE,cAAgB,EAAIkE,aAEEvtE,KAAMosE,WAAansE,MAAQstE,aAC9DjB,SAAWD,YAAc,MAE7B,IAAM/pG,MAAQu0B,QAAQv0B,QAGhBsrG,eAAiBhB,kBAAkBvuG,QAAUsuG,eAAe32E,MAAQk3E,gBAAgBl3E,OAe1F,OAduB1zB,MAAM,GAAKA,MAAM,GAGnBsrG,gBAAsC,OAApBtE,OAAOC,WAC1C0D,YAAY1D,UAAY,IAIxB8C,YAAchB,eAAiB2B,YAAcL,eAAe12E,SAC5DY,QAAQqzE,cAAeP,gBAAgB,IACnC0C,YAAchB,gBACdx0E,QAAQqzE,cAAe5S,MAAM,KAG9B2V,aAEX3oG,EAAG,SAAAA,IACC2oG,YAAYzD,YAAa,EACzB,IAAM+D,YAAcZ,eAAe12E,OAAS,EAa5C,OAVAu1E,aAAa30E,QAAS,KAAMw1E,YAAcvgD,QAFzBu9C,cAAgB,EAAIkE,aAEwBA,YAAc1wE,KACvEyvE,SAAWF,WAAa,MAGxBA,WAAaO,eAAe32E,MAAQq1E,eAAiB2B,cACrDn2E,QAAQqzE,cAAeP,gBAAgB,IACnCyC,WAAaf,gBACbx0E,QAAQqzE,cAAe5S,MAAM,KAG9B2V,siBCjPhB,IAAMY,iBAAmB,SAAnBA,mBAAoD,IAAhCtE,SAAgC1jG,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAArB,EAAGmwB,MAAkBnwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAX0D,OAAWpwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACzDu7E,cAAgB73E,OAChB83E,aAAe/3E,MACnB,GAAIuzE,SAAU,CACV,IAAMoB,OAAUpB,UAAY,GAAK5pG,KAAKowC,GAAM,IAC5Cg+D,aAAepuG,KAAKuL,IAAI+qB,OAASt2B,KAAKixC,IAAI+5D,QAAUhrG,KAAKuL,IAAI8qB,MAAQr2B,KAAKgxC,IAAIg6D,QAC9EmD,cAAgBnuG,KAAKuL,IAAI8qB,MAAQr2B,KAAKixC,IAAI+5D,QAAUhrG,KAAKuL,IAAI+qB,OAASt2B,KAAKgxC,IAAIg6D,QAEnF,OAAS30E,MAAO+3E,aAAc93E,OAAQ63E,gBAqC7BE,2BAA6B,SAA7BA,2BAA8Bn3E,SACvC,IAGIo3E,UAHAC,YAAc,GACdC,uBAA0Bn4E,MAAO,EAAGC,OAAQ,GAC5Cm4E,aAEExB,qBACAvsG,MAAQw2B,QAAQx2B,QACdqpG,aAAiB7yE,QAAQqzE,eAAzBR,aAP2C2E,gBAQtBx3E,QAAQ7oB,SAA7Bq+C,WAR2CgiD,gBAQ3ChiD,WAAY90D,KAR+B82G,gBAQ/B92G,KACZ0yG,aAAiBpzE,QAAQ38B,eAAzB+vG,aACFqE,UAAYjuG,MAAMygC,OAASzgC,MAAMihC,UAAYjhC,MAAMZ,OA8BzD,OA3BAwqG,aAAa11E,SAASsC,QAAQ03E,iBAM9BN,WAHAA,UAAY5hD,YAAciiD,aAGJjmG,IAAI,SAACmmG,cAAex3G,GACtC,IAAM8a,MAAQ+kB,QAAQ43E,iBAAiBD,cAAex3G,EAAGi3G,WAGnDtB,eAAiB1C,aAAa3vE,WAAWxoB,OAW/C,OARA86F,kBAAkBrsG,KAAKosG,gBAGnBA,eAAe32E,MAAQm4E,sBAAsBn4E,QAC7Ck4E,YAAcp8F,MACds8F,UAAYv3E,QAAQ2yE,aAAe3yE,QAAQ2yE,aAAaxyG,MACxDm3G,sBAAwBxB,gBAErB76F,QAGXm4F,aAAa11E,SAASsC,QAAQ63E,iBAI1B7B,mBAHuBnD,aAAeO,aAAa3vE,WAAW/iC,OAAUy+B,MAAO,EAAGC,OAAQ,GAI1Fi4E,wBACAC,4CACAvB,oCACAqB,oBACAG,oBACAzgD,SAAU92B,QAAQszE,gBAqDbwE,uBAAyB,SAAzBA,uBAA0B93E,QAAS+3E,eAAgBtsG,OAC5D,IAAI0zB,MACAC,OACEx2B,OAASo3B,QAAQp3B,SACfkuD,SAAiDihD,eAAjDjhD,SAAUg/C,eAAuCiC,eAAvCjC,eAAgBE,mBAAuB+B,eAAvB/B,mBAJoCL,iBAK9B31E,QAAQ7oB,SAAxCo7F,gBAL8DoD,iBAK9DpD,gBAAiB/8C,WAL6CmgD,iBAK7CngD,WACjBq9C,aAAiB7yE,QAAQqzE,eAAzBR,aACQmF,cAAkBhC,mBAA1B52E,OACQ62E,cAAuCH,eAA/C12E,OAA8B82E,aAAiBJ,eAAxB32E,MAK/B,GAHAA,MAAQ1zB,OAASA,MAAMjE,OAASiE,MAAM,GAAKA,MAAM,GAAK,EAEtD2zB,OAAS,EACLo2B,WAAY,CACZ,IAAMyiD,YAAcj4E,QAAQk4E,uBADhB/vG,MAGRW,KAAKC,IAALC,MAAAF,KAAIqvG,wCAAQ3iD,YAARrhD,OAAAgkG,wCAAuBvvG,UAC3BE,KAAKG,IAALD,MAAAF,KAAIqvG,wCAAQ3iD,YAARrhD,OAAAgkG,wCAAuBvvG,WAG/Bu2B,OAPYh3B,KAAA,GAAAA,KAAA,IAOWW,KAAKuL,IAAI4jG,cAAiB/B,aAAel2E,QAAQs2E,iBAAiBn3E,OAS7F,OAJIC,OAHCD,OAAmB,IAAVA,MAGD82E,cAFAntG,KAAKG,IAAIitG,aAAcD,gBAOhC92E,YACAC,OAJJA,SAAWyzE,aAAemF,cAAgBzF,gBAAkB,GAAKz7C,WAgBxDshD,qBAAuB,SAAvBA,qBAAwBp4E,QAAS+3E,gBAC1C,IAAI34E,OACAD,MACEv2B,OAASo3B,QAAQp3B,SACfkuD,SAAiDihD,eAAjDjhD,SAAUg/C,eAAuCiC,eAAvCjC,eAAgBE,mBAAuB+B,eAAvB/B,mBAJ2BqC,iBAKrBr4E,QAAQ7oB,SAAxCo7F,gBALqD8F,iBAKrD9F,gBAAiB/8C,WALoC6iD,iBAKpC7iD,WACjBq9C,aAAiB7yE,QAAQqzE,eAAzBR,aACQmF,cAAkBhC,mBAA1B52E,OACQ62E,cAAuCH,eAA/C12E,OAIR,GAFAA,OAAS,EACTD,MAHuD22E,eAAxB32E,MAI3Bq2B,WAAY,CACZ,IAAMyiD,YAAcj4E,QAAQk4E,uBADhB5tF,OAGRxhB,KAAKC,IAALC,MAAAF,KAAIqvG,wCAAQ3iD,YAARrhD,OAAAgkG,wCAAuBvvG,UAC3BE,KAAKG,IAALD,MAAAF,KAAIqvG,wCAAQ3iD,YAARrhD,OAAAgkG,wCAAuBvvG,WAG/Bw2B,QAPY9U,MAAA,GAAAA,MAAA,IAOYxhB,KAAKuL,IAAI4jG,aAAgBhC,cAIrD,OACI72E,cACAD,MAJJA,QAAU0zE,aAAemF,cAAgB,GAAKlhD,SAAWy7C,kBAYhD+F,0BAAqB,SAArBA,mBAAsBt4E,SAC/B,IAAMv0B,MAAQu0B,QAAQv0B,QAChBssG,eAAiB/3E,QAAQ61E,oBACvBvO,YAAgBtnE,QAAQ7oB,SAAxBmwF,YACA7G,KAASzgE,QAAQqzE,eAAjB5S,KACA6W,sBAAwDS,eAAxDT,sBAAuBF,UAAiCW,eAAjCX,UAAWrB,kBAAsBgC,eAAtBhC,kBAC1BwC,iBAAqBjB,sBAA7Bl4E,OACFo5E,aAAex4E,QAAQs2E,iBAAiBn3E,MAC9C,GAAImoE,cAAgB2I,sBAAO3I,cAAgB0I,wBAAQ,KAAAyI,sBAI3CX,uBAAuB93E,QAAS+3E,eAAgBtsG,OAFhD0zB,OAF2Cs5E,sBAE3Ct5E,MACAC,QAH2Cq5E,sBAG3Cr5E,OAWJ,OARKD,QAAmB,IAAVA,SACVA,OAAQ42E,kBAAkB76F,OAAO,SAAC7Z,EAAGO,GAAJ,OAC7BP,EAAIyH,KAAKC,IAAInH,EAAEu9B,MAAOv9B,EAAEw9B,QAAUo5E,cAAc,KAE3C,IAAT/X,OACArhE,QAAS,IAITD,aACAC,gBAxBmC,IAAAs5E,sBA+BvCN,qBAAqBp4E,QAAS+3E,gBAF9B54E,MA7BuCu5E,sBA6BvCv5E,MACAC,OA9BuCs5E,sBA8BvCt5E,OAUJ,OAPKA,QAAqB,IAAXA,SACXA,OAASg4E,UAAU5vG,QAAU+wG,iBAAmBv4E,QAAQs2E,iBAAiBl3E,QAAUm5E,mBAE1E,IAAT9X,OACAthE,MAAQ,IAIRA,YACAC,gBAiDKu5E,uBAAyB,SAAzBA,uBAA0B34E,QAASp3B,QAAW,IAAAgwG,iBACrB54E,QAAQ7oB,SAAlC2tC,KAD+C8zD,iBAC/C9zD,KAAc+zD,QADiCD,iBACzChwG,OACViwG,UACAjwG,OAASiwG,SAETjwG,OAAOpB,QAAUoB,OAAO,KAAOA,OAAO,KACtCA,QAAU,EAAgB,GAAZA,OAAO,KAEzBo3B,QAAQx2B,QAAQZ,OAAOA,QACvBk8C,MAAQ9kB,QAAQx2B,QAAQs7C,OACxB9kB,QAAQ84E,QAAU94E,QAAQx2B,QAAQZ,UClUzBmwG,OACTrE,kBACAqD,kBACAiB,2BACA7hG,QACI85D,aAAc,SAAAA,aAACjxC,QAAS5+B,OACpB,IAAM63G,UAAYp4G,OAAOmgB,UAAWgf,QAAQ4yD,cAC5CxxF,MAAQ4wE,eAAeinC,UAAW73G,QAC5BmxG,gBAAkBzpG,KAAKG,IAAI7H,MAAMmxG,gBAAiB,GACpDnxG,MAAMkmG,cAAgB2R,UAAU3R,aAChCtnE,QAAQq1B,KAAKr1B,QAAQk5E,WAAW93G,QALN,IAAAoU,OAa1BpU,MALAqxG,OAR0Bj9F,OAQ1Bi9F,OACAhS,KAT0BjrF,OAS1BirF,KACAqS,eAV0Bt9F,OAU1Bs9F,eACAC,eAX0Bv9F,OAW1Bu9F,eACAF,aAZ0Br9F,OAY1Bq9F,aASJ,OAPA7yE,QAAQqzE,cACJZ,cACAhS,UACAqS,8BACAC,8BACAF,4BAEGzxG,QAGfiyG,cACIpiC,aAAc,SAAAA,aAACjxC,QAAS5+B,OACpB,IAAM63G,UAAYp4G,OAAOmgB,UAAWgf,QAAQm5E,mBAE5C,OADA/3G,MAAQ4wE,eAAeinC,UAAW73G,SAI1Cg4G,gBACAhiF,SAEA3rB,OACIwlE,aAAc,SAAAA,aAACjxC,QAAS5+B,OAGpB,OAFA4+B,QAAQx2B,QAAQiC,MAAMrK,OACtB4+B,QAAQo5E,aAAa,MACdh4G,QAIfuxG,cACA77C,YACA8/C,qTC/BiByC,kCAMjB,SAAAA,WAAaliG,OAAQ9T,wKAAci2G,CAAApxG,KAAAmxG,YAC/BnxG,KAAKw/E,IAAM/zE,cAEXzL,KAAKqxG,cAAgBl2G,aACrB6E,KAAKu9F,OAAS,KACdv9F,KAAKsxG,UACLtxG,KAAK4wG,WACL5wG,KAAKuxG,aAAc,EACnBvxG,KAAKwxG,mBACLxxG,KAAKgsG,eAEL,IAAMyF,OAAS3nC,kBAAmB9pE,KAAK4W,YAAY4H,iBAC7CkzF,aAAe5nC,eAAe2nC,OAAQxiG,QAEtC0iG,SAAWrvB,6BAAc,QACzB6T,YAAcub,aAAavb,YACjCn2F,KAAKwvG,gBAAkBvrB,qCAAsB0tB,SAAD,GAAA1lG,OAAckqF,YAAd,WAC5Cn2F,KAAK2vG,eAAiB1rB,qCAAsB0tB,SAAD,GAAA1lG,OAAckqF,YAAd,eAE3Ch7F,aAAa+vG,aAAa11E,SAASx1B,KAAKwvG,iBACxC,IAAMoC,KAAOz2G,aAAa+vG,aAAa3vE,WAAW,KAElDv7B,KAAKouG,kBAAqBn3E,MAAoB,EAAb26E,KAAK36E,MAAY,EAAGC,OAAQ06E,KAAK16E,OAAS,GAC3El3B,KAAKsuG,cAAgBnzG,aAAa+vG,aAAa3vE,WAAW,OAE1D6tC,sBAAsBppE,KAAM6wG,OAC5B7wG,KAAKiP,OAAOyiG,cAEZ1xG,KAAK6xG,OAAS7xG,KAAKkqG,YAAYlqG,KAAK0qF,SACpC1qF,KAAK8xG,MAAQ9xG,KAAKgxG,WAAWhxG,KAAK0qF,SAClC1qF,KAAK+xG,8UAoBL,OAAO/xG,2CAUP,OAAI8G,UAAOxH,QACPU,KAAK6xG,OAAL/qG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK6xG,yDAKZ,OADA7xG,KAAK4wG,WACE5wG,yCAUP,OAAI8G,UAAOxH,QACPU,KAAK8xG,MAALhrG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK8xG,8CAWZ,GAAIhrG,UAAOxH,OAAQ,CACf,IAAI+lE,IAAGv+D,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACD6pG,QAAU3wG,KAAKiP,SAASvO,OAQ9B,OAPIiwG,UACAtrC,IAAMsrC,SAEV3wG,KAAKsB,QAAQZ,OAAO2kE,KACpBrlE,KAAK4wG,QAAU5wG,KAAKsB,QAAQZ,SAC5BV,KAAKgyG,6BACLhyG,KAAKkxG,aAAa,MACXlxG,KAEX,OAAOA,KAAK4wG,wFAIZ5wG,KAAK8wG,wBAAwB7B,2BAA2BjvG,2DAUxD,OAAOA,KAAKqxG,8DASHpiG,QAAQ,IAEbiuC,KAIAjuC,OAJAiuC,KAeJ,OATcgtD,2BACVlsE,QAHA/uB,OAHA+uB,QAOAotB,aAJAn8C,OAFAm8C,aAOA3Q,SALAxrC,OADAwrC,SAOAyC,UACA35C,MANUvD,KAAKuD,QAOfxI,KAAMiF,KAAK4W,YAAY7b,mEAMb4hD,WAAYxlC,cAC1B,OAAIwlC,WACO,SAAA5a,OAAK,OAAI,SAAC3hC,IAAKnI,GAAN,OAAY0kD,WAAWxlC,aAAa/W,KAAMnI,EAAG8pC,SAE1D,kBAAM,SAAA3hC,KAAG,OAAI+W,aAAa/W,qEAIjCJ,KAAKkxG,aAAa,MAClBlxG,KAAKuD,UAFY,IAAAy/F,aASbhjG,KAAKiP,SALLs7F,OAJavH,aAIbuH,OACAhS,KALayK,aAKbzK,KACAqS,eANa5H,aAMb4H,eACAC,eAPa7H,aAOb6H,eACAF,aARa3H,aAQb2H,aAEJ3qG,KAAKmrG,cACDZ,cACAhS,UACAqS,8BACAC,8BACAF,sFAIUroG,KAAM0B,MAAOkrG,WAC3B,IAAM/qG,UAAYnE,KAAKmE,UACjB7C,MAAQtB,KAAKsB,QACnB,OAAO6C,UAAYA,UAAU+qG,UAAV/qG,CAAqB7B,KAAM0B,OAAU1C,MAAMq7C,WAAar7C,MAAMq7C,YAANr7C,CAAmBgB,MAAQA,mDAS9F2M,QAAQ,IAEZ0tC,WAGA1tC,OAHA0tC,WACAxlC,aAEAlI,OAFAkI,aACAioF,YACAnwF,OADAmwF,YAEE6S,UAAY/J,mBAAmB9I,aAErC,GAAI6S,UAAW,CACX,IAAM9kD,KAAO8kD,UAAUjyG,KAAKsB,SAG5B,OAFAtB,KAAKmE,UAAYnE,KAAKkyG,iBAAiBv1D,WAAYxlC,cAE5Cg2C,KAEX,OAAO,mEAW8C,IAAtCl2B,MAAsCnwB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAA9B,EAAGowB,OAA2BpwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAnBwK,QAAmBl3B,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAV+5E,SAAUzmG,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACjD06E,eAED9O,YACAp/F,KAAKiP,SADLmwF,YAiBH,OAdAp/F,KAAKwsG,gBAAiBv1E,YAAOC,cAAQ8G,kBAGjCkwE,YADA9O,cAAgB2I,sBAAO3I,cAAgB0I,wBACzBmF,YAAYjtG,MAAQutG,oBAAYqB,UAAUx6F,IAE1C64F,YAAYjtG,MAAQutG,oBAAYqB,UAAUrpG,IAI5DvF,KAAKmrG,cACDZ,OAAQ2D,cAEZluG,KAAKmyG,gBACLnyG,KAAKorG,cACEprG,2DASP,OAAOA,yDAGIoyG,WACX,GAAkB,OAAdA,gBAAoC5+E,IAAd4+E,UAG1B,OAAOpyG,KAAKsB,OAALtB,CAAaoyG,6DAUpB,OAAOpyG,KAAKmtD,OAAOyB,yEASO,QAAAmV,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAE1B,OADAhkE,KAAK6vG,eFpMwB,SAAxBwC,sBAAyBv6E,SAClC,IAAI81E,kBACIrD,OAAWzyE,QAAQqzE,eAAnBZ,OACAE,WAAyBF,OAAzBE,WAAYD,SAAaD,OAAbC,SAH0B8H,sBAW1CrD,2BAA2Bn3E,SAN3Bs3E,sBAL0CkD,sBAK1ClD,sBACAF,UAN0CoD,sBAM1CpD,UACAG,UAP0CiD,sBAO1CjD,UACAvB,mBAR0CwE,sBAQ1CxE,mBACAD,kBAT0CyE,sBAS1CzE,kBACAj/C,SAV0C0jD,sBAU1C1jD,SAEY2jD,YAAmCnD,sBAA3Cl4E,OAA4Bs7E,WAAepD,sBAAtBn4E,MAM7B,OAAsB,IAHPa,QAAQp3B,SAGZpB,OACA,MAOXsuG,eAAiBkB,iBAAiBtE,UAJ9BoD,eADAnD,WACiB4E,WAEEp4E,MAAOu7E,WAAYt7E,OAAQq7E,cAESt7E,MAAO22E,eAAe12E,QAEhE,IAAb03B,WACAg/C,gBAAmB32E,MAAO,EAAGC,OAAQ,KAGrC22E,oCACAj/C,kBACAg/C,8BACAE,sCACAsB,4CACAF,uBE+JyCpuG,WAArB,GAAsBd,MAAtBiM,OAA+B+C,UAC5ChP,KAAK6vG,2EAeZ,OALK7vG,KAAKkxG,iBACNlxG,KAAKkxG,aFjCsB,SAA1BuB,wBAA2B36E,SACpC,IAAMv0B,MAAQu0B,QAAQv0B,QAChBssG,eAAiB/3E,QAAQ61E,oBACvBvO,YAAgBtnE,QAAQ7oB,SAAxBmwF,YAHwCsT,uBAIjB56E,QAAQqzE,eAA/B5S,KAJwCma,uBAIxCna,KAAMoS,aAJkC+H,uBAIlC/H,aACNmD,mBAAuB+B,eAAvB/B,mBAER,IAAa,IAATvV,KACA,OACIthE,MAAO,EACPC,OAAQ,GAVgC,IAcjCy7E,cAAkB7E,mBAAzB72E,MAER,GAAImoE,cAAgB2I,sBAAO3I,cAAgB0I,wBAAQ,KAAA8K,uBAI3ChD,uBAAuB93E,QAAS+3E,eAAgBtsG,OAFhD0zB,QAF2C27E,uBAE3C37E,MACAC,SAH2C07E,uBAG3C17E,OAIJ,OACID,MAHcr2B,KAAKG,IAAIk2B,QAAO07E,eAI9Bz7E,iBAzBwC,IAAA27E,uBA+B5C3C,qBAAqBp4E,QAAS+3E,gBAF9B54E,MA7B4C47E,uBA6B5C57E,MACAC,OA9B4C27E,uBA8B5C37E,OAKJ,OACID,YACAC,OAJct2B,KAAKG,IAAIm2B,OAAQyzE,aAAegI,cAAgB,IEAxCF,CAAwBzyG,OAC1CA,KAAKkxG,gBAGFlxG,KAAKkxG,uDAQE,QAAAzvG,MAAAzB,KAAAkkE,MAAAp9D,UAAAxH,OAAPpG,MAAO,IAAA+Q,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAPjrE,MAAOirE,OAAAr9D,UAAAq9D,OACd,IAAMxnD,OAASzjB,MAAMoQ,IAAI,SAAA/Q,GAAC,OAAIkJ,MAAKH,QAAQ4jC,OAAO3sC,SAClD,OAAwB,IAAjBW,MAAMoG,OAAeqd,OAAO,GAAKA,+DAS3Bw2B,GAAIC,IACjB,IAEIguB,OAEArmE,KACAiF,KAAKiP,SADLlU,KAEEuG,MAAQtB,KAAKsB,QACbiC,MAAQjC,MAAMiC,QACdu+B,QAAUv+B,MAAM,GAAKA,MAAM,GAEjC,MPpUY,SOoURxI,MACAqmE,OAAS9/D,MAAMujC,aAAasO,GAAIC,KAC3B9xC,MAAMwgC,QAAUs/B,OAAOA,OAAO9hE,OAAS,GAAK8hE,OAAO,IACnD9/D,MAAMwgC,QAAUs/B,OAAO,GAAKA,OAAOA,OAAO9hE,OAAS,IAAMgC,MAAM+iC,eAGhE8O,GAAIC,wEAIZ,OAAOpzC,KAAKU,+EAGQ4sD,YACpB,OAAOA,+DAYP,OAAO,gDAWP,OACI90D,KAAMwH,KAAKxH,KACXuC,KAAMiF,KAAKjF,KACXwI,MAAOvD,KAAKuD,QACZ0L,OAAQjP,KAAKiP,kDAwBjB,OAJIjP,KAAKkvB,UACLlvB,KAAKmyG,gBJzLV,SAASW,WAAY/G,cACxB,IAAM98F,OAAS88F,aAAa98F,SACtBk8F,aAAeY,aAAaZ,eAC5BD,aAAea,aAAa5wG,eAAe+vG,aAC3Ch8E,MAAQ68E,aAAa78E,QACrB3rB,MAAQwoG,aAAaxoG,QACrB4pD,KAAO4+C,aAAa5+C,OACpB7rD,MAAQyqG,aAAazqG,QACrBZ,OAASqrG,aAAarrG,aAExBivG,eAIC5D,aAJD4D,eACAH,gBAGCzD,aAHDyD,gBACArrG,UAEC4nG,aAFD5nG,UACAmpD,WACCy+C,aADDz+C,WAGA8xC,YAQCnwF,OARDmwF,YACA5mG,KAOCyW,OAPDzW,KACA8qG,QAMCr0F,OANDq0F,QACAwH,QAKC77F,OALD67F,QACAT,gBAICp7F,OAJDo7F,gBACAhuE,UAGCptB,OAHDotB,UACAnI,GAECjlB,OAFDilB,GACAiiE,YACClnF,OADDknF,YAGAoC,KAGA4S,aAHA5S,KACAoS,aAEAQ,aAFAR,aACAJ,OACAY,aADAZ,OAEJ,GAAKhS,MAAS73F,OAAOpB,OAArB,CAIA,IAAMsvD,SAAWm9C,aAAaX,cAExBU,gBAAkBtpB,YAAYF,6BAAcpzD,OAAQ,KAAM68E,cAA7B,GAAA9/F,OAA+CowB,cAC9E,SAAA7iC,KAAG,OAAIA,IAAIyV,SAASilB,KAGxBg3E,aAAa11E,SAASg6E,iBAEtB,IAAMD,UAAYjuG,MAAMygC,OAASzgC,MAAMihC,UAAYjhC,MAAMZ,OAEzDyD,WAAagpD,KAAKxQ,WAAWx4C,UAAUmpD,YAAcH,KAAKG,cAAgBiiD,cAG1E,IAAM/C,eAAiB5rG,KAAKuL,IAAI5I,MAAM,GAAKA,MAAM,IAG3CwvG,WAAahH,aAAa+E,0BAA0B1B,sBAG1DtD,gBAAgBv9C,KAAK,YAArB,aAAAtiD,OAA+Cq3F,QAA/C,KAAAr3F,OAA0D6+F,QAA1D,MACAqB,+BAAiBJ,eACS,IAAtBxB,OAAOE,YAAqC,IAAb77C,SAC/Bk9C,gBAAgBp9C,aACC0wB,SAAS,KACTlX,GAAG,MAAO6jC,aAAaG,6BACvB9zG,KAAK+0D,MAEtB2+C,gBAAgB1zG,KAAK+0D,MAEzB2+C,gBAAgB79C,UAAU,SAASwpB,QAAnC,GAAAxrE,OAA8CkqF,YAA9C,WAAmE,GACnE2V,gBAAgB79C,UAAU,cAAcwpB,QAAxC,GAAAxrE,OAAmDkqF,YAAnD,gBAA6E,GAG5D2V,gBAAgB79C,UAAU,cAClCwpB,QAAT,GAAAxrE,OAAoBkqF,YAApB,WAAyC,GACxB1e,QADjB,GAAAxrE,OAC4BkqF,YAD5B,WAAAlqF,OACiDioB,KAAM,GAEvD23E,oCAAsBC,gBAAiBC,aAAcn9C,UAGrD,IAAMy9C,SAAW7pB,YAAYspB,gBAAiB,QAAStzG,MAA3B,GAAAyT,OAAqCkqF,YAArC,eACX5nC,KAAK,cAAe,UACpBkpB,QAFA,GAAAxrE,OAEWkqF,YAFX,eAAAlqF,OAEoCioB,KAAM,GAC1C5xB,KAAK,SAAA/J,GAAC,OAAIA,IAG3B8zG,SAAS50B,QAAQyxB,QAASyB,cAG1B,IAAM4B,YAAcC,eAAiB,EAGrCtB,aAAa11E,SAASm6E,gBACtB,IAAMqD,cAAgB9H,aAAa3vE,WAAW/iC,MACxCwtB,UACF+sF,sBACAnkD,kBACAy7C,gCACAiC,eAAgB0G,cAAc97E,OAC9By7E,cAAeK,cAAc/7E,MAC7B6zE,gBACAxH,gBACAiJ,wBACAC,eAAgBT,aAAaS,kBAGjCJ,6BAAeC,SAAUjN,YAAap5E,WIsF9B8sF,CAAW9yG,OAERA,6CAWP,OADAsiF,6BAActiF,KAAKkvB,SAAS0T,SACrB5iC,uDASP,OAAOA,mDAUP,IAAMuD,MAAQvD,KAAKuD,QACnB,OAAOA,MAAM,GAAKA,MAAM,uEAUxB,IAAMjC,MAAQtB,KAAKsB,QACbiC,MAAQjC,MAAMiC,QACd7C,OAASY,MAAMZ,SAErB,OAAOE,KAAKuL,IAAI5I,MAAM,GAAKA,MAAM,KAAO7C,OAAO,GAAKA,OAAO,0DAU3D,OAAOshF,QAAQixB,IAAIjzG,KAAK+xG,sGAIxB,IAAIltB,UACEY,QAAU,IAAIzD,QAAQ,SAAC57D,SACzBy+D,UAAYz+D,UAIhB,OAFApmB,KAAK+xG,uBAAuBvwG,KAAKikF,SAE1B,WACHZ,4CAjFJ,OAAO7kF,KAAKw/E,4DAtUZ,OAAOhhE,4VC9DM00F,mhBAEJjkG,QAAQ,IAEb1L,MACA0L,OADA1L,MAEE4mG,aAAeL,SAASr2D,OAE9B,OADAzzC,KAAK6xG,OAAS1H,eAAe5mG,MAAMA,OAC5BvD,KAAK6xG,2DAGDO,WACX,OAAOpyG,KAAK6xG,OAAOO,WAAa,yDAGpB1xG,QACZ,OAAOA,4TChBMyyG,wfAEJlkG,QAAQ,IAEb1L,MAEA0L,OAFA1L,MACA25C,KACAjuC,OADAiuC,KAEEitD,aAAeL,SAAS5nE,IAE9B,OADAliC,KAAK6xG,OAAS1H,eAAe5mG,MAAMA,OAAO25C,KAAKA,MACxCl9C,KAAK6xG,2DAGDO,WACX,OAAIA,WAAa,EACN,EAGJpyG,KAAK6xG,OAAOO,WAAa,yDAGpB1xG,QACZ,OAAIA,OAAO,IAAM,GACLE,KAAKG,IAAI,EAAGL,OAAO,IAAKE,KAAKG,IAAI,EAAGL,OAAO,KAC9CA,0UCvBI0yG,wfAEJnkG,QAAQ,IAEb1L,MAEA0L,OAFA1L,MACAk3C,SACAxrC,OADAwrC,SAEE0vD,aAAeL,SAAS90F,IAE9B,OADAhV,KAAK6xG,OAAS1H,eAAe5mG,MAAMA,OAAOk3C,SAASA,UAC5Cz6C,KAAK6xG,2DAGDO,WACX,OAAOpyG,KAAK6xG,OAAOO,WAAa,yDAGpB1xG,QACZ,OAAOA,28CCRR,IAAM2yG,iBAAeC,8BAAAC,oBACvB3K,IAAMuK,qBADiBG,8BAAAC,iBAEvB1K,IAAMuK,qBAFiBE,8BAAAC,iBAGvBjL,OAAS4K,2BAHcK,kBAMPC,mDACjB,SAAAA,cAAavkG,OAAQ9T,cAAc,mKAAAs4G,CAAAzzG,KAAAwzG,eAC/BvkG,OAAO0tC,WAAa1tC,OAAO0tC,YAAe,SAAAv8C,KAAG,OAAIA,KADlBszG,yCAAA1zG,KAAA2zG,8BAAAH,eAAAp7G,KAAA4H,KAEzBiP,OAAQ9T,sZAHqBg2G,qUAW1BliG,QAAQ,IAEbiuC,KAIAjuC,OAJAiuC,KACAlf,QAGA/uB,OAHA+uB,QACAotB,aAEAn8C,OAFAm8C,aACA3Q,SACAxrC,OADAwrC,SAEEl3C,MAAQvD,KAAKuD,QACbqwG,gBAAkBP,gBAAgBjoD,cAExCprD,KAAK6zG,cAAgB,IAAID,gBACzB,IAAItyG,MAAQtB,KAAK6zG,cAAc3J,aAC3BlsE,gBACAyc,kBACAyC,UACA35C,cAIJ,OADAjC,MAAQA,MAAMs7C,2DAeHw1D,WACX,GAAkB,OAAdA,gBAAoC5+E,IAAd4+E,UAG1B,OAAOpyG,KAAK6zG,cAAchc,cAAcua,6DAQ7B,IAAA0B,mBAIP9zG,KAAKmrG,eAFLP,eAFOkJ,mBAEPlJ,eACAC,eAHOiJ,mBAGPjJ,eAEE19C,KAAOntD,KAAKmtD,OAIlB,OAHAA,KAAKK,eAAiC,IAAnBo9C,eAA2B,EAAI,GAClDz9C,KAAKM,eAAiC,IAAnBo9C,eAA2B,EAAI,GAE3C19C,KAAKyB,iDAURluD,SACJ,OAAIA,SAAUA,QAAOpB,QACjBmxG,uBAAuBzwG,KAAMU,SAC7BV,KAAKgyG,6BACLhyG,KAAKkxG,aAAa,MACXlxG,OACAU,UACPV,KAAK4wG,YACA5wG,KAAK4wG,uEAWuC,IAAtC35E,MAAsCnwB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAA9B,EAAGowB,OAA2BpwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAnBwK,QAAmBl3B,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAV+5E,SAAUzmG,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACjD06E,eAED9O,YACAp/F,KAAKiP,SADLmwF,YAiBH,OAdAp/F,KAAKwsG,gBAAiBv1E,YAAOC,cAAQ8G,kBAGjCkwE,YADA9O,cAAgB2I,sBAAO3I,cAAgB0I,wBACzBmF,YAAYjtG,MAAQutG,oBAAYqB,UAAUx6F,IAE1C64F,YAAYjtG,MAAQutG,oBAAYqB,UAAUrpG,IAI5DvF,KAAKmrG,cACDZ,OAAQ2D,cAEZluG,KAAKmyG,gBACLnyG,KAAKorG,cACEprG,2DAUM,IAETstD,WACAttD,KAAKiP,SADLq+C,WAGAs9C,eACA5qG,KAAKmrG,eADLP,eAEEz9C,KAAOntD,KAAKmtD,OAElB,OAAKy9C,eAKDt9C,YACAA,sBAAsBrjD,OAASjK,KAAKmtD,OAAOG,WAAWA,YAC/CttD,OAEXmtD,KAAKG,WAAWttD,KAAKyuG,iBAEdzuG,OAVHmtD,KAAKG,eACEttD,4DAmBX,IADa+zG,cAKT/zG,KAAKiP,SAFLmwF,YAHS2U,cAGT3U,YACA9xC,WAJSymD,cAITzmD,WAEE/pD,MAAQvD,KAAKuD,QACb4pD,KAAOntD,KAAKmtD,OAEZq/C,eAAiB5rG,KAAKuL,IAAI5I,MAAM,GAAKA,MAAM,IAE3CwvG,WAAa/yG,KAAK8wG,0BAA0B1B,sBAElD,OAAI9hD,WACOH,KAAK7rD,QAAQygC,MAAMurB,YNxJN,SAAnB0mD,iBAAoBxH,eAAgByH,SAAU9mD,KAAM4+C,cAC7D,IAAMhqE,MAAQorB,KAAK7rD,QAAQygC,QACnB2oE,cAAkBqB,aAAa98F,SAA/By7F,cACFwJ,WAAanyE,MAAMziC,OACrB60G,eAAiBD,WAQrB,OANIA,YAAyB,IAAXD,UAAkBzH,iBAChC2H,eAAiBvzG,KAAKgR,MAAM46F,gBAA6B,IAAXyH,YAGlDE,eAAiBvzG,KAAKC,IAAI6pG,cAAe9pG,KAAKG,IAAI,EAAGozG,iBAE9ChnD,KAAK7rD,QAAQygC,MAAMoyE,gBMgJfH,CAAiBxH,eAFbuG,WAAW3T,cAAgB0I,yBAAU1I,cAAgB2I,qBAAM,QAAU,UAE9B56C,KAAMntD,0EAIxD,OAAO8vE,gBAAgB9vE,KAAKiP,SAASq+C,sEAWvB29C,UAAU,IAEpB7L,YACAp/F,KAAKiP,SADLmwF,YAOAoL,SAHAxqG,KAAKmrG,eADLZ,OAIAC,SAEEr9C,KAAOntD,KAAKmtD,OACZprB,MAAQorB,KAAK7rD,QAAQygC,QAZHqyE,sBAaEp0G,KAAK8wG,0BAA0BjD,kBAAkB,GAAnE52E,MAbgBm9E,sBAahBn9E,MAAOC,OAbSk9E,sBAaTl9E,OAWf,OAVAi2B,KAAKI,cAAc,SAACh1D,GAChB,GAAIA,IAAMwpC,MAAM,GAAI,CAChB,GAAKq9D,cAAgB4I,uBAAQ5I,cAAgB6I,uBACzC,uBAAAh8F,OAAyBirB,OAAU,EAAnC,OAEJ,IAAKkoE,cAAgB2I,sBAAO3I,cAAgB0I,2BAAY0C,SACpD,mBAAAv+F,OAAoBgrB,MAAQ,EAA5B,QAAqC,EAArC,OAEN,MAAO,KAENg0E,+CAzKP,OAAO3C,qtDCpDM+L,ssBAAiBlD,iTASrB5tG,OACT,IAAMjC,MAAKgzG,KAAAC,yBAAAF,SAAAt6G,WAAA,cAAAiG,MAAA5H,KAAA4H,KAAqBuD,OACxBy6B,QAAYh+B,KAAKiP,SAAjB+uB,QAIR,MAHuB,iBAAZA,SACP18B,MAAM08B,QAAQA,SAEX18B,oEAsB8C,IAAtC21B,MAAsCnwB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAA9B,EAAGowB,OAA2BpwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAnBwK,QAAmBl3B,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAV+5E,SAAUzmG,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACjD06E,eAED9O,YACAp/F,KAAKiP,SADLmwF,YAgBH,OAbAp/F,KAAKwsG,gBAAiBv1E,YAAOC,cAAQ8G,kBAGjCkwE,YADA9O,cAAgB2I,sBAAO3I,cAAgB0I,wBACzBmF,YAAYjtG,MAAQutG,oBAAYnpE,KAAKhwB,IAErC64F,YAAYjtG,MAAQutG,oBAAYnpE,KAAK7+B,IAIvDvF,KAAKmrG,cACDZ,OAAQ2D,cAEZluG,KAAKmyG,gBACEnyG,2DAUP,IACI01B,WADA+0E,WAAa,GAEX/pG,OAASV,KAAKU,SACZwqG,aAAiBlrG,KAAKqxG,cAAtBnG,aAJK6I,cAKsB/zG,KAAKiP,SAAhCq+C,WALKymD,cAKLzmD,WAAY3Q,WALPo3D,cAKOp3D,WACZ4tD,OAAWvqG,KAAKmrG,eAAhBZ,OANKiK,oBAO8Cx0G,KAAK0uG,gBAAhDpB,YAPHkH,oBAOLt9E,OAA4Bm2E,WAPvBmH,oBAOgBv9E,MAAmBsB,OAPnCi8E,oBAOmCj8E,OAPnCk8E,kBAQa3F,iBAAiBvE,OAAOC,SAAU6C,WAAYC,aAAhEr2E,MARKw9E,kBAQLx9E,MAAOC,OARFu9E,kBAQEv9E,OACTq0E,cAAgB5uD,YAAe,SAAAv8C,KAAG,OAAIA,KAO5C,GALAktD,YAActtD,KAAKmtD,OAAOG,WAAWA,YACrCm9C,WAAan9C,YAAc5sD,OAE3BwqG,aAAa11E,SAASx1B,KAAKwvG,iBAEvB9uG,QAAUA,OAAOpB,OAAQ,CACzB,IAAMqd,OAAS2wC,YAAc5sD,OAC7B+pG,WAAa9tF,OAAOrT,IAAI,SAAC/Q,EAAGN,GAIxB,OAHAizG,aAAa/yE,uBAAsB,GAEnCzC,WAAaw1E,aAAa9yE,aAAamzE,cAAchzG,EAAGN,EAAG0kB,QAASsa,MAAOC,OAAQqB,QAC5E2yE,aAAat0F,YAAY6e,YAAYC,cAIpD,OADA11B,KAAKyqG,WAAWA,YACTzqG,+DAeP,OALKA,KAAKkxG,iBACNlxG,KAAKkxG,aAAad,0BAAmBpwG,OP/FxB,SAAZ00G,UAAa58E,SACtB,IAAI1jB,EAAI,EACJ7O,EAAI,EACF2rG,aAAep5E,QAAQo5E,eACvBjiG,OAAS6oB,QAAQ7oB,SAEnBmwF,YAGAnwF,OAHAmwF,YACAkE,QAEAr0F,OAFAq0F,QACAwH,QACA77F,OADA67F,QAEA1L,cAAgB4I,wBAChB5zF,OAAgBof,IAAZ8vE,QAAwB4N,aAAaj6E,MAAQqsE,SAEjDlE,cAAgB2I,uBAChBxiG,OAAgBiuB,IAAZs3E,QAAwBoG,aAAah6E,OAAS4zE,SAEtDhzE,QAAQ7oB,QAASq0F,QAASlvF,EAAG02F,QAASvlG,IOgF9BmvG,CAAU10G,MACVA,KAAKkxG,gBAEFlxG,KAAKkxG,qEASZ,OAAOlxG,KAAKmtD,OAAO7rD,QAAQZ,6DAU3B,OAAOV,KAAKsB,QAAQ+iC,8DAST,IAAAswE,oBAIP30G,KAAKmrG,eAFLP,eAFO+J,oBAEP/J,eACAC,eAHO8J,oBAGP9J,eAEE19C,KAAOntD,KAAKmtD,OAIlB,OAFAA,KAAKK,cAAco9C,eAAiB,EAAI,GACxCz9C,KAAKM,cAAco9C,eAAiB,EAAI,GACjC19C,KAAKyB,mDAQE,QAAAntD,MAAAzB,KAAA+jE,KAAAj9D,UAAAxH,OAAPpG,MAAO,IAAA+Q,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAP9qE,MAAO8qE,MAAAl9D,UAAAk9D,MACd,IAAMrnD,OAASzjB,MAAMoQ,IAAI,SAAA/Q,GAAC,OAAIkJ,MAAKH,QAAQ4jC,OAAO3sC,SAClD,OAAwB,IAAjBW,MAAMoG,OAAeqd,OAAO,IAAMA,OAAO,GAAGtY,WAAasY,OAAOrT,IAAI,SAAA/Q,GAAC,OAAIA,EAAE8L,mDA/HlF,OAAOkkG,yuDClBMqM,yCAEjB,SAAAA,WAAwB,IAAApU,iBAAA/+F,8JAAAozG,CAAA70G,KAAA40G,UAAA,QAAA7wC,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAqzG,oCAAA90G,MAAAwgG,iBAAAuU,yBAAAH,WAAAx8G,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJu/F,SAAW/5F,IAFI/S,8XAFU0vG,iTAcrB5tG,OACT,IAAIjC,MAAQ0zG,cAAAD,yBAAAH,SAAA76G,WAAA,cAAAiG,MAAA5H,KAAA4H,KAAkBuD,OAG9B,OADAjC,MAAQA,MAAMs7C,qDAqBN3tC,QAAQ,IAEZ0tC,WAEA1tC,OAFA0tC,WACAyiD,YACAnwF,OADAmwF,YAEE6S,UAAY/J,mBAAmB9I,aAErC,GAAI6S,UAAW,CACX,IAAM9kD,KAAO8kD,UAAUjyG,KAAKsB,SAE5B,OADAtB,KAAKmE,UAAYnE,KAAKkyG,iBAAiBv1D,YAChCwQ,KAEX,OAAO,+DAGOxQ,YACd,OAAIA,WACO,SAAA5a,OAAK,OAAI,SAAC3hC,IAAKnI,GAAN,OAAY0kD,WAAWv8C,IAAKnI,EAAG8pC,SAE5C,uDASI,IAAA+xE,mBAIP9zG,KAAKmrG,eAFLP,eAFOkJ,mBAEPlJ,eACAC,eAHOiJ,mBAGPjJ,eAEE19C,KAAOntD,KAAKmtD,OAGlB,OAFAA,KAAKK,eAAiC,IAAnBo9C,eAA2B,EAAI,GAClDz9C,KAAKM,eAAiC,IAAnBo9C,eAA2B,EAAI,GAClDmK,cAAAD,yBAAAH,SAAA76G,WAAA,cAAAiG,MAAA5H,KAAA4H,4DAUA,OAAOA,KAAKiP,SAASq+C,YAActtD,KAAKsB,QAAQygC,gDAU3Ch2B,MAEL,OADA/L,KAAKuuG,SAAW3tG,KAAKC,IAAIb,KAAKuuG,SAAUxiG,MACjC/L,2CAUHU,SACJ,OAAIA,SACA+vG,uBAAuBzwG,KAAMU,SAC7BV,KAAKgyG,6BACLhyG,KAAKkxG,aAAa,MACXlxG,MACFA,KAAK4wG,kEAcd,OAJK5wG,KAAKkxG,iBACNlxG,KAAKkxG,aAAad,0BAAmBpwG,OACrCA,KAAKkxG,gBAEFlxG,KAAKkxG,mFAIZ,OAAOphC,gBAAgB9vE,KAAKiP,SAASq+C,0EAWgB,IAAtCr2B,MAAsCnwB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAA9B,EAAGowB,OAA2BpwB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAnBwK,QAAmBl3B,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAV+5E,SAAUzmG,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACjD06E,eAED9O,YACAp/F,KAAKiP,SADLmwF,YAiBH,OAdAp/F,KAAKwsG,gBAAiBv1E,YAAOC,cAAQ8G,kBAGjCkwE,YADA9O,cAAgB2I,sBAAO3I,cAAgB0I,wBACzBmF,YAAYjtG,MAAQutG,oBAAY3mD,KAAKxyC,IAErC64F,YAAYjtG,MAAQutG,oBAAY3mD,KAAKrhD,IAIvDvF,KAAKmrG,cACDZ,OAAQ2D,cAEZluG,KAAKmyG,gBACLnyG,KAAKorG,cACEprG,2DAUP,IAAIyqG,WACA/0E,WAFSu/E,cAGsBj1G,KAAKiP,SAAhC0tC,WAHKs4D,cAGLt4D,WAAY2Q,WAHP2nD,cAGO3nD,WACZi9C,OAAWvqG,KAAKmrG,eAAhBZ,OAJKiK,oBAK8Cx0G,KAAK0uG,gBAAhDpB,YALHkH,oBAKLt9E,OAA4Bm2E,WALvBmH,oBAKgBv9E,MAAmBsB,OALnCi8E,oBAKmCj8E,OACxC2yE,aAAiBlrG,KAAKqxG,cAAtBnG,aACFxqG,OAASV,KAAKyuG,gBACdntG,MAAQtB,KAAKsB,QACnBgsD,YAActtD,KAAKmtD,OAAOG,WAAWA,YATxB,IAAAmnD,kBAWa3F,iBAAiBvE,OAAOC,SAAU6C,WAAYC,aAAhEr2E,MAXKw9E,kBAWLx9E,MAAOC,OAXFu9E,kBAWEv9E,OAEfuzE,WAAan9C,YAAc5sD,OAC3B,IAAM6qG,cAAgB5uD,YAAcr7C,MAAMq7C,aAI1C,GAFAuuD,aAAa11E,SAASx1B,KAAKwvG,iBAEvB9uG,QAAUA,OAAOpB,OAAQ,CACzB,IAAMqd,OAAS2wC,YAAc5sD,OAC7B+pG,WAAa9tF,OAAOrT,IAAI,SAAC/Q,EAAGN,GAIxB,OAHAizG,aAAa/yE,uBAAsB,GAEnCzC,WAAaw1E,aAAa9yE,aAAamzE,cAAchzG,EAAGN,EAAG0kB,QAASsa,MAAOC,OAAQqB,QAC5E2yE,aAAat0F,YAAY6e,YAAYC,cAIpD,OADA11B,KAAKyqG,WAAWA,YACTzqG,2CAzKP,OAAOwoG,qBC3CF0M,WACTC,MAAQ/kE,IAAK,SAAUF,IAAK,eAC5BklE,WAAahlE,IAAK,SAAUF,IAAK,eACjCmlE,SAAWjlE,IAAK,SAAUF,IAAK,eAC/BolE,UAAYllE,IAAK,SAAUF,IAAK,cAChCqlE,eAAiBnlE,IAAK,SAAUF,IAAK,eACrCslE,iBAAmBplE,IAAK,SAAUF,IAAK,cACvCulE,aAAerlE,IAAK,SAAUF,IAAK,eACnCwlE,QAAUtlE,IAAK,SAAUF,IAAK,eAC9BylE,YAAcvlE,IAAK,SAAUF,IAAK,eAClC0lE,YAAcxlE,IAAK,SAAUF,IAAK,eAClC2lE,WAAazlE,IAAK,SAAUF,IAAK,aACjC4lE,SAAW1lE,IAAK,SAAUF,IAAK,aAC/B6lE,WAAa3lE,IAAK,SAAUF,IAAK,aACjC8lE,SAAW5lE,IAAK,SAAUF,IAAK,WAC/B+lE,KAAO7lE,IAAK,SAAUF,IAAK,WAC3BgmE,WAAa9lE,IAAK,SAAUF,IAAK,YACjCimE,QAAU/lE,IAAK,SAAUF,IAAK,aAC9BkmE,OAAShmE,IAAK,SAAUF,IAAK,cAC7BmmE,YAAcjmE,IAAK,SAAUF,IAAK,aAClComE,QAAUlmE,IAAK,SAAUF,IAAK,aAC9BqmE,MAAQnmE,IAAK,SAAUF,IAAK,aAC5BsmE,QAAUpmE,IAAK,SAAUF,IAAK,aAC9BumE,aAAermE,IAAK,SAAUF,IAAK,eACnCwmE,cAAgBtmE,IAAK,SAAUF,IAAK,eACpCymE,sBAAwBvmE,IAAK,SAAUF,IAAK,eAC5C0mE,YAAcxmE,IAAK,SAAUF,IAAK,eAClC2mE,UAAYzmE,IAAK,SAAUF,IAAK,eAChC4mE,WAAa1mE,IAAK,SAAUF,IAAK,eACjC6mE,eAAiB3mE,IAAK,SAAUF,IAAK,eACrC8mE,OAAS5mE,IAAK,SAAUF,IAAK,eAC7B+mE,WAAa7mE,IAAK,SAAUF,IAAK,eACjCgnE,UAAY9mE,IAAK,SAAUF,IAAK,eAChCinE,gBAAkB/mE,IAAK,SAAUF,IAAK,eACtCknE,QAAUhnE,IAAK,SAAUF,IAAK,eAC9BmnE,aAAejnE,IAAK,SAAUF,IAAK,eACnConE,OAASlnE,IAAK,SAAUF,IAAK,eAC7BqnE,WAAannE,IAAK,SAAUF,IAAK,eACjCsnE,KAAOpnE,IAAK,SAAUF,IAAK,eAC3BunE,WAAarnE,IAAK,SAAUF,IAAK,eACjCwnE,YAActnE,IAAK,SAAUF,IAAK,cAClCynE,WAAavnE,IAAK,SAAUF,IAAK,cACjC0nE,eAAiBxnE,IAAK,SAAUF,IAAK,cACrC2nE,MAAQznE,IAAK,SAAUF,IAAK,cAC5B4nE,WAAa1nE,IAAK,SAAUF,IAAK,cACjC6nE,aAAe3nE,IAAK,SAAUF,IAAK,aACnC8nE,QAAU5nE,IAAK,SAAUF,IAAK,aAC9B+nE,OAAS7nE,IAAK,SAAUF,IAAK,aAC7BgoE,QAAU9nE,IAAK,SAAUF,IAAK,WAC9BioE,gBAAkB/nE,IAAK,SAAUF,IAAK,aACtCkoE,OAAShoE,IAAK,SAAUF,IAAK,aAC7BmoE,WAAajoE,IAAK,SAAUF,IAAK,cACjCooE,aAAeloE,IAAK,SAAUF,IAAK,cACnCqoE,WAAanoE,IAAK,SAAUF,IAAK,aACjCsoE,MAAQpoE,IAAK,SAAUF,IAAK,WAC5BuoE,WAAaroE,IAAK,SAAUF,IAAK,aACjCwoE,YAActoE,IAAK,SAAUF,IAAK,aAClCyoE,aAAevoE,IAAK,SAAUF,IAAK,cACnC0oE,aAAexoE,IAAK,SAAUF,IAAK,aACnC2oE,mBAAqBzoE,IAAK,SAAUF,IAAK,aACzC4oE,YAAc1oE,IAAK,SAAUF,IAAK,eAClC6oE,WAAa3oE,IAAK,SAAUF,IAAK,eACjC8oE,cAAgB5oE,IAAK,SAAUF,IAAK,eACpC+oE,gBAAkB7oE,IAAK,SAAUF,IAAK,cACtCgpE,UAAY9oE,IAAK,SAAUF,IAAK,aAChCipE,aAAe/oE,IAAK,SAAUF,IAAK,aACnCkpE,OAAShpE,IAAK,SAAUF,IAAK,WAC7BmpE,WAAajpE,IAAK,SAAUF,IAAK,WACjCopE,kBAAoBlpE,IAAK,SAAUF,IAAK,eACxCqpE,MAAQnpE,IAAK,SAAUF,IAAK,aAC5BspE,MAAQppE,IAAK,SAAUF,IAAK,aAC5BupE,WAAarpE,IAAK,SAAUF,IAAK,eACjCwpE,eAAiBtpE,IAAK,SAAUF,IAAK,eACrCypE,YAAcvpE,IAAK,SAAUF,IAAK,eAClC0pE,WAAaxpE,IAAK,SAAUF,IAAK,cACjC2pE,iBAAmBzpE,IAAK,SAAUF,IAAK,cACvC4pE,eAAiB1pE,IAAK,SAAUF,IAAK,aACrC6pE,eAAiB3pE,IAAK,SAAUF,IAAK,cACrC8pE,WAAa5pE,IAAK,SAAUF,IAAK,cACjC+pE,UAAY7pE,IAAK,SAAUF,IAAK,aAChCgqE,MAAQ9pE,IAAK,SAAUF,IAAK,aAC5BiqE,gBAAkB/pE,IAAK,SAAUF,IAAK,eACtCkqE,YAAchqE,IAAK,SAAUF,IAAK,eAClCmqE,WAAajqE,IAAK,SAAUF,IAAK,eACjCoqE,SAAWlqE,IAAK,SAAUF,IAAK,eAC/BqqE,cAAgBnqE,IAAK,SAAUF,IAAK,eACpCsqE,aAAepqE,IAAK,SAAUF,IAAK,aACnCuqE,YAAcrqE,IAAK,SAAUF,IAAK,cAClCwqE,gBAAkBtqE,IAAK,SAAUF,IAAK,eACtCyqE,WAAavqE,IAAK,SAAUF,IAAK,cACjC0qE,WAAaxqE,IAAK,SAAUF,IAAK,cACjC2qE,MAAQzqE,IAAK,SAAUF,IAAK,WAC5B4qE,YAAc1qE,IAAK,SAAUF,IAAK,WAClC6qE,UAAY3qE,IAAK,SAAUF,IAAK,WAChC8qE,MAAQ5qE,IAAK,SAAUF,IAAK,WAC5B+qE,cAAgB7qE,IAAK,SAAUF,IAAK,aACpCgrE,UAAY9qE,IAAK,SAAUF,IAAK,eAChCirE,SAAW/qE,IAAK,SAAUF,IAAK,eAC/BkrE,MAAQhrE,IAAK,SAAUF,IAAK,eAC5BmrE,QAAUjrE,IAAK,SAAUF,IAAK,eAC9BorE,QAAUlrE,IAAK,SAAUF,IAAK,eAC9BqrE,SAAWnrE,IAAK,SAAUF,IAAK,aAC/BsrE,SAAWprE,IAAK,SAAUF,IAAK,aAC/BurE,cAAgBrrE,IAAK,SAAUF,IAAK,cACpCwrE,cAAgBtrE,IAAK,SAAUF,IAAK,eACpCyrE,YAAcvrE,IAAK,SAAUF,IAAK,cAClC0rE,YAAcxrE,IAAK,SAAUF,IAAK,aAClC2rE,YAAczrE,IAAK,SAAUF,IAAK,cAClC4rE,aAAe1rE,IAAK,SAAUF,IAAK,aACnC6rE,QAAU3rE,IAAK,SAAUF,IAAK,aAC9B8rE,QAAU5rE,IAAK,SAAUF,IAAK,YAC9B+rE,eAAiB7rE,IAAK,SAAUF,IAAK,aACrCgsE,WAAa9rE,IAAK,SAAUF,IAAK,cACjCisE,iBAAmB/rE,IAAK,SAAUF,IAAK,eACvCksE,OAAShsE,IAAK,SAAUF,IAAK,eAC7BmsE,MAAQjsE,IAAK,SAAUF,IAAK,eAC5BosE,UAAYlsE,IAAK,SAAUF,IAAK,eAChCqsE,WAAansE,IAAK,SAAUF,IAAK,eACjCssE,OAASpsE,IAAK,SAAUF,IAAK,eAC7BusE,WAAarsE,IAAK,SAAUF,IAAK,eACjCwsE,YAActsE,IAAK,SAAUF,IAAK,eAClCysE,YAAcvsE,IAAK,SAAUF,IAAK,eAClC0sE,UAAYxsE,IAAK,SAAUF,IAAK,eAChC2sE,OAASzsE,IAAK,SAAUF,IAAK,eAC7B4sE,SAAW1sE,IAAK,SAAUF,IAAK,eAC/B6sE,aAAe3sE,IAAK,SAAUF,IAAK,eACnC8sE,OAAS5sE,IAAK,SAAUF,IAAK,eAC7B+sE,cAAgB7sE,IAAK,SAAUF,IAAK,eACpCgtE,OAAS9sE,IAAK,SAAUF,IAAK,eAC7BitE,eAAiB/sE,IAAK,SAAUF,IAAK,eACrCktE,WAAahtE,IAAK,SAAUF,IAAK,eACjCmtE,WAAajtE,IAAK,SAAUF,IAAK,eACjCotE,WAAaltE,IAAK,SAAUF,IAAK,eACjCqtE,QAAUntE,IAAK,SAAUF,IAAK,eAC9BstE,UAAYptE,IAAK,SAAUF,IAAK,eAChCutE,MAAQrtE,IAAK,SAAUF,IAAK,eAC5BwtE,SAAWttE,IAAK,SAAUF,IAAK,eAC/BytE,gBAAkBvtE,IAAK,SAAUF,IAAK,eACtC0tE,WAAaxtE,IAAK,SAAUF,IAAK,eACjC2tE,eAAiBztE,IAAK,SAAUF,IAAK,YACrC4tE,OAAS1tE,IAAK,SAAUF,IAAK,UCtIpB6tE,SACT,UACA,UACA,UACA,UACA,UACA,WAGSC,uBAAyB,UAEzBC,gBACT16G,MAAOw6G,QACP7kH,MAAO6kH,QAAQ,GACft8E,MAAM,EACN7Y,MAAO,EACP7tB,KAAMutG,weCjBH,IAAM4V,mBAAe,SAAfA,aAAeC,QAAM,cAAAlyG,OAAwB,IAAZkyG,OAAO,GAAnB,KAAAlyG,OAA2C,IAAZkyG,OAAO,GAAtC,MAAAlyG,OAA+D,IAAZkyG,OAAO,GAA1D,MAAAlyG,OAChCkyG,OAAO,IAAM,EADmB,MAGrBC,mBAAqB,SAArBA,mBAAqBC,YAAU,OAAKA,WAAW9+G,MAAM,UACjDyT,OAAO,SAACoB,EAAGja,GAAJ,SAAA8R,OAAamI,GAAbnI,OAAiB9R,EAAE4gC,OAAO,GAAGggB,eAA7B9uC,OAA6C9R,EAAEogB,MAAM,KAAM,KAEtE+jG,wBAAoB,SAApBA,kBAAqBnkH,EAAGokH,cACjC,IAAI5uE,MAAQ,GACZ,GAAiB,iBAANx1C,EAGP,GADAA,GADAA,EAAIA,EAAEoI,QAAQ,KAAM,KACdkB,chBUK,QgBTPinE,YAAYvwE,IhBQJ,SgBRkBuwE,YAAYvwE,GAEtCw1C,QADAA,MAAQx1C,EAAEuP,MAAM,mBACD,GAAK,IAAKimC,MAAM,GAAK,IAAKA,MAAM,GAAK,IAAKA,MAAM,IAAM,QAClE,GhBII,QgBJA+6B,YAAYvwE,GACnBw1C,MtKklCK,SAAX6uE,SAAYpuE,KACd,IAAM3M,OAAS,4CAA4CmM,KAAKQ,KAE1Dr3C,EAAIsK,SAASogC,OAAO,GAAI,IACxB14B,EAAI1H,SAASogC,OAAO,GAAI,IACxBt+B,EAAI9B,SAASogC,OAAO,GAAI,IACxBppC,EAAIopC,OAAO,GAAKpgC,SAASogC,OAAO,GAAI,IAAM,EAChD,OAAOgnC,SAAS1xE,EAAGgS,EAAG5F,EAAG9K,GsKzlCTmkH,CAASrkH,QACd,GhBCI,QgBDAuwE,YAAYvwE,GAAY,CAC/B,IAAMwwE,IAAMxwE,EAAEqL,UAAUrL,EAAEwN,QAAQ,KAAO,EAAGxN,EAAEyhC,YAAY,MAAMr8B,MAAM,QACtEowC,MAAQ86B,SAAQ3pE,WAAR,EAAA29G,wBAAY9zC,WACbuqC,UAAUkJ,mBAAmBjkH,MACpCw1C,MAAQ86B,SAAQ3pE,WAAR,EAAA29G,wBAAYvJ,UAAUkJ,mBAAmBjkH,IAAI+1C,IAAI3wC,MAAM,aAKnEowC,MAHSx1C,aAAa8P,MAGd9P,EAFAswE,SAAS8zC,cAIrB,OAAO5uE,OAGEkhE,aACT5hG,QACI85D,aAAc,SAAAA,aAACjxC,QAAS7oB,QACpB,IAAMwiG,OAAS3nC,kBAAmBhyC,QAAQlhB,YAAY4H,iBAClDvP,OAAOlU,OAASutG,mBAChBr5F,OAAO1L,MAAQ0L,OAAO1L,QAAUkuG,OAAOluG,MAAM,IAC7C0L,OAAO1L,MAAQ0L,OAAO1L,MAAMjE,OAAS,EAAI2P,OAAO1L,OAASy6G,wBAA1C/xG,OAAAwyG,wBAAqExvG,OAAO1L,SAE/F,IAAMwtG,UAAYjnC,eAAe2nC,OAAQ35E,QAAQ7oB,UAC3CyvG,UAAY50C,eAAeinC,UAAW9hG,QAO5C,OALIyvG,UAAUn7G,iBAAiB0G,QAC3By0G,UAAUn7G,MAAQm7G,UAAUn7G,MAAM+F,IAAI,SAACnP,EAAGlC,GAAJ,OAAUqmH,wBAAkBnkH,EAAG4jH,QAAQ9lH,MAC7EymH,UAAU91F,MAAQ3Z,OAAO2Z,OAAS81F,UAAUn7G,MAAMjE,QAEtDo/G,UAAUxlH,MAAQolH,wBAAkBI,UAAUxlH,MAAOwlH,UAAUxlH,OACxDwlH,YAGfh+G,UACAY,SACAq9G,6rBCnDJ,IAAMC,wBAAW,SAAXA,SAAYl+G,OAAQkoB,OACtB,IAAIi2F,YAEJ,GAAIj2F,iBAAiB3e,MACjB40G,SAAWj2F,MAAMrO,QAAQ/I,OACzBqtG,SAAWC,iCAAI,IAAIn+G,KAAKD,OAAO,IAAhBuL,OAAA6yG,iCAAuBl2F,QAAOloB,OAAO,OAAM8Q,YAG1D,IADA,IAAM45C,aAAekf,kCAAkBxpE,WAAlB,EAAAg+G,iCAAwBp+G,SACpCzI,EAAI,EAAGA,GAAK2wB,MAAO3wB,IACxB4mH,SAAS5mH,GAAKmzD,aAAanzD,EAAI2wB,OAOvC,OAHIi2F,SAAS,GAAKn+G,OAAO,IACrBm+G,SAASl1G,SAEJjJ,cAAQm+G,oBAGfE,0BAAa,SAAbA,WAAcC,eAAgBz7G,OAChC,IAAI07G,YAGJ,GAAID,eAFmBp+G,KAAKC,IAAI0C,MAAMjE,OAAQ,IAI1C,IADA,IAAM8rD,aAAeof,qCvK68BL,SAAlB00C,kBAAkB,OAAMC,QuK78BuBD,GAAmB37G,MAAM+F,IAAI,SAAAnP,GAAC,OAAI+jH,mBAAa/jH,MACnFlC,EAAI,EAAGA,EAAI+mH,eAAgB/mH,IAChCgnH,SAAShnH,GAAKmzD,aAAanzD,GAAK+mH,eAAiB,SAGrDC,SAAW17G,MAAMgX,MAAM,EAAGykG,gBAE9B,OAASC,oBASPG,cAAgB,SAAhBA,cAAiB1+G,QACnB,IAAMoL,WAAapL,OAEnB,OAASA,OADSA,OAAO4I,IAAI,SAAC/Q,EAAGN,GAAJ,OAAWA,GAAMyI,OAAOpB,OAAS,KAClCwM,sBAAYuzG,aAAc,EAAG,KASvDC,qBAAuB,SAAvBA,qBAAwB5+G,OAAQkoB,MAAOrlB,OAEzC,OAAS7C,cAAQoL,WADEpL,OACU2+G,aAAc,EAAG,GAAI97G,cAShDg8G,aAAe,SAAfA,aAAgB7+G,OAAQkoB,MAAOrlB,OAEjC,OAASuI,WADUpL,OACEA,cAAQk8C,MAAM,EAAMr5C,cAUvCi8G,6BAAgB,SAAhBA,cAAiB9+G,OAAQkoB,MAAOrlB,OAAU,IAAAk8G,UACHb,wBAASl+G,OAAQkoB,OAA1C9c,WAD4B2zG,UACpC/+G,OAAoBm+G,SADgBY,UAChBZ,SAG5B,OAAS/yG,sBAAYpL,OAAQm+G,SAAUjiE,MAAM,EAAMr5C,MAF9Bw7G,0BAAWF,SAASv/G,OAAS,EAAGiE,OAA7C07G,WAKNS,sCAAyB,SAAzBA,uBAA0Bh/G,OAAQkoB,MAAOrlB,OAAU,IAAAo8G,WACZf,wBAASl+G,OAAQ6C,MAAMjE,OAAS,GAEzE,OAASwM,WAH4C6zG,WAC7Cj/G,OAEaA,OAHgCi/G,WACzBd,SAEWjiE,MAAM,EAAMr5C,MADlCA,MAAM+F,IAAI,SAAAnP,GAAC,OAAI+jH,mBAAa/jH,OAa3CylH,YAAc,SAAdA,YAAeC,YAAav+G,MAAOZ,OAAQoL,YAG7C,OAAOxK,MADQZ,OADDoL,WAAWnE,QAAQk4G,gBAa/BC,aAAe,SAAfA,aAAgBD,YAAav+G,MAAOZ,QAGtC,OAAOY,OAFSu+G,YAAcn/G,OAAO,KAAOA,OAAOA,OAAOpB,OAAS,GAAKoB,OAAO,MAW7Eq/G,YAAc,SAAdA,YAAeF,YAAav+G,OAAd,OAAwBA,MAAMu+G,cAiDrCG,eAAiB,SAAjBA,eAAkBC,WAAYC,UAAWC,WAAYv3F,OAApC,OA1CX,SAAbs3E,aAAa,IAAAjgG,KAAA,OAAAmgH,8BAAAngH,QAAA,GAAAgM,OACXg9F,UADW,KAAAh9F,OACEg9F,UADF,KAAAh9F,OACe88F,aAC1BznG,MAAOynG,WACPsX,YAAa,SAAAA,cAAA,OAAMf,sBACnBpmH,MAAO,SAAAA,QAAA,OAAM4mH,gBAJFM,8BAAAngH,KAAA,GAAAgM,OAMXg9F,UANW,KAAAh9F,OAMEtN,SANF,KAAAsN,OAMc88F,aACzBznG,MAAOynG,WACPsX,YAAa,SAAAA,cAAA,OAAMf,sBACnBpmH,MAAO,SAAAA,QAAA,OAAM4mH,gBATFM,8BAAAngH,KAAA,GAAAgM,OAWXtN,SAXW,KAAAsN,OAWCtN,SAXD,KAAAsN,OAWa88F,aACxBznG,MAAOynG,WACPsX,YAAa,SAAAA,cAAA,OAAMjB,eACnBlmH,MAAO,SAAAA,QAAA,OAAM0mH,eAdFQ,8BAAAngH,KAAA,GAAAgM,OAgBXtN,SAhBW,KAAAsN,OAgBCtN,SAhBD,KAAAsN,OAgBaw8F,UACxBnnG,MAAOmnG,QACP4X,YAAa,SAAAA,cAAA,OAAMd,cACnBrmH,MAAO,SAAAA,QAAA,OAAM6mH,eAnBFK,8BAAAngH,KAAA,GAAAgM,OAqBXg9F,UArBW,KAAAh9F,OAqBEg9F,UArBF,KAAAh9F,OAqBew8F,UAC1BnnG,MAAOgnG,OACP+X,YAAa,SAAAA,cAAA,OAAMX,uCACnBxmH,MAAO,SAAAA,QAAA,OAAM6mH,eAxBFK,8BAAAngH,KAAA,GAAAgM,OA0BXg9F,UA1BW,KAAAh9F,OA0BEtN,SA1BF,KAAAsN,OA0Bcw8F,UACzBnnG,MAAOqnG,SACP0X,YAAa,SAAAA,cAAA,OAAMb,8BACnBtmH,MAAO,SAAAA,QAAA,OAAM6mH,eA7BF9/G,KA2CdigG,GAAA,GAAAj0F,OAAqBg0G,WAArB,KAAAh0G,OAAmCi0G,UAAnC,KAAAj0G,OAAgDk0G,YAAc,8xBClK9CG,gCAUjB,SAAAA,UAAarxG,iKAAQsxG,CAAAvgH,KAAAsgH,WACjBl3C,sBAAsBppE,KAAM6wG,aAC5B7wG,KAAKiP,OAAOA,QAEZjP,KAAKwgH,YAAoC,WAAtBxgH,KAAK0qF,QAAQ3vF,KAAoBkuG,UAAYtqG,SAChEqB,KAAKygH,WAAoC,WAAtBzgH,KAAK0qF,QAAQ3vF,MAAsBiF,KAAK0qF,QAAQjpD,KAAoB9iC,SAAZsqG,UAE3EjpG,KAAK0gH,YjBqCN,SAASC,cAAep1D,QAO3B,OALIA,QAA8B,iBAAZA,QACS,MAAdA,OAAO,GAAaw9C,qBAEpBN,kBiB1CMkY,CAAc3gH,KAAK0qF,QAAQnnF,OAE9CvD,KAAK4gH,eAAiB5gH,KAAK6gH,iBAAiB7gH,KAAKwgH,YAAaxgH,KAAKygH,WAAYzgH,KAAK0gH,aACpF1gH,KAAK6xG,OAAS7xG,KAAKkqG,YAAYlqG,KAAK4gH,gBAEpC5gH,KAAKw/E,IAAM/zE,cAEXzL,KAAK8gH,aAAa7xG,OAAOvO,4SAgChBqgH,eAAe,IAChBx9G,MAAUvD,KAAKiP,SAAf1L,MACR,OAAIA,OAA4B,iBAAXA,MjBlBtB,SAASy9G,UAAWz1D,QACvB,MAAkB,MAAdA,OAAO,GACAm+C,gBAAgBuX,8BAAa11D,SAEjCk+C,aAAawX,8BAAa11D,SiBelBy1D,CAAUz9G,OAEd2mG,2BACHnvG,KAAMgmH,cAAcz/G,MACpBiC,wEAaU08G,WAAYC,UAAWC,YACnBngH,KAAKiP,SAAf2Z,MAER,OAAOo3F,eAAeC,WAAYC,UAAWC,8DAUnCe,eACV,OAAOhD,mBAAagD,yDASd9O,WACN,OAAOpyG,KAAKk+G,aAAal+G,KAAKmhH,YAAY/O,4DASjCA,WACT,GAAIpyG,KAAKU,eAA0B8yB,IAAd4+E,UAAyB,CAC1C,IAAM9wG,MAAQtB,KAAKsB,QACbiC,MAAQjC,MAAMiC,MAAQjC,MAAMiC,QAAU,KACtCosC,MAAQ3vC,KAAK4gH,eAAe1nH,MAAMqK,MAA1BvD,CAAiCoyG,UAAW9wG,MAAOtB,KAAKU,SAAUV,KAAK2+G,gBAErF,GAAqB,iBAAVhvE,MAAoB,CAC3B,IAAMg7B,IAAMh7B,MAAMnqC,UAAUmqC,MAAMhoC,QAAQ,KAAO,EAAGgoC,MAAM/T,YAAY,MAAMr8B,MAAM,QAClF,OAAOkrE,SAAQ3pE,WAAR,EAAAsgH,6BAAYz2C,MAEvB,OAAAy2C,6BAAWzxE,OAEf,OAAAyxE,6BAAWphH,KAAKiP,SAAS/V,2DAUF,IAAbwH,OAAaoG,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACvB,GAAIpG,OAAOpB,OAAQ,CACf,IAAMgC,MAAQtB,KAAKsB,QACbiC,MAAQjC,MAAMiC,MAAQjC,MAAMiC,QAAU,KAEtC89G,UADgBrhH,KAAK4gH,eAAeP,aACxBiB,CAAc5gH,OAAQV,KAAKiP,SAAS2Z,MAAOrlB,OAE7DvD,KAAKU,OAAO2gH,UAAU3gH,QACtB2gH,UAAU99G,OAASvD,KAAKsB,QAAQiC,MAAM89G,UAAU99G,OAChDvD,KAAK2+G,aAAa0C,UAAUv1G,YAC5B9L,KAAKsB,QAAQZ,OAAO2gH,UAAUhC,aAAer/G,KAAKU,UAEtD,OAAOV,mDAWP,OACIjF,KAAMiF,KAAK4W,YAAY7b,OACvBuG,MAAOtB,KAAKsB,QACZZ,OAAQV,KAAKU,SACbuO,OAAQjP,KAAKiP,gEAIL0gC,MAAO4xE,mBACnB,IAAMlxE,EAAe,IAAXV,MAAM,GACVz1C,EAAe,IAAXy1C,MAAM,GACVz3C,EAAe,IAAXy3C,MAAM,GACVt1C,EAAIs1C,MAAM,IAAM,EAChB6xE,KAAOnxE,EAAIkxE,kBAAkB,GAC7BE,KAAOvnH,EAAIqnH,kBAAkB,GAC7BG,KAAOxpH,EAAIqpH,kBAAkB,GAC7BI,KAAOtnH,EAAIknH,kBAAkB,IAAM,EAEzC,OAAS5xE,MAAK,QAAA1jC,OAAUu1G,KAAV,KAAAv1G,OAAkBw1G,KAAlB,MAAAx1G,OAA2By1G,KAA3B,MAAAz1G,OAAoC01G,KAApC,KAA6C3xE,MAAOwxE,KAAO,IAAKC,KAAO,IAAKC,KAAO,IAAKC,uCAQtG,OAAO3hH,KAAKw/E,4DAjJZ,OAAOy+B,mDAWP,MlBnDa,yBmBXRA,yBACT/kH,MAAO,GACPqK,OAAQ,GAAI,6qBCQhB,IAoFM28F,0BAAU0hB,6BAAAtsB,eAAA,GAAArpF,OACRtN,SADQ,KAAAsN,OACIg9F,YACZ3nG,MAAOgnG,OACP5nG,OAvFc,SAAhB0+G,cAAiB1+G,QACnB,IAAMoL,WAAapL,OAEnB,OAASA,OADSA,OAAO4I,IAAI,SAAC/Q,EAAGN,GAAJ,OAAWA,GAAMyI,OAAOpB,OAAS,KAClCwM,sBAAYuzG,aAAc,EAAG,KAqFrD97G,MAxBe,SAAjBs+G,eAAkBhC,YAAav+G,MAAOZ,OAAQoL,YAChD,IACMg2G,OAASphH,OADDoL,WAAWnE,QAAQk4G,cAGjC,OADWr1C,qCAAwBF,kCAAHy3C,gCAA6BzgH,MAAMiC,SAC5D2Z,CAAG4kG,WAgBEF,6BAAAtsB,YAAA,GAAArpF,OAMRg9F,UANQ,KAAAh9F,OAMKg9F,YACb3nG,MAAOgnG,OACP5nG,OAhFa,SAAf6+G,aAAgB7+G,QAElB,OAASoL,WADUpL,OACEA,gBA+EjB6C,MAhBY,SAAdw8G,YAAeF,YAAav+G,OAAd,OAAwBA,MAAMu+G,gBAOlC+B,6BAAAtsB,YAAA,GAAArpF,OAWRg9F,UAXQ,KAAAh9F,OAWKtN,WACb2C,MAAO0nG,UACPtoG,OAzEc,SAAhB8+G,cAAiB9+G,OAAQshH,WAC3B,IAAIC,gBACJ,GAAID,qBAAqB/3G,MACrBg4G,aAAeD,UAAUznG,QAAQ/I,YAGjC,IADA,IAAM45C,aAAekf,kCAAkBxpE,WAAlB,EAAAihH,gCAAwBrhH,SACpCzI,EAAI,EAAGA,EAAI+pH,UAAW/pH,IAC3BgqH,aAAahqH,GAAKmzD,aAAanzD,GAAK+pH,UAAY,IAOxD,OAJIC,aAAa,GAAKvhH,OAAO,IACzBuhH,aAAat4G,SAGRmC,WAAYm2G,aAAcvhH,OADjBuhH,aACoCrlE,MAAM,IA4DxDr5C,MAhDc,SAAhB2+G,cAAiBrC,YAAav+G,MAAOZ,QACvC,IAAMohH,QAAUjC,YAAcn/G,OAAO,KAAOA,OAAOA,OAAOpB,OAAS,GAAKoB,OAAO,IAE/E,OADqB4pE,kCAAkBxpE,WAAlB,EAAAihH,gCAAwBzgH,MAAMiC,SAC5C6nD,CAAa02D,WA+BRxsB,aC9FHub,uBACT5hG,UACAvO,QACIqoE,aAAc,SAAAA,aAACjxC,QAAS5+B,OAEpB,OADA4+B,QAAQx2B,QAAQZ,OAAOxH,OAChBA,QAGfqK,SACAjC,SACAq9G,kTCMiBwD,8BAOjB,SAAAA,SAAalzG,gKAAQmzG,CAAApiH,KAAAmiH,UACjB/4C,sBAAsBppE,KAAM6wG,uBAE5B7wG,KAAKw/E,IAAM/zE,cACXzL,KAAK0qF,QAAU/xF,OAAOmgB,UAAW9Y,KAAK4W,YAAY4H,gBAAiBvP,QAEnEjP,KAAKwgH,YAAoC,WAAtBxgH,KAAK0qF,QAAQ3vF,KAAoBkuG,UAAYtqG,SAChEqB,KAAKygH,WAAaxX,UAElBjpG,KAAKqiH,cAAgBriH,KAAKsiH,YAAYtiH,KAAKwgH,YAAaxgH,KAAKygH,YAC7DzgH,KAAK6xG,OAAS7xG,KAAKkqG,YAAYlqG,KAAKqiH,eACpCriH,KAAKsxG,OAAStxG,KAAK0qF,QAAQnnF,MAE3BvD,KAAK8gH,aAAa7xG,OAAOvO,wSAYhBu/G,WAAYC,WACrB,OFuEsB,SAAjBF,eAAkBC,WAAYC,WAAb,OACzBhgB,yBAAU,GAAAj0F,OAAIg0G,WAAJ,KAAAh0G,OAAkBi0G,YExElBF,CAAeC,WAAYC,2DASzBljB,UAAU,IAEfz5F,MACAvD,KAAKiP,SADL1L,MAEJ,OAAO2mG,2BACHnvG,KAAMiiG,SAAS17F,MACfiC,wDAiCgB,IAAf6uG,UAAetrG,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAAH,EAGb5N,MACA8G,KAAKiP,SADL/V,MAEEoI,MAAQtB,KAAKsB,QACbZ,OAASV,KAAKU,WAAa,EAAG,GAEpC,OAAKY,OAASZ,OAAO,KAAOA,OAAO,GAGxBV,KAAKqiH,cAAc9+G,MAAM6uG,UAAW9wG,MAAOtB,KAAKU,SAAUV,KAAK2+G,gBAF5DzlH,wDAaJwH,QACV,GAAIA,OAAQ,CACR,IAEM6hH,YAAaC,EAFFxiH,KAAKqiH,cAAc3hH,QAERA,OAAQV,KAAKiP,SAAS+yG,WAElDhiH,KAAKU,OAAO6hH,WAAW7hH,QACvBV,KAAK2+G,aAAa4D,WAAWz2G,YAE7B9L,KAAKsB,QAAQZ,OAAO6hH,WAAWlD,aAAer/G,KAAKU,UAEvD,OAAOV,mDAWP,OACIjF,KAAMiF,KAAK4W,YAAY7b,OACvBuG,MAAOtB,KAAKsB,QACZZ,OAAQV,KAAKU,SACb6C,MAAOvD,KAAKuD,QACZ0L,OAAQjP,KAAKiP,0CASjB,OAAOjP,KAAKw/E,4DA/EZ,OAAOy+B,4DAWP,MtB1EY,uBuBbPA,oCACTwE,UAAW,KACXvpH,MAAO,SACPqK,OAAQ,SAAU,UAAW,OAAQ,QAAS,SAAU,MAAO,aCHtDstG,wBACT5hG,UACAvO,UACAY,SACAq9G,gBACA8D,kUCWiBC,gCAOjB,SAAAA,UAAazzG,iKAAQ0zG,CAAA3iH,KAAA0iH,WACjBt5C,sBAAsBppE,KAAM6wG,wBAE5B7wG,KAAKw/E,IAAM/zE,cACXzL,KAAK0qF,QAAU/xF,OAAOmgB,UAAW9Y,KAAK4W,YAAY4H,iBAClDxe,KAAK0qF,QAAU5gB,eAAe9pE,KAAK0qF,QAASz7E,QAE5CjP,KAAK6xG,OAAS3H,2BACVnvG,KAAM,UACNwI,MAAOvD,KAAK0qF,QAAQnnF,QAExBvD,KAAK8gH,aAAa7xG,OAAOvO,sSAgCnBxH,OACN,IAAK8G,KAAKsB,UAAYtB,KAAKU,WAAaxH,MACpC,OAAO8G,KAAKiP,SAAS/V,MAGzB,GAAI8G,KAAK4iH,iBACL,OAAO5iH,KAAK4iH,iBAAiB1pH,OAGjC,IAAM2pH,UAAY7iH,KAAKsB,OAALtB,CAAa9G,OAC/B,MAAkB,WAAd2pH,UACO92C,uBAAU82C,WAGdA,8DASgB,IAAbniH,OAAaoG,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAUvB,OATIpG,OAAOpB,SACPU,KAAK2+G,aAAaj+G,QAClBV,KAAKU,OAAOA,QACZV,KAAKsB,QAAQZ,OAAOA,QAEhBV,KAAKiP,SAASwzG,YACdziH,KAAK4iH,iBCzFS,SAAjBE,eAAkBpiH,OAAQqiH,aACnC,IAAMC,mBAIN,OAHAtiH,OAAOlB,QAAQ,SAACtG,OACZ8pH,gBAAgB9pH,OAAS6pH,YAAY7pH,SAElC8pH,gBDoF6BF,CAAepiH,OAAQV,KAAKiP,SAASwzG,aAG9DziH,mDAWP,OACIjF,KAAMiF,KAAK4W,YAAY7b,OACvBuG,MAAOtB,KAAKsB,QACZZ,OAAQV,KAAKU,SACb6C,MAAOvD,KAAKiP,SAAS1L,MACrB0L,OAAQjP,KAAKiP,0CASjB,OAAOjP,KAAKw/E,4DA/EZ,OAAOy+B,uEAWP,MzB5Ca,gN2BVrB,IAAMgF,mBAGO,UAHPA,oBAIQ,WCICC,iBDEcC,mCAAAC,qBATd,YAUanZ,MADCkZ,mCAAAC,kBAExBH,mBAAqBhZ,QAFGkZ,mCAAAC,kBAGxBH,oBAAsBhZ,MCLZ,SAACtoG,OAAQrB,KAAM2O,QAC1B,IAAMmR,QAAUnR,OAAOmR,mBAAmBnW,MAAQgF,OAAOmR,SAAWnR,OAAOmR,SACrEijG,eAAiBjjG,QAAQ9W,IAAI,SAAAnI,WAAS,OAAIQ,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAAS2I,cAEjF,QAA2CqyB,IAAvC6vF,eAAez7F,KAAK,SAAArvB,GAAC,OAAW,IAAPA,IACzB,MAAM,IAAI8X,MAAJ,iBAAApE,OAA2BmU,QAA3B,yBAGV,OlLi4CmB,SAAjBkjG,eAAkBt0G,QACpB,IAAMu0G,OAASrgF,WAEf,OADAl0B,OAAOxH,KAAKhI,QAAQ,SAAAhG,KAAG,OAAI+pH,OAAO/pH,IAAI,SAAAjB,GAAC,OAAIA,EAAEiB,SACtC+pH,OAAOhuG,QAAQvG,OAAO1O,MkLp4CtBgjH,EACH97G,KAAM67G,eACN/iH,cCHQkjH,uMCPhB,IAAMC,cAAYC,iCAAAC,iBCJO,WFOxB,SAASH,kBAAmB7hH,OAAQrB,KAAM2O,QACtC,OAAO3O,OCJMojH,iCAAAC,cCHI,QDKKxoE,iBAFTuoE,iCAAAC,cCFI,QCgEP,SAAChiH,OAAQrB,KAAM2O,QAC1B,IAAM20G,YAAc30G,OAAO20G,YACrBC,WAAa50G,OAAO/V,MACpBknB,QAAUnR,OAAOmR,QACjB5O,KAAOvC,OAAOuC,MAAQ,aACtBsyG,eAzDY,SAAhBC,cAAiBzjH,KAAMqB,OAAQkiH,WAAYD,YAAaxjG,SAC1D,IAAM9N,YAAc6oC,gBAAMx5C,OAAQrB,MAC9B8f,QAASwjG,cAEPI,iBAAmBriH,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAASorH,cACpDK,gBAAkBtiH,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAASqrH,aACnDK,eAAiBviH,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAAS4nB,UAClD+jG,WAAa7jH,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE2rH,kBAAiB7lG,OAAO,SAAClT,KAAMw4E,IAAK93E,KAAZ,OAAoBA,IAAIlE,QAAQwD,QAAUw4E,MAAKnyE,OACpG4T,WAAazjB,OAAOqR,OAAO,SAACC,IAAK1J,IAAKtR,GAExC,OADAgb,IAAIhb,GAAKsR,IAAI/Q,KACNya,SA8BX,OACI3S,KA7BYgS,YAAYhJ,IAAI,SAACuC,KAC7B,IAAMu4G,UACAlhG,OAASrX,IAAI8Q,OAAO3J,OAAO,SAACC,IAAKuH,KAUnC,OATAvH,IAAMuH,IAAIxH,OAAO,SAACzJ,IAAKrQ,MAAOjB,GAO1B,OANIA,IAAMisH,gBACN36G,IAAIrQ,OAASshB,IAAIypG,iBACjBG,OAAOlrH,OAASshB,KACTviB,IAAMgsH,kBACb16G,IAAI6b,WAAWntB,IAAMiB,OAElBqQ,KACR0J,UAcP,OAXAiQ,OAAOmhG,OAASD,OAEhBD,WAAW3kH,QAAQ,SAAC8kH,WAChB,QAA0B9wF,IAAtBtQ,OAAOohG,WAA0B,CACjCphG,OAAOohG,WAAa,EACpB,IAAMC,OAAS,IAAIt6G,MAAM4B,IAAI8Q,OAAO,GAAGrd,QACvCilH,OAAOP,kBAAoBn4G,IAAIrS,IAC/B+qH,OAAOL,gBAAkBI,UACzBphG,OAAOmhG,OAAOC,WAAaC,UAG5BrhG,SAKP1b,KAAM28G,YAeaJ,CAAczjH,KAAMqB,OAAQkiH,WAAYD,YAAaxjG,SACtE5Y,KAAOs8G,eAAet8G,KACtB8B,OACAk7G,QAAUv1G,OAAOu1G,QACjBC,WAAa9iH,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAASgsH,UAC9CE,aAAe/iH,OAAO8hB,UAAU,SAAAlrB,GAAC,OAAIA,EAAEC,OAAS4nB,WAClC,IAAhBqkG,aACAj9G,KAAKhI,QAAQ,SAAChG,KACV,IAAMhB,KAAO8H,KAAKsnB,KAAK,SAAArvB,GAAC,OAAIA,EAAEmsH,gBAAkBlrH,MAChD8P,IAAI9P,KAAOhB,KAAKisH,cAEpBX,eAAet8G,KAAKgK,KAAK,SAACnX,EAAG8K,GAAJ,OAAUmE,IAAIjP,GAAGsqH,cAAcr7G,IAAInE,OAGhE,IAAMy/G,UAAY93C,oBACdtlE,KAAMs8G,eAAet8G,KACrB02C,OAAQjvC,OAAOivC,QAAU,YACzB/5B,MAAO3S,KACPlR,KAAMwjH,eAAexjH,OAOzB,OALAskH,UAAUplH,QAAQ,SAACqlH,YACfA,WAAWrlH,QAAQ,SAAC6c,SAChBA,QAAQ/b,KAAO+b,QAAQ/b,KAAK+jH,OAAOQ,WAAWrrH,SAG/CorH,YF5FOjB,eAqBHmB,sBARf,SAASA,iBAAkB/pH,MACvB,IAAMo8C,UAAYssE,aAAa1oH,MAC/B,GAAyB,mBAAdo8C,UACP,MAAM,IAAI9mC,MAAM,oCAEpB,OAAO8mC,urCGfX,IAAMoxD,aAAO0B,2BAAU1B,KAEVwc,cAAgB,SAAhBA,cAAgB9kH,KAAAmiB,OAAqE,IAAlE7P,MAAkEtS,KAAlEsS,MAAOvO,MAA2D/D,KAA3D+D,MAAWghH,cAAgD5iG,MAAhD4iG,cAAelpB,UAAiC15E,MAAjC05E,UAAWmpB,gBAAsB7iG,MAAtB6iG,gBACpEC,SAAW,GACXv1E,MAAQ,GAQZ,OAPIq1E,eAAiBA,cAAc9rH,iBAAiB4Q,UAChD6lC,MAAQq1E,cAAc9rH,MAAMqZ,MAAOvO,OACnCkhH,SAAWF,cAAc9rH,MAAMqZ,MAAOvO,SAEtCkhH,SAAWppB,UAAUqlB,YAAY5uG,MAAM2wD,MAAM+hD,kBAC7Ct1E,MAAQmsD,UAAUoiB,aAAagH,YAE1Bv1E,YAAOu1E,oBAGdC,eAAiB,SAAjBA,eAAkBrpB,UAAWvpF,MAAO6yG,UAAWC,WACjD9yG,MAAM3D,KAAK02G,WAAWF,WAAa7yG,MAAM3D,KAAK02G,WAAWF,YAAc7yG,MAAM3D,KAAK22G,cAClF,IAAMC,cAAgB1pB,UAAU2pB,eAAelzG,MAAM3D,KAAK02G,WAAWF,WAAYC,WAGjF,OAFA9yG,MAAM3D,KAAK02G,WAAWF,WAAaI,cAAcx1E,KAE1Cw1E,eAGE5vB,8BAAwB,SAAxBA,sBAAyB99D,QAASuxD,aAAcq8B,kBAAmBz2G,QAC5E,IAAM02G,SAAW7tF,QAAQ8tF,uBAAuBv8B,cAE1CyS,UADOhkE,QAAQo6D,OACEviD,MACjB7uC,MAAQmO,OAAOnO,MACf00F,gBAAkBvmF,OAAOumF,gBAC/BkwB,kBAAkBlmH,QAAQ,SAAC21B,OACvB,IAAMiwF,UAAYjwF,MAAMp6B,KACxB4qH,SAASxwF,MAAMiwF,UAAY,SAAC7sH,GAAM,IAAAstH,QACwBttH,EAAEqW,KAAhDk3G,eADsBD,QACtBC,eAAgBR,WADMO,QACNP,WAAYC,cADNM,QACMN,cAEpC,GADAO,eAAetwB,iBAAmBswB,eAAetwB,qBAC7C10F,QAAUglH,eAAetwB,iBAAiB4vB,WAI1C,OAFAU,eAAetwB,iBAAiB4vB,WAAajwF,MAAMkwF,UACrCF,eAAerpB,UAAWvjG,EAAG6sH,UAAWjwF,MAAMkwF,WAAW11E,MAG3E,IAAK7uC,OAASglH,eAAetwB,iBAAiB4vB,WAG1C,OADAU,eAAetwB,iBAAiB4vB,WAAa,KACtCD,eAAerpB,UAAWvjG,EAAG6sH,UAAWjwF,MAAMkwF,UAAU/7G,IAAI,SAAAnP,GAAC,OAAKA,KAAIw1C,MAZnD,IAAAo2E,MAAAC,sBAcTV,WAAWF,WAAaE,WAAWF,WAAaG,cAdvC,GAcvBl1E,EAduB01E,MAAA,GAcpB7rH,EAdoB6rH,MAAA,GAcjB7tH,EAdiB6tH,MAAA,GAcd1rH,EAdc0rH,MAAA,GAe9B,cAAA95G,OAAmB,IAAJokC,EAAf,KAAApkC,OAA8B,IAAJ/R,EAA1B,MAAA+R,OAA0C,IAAJ/T,EAAtC,OAAA+T,OAAmD5R,GAAK,EAAxD,UAmCC4rH,sBAAgB,SAAhBA,cAAiB/zB,MAAS,IAAAg0B,MAAAF,uBACXze,SAASzsD,EAAGysD,SAAS5hG,GAAG2D,IAAI,SAAAnP,GAAC,OAAI+3F,KAAK/3F,KAD3B,GAC5Bg4F,MAD4B+zB,MAAA,GACrB9zB,MADqB8zB,MAAA,GAAAC,MAAAH,uBAET7zB,MAAOC,OAAO9oF,IAAI,SAAAnP,GAAC,OAAIA,GAAKA,EAAEmH,UAFrB,GAGnC,OACI6wF,YACAC,YACAg0B,OAN+BD,MAAA,GAO/BE,OAP+BF,MAAA,KA6G1BG,uBAAyB,SAAzBA,uBAA0B/tH,EAAGN,EAAGqI,KAAMw3B,SAC/C,IAAMuE,UAAYvE,QAAQ7oB,SAASs3G,oBAC/BC,aAAe,GAInB,OAHInqF,qBAAqBvyB,WACrB08G,aAAenqF,UAAU9jC,EAAGN,EAAGqI,KAAMw3B,UAElC0uF,cAiGEC,oBAAsB,SAAtBA,oBAAuBzjD,QAAS+M,QAAW,IAAA22C,MACpD1jD,QAAQ1iE,MAAKomH,UAAGz6G,OAAHnL,MAAA4lH,MAAAC,0BAAa52C,SAAQ1xD,OAAO,SAAA9lB,GAAC,YAAci7B,IAAVj7B,EAAEinF,MAAmBl2E,IAAI,SAAC/Q,GACpE,IAAMu7D,MAAQv7D,EAAEu4B,OAChB,OACI1c,EAAG0/C,MAAM1/C,EACT7O,EAAGuuD,MAAMvuD,EACTjF,KAAM/H,OAYLquH,oBAAc,SAAdA,YAAe/tE,OAAQ2qC,OAAQ5gD,QACxC,IAAK,IAAMppC,OAAOgqF,YACPxpF,eAAe5B,KAAKorF,OAAQhqF,MAC/Bq/C,OAAO1jB,MAAM37B,IAAKopC,OAAS,KAAO4gD,OAAOhqF,OAiCxCqtH,eAAiB,SAAjBA,eAAkB/uF,QAASi4C,QACpC,IAAM+2C,WAAahvF,QAAQivF,oBAC3B,OAAID,WACOA,WAAW/2C,OAAQj4C,SAAWkD,WAAYlD,QAAQu5E,cAAcr2E,aAEpE+0C,QAyBEi3C,2BAAqB,SAArBA,mBAAsBlvF,QAASmvF,mBACxC,IAAMC,UAAYpvF,QAAQqvF,oBACpBj1B,KAAOp6D,QAAQo6D,OACfk1B,cAAgBtvF,QAAQsvF,gBACxBn4G,OAAS6oB,QAAQ7oB,SACjBuoF,UAAY1/D,QAAQuvF,WAE1B,OAAQ,IAAK,KAAK/9G,IAAI,SAACvO,MACnB,IAAIusH,KAAO,EACPC,UAAY,EACZvpF,QAAU,EACVwpF,gBACJ,GAAIN,UAAS,GAAAj7G,OAAIlR,KAAJ,gBAAyB6D,yBAAUE,UAAW,CACvD,IAAI2oH,iBAEE3a,SADaoa,UAAS,GAAAj7G,OAAIlR,KAAJ,mBAA4BuD,gCAAiBE,SAC3Cs5B,QAAQ4vF,YAAYnsB,UAAUxgG,MAAQ,EAC9DoyD,KAAO+kC,KAAKn3F,MACZgH,IAAMkN,OAAM,MAAAhD,OAAOlR,KAAKggD,gBACxB4sE,aAAe14G,OAAO04G,aACtBngH,KAAOy/G,kBACP3lH,MAAQ6rD,KAAK7rD,QACnBimH,UAjCgB,SAAfK,aAAgBz6D,KAAMl1C,SAC/B,IACMgf,MAAQk2B,KAAK2qC,eACbx2F,MAAQ6rD,KAAK7rD,QACbiC,MAAQjC,MAAMiC,QACd7C,OAASY,MAAMZ,SAIrB,OAHCu2B,OAAqBr2B,KAAKuL,IAAI5I,MAAM,GAAKA,MAAM,IAAM3C,KAAKuL,IAAIzL,OAAO,GAAKA,OAAO,IAAOuX,QA2BrE2vG,CAAaz6D,KAAM2/C,UAC/B,IAAM+a,gBAAkB16D,KAAKv2C,YAAY7b,SAAWwtG,aAC9Cuf,YAAc36D,KAAKl+C,SAAS+uB,QAIlC,GAAsB,UAAlBopF,cAA2B,CAC3B,IAAMW,aAAeF,gBAAkB,EAAIC,YAAcP,UAAY,EACrE/vB,UAAUj0F,OAAOwkH,aAAcR,UAAYQ,eAAernH,OAAO8G,MAAM+8B,aAAaojF,cACpFL,KAAO9vB,UAAUnzD,YACjBojF,iBAAmBF,WAAaM,gBAAkB,EAAIC,YAAcP,WACpEC,aAAehgH,KAAK8B,IAAI,SAAA9P,KAAG,OAAIg+F,UAAUh+F,MAAQquH,gBAAkB,EAAKN,UAAY,UACjF,QAAY/zF,IAARzxB,IAAmB,CAC1B,IAAIm8C,OACJ,GAAI2pE,gBAAiB,CACjB,IAAMpmF,KAAOngC,MAAMmgC,OACnByc,OAAS58C,MAAM08B,UAAYyD,KAC3B6lF,KAAOhmH,MAAM+iC,YAAc6Z,YAE3BopE,KAAOC,UAEXC,aAAehgH,KAAK8B,IAAI,kBAAOu+G,iBAAoB3pE,OAAS,GAAOopE,KAAO,SAI1EG,iBADAH,KAAOC,WADPvpF,QAAU6pF,gBAAkB,EAAIC,YAAcP,WAG9CC,aAAehgH,KAAK8B,IAAI,kBAAOu+G,gBAAkB,GAAMP,KAAO,IAGlEC,UAAYE,iBACZzpF,QAAU6pF,gBAAkBC,YAAc36D,KAAK7rD,QAAQmgC,OAASqmF,YAAcP,UAGlF,OACID,UACAE,0BACAD,oBACAvpF,2kBC5bZ,oBAQaqtC,yBAAc,SAAdA,YAAevzC,QAASx+B,IAAV,QAEnBq2B,OAAO,GAAA1jB,OAAI3S,GAAGmyE,MAAP,KAAAx/D,OCdK,SDeZ4/D,SAAU,SAAAA,SAAA5rE,MAAc,IAAVK,KAAU0nH,2BAAA/nH,KAAA,MACdgP,OAAS6oB,QAAQ7oB,SACjBg5G,cAAgBh5G,OAAOk2F,SAC7B,GAAI7kG,MAAQ2nH,cAAe,CACvB,IAAMzrG,aAAelc,KAAKmc,kBACpB0qG,kBD4Fa,SAAtBe,oBAAuB/iB,SAAU3oF,cAAiB,IAAA2rG,MAAAnC,uBAEtDze,SAASzsD,EAAGysD,SAAS5hG,EAAG4hG,SAASC,GAAID,SAASE,GAAIJ,MAAOC,MAAOF,MAAM99F,IAAI,SAAAnP,GAAC,OAAIgrG,SAAShrG,IACrFgrG,SAAShrG,GAAG4S,QAHuC,GACpDulF,OADoD61B,MAAA,GAC5C31B,OAD4C21B,MAAA,GACpCC,QADoCD,MAAA,GAC3BE,QAD2BF,MAAA,GAClBG,WADkBH,MAAA,GACNI,WADMJ,MAAA,GACMK,UADNL,MAAA,GAAAM,MAAAzC,uBAKzB1zB,OAAQE,OAAQ41B,QAASC,SAAS/+G,IAAI,SAAAnP,GAAC,OAAIqiB,aAAariB,IACtFqiB,aAAariB,GAAG0iB,IAAI9hB,OANmC,GAKpD03F,WALoDg2B,MAAA,GAKxC/1B,WALwC+1B,MAAA,GAAAC,OAAA1C,uBAQnB1zB,OAAQE,QAAQlpF,IAAI,SAAAnP,GAAC,OAAIqiB,aAAariB,KAAOqiB,aAAariB,GAAG0iB,IAAI/E,SACrG0E,aAAariB,GAAG0iB,IAAI9hB,QATmC,GAQpD4tH,cARoDD,OAAA,GAQrCE,cARqCF,OAAA,GAAAG,OAAA7C,uBAWK1zB,OAAQE,OAAQ41B,QAASC,SACpF/+G,IAAI,SAAAnP,GAAC,OAAIqiB,aAAariB,IAAMqiB,aAAariB,GAAG6J,QAZU,GAc3D,OACIsuF,cACAE,cACA81B,sBACAC,sBACAC,oBACAJ,gBACAC,gBACA51B,sBACAC,sBACAi2B,4BACAC,4BACAE,YA1BuDD,OAAA,GA2BvDE,YA3BuDF,OAAA,GA4BvDG,aA5BuDH,OAAA,GA6BvDI,aA7BuDJ,OAAA,IC5FrBX,CAAoBD,cAAezrG,cAC7Dsb,QAAQqvF,kBAAkBA,mBAC1BrvF,QAAQsvF,cDkIS,SAApB8B,kBAAqBC,YAAa3sG,aAAc4sG,kBACzD,IAAIhC,cAEAjwE,UACAgyE,YADAhyE,UAGAm7C,OAIA82B,iBAJA92B,OACAE,OAGA42B,iBAHA52B,OACAC,WAEA22B,iBAFA32B,WACAC,WACA02B,iBADA12B,WAEE22B,aAAelyE,UAAU/2B,QACzBkpG,oBAAsB9sG,aAAa6sG,eAAiB7sG,aAAa6sG,cAAcxsG,IAAI9hB,OAAS6D,yBAAUC,QAM5G,OALAuoH,cAAgBjwE,UAAUp8C,KACrBu3F,QAAWE,SAAU82B,qBAAwBD,eAAgB52B,aAAe7zF,yBAAUE,WACvF4zF,aAAe9zF,yBAAUE,aACzBsoH,cvCrKgB,YuCuKbA,cCpJ2B8B,CAAkBj6G,OAAQuN,aAAc2qG,oBAC9DrvF,QAAQyxF,iBAAmBzxF,QAAQ0xF,mBAAmBlpH,KAAM2O,OACxD6oB,QAAQsvF,gBAAiBD,mBAC7BrvF,QAAQ2xF,gBAAkB3xF,QAAQ4xF,kBAAkB5xF,QAAQyxF,iBAAkB/sG,cAC9E,IAAM9b,OAASo3B,QAAQ6xF,wBAAwB7xF,QAAQ2xF,gBAAiB3xF,QAAQqvF,oBAC5ErvF,QAAQx3B,OAAOmc,mBACnBqb,QAAQ84E,QAAUlwG,QACjBo3B,QAAQ8xF,aAAe9xF,QAAQp3B,OAAOA,UAG/C3F,KAAM,8BAGN40B,OAAO,GAAA1jB,OAAI3S,GAAGmyE,MAAP,KAAAx/D,OClCO,WDmCd4/D,SAAU,SAAAA,SAAAxqD,OAAgB,IAChBmkF,gBADgBwiB,2BAAA3mG,MAAA,MACSmkF,gBACzB71E,MAAQmI,QAAQ+xF,iBAChB9/G,MAAQ+tB,QAAQ/tB,QAChB09D,cACFC,UAAS,GAAAz7D,OAAKm6F,0BAAiBl6C,sBAAtB,KAAAjgD,OAA+C6rB,QAAQkuE,UAAUt+B,WAC1EluE,IAAK,kBAETuQ,MAAMgkF,YAAYtmB,eACM,IAApB+9B,iBACA71E,MAAMnuB,KAAN,GAAAyK,OAAc3S,GAAGmyE,MAAjB,KAAAx/D,OC9CI,SDgDRlC,MAAM+/G,uBAAuBn6F,MACzB,YA7CI,SAAdo6F,YAAejyF,SACjB,IAAM5I,MAAQ4I,QAAQ5I,QAClBA,QACA4I,QAAQ8mE,OAAO1vE,OACf4I,QAAQ38B,eAAe6uH,UAAUC,OAAOv9D,aAAYE,eAAe,IA0CvDm9D,CAAYjyF,WACb,EAAO2vC,eAElB1sE,KAAM,kNElDP,IAAMmvH,gBAAcC,+BAAAC,mBDFL,UCIdlxH,MAAO,KACP0V,MACIm6D,aAAc,SAAAA,aAAC95D,OAAQ8hG,UAAWj5E,SAC9B,IAAMlhB,YAAckhB,QAAQlhB,YACtByzG,QAAUvgD,kBAAmBlzD,YAAY4H,iBAC/C,OAAO5H,YAAY0zG,cAAcD,QAASp7G,YAP/Bk7G,+BAAAC,gBDHP,QCeZlxH,MAAO,KACP0V,MACIs6D,OAAQ,SAAAA,OAAC5oE,KAAMw3B,SACPA,QAAQyyF,cACRzyF,QAAQ0yF,YAAYhpH,KAAKlB,MAEzBw3B,QAAQ0yF,aAAelqH,UAlBhB8pH,2sFC0CNK,4CAqBjB,SAAAA,UAAanqH,KAAM4xF,KAAMjjF,QAA2B,IAAAxN,MAAnBtG,aAAmB2L,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,qKAAA4jH,CAAA1qH,KAAAyqH,WAChDhpH,oLAAAkpH,CAAA3qH,KAAA4qH,0BAAAH,WAAAryH,KAAA4H,OAEAopE,sBAAsByhD,kEAAAppH,QAAMkuB,aAC5BluB,MAAKnB,KAAKA,MACVmB,MAAKywF,KAAKA,MACVzwF,MAAKwN,OAAOA,QACZxN,MAAKqpH,MAAMrpH,MAAKmV,YAAYkvE,aAAer6E,eAC3ChK,MAAKtG,aAAaA,cAClBsG,MAAKspH,WACLtpH,MAAK+oH,eACL/oH,MAAK+9E,IAAM/zE,cACXhK,MAAKupH,gBACLvpH,MAAKswG,0BAb2CtwG,iYArBjBomG,6SAkD/B,GAAI/gG,UAAOxH,OAAQ,CACfU,KAAKirH,OAALnkH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACA,IAAMk/F,QAAUhmG,KAAKgmG,UACfklB,QAAO,GAAAj/G,OAAMm6F,0BAAiBl6C,sBAAvB,KAAAjgD,OAAgD+5F,QAAQt+B,YJmW5C,SAAxByjD,sBAAyBrzF,SAClC,IAAM/tB,MAAQ+tB,QAAQ/tB,QAChBqhH,YAActzF,QAAQlhB,YAAYy0G,WAAW,GAC7C3jD,UAAY5vC,QAAQkuE,UAAUt+B,UACpC,IAAK,IAAMh4C,QAAQ07F,YACfrhH,MAAMqmB,OAAN,GAAAnkB,OAAgBm6F,0BAAiBj6C,uBAAjC,KAAAlgD,OAA2DyjB,MAA3D47F,0BACK5jD,UAAY,OIxWbyjD,CAAsBnrH,MACtB,IAAM+J,MAAQ/J,KAAK+J,QAenB,OAdAA,MAAMqmB,OAAN,GAAAnkB,OAAgBm6F,0BAAiBl6C,qMAAjCq/D,IACKvlB,QAAQt+B,UAAY,OAGzBW,wBAAWroE,KAAMkqH,eAAgBngH,MAAM8R,OACnC6rD,UAAWwjD,UAEf9/C,+BAAkBprE,KAAMqrE,0BACpBI,MAAOy/C,QACPM,OAAQplB,0BAAiBj6C,yBAEzBs/D,aAAczlB,QAAQylB,aACtBC,aAAc1lB,QAAQ0lB,eAEnB1rH,KAEX,OAAOA,KAAKirH,+CAIZ,IAAMv7F,KAAI,GAAAzjB,OAAMm6F,0BAAiBj6C,uBAAvB,KAAAlgD,OFtHI,SEsHJ,KAAAA,OAAiEjM,KAAKgmG,UAAUt+B,WAC1F,OAAI5gE,UAAIxH,QACJU,KAAK+J,QAAQkgH,OAAOv6F,KAApB5oB,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACO9G,MAEJA,KAAK+J,QAAQjR,IAAI42B,oEAiExB,OAAI5oB,UAAUxH,QACVU,KAAK2rH,mBAAL7kH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK2rH,iFAIZ,OAAI7kH,UAAkBxH,QAClBU,KAAK4rH,mBAAL9kH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK4rH,yDAmBZ,OAAI9kH,UAAOxH,QACPU,KAAK6rH,OAAL/kH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK6rH,QAAU7rH,KAAK4W,YAAYkvE,iEAIvC,OAAIh/E,UAAOxH,QACPU,KAAKqxG,cAALvqG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKqxG,oEAKZ,OADArxG,KAAKuqH,eAAgB,EACdvqH,yDAKP,OADAA,KAAKuqH,eAAgB,EACdvqH,KAAKM,KAAKN,KAAKwqH,YAAY,kDAWlC,OAAOxqH,KAAKiP,yCAWZ,OAAOjP,KAAKw/E,kEAaIljE,UAAWrN,OAAQm4G,cAAeD,mBAClD,OJnGqB,SAAhB2E,cAAiBxvG,UAAWrN,OAAQm4G,cAAegC,kBAC5D,IAAM9oH,KAAOgc,UAAU/b,SAAU6jB,SAAS,IACpCziB,OAASrB,KAAKqB,OACdw1C,UAAYloC,OAAOkoC,UAErBm7C,OAIA82B,iBAJA92B,OACAE,OAGA42B,iBAHA52B,OACAC,WAEA22B,iBAFA32B,WACAC,WACA02B,iBADA12B,WAEEkxB,YAAcnxB,aAAe7zF,yBAAUC,QAAU2zF,OAASF,OAEhE,OAAOwyB,kBAAiBsC,cAAjBtC,CAAgCnjH,OAAQrB,KAAKA,MAChD8f,QAAS+2B,UAAU/2B,QACnBwjG,wBACApyG,KAAM2lC,UAAU3lC,MAAQ,OACxB0sC,OAAQ/G,UAAU+G,OAClBsmE,QAASrtE,UAAUqtE,QACnBtrH,MAAOw5F,aAAe9zF,yBAAUC,QAAU2zF,OAASF,QACpDhyF,KAAKkkB,MIgFGsnG,CAAcxvG,UAAWrN,OAAQm4G,cAAeD,2FAYlC7mH,MACrB,IAAI8kE,WAMJ,OALgBplE,KAAKM,OAAOygG,YAGxB37B,QJf2B,SAA1BukD,wBAA2BrpH,KAAM8oH,iBAAkBhC,eAAkB,IAE1EuB,cAMAS,iBANAT,cACAC,cAKAQ,iBALAR,cACAt2B,OAIA82B,iBAJA92B,OACAE,OAGA42B,iBAHA52B,OACA41B,QAEAgB,iBAFAhB,QACAC,QACAe,iBADAf,QAEEjjD,WACA2mD,KAAOxkB,SAAS5hG,EAChBqmH,KAAOzkB,SAASzsD,EAUtB,OATIw3C,SACAltB,QAAQhxD,EAAIywD,+BAAkBvkE,KAAM8nH,SAAWhB,gBAAkBngB,OAAS+kB,KAAMzkB,SAASC,KAAOwkB,KAAMA,MAClGrD,gBAEJn2B,SACAptB,QAAQ7/D,EAAIs/D,+BAAkBvkE,KAAM+nH,SAAWjB,gBAAkBngB,OAASM,SAASE,GAAIF,SAAS5hG,IAC3FomH,KAAMA,MAAOnD,gBAGfxjD,QINWukD,CAAwBrpH,KAAMN,KAAKmnH,oBAAqBnnH,KAAKonH,kBAEpEhiD,4DAaI6mD,cACX,IAAM7mD,QAAUplE,KAAK+J,QAChBjR,IADW,GAAAmT,OACJm6F,0BAAiBj6C,uBADb,KAAAlgD,OFtTF,SEsTE,KAAAA,OACuDjM,KAAKgmG,UAAUt+B,YACtF,YAAwBl0C,IAAjBy4F,aAA6B7mD,QAAQ6mD,kBAAsB7mD,oEASnDuhC,gBAAiBnqF,cAChC,OJxGyB,SAApBktG,kBAAqB/iB,gBAAiBnqF,aAAc4sG,iBAAkBhC,eAC/E,IAAM8E,mBvC3Nc,auC2NO9E,eAA8BzgB,iBAAmBA,gBAExElU,WAKA22B,iBALA32B,WACAq2B,YAIAM,iBAJAN,YACAC,YAGAK,iBAHAL,YACAC,aAEAI,iBAFAJ,aACAC,aACAG,iBADAH,aAEEkD,UAAYxzH,OAAO6O,KAAKgV,cAAcld,OAK5C,OAAO4sH,mBAAmB5iH,IAAI,SAAChJ,MAE3B,OvC3Oa,UuC0OE8mH,cAA0B9mH,KAAKqc,OAASrc,MACzCgJ,IAAI,SAAC/Q,GACf,IACIoY,MAGIpL,EACAuqD,GACA17C,EACA0oC,GAPJsvE,YAuCJ,OArCIhF,gBAAkBngB,OAClBt2F,MAAQpY,EAAE+H,SAKN/H,EAAE,IAAMA,EAAE,IACVgN,EAAIu3C,GAAKvkD,EAAE,GACX6b,EAAI07C,GAAKv3D,EAAE,KAEXgN,EAAIu3C,GAAKvkD,EAAE,GACX6b,EAAI07C,GAAKv3D,EAAE,KAGf6zH,SAAW35B,aAAe7zF,yBAAUC,SAChCuV,IACA0oC,MACAv3C,EAAGoL,MAAMo4G,aACTj5D,GAAIn/C,MAAMo4G,eAEV30G,EAAGzD,MAAMm4G,aACThsE,GAAInsC,MAAMm4G,aACVvjH,IACAuqD,QAEKoT,MAAQvyD,MACjBy7G,SAAS5sC,IAAM7uE,MAAMw7G,cAErBC,UACIh4G,EAAG7b,EAAEuwH,aACLvjH,EAAGhN,EAAEwwH,aACLjsE,GAAIvkD,EAAEywH,cACNl5D,GAAIv3D,EAAE0wH,gBAED/lD,MAAQ3qE,EACjB6zH,SAAS5sC,IAAMjnF,EAAE4zH,YAEdC,aAEZ/tG,OAAO,SAAA9lB,GAAC,OAAIA,EAAE+G,SI8CNoqH,CAAkB/iB,gBAAiBnqF,aAAcxc,KAAKmnH,oBAAqBnnH,KAAKonH,2EAwBvF,OAAO,yEAGY5xB,gBAAiBnM,aAAcvoF,MAAO0iF,QACzD,IAEIkiC,mBAFsB1lH,KAAKiP,SAASmlF,iBAEEoB,kBAC1CkwB,kBAAoBliC,QAAUkiC,oBAE1B9vB,8BAAsB51F,KAAMqpF,aAAcq8B,mBACtC5kH,YACA00F,wFAOR,OADAx1F,KAAK4pH,aAAc,EACZ5pH,yDAKP,OADAA,KAAK4pH,aAAc,EACZ5pH,2DASP,OAAI8G,UAAcxH,QACdU,KAAKqsH,eAALvlH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKqsH,uDAQZ,OAAOrsH,iDAUP,MAAO,4CAaP,OAJAA,KAAK+J,QAAQgkF,aACTrmB,UAAS,GAAAz7D,OAAKm6F,0BAAiBl6C,sBAAtB,KAAAjgD,OAA+CjM,KAAKgmG,UAAUt+B,aAE3E4a,6BAActiF,KAAKkvB,SAAS0T,SACrB5iC,mDAUCxG,IAAK8G,MACb,GAAY,OAAR9G,IACA,OAAOwG,KAEX,IAAMssH,SAAWtsH,KAAKusH,UAGtB,OAFCD,SAAS9yH,OAAS8yH,SAAS9yH,SAC5B8yH,SAAS9yH,KAAKgI,KAAKlB,MACZN,mDAWP,OAAI8G,UAAUxH,QACVU,KAAKwsH,WAAL1lH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKwsH,iFAWQlsH,MACpB,IAAMqB,OAAS3B,KAAKM,OAAOC,UAAUoB,OAC/B6a,aAAexc,KAAKM,OAAOmc,kBAC3BsE,oBAHoB0rG,sBASlBzsH,KAAKmnH,oBAJL10B,WALkBg6B,sBAKlBh6B,WACAC,WANkB+5B,sBAMlB/5B,WACAJ,OAPkBm6B,sBAOlBn6B,OACAE,OARkBi6B,sBAQlBj6B,OARkB0zB,MAAAwG,0BAWIj6B,WAAYC,YAAYppF,IAAI,SAAAvO,MAAI,OAAIA,OAAS6D,yBAAUC,UAX3D,GAWnB8tH,SAXmBzG,MAAA,GAWT0G,SAXS1G,MAAA,GAoB1B,GARAvkH,OAAOnC,QAAQ,SAACjH,EAAGN,GACf,IAAMO,KAAOD,EAAEC,KACXgkB,aAAahkB,MAAMqkB,IAAI9hB,OAAS6D,yBAAUE,YAC1CiiB,YAAY,GAAGvf,KAAKhJ,MACpBuoB,YAAY,GAAGvf,KAAKlB,KAAKrI,OAI7B00H,UAAYC,SAAU,KAAAC,cAAAC,eAChBC,cAAgBvwG,aAAa81E,QAAQtuF,MACrCgpH,cAAgBxwG,aAAag2E,QAAQxuF,OAC3C6oH,cAAA9rG,YAAY,IAAGvf,KAAfV,MAAA+rH,eAAwBv6B,OAAQE,UAChCs6B,eAAA/rG,YAAY,IAAGvf,KAAfV,MAAAgsH,gBAAwBxsH,KAAKysH,eAAgBzsH,KAAK0sH,iBAEtD,OAAOjsG,8DAIP,OACI3M,EAAG,EACH7O,EAAG,2DAKP,OACI6O,EAAG,EACH7O,EAAG,6EAyBewb,aAA0B,IAAA9gB,KAM5CmlB,WACAzI,OAP+B1N,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC1CmmH,YAAch+G,OAAOg+G,YACrBx1F,QAAUxoB,OAAOwoB,QACvB,IAAKz3B,KAAKM,OACN,SAIJ,GAAIygB,uBAAuBhjB,oBAAW,CAClC,IAAMse,QAAU0E,YAAYxgB,UAC5B6kB,WAAa/I,QAAQ1a,OAAO2H,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OACvCmkB,OAASN,QAAQ/b,UAEjB8kB,WAAarE,YAAY,GACzBpE,OAASoE,YAAYxG,MAAM,EAAGwG,YAAYzhB,QAG9C,IAAMywE,OAAS/vE,KAAK+qH,QACdvuG,aAAexc,KAAKM,OAAOmc,kBAE3BywG,gBAAiBjtH,SAAGgM,OAAHnL,MAAAb,KAAAktH,6BAAap9C,SAAQ1xD,OAAO,SAACy1C,OAAU,IAClDoP,MAAepP,MAAfoP,MAAOsc,IAAQ1rB,MAAR0rB,IAEf,OAAOp6D,WAAW3Q,MAAM,SAAC1H,MAAOoG,KAC5B,OAAIpG,SAASyP,cAAgBA,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUE,WACW,IAAxE6d,OAAO8G,UAAU,SAAAlrB,GAAC,OAAIA,EAAE4a,OAAS+vD,MAAM1mD,aAAazP,OAAO/I,SAC3D+I,QAAUy/C,gBAAeC,SACkB,IAA3C9vC,OAAO8G,UAAU,SAAAlrB,GAAC,OAAIA,EAAE4a,OAASqsE,UAIpD,OAAOytC,YAAcC,eAAiBA,eAAe5jH,IAAI,SAAC/Q,GACtD,IAAMgR,IAAMrI,MAAM3I,GAClB,GAAIk/B,QAAS,CACT,IAAM3G,OAASvnB,IAAIunB,QAAUvnB,IAC7B,QAAiBiqB,IAAbjqB,IAAIusB,KAAoB,CACxB,IAAMs3F,QAA0C,EAAhCxsH,KAAKkU,KAAKvL,IAAIusB,KAAOl1B,KAAKowC,IAC1ClgB,OAAOmG,MAAQm2F,QACft8F,OAAOoG,OAASk2F,QAChBt8F,OAAO1c,GAAKg5G,QAAU,EACtBt8F,OAAOvrB,GAAK6nH,QAAU,YAED55F,IAAjB1C,OAAOmG,QACPnG,OAAOmG,MAAQ,QAEGzD,IAAlB1C,OAAOoG,SACPpG,OAAOoG,OAAS,GAK5B,OAAO3tB,IAAIunB,QAAUvnB,MACtBiI,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAEkL,EAAIJ,EAAEI,gGAGKwb,aAAa,IAUxC46E,aACA0xB,IAXwCC,qBACevsG,YAAYxgB,UAAzDgtH,eAD8BD,qBACpChtH,KAA8BktH,iBADMF,qBACd3rH,OACxBmiH,eAAiB9jH,KAAKypH,gBACtBjtG,aAAexc,KAAKM,OAAOmc,kBAHWgxG,uBASxCztH,KAAKmnH,oBAJL30B,OALwCi7B,uBAKxCj7B,OACAF,OANwCm7B,uBAMxCn7B,OACAI,WAPwC+6B,uBAOxC/6B,WAPwC+6B,uBAQxCh7B,aAIe7zF,yBAAUC,SACzB88F,aAAen/E,aAAa81E,QAAQtuF,MACpCqpH,IAAM,KACC36B,aAAe9zF,yBAAUC,UAChC88F,aAAen/E,aAAag2E,QAAQxuF,MACpCqpH,IAAM,KAGV,IAAM1mB,mBAsBN,OArBAmd,eAAetkH,QAAQ,SAACyrE,SACpBA,QAAQzrE,QAAQ,SAAC6c,SACb,IAAMqxG,SAAWrxG,QAAQ6mD,MAGzB,GAFcsqD,iBAAiB/4G,MAAM,SAAClL,IAAKtR,GAAN,OACmD,IAApFs1H,eAAe9pG,UAAU,SAAAlrB,GAAC,OAAIm1H,SAASlxG,aAAajT,IAAI/Q,MAAMwL,SAAWzL,EAAEN,OACpE,CACP,IAAM01H,eAAiBtxG,QAAQgxG,KACzB7yG,IAAM6B,QAAQ6mD,MACdvyD,SACN,IAAK,IAAMnX,OAAOgjB,aAAc,CAC5B,IAAMxY,MAAQwY,aAAahjB,KAAKwK,MAChC2M,MAAMnX,KAAOghB,IAAIxW,OACbA,QAAU23F,eACVhrF,MAAMnX,KAAOm0H,gBAGrBhnB,gBAAgBnlG,KAAKmP,aAKzBg2F,gBAAiB3mG,KAAKM,OAAOC,UAAUoB,8EAa3B+Q,KACpB,OAAO4vE,6BAActiF,KAAKkvB,SAAS++B,UAAUjuD,KAAKyiF,YAAYpkE,OAAO,SAAA/d,MAAI,QACpEA,OAAkC,IAA3BoS,IAAI/K,QAAQrH,KAAKk/E,6DAU7B,OAAOwC,QAAQixB,IAAIjzG,KAAK+xG,sGAIxB,IAAIltB,UACEY,QAAU,IAAIzD,QAAQ,SAAC57D,SACzBy+D,UAAYz+D,UAIhB,OAFApmB,KAAK+xG,uBAAuBvwG,KAAKikF,SAE1B,WACHZ,qEAKJ,IAAMmhB,QAAUhmG,KAAKgmG,UACrB,OAAO,GAAA/5F,OAAIm6F,0BAAiBh6C,uBAArB,cAAAngD,OAAwD+5F,QAAQylB,aAAhE,QAAAx/G,OACAm6F,0BAAiBh6C,uBADjB,cAAAngD,OACoD+5F,QAAQ0lB,aAD5D,oDAnkBP,QAEQhrH,YAGAuO,UACA3O,kDA4Cc,QAAAyjE,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MACtB,OAAA4pD,qBAAW5tH,KAAQgP,8DAcnB,OACImoC,WACIp8C,KAAM,iEAkBImlB,KAAM2tG,UACxB,OAAO/jD,eAAe5pD,KAAM2tG,0DAkB5B,MAAO,qEAoHP,OAAO,mBCvSTr/D,cAAOof,QAAQpf,KAORs/D,kBAAW,SAAXA,SAAYh2F,SACrB,IAAIo1F,eACIx3B,MAAyF59D,QAAzF49D,MAAOvhE,UAAkF2D,QAAlF3D,UAAW47C,OAAuEj4C,QAAvEi4C,OAAQ53B,YAA+DrgB,QAA/DqgB,YAAayvD,gBAAkD9vE,QAAlD8vE,gBAAiBvrE,UAAiCvE,QAAjCuE,UAAWlH,MAAsB2C,QAAtB3C,MAAOu5B,WAAe52B,QAAf42B,WAC5Ex/B,MAAQozD,6BAAcnuD,WAAWo6B,KAAK,QAASlyB,WAC/C0xF,oBAAsBxgD,kBAAkBp1B,aACxC61E,SAAWx/D,gBACJ4F,MAAM25D,qBACN35G,EAAE,SAAA7b,GAAC,OAAIA,EAAEu4B,OAAO1c,IAChB7O,EAAE,SAAAhN,GAAC,OAAIA,EAAEu4B,OAAOvrB,IAChB4uD,QAAQ,SAAA57D,GAAC,OAAmB,OAAfA,EAAEu4B,OAAOvrB,IAEnC2nH,eAAiBn9C,OACb63B,kBACAslB,eAAiBn9C,OAAO1xD,OAAO,SAAA9lB,GAAC,OAAmB,OAAfA,EAAEu4B,OAAOvrB,KAGjDqhH,oBAAY13F,MAAOiG,OACnB,IAAIotD,QAAUC,YAAYtzD,MAAO,QAAS,IAS1C,OARAqzD,QAAQ9K,QAAQ1H,OAAO,GAAG1zC,WAAW,GAChCqyB,WAAW6qC,WACZhX,QAAUA,QAAQ7zB,aACjB0wB,SAAS1wB,WAAW0wB,UACpBlX,GAAG,MAAOwtB,MAAMwW,8BAErB3pB,QAAQh0B,KAAK,IAAKy/D,SAASd,iBACV/3F,MAAM,eAAgB,GAChCotD,SCvCE/jE,mCACT23E,Y7CHuB,O6CIvBD,aAAc,aACd75D,UAAW,GACX8b,YAAa,SACbhB,WACIp8C,KAAM,SAEVq5F,aACI8P,YACInpG,KAAM,SACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,SACNsqH,WAAY,EAAG,EAAG,GAAK,KAE3BphB,QACIlpG,KAAM,SACNsqH,WAAY,EAAG,EAAG,GAAK,MAG/B3d,sBAAuB,GACvBvC,UACIx1D,SACAv7B,KACA7O,KACAoiG,eACIzuG,MAAO,IAGfw1D,YACIi+B,OAAQ,QACRvN,SAAU,KAEdwoB,iBAAiB,srCCNAqmB,oCAOjB,SAAAA,YAAsB,IAAAztB,iBAAA/+F,yJAAAysH,CAAAluH,KAAAiuH,WAAA,QAAAlqD,KAAAj9D,UAAAxH,OAANkJ,KAAM,IAAAyB,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANx7D,KAAMw7D,MAAAl9D,UAAAk9D,MAAA,OAClBviE,MAAA0sH,+BAAAnuH,MAAAwgG,iBAAA4tB,oBAAAH,YAAA71H,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAASzD,SACJ8+D,SAAW,IAAIF,qBAFF3lE,qXAPagpH,6RA8B/B,MAAO,qDAqCP,OAAOqD,0EAeMxtH,KAAM6mH,kBAAmBj1B,MAAM,IAAA18E,OAAAxV,KACxC+vE,UACEoiB,MAAQD,KAAK99E,EACbg+E,MAAQF,KAAK3sF,EACbu2F,UAAY5J,KAAKviD,MACjBw1D,SAAWnlG,KAAKiP,SAASk2F,SACvB1S,WAA2B00B,kBAA3B10B,WAAYC,WAAey0B,kBAAfz0B,WACd27B,OAAS57B,aAAe7zF,yBAAUE,UAClCwvH,OAAS57B,aAAe9zF,yBAAUE,UAClCtF,IAAM60H,OAAS9mB,SAASzsD,EAAKwzE,OAAS/mB,SAAS5hG,EAAI,KACnDq/G,cAAgB7f,SAASx1D,MACzB24E,WAAatD,cAAcj4G,MAC3ByP,aAAexc,KAAKM,OAAOmc,kBAC3BwoG,gBAAkBqD,YAAc9rG,aAAa8rG,YAAYtkH,MACzDmxB,SACAvmB,QAgCN,OA9BAmhE,OAASzvE,KAAKgJ,IAAI,SAAC/Q,EAAGN,GAClB,IAAMs2H,IAAMp8B,MAAM0F,cAAct/F,EAAE6b,GAAK+9E,MAAM2F,eAAiB,EACxD02B,IAAMp8B,MAAMyF,cAAct/F,EAAEgN,GAFVkpH,eAGI1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACzD+sH,4BAAelpB,oBAAWmpB,kCADtBt1E,MAHgB8+E,eAGhB9+E,MAAOu1E,SAHSuJ,eAGTvJ,SAGf/vF,MAAMu5F,OAAS/+E,MACfxa,MAAM,gBAAkB,EACxBvmB,KAAK02G,cACL12G,KAAK22G,cAAgBL,SACrBt2G,KAAKk3G,kBAEL,IAAMhyD,OACFxF,SACAx9B,QACI1c,EAAGm6G,IACHhpH,EAAW,OAARhN,EAAEgN,EAAa,KAAOipH,KAE7Br5F,YACA+tC,MAAO3qE,EAAE2qE,MACTsc,IAAKjnF,EAAEinF,IACPmvC,MAAOp2H,EAAEinF,IACT59D,OAAQrpB,EAAE2qE,MACVt0D,WAIJ,OAFAklD,MAAMz3B,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMkV,QACrDA,OAAKo5G,WAAWr2H,EAAEiB,KAAMs6D,OACjBA,QAEXic,OAAS82C,eAAe7mH,KAAM+vE,8CAS1B57C,WAAW,IACX47C,OACA8+C,gBACA15F,MAHW1E,OAAAzwB,KAKTiP,OAASjP,KAAKiP,SAEhBk2F,SAKAl2F,OALAk2F,SACAhtD,YAIAlpC,OAJAkpC,YACA9b,UAGAptB,OAHAotB,UACA65D,aAEAjnF,OAFAinF,aACAxnC,WACAz/C,OADAy/C,WAEEo1D,eAAiB9jH,KAAKypH,gBACtB9iB,gBAAkB3mG,KAAKupH,iBACvB/sG,aAAexc,KAAKM,OAAOmc,kBAC3By1E,KAAOlyF,KAAKkyF,OACZ1qF,KAAOm/F,gBAAgBr9F,IAAI,SAAA/Q,GAAC,OAAIA,EAAEiB,MAClC8kG,mBAAqB33B,sBAAsBuvB,aAAcl2F,KAAKk0B,KAAMjlB,OAAOknF,aAC3E24B,mBAAqBxsC,6BAAcnuD,WACnCm0F,WAAanjB,SAASx1D,MAAM5iC,MAC5Bk4G,gBAAkBzoG,aAAa8rG,aAAe9rG,aAAa8rG,YAAYtkH,MAoD7E,OAlDAhE,KAAK+qH,WACL/qH,KAAKusH,aACLuC,mBAAmBr3C,QAAQ6mB,mBAAmBx5F,KAAK,MAAM,GACzDgqH,mBAAmBr3C,QAAQp7C,WAAW,GACtCmmD,YAAYruD,UAAW,IAAK2vF,eAAgB,MACxCx1D,MAAO,SAAAA,MAACnT,QP8IQ,SAAf4zE,aAAgB7/F,MAAO4I,SAChC,IAAIk3F,gBACAl+F,OACI49B,WAAkC52B,QAAlC42B,WAAYugE,kBAAsBn3F,QAAtBm3F,kBACZ7vC,SAA+B1wB,WAA/B0wB,SAAUuN,OAAqBj+B,WAArBi+B,OAAQ4M,SAAa7qC,WAAb6qC,SACtB01B,oBACA1rC,yBAAUr0D,MAAMlD,OAAQijG,kBAAkB3gE,OAC1Cx9B,OAASm+F,kBAAkBn+F,OASvBk+F,gBARCz1B,SAQiBrqE,MAPAA,MAAMw/B,aACnB2wB,KAAKtZ,QAAQ4mB,SACbvN,SAASA,UACTlX,GAAG,MAAO,WACP0+C,oBAAYtkC,6BAActiF,MAAO8wB,QAAQ,KAKrD81F,oBAAYoI,gBAAiBl+F,SO/JrBi+F,CAAa5zE,OACTuT,sBACAugE,mBACI3gE,OACI4gE,iBAAkB,EAClB7qC,eAAgB5zD,OAAK0+F,eAAe,iBAExCr+F,QACIo+F,iBAAkB/pB,SAASwC,cAAczuG,WAKzD43B,OAAQ,SAAAA,OAACqqB,MAAO8vB,QAAShzE,GAKrB,IAAI03C,MAJJogC,OAASt/C,OAAK2+F,gBAAgBnkD,QAASx6C,OAAK02F,oBAAqBj1B,KAAMj6F,GACvEw4B,OAAKs6F,QAAQvpH,KAAKuuE,QAClB8+C,gBAAkB,GAAA5iH,OAAGqyF,mBAAmB,GAAtB,KAAAryF,OAA4BzE,KAAKvP,IAAMA,GAAIwL,cAG7D,IAAM4rH,WAAalqB,SAASx1D,MAAMz2C,MAC5Bo2H,SAAWv/C,OAAOnoD,KAAK,SAAArvB,GAAC,OAAiC,OAA7BA,EAAE2qE,MAAM+hD,uBACLzxF,IAA7Bj7B,EAAE2qE,MAAM+hD,mBAGZt1E,MADA0/E,WACQA,WAAWpkD,QAAShzE,EAAG6rH,gBAEvB5xB,KAAKviD,MAAM0sD,SAASizB,UAAYA,SAASpsD,MAAM+hD,kBAG3D9vF,MAAQ1E,OAAK0+F,aAAax/E,OAC1Blf,OAAK8+F,WAAL9+F,EACIilE,MAAOjlE,OACP0D,UAAWgnB,MAAMnvB,OACjBmsB,wBACA43B,cACA1zC,UAAWwyF,gBACXngE,sBACAv5B,MAAOA,UACPyyE,gBAAiB34F,OAAO24F,oBAGjC,SAAArvG,GAAC,OAAIA,EAAE,GAAG2qE,MAAM+hD,kBAAoB1sH,EAAE,GAAGinF,MAE5CinC,oBAAoBzmH,KAAKsnE,SAAUtnE,KAAK+qH,SACjC/qH,uDAQG2vC,OACV,OACI++E,OAAQ/+E,MACR00C,eAAgB,6DAUPjwE,EAAG7O,EAAG0J,QACnB,IAAIugH,aAAevgH,OAAOugH,aACpBlvH,KAAON,KAAKM,OAElB,IAAKA,MAASA,MAAQA,KAAKygG,UACvB,OAAO,KAGXyuB,kBAAgCh8F,IAAjBg8F,aAA6BA,aAAexvH,KAAKiP,SAASy4F,sBACzE,IAAM5zC,MAAQ9zD,KAAKsnE,SAAS1/C,KAAKxT,EAAG7O,EAAGiqH,cACjCzpG,WAAa6hD,WAAW9T,MAAO,OAAQ,OAAQ,UAErD,GAAIA,MAAO,KAAA27D,iBACgB37D,MAAMxzD,KAAKA,KAA1B4iE,MADDusD,iBACCvsD,MAAOsc,IADRiwC,iBACQjwC,IAEf,OACItrD,GAFgBl0B,KAAK0vH,uBAAuBxsD,MAAOsc,KAGnDz5D,aACI3R,EAAG2R,WAAW3R,EACd7O,EAAGwgB,WAAWxgB,EACd0xB,MAAO,EACPC,OAAQ,IAEZy4F,QAAS3vH,KAAKk0B,MAGtB,OAAO,uDA7OP,MAAO,6DAkBP,OAAO1V,sFAYW0B,KAAM2tG,UACxB,IAAM5+G,OAASw7G,qBAAUH,cAAcpqG,KAAM2tG,UACvC1oB,SAAWl2F,OAAOk2F,SAClBhuD,UAAYloC,OAAOkoC,UACnBmxE,WAAanjB,SAASx1D,OAASw1D,SAASx1D,MAAM5iC,MAKpD,OAHIu7G,aAAenxE,UAAU/2B,UACzB+2B,UAAU/2B,QAAUkoG,YAEjBr5G,qEAYP,OAAO,0jBC/Ff,IAAMwlD,cAAOmZ,QAAQnZ,KAuCNm7D,cAjC6B,SAAXA,SAAY5gH,QACzC,IAAIk+G,eACIx3B,MAAyF1mF,OAAzF0mF,MAAOvhE,UAAkFnlB,OAAlFmlB,UAAW47C,OAAuE/gE,OAAvE+gE,OAAQ56C,MAA+DnmB,OAA/DmmB,MAAOu5B,WAAwD1/C,OAAxD0/C,WAAYryB,UAA4CrtB,OAA5CqtB,UAAWurE,gBAAiC54F,OAAjC44F,gBAAiBzvD,YAAgBnpC,OAAhBmpC,YAEjE03E,WAAyBnhE,WAAjCi+B,OAAoBvN,SAAa1wB,WAAb0wB,SACtBlwD,MAAQozD,6BAAcnuD,WACtB45F,oBAAsBxgD,kBAAkBp1B,aACxC4V,UAAY7+B,MAAM++B,UAAU,QAAQ3tD,MAAM0O,OAAO+gE,SAPHm2C,MAAA4J,wBAQX,QAAS,UAAUxmH,IAAI,SAAAnP,GAAC,OAAIs6D,gBAAOL,MAAM25D,qBACjE35G,EAAE,SAAA7b,GAAC,OAAIA,EAAE4B,GAAGia,IACZq7C,GAAG,SAAAl3D,GAAC,OAAIA,EAAE4B,GAAGoL,IACbuqD,GAAG,SAAAv3D,GAAC,OAAIA,EAAE4B,GAAG21D,KACbqE,QAAQ,SAAA57D,GAAC,OAAe,OAAXA,EAAE4B,GAAGoL,MAZiB,GAQ7CwqH,cAR6C7J,MAAA,GAQ9B8J,eAR8B9J,MAAA,GAepDgH,eAAiBn9C,OACjB7gD,MAAMq/B,KAAK,QAASlyB,WAChBurE,kBACAslB,eAAiBn9C,OAAO1xD,OAAO,SAAA9lB,GAAC,OAAmB,OAAfA,EAAEu4B,OAAOvrB,KAEjD,IAAM0qH,eAAiBliE,UAAUO,QAAQl+B,OAAO,QAAQm+B,KAAK,IAAKwhE,cAAc7C,iBAChFn/D,UAAU/iD,MAAMilH,gBAAgBvhE,aAAa2wB,KAAKtZ,QAAQ8pD,aACzCzwC,SAASA,UACTlX,GAAG,MAAOwtB,MAAMwW,6BAChB39C,KAAK,IAAKyhE,eAAe9C,iBACzBvqF,KAAK,SAAUpqC,GACZ,IAAMgqF,QAAUD,6BAActiF,MAE9BuiF,QAAQ9K,QAAQl/E,EAAE,GAAG8jC,WAAW,GAChC1jC,OAAO6O,KAAK2tB,OAAO31B,QAAQ,SAAAhG,KAAG,OAAI+oF,QAAQptD,MAAM37B,IAAK27B,MAAM37B,irDCd9D02H,4qBAAkBjC,mTAwBV3tH,KAAM6mH,kBAAmB3qG,cAC9C,IAAM4oD,QAAU+qD,SAAAC,oBAAAF,UAAAn2H,WAAA,0BAAAiG,MAAA5H,KAAA4H,KAA8BM,KAAMkc,cAOpD,OANC+qF,SAASzsD,EAAGysD,SAAS5hG,GAAGnG,QAAQ,SAACzE,MACcosH,kBADL,GAAAl7G,OAC3BlR,KAD2B,gBAErB6D,yBAAUC,cAA6B20B,IAAlB4xC,QAAQrqE,QAC3CqqE,QAAQrqE,MAAM,GAAK6F,KAAKC,IAAIukE,QAAQrqE,MAAM,GAAI,MAG/CqqE,sDAQP,OAAOwqD,sEAUMtvH,KAAM6mH,kBAAmBj1B,MAAM,IAAAzwF,MAAAzB,KACxC+vE,UACEq3C,cAAgBpnH,KAAKonH,gBACrBtrB,UAAY5J,KAAKviD,MACjB1gC,OAASjP,KAAKiP,SAEd+1G,cADW/1G,OAAOk2F,SACOx1D,MACzB24E,WAAatD,cAAcj4G,MAC3ByP,aAAexc,KAAKM,OAAOmc,kBAC3BwoG,gBAAkBqD,YAAc9rG,aAAa8rG,YAAYtkH,MACvDsuF,OAA4B60B,kBAA5B70B,OAAQE,OAAoB20B,kBAApB30B,OAAQ61B,QAAYlB,kBAAZkB,QAVoBgI,eAczCpK,sBAAc/zB,MAFbC,MAZwCk+B,eAYxCl+B,MACAC,MAbwCi+B,eAaxCj+B,MAEEk+B,YAAcrhH,OAAOs3G,oBACrB8H,OAAS7xG,aAAa81E,SAAW91E,aAAa81E,QAAQz1E,IAAI9hB,OAAS6D,yBAAUE,UAC7EwvH,OAAS9xG,aAAag2E,SAAWh2E,aAAag2E,QAAQ31E,IAAI9hB,OAAS6D,yBAAUE,UAC7EtF,IAAM60H,OAAS,IAAOC,OAAS,IAAM,KAsC3C,OArCAv+C,OAASzvE,KAAKgJ,IAAI,SAAC/Q,EAAGN,GAClB,IAAMs2H,IAAMp8B,MAAM0F,cAAct/F,EAAE6b,GAAK+9E,MAAM2F,eAAiB,EACxD02B,IAAMp8B,MAAMyF,cAAct/F,EAAEgN,GAC5BgrH,KAAQlI,SAAWjB,gBAAkBngB,MAAS7U,MAAMyF,cAAct/F,EAAEu3D,IAAMsiC,MAAMyF,cAAc,GAH5E42B,eAII1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACzD+sH,4BAAelpB,oBAAWmpB,kCADtBt1E,MAJgB8+E,eAIhB9+E,MAAOu1E,SAJSuJ,eAITvJ,SAET/vF,SACAvmB,QACNumB,MAAM0kB,KAAOlK,MAEb/gC,KAAK02G,cACL12G,KAAK22G,cAAgBL,SACrBt2G,KAAKk3G,kBACL,IAAMhyD,OACFxF,OACIl6C,EAAGm6G,IACHhpH,EAAW,OAARhN,EAAEgN,EAAahN,EAAEgN,EAAI6sF,MAAMyF,cAAc,GAC5C/nC,GAAa,OAATv3D,EAAEu3D,GAAcv3D,EAAEu3D,GAAKsiC,MAAMyF,cAAc,IAEnD/mE,QACI1c,EAAGm6G,IACHhpH,EAAW,OAARhN,EAAEgN,EAAahN,EAAEgN,EAAIipH,IACxB1+D,GAAa,OAATv3D,EAAEu3D,GAAcv3D,EAAEu3D,GAAKygE,MAE/B/wC,IAAKjnF,EAAEinF,IACPtc,MAAO3qE,EAAE2qE,MACTthD,OAAQrpB,EAAE2qE,MACVyrD,MAAOp2H,EAAEinF,IACTnjD,UAAWi0F,YAAcA,YAAY/3H,EAAGN,EAAGqI,KAAMmB,OAAQ,GACzD0zB,YACAvmB,WAIJ,OAFAklD,MAAMz3B,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMmB,OACrDA,MAAKmtH,WAAWr2H,EAAEiB,KAAMs6D,OACjBA,QAEXic,OAAS82C,eAAe7mH,KAAM+vE,0DASpBpgC,OACV,OACIkK,KAAMlK,+DA/GV,OAAOnxB,kFAWP,MAAO,wBC1CFA,kCACT23E,YjDHuB,OiDIvBD,aAAc,YACdl4D,SAAWF,IAAK,EAAGivB,OAAQ,EAAG9rB,KAAM,EAAGC,MAAO,GAC9C7E,UAAW,GACXm0F,eAAgB,GAChBp8B,aACI8P,YACInpG,KAAM,OACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,KAE3BphB,QACIlpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,MAG/BnuF,OAAQ,IACRD,MAAO,IACPzlB,KAAM,GACN68D,aAAc,EACdpc,SAAU,EACVqc,UAAW,EACXzc,WAAY,EACZE,SAAU,IACV3d,QAAS,UAAW,OAAQ,QAAS,SAAU,SAAU,UACzD+C,WACIp8C,KAAM,YAEVoqG,UACIsrB,gBACIv3H,MAAO,OAEXw3H,mBACIx3H,MAAO,SAEX0yG,OACI1yG,MAAO,KAEXypE,QACIzpE,MAAO,KAEXi3C,SACIj3C,MAAO,KAEXy2C,OACIz2C,MAAO,KAEX8iG,OACI9iG,MAAO,KAEX48B,MACI58B,MAAO,MAGfy3H,iBAAkB,GAClBjiE,YACIi+B,OAAQ,QACRvN,SAAU,KAEdwxC,QACI1sB,WACI7nE,UAAS,GAAApwB,OjDnEM,OiDmEN,yBAEb4kH,SACIx0F,UAAS,GAAApwB,OjDtEM,OiDsEN,uBAEb6kH,UACIz0F,UAAS,GAAApwB,OjDzEM,OiDyEN,8uDCvDrB,IAAMgiE,QAAML,QAAQK,IACdpd,QAAM+c,QAAQ/c,IAWCkgE,kCAEjB,SAAAA,SAAazwH,KAAM4xF,KAAMjjF,OAAQ9T,cAAc,IAAAsG,MAAA,wJAAAuvH,CAAAhxH,KAAA+wH,WAC3CtvH,MAAAwvH,8BAAAjxH,KAAAkxH,mBAAAH,UAAA34H,KAAA4H,KAAMM,KAAM4xF,KAAMjjF,OAAQ9T,gBACrBg2H,gBAFsC1vH,kXAFbgpH,yRAoC9B,MAAO,qEAWSnuG,UAAWrN,QAAQ,IAAAuG,OAAAxV,KAC/BoxH,WACEC,YAEFx/D,WAKA5iD,OALA4iD,WACAE,SAIA9iD,OAJA8iD,SACAozC,SAGAl2F,OAHAk2F,SACA3zF,KAEAvC,OAFAuC,KACAg/G,eACAvhH,OADAuhH,eAEEc,SAAWtxH,KAAKupH,qBAVagI,iBC0CZ,SAAlBC,gBAAmBrsB,SAAU3oF,cAAiB,IAAA0pG,MAAAuL,0BACGvqB,MAAOC,OAAQE,MAAOD,MACvE99F,IAAI,SAAAnP,GAAC,OAAIgrG,SAAShrG,GAAG4S,QAFyB,GAChD2kH,WADgDxL,MAAA,GACpCyL,YADoCzL,MAAA,GACvBoC,WADuBpC,MAAA,GAAAC,MAAAsL,0BAGTC,WAHSxL,MAAA,GAGcyL,aAChEroH,IAAI,SAACnP,GACF,IAAM+lB,KAAO1D,aAAariB,GAC1B,OAAI+lB,MAAQA,KAAKrD,IAAI9hB,OAAS6D,yBAAUC,QAC7BqhB,KAAKlc,MAET,OATwC,GAYvD,OACI4tH,WAbmDzL,MAAA,GAcnD0L,UAdmD1L,MAAA,GAenD2L,YAfmD3L,MAAA,GAgBnD4L,WALenqD,WAAWprD,aAAc8rG,WAAY,UDpChDkJ,CAAgBrsB,SANCnlG,KAAKM,OAAOmc,mBAE7Bm1G,WAb+BL,iBAa/BK,WACAC,UAd+BN,iBAc/BM,UACAC,YAf+BP,iBAe/BO,YACAC,WAhB+BR,iBAgB/BQ,WAEEC,QAAU11G,UAAU/b,UACpBD,KAAO0xH,QAAQ1xH,KACfkkB,KAAOwtG,QAAQxtG,KAErBxkB,KAAKmxH,gBAELG,SAAS9xH,QAAQ,SAACrF,EAAG6J,OACjBwR,OAAK27G,aAAah3H,EAAE83H,MAAQ93H,EAAG6J,OAC/BqtH,SAASl3H,EAAE6J,OAAS7J,IAKxBi3H,QAAUnjD,UACLpc,WAAYA,WAAa,IAAOjxD,KAAKowC,IACrC+gB,SAASnxD,KAAKowC,GAAK+gB,SAAW,KAC9B74D,MAAM,SAAAX,GAAC,OAAIA,EAAEq5H,aAAe,IAC5B5uF,WAAW,MAEhBxxB,KAAKlS,QAAUwyH,aAAeV,QAAQ5/G,KAAK,SAACnX,EAAG8K,GAC3C,MlDjGa,QkDiGTqM,KACOnX,EAAEy3H,aAAe3sH,EAAE2sH,aACrB3sH,EAAE2sH,aAAez3H,EAAEy3H,eAEhC,IAAM1E,QAAU9sH,KAAK0S,OAAO,SAACC,IAAK1a,GAAN,OAAY0a,KAAO1a,EAAEs5H,YAAc,IAAI,GAgBnE,OAbAT,QAAUA,QAAQ9wH,MAAMgJ,IAAI,SAAC/Q,EAAGN,GAW5B,OAVAM,EAAE25H,iBAAmB5xH,KAAKrI,GAAG65H,cAAgBtB,eAC7Cj4H,EAAEk5D,YAAcxiD,OAAOwiD,YACvBl5D,EAAE+2H,SAAWhvH,KAAKrI,GAAG85H,YACrBx5H,EAAE45H,SAAW7xH,KAAKrI,GAAG25H,YACrBr5H,EAAE60H,QAAUA,QACZ70H,EAAE05H,IAAMztG,KAAKvsB,GACbM,EAAEo2H,MAAQp2H,EAAE05H,IACZ15H,EAAEqpB,OAASthB,KAAKrI,GAChBM,EAAE65H,cAAgB58G,OAAK27G,aAAa54H,EAAE05H,KAAOz8G,OAAK27G,aAAa54H,EAAE05H,KAAK,GC3FlD,SAAnBI,iBAAoBf,SAAUgB,UAAWrjH,QAClD,IAAMsjH,QAAUjB,SAASgB,UAAY,GAC/BE,QAAUlB,SAASgB,WAEzB,OAAIC,SAAWC,SAEP3gE,WAAY0gE,QAAQxgE,SACpBA,SAAUygE,QAAQ3gE,YAEd2gE,SAOR3gE,WAAY5iD,OAAO4iD,WAAajxD,KAAKowC,GAAK,EAAI,IAC9C+gB,SAAU9iD,OAAO4iD,WAAajxD,KAAKowC,GAAK,EAAI,MANxC6gB,WAAY5iD,OAAO8iD,SAAWnxD,KAAKowC,GAAK,EAAI,IAC5C+gB,SAAU9iD,OAAO8iD,SAAWnxD,KAAKowC,GAAK,EAAI,KDgFtCqhF,CAAiBhB,SAAU94H,EAAEyL,MAAOiL,QACjC1W,gEAYI+H,MACf,OAAOA,6EAUcA,MAErB,OACIqiE,OAAQkC,gCAAmBvkE,OlDtJL,iGkDkKb8T,EAAG7O,GAAgB,IAAb0J,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC1B+8F,UAAYvhB,6BAAcrzE,OAAOokE,MAAMx6B,QAAQv4C,OAAO,GAC5D,GAAIqqB,eAAek5E,WAAY,KAAA4uB,iBACL5uB,UAAUtxF,MAAxBjS,KADmBmyH,iBACnBnyH,KAAM2xH,IADaQ,iBACbR,IACd,OACI/9F,GAAIl0B,KAAK0vH,uBAAuBpvH,KAAM2xH,KACtCtC,QAAS3vH,KAAKk0B,MAGtB,OAAO,2EAUaxhB,KACpB,OAAO4vE,6BAActiF,KAAKkvB,SAAS++B,UAAUjuD,KAAKyiF,YAAYpkE,OAAO,SAAA9lB,GAAC,OAAkC,IAA9Bma,IAAI/K,QAAQpP,EAAEga,MAAM0/G,6CAU1F99F,WAAW,IAAA1D,OAAAzwB,KAAA0yH,kBAIX1yH,KAAK05F,cAFLxiE,OAFWw7F,kBAEXx7F,OACAD,MAHWy7F,kBAGXz7F,MAHW+rE,aAiBZhjG,KAAKiP,SAXJknF,YANW6M,aAMX7M,YACAD,aAPW8M,aAOX9M,aACAs6B,eARWxtB,aAQXwtB,eACA/+D,YATWuxC,aASXvxC,YACAE,YAVWqxC,aAUXrxC,YACA0c,aAXW20B,aAWX30B,aACApc,SAZW+wC,aAYX/wC,SACAqc,UAbW00B,aAaX10B,UACAtwC,QAdWglE,aAcXhlE,QACA0wB,WAfWs0C,aAeXt0C,WACAiiE,iBAhBW3tB,aAgBX2tB,iBAEE10B,SAAWj8F,KAAKkyF,OAAOp8D,KACvB6wE,gBAAkB3mG,KAAKupH,iBACvBoJ,YAAcz7F,OAAS8G,QAAQF,IAAME,QAAQ+uB,OAC7C6lE,WAAa37F,MAAQ+G,QAAQiD,KAAOjD,QAAQkD,MAC5C2xF,cAAgBlsD,sBAAsBuvB,aAAcl2F,KAAKk0B,KAAMiiE,aAE/D5yF,MCpMgB,SAAjBuvH,eAAkB77F,MAAOC,OAAQjoB,QAAW,IAEjDuhH,eAIAvhH,OAJAuhH,eACA/+D,YAGAxiD,OAHAwiD,YACAE,YAEA1iD,OAFA0iD,YACAg/D,iBACA1hH,OADA0hH,iBAGJ,OAAQ/vH,KAAKG,IAAK0wD,YAAck/D,kBAAoB,EAAIH,gBAAiB7+D,aAAe/wD,KAAKC,IAAIq2B,OAC7FD,OAAS,GD2LK67F,CAAeF,WAAYD,aACrCnC,8BACA/+D,wBACAE,wBACAg/D,oCAEE70B,UAAY97F,KAAKkyF,OAAOviD,MACxBojF,cAAgBphE,aAAe/wD,KAAKC,IAAI8xH,YAAaC,YAAc,EACnEI,aAAehzH,KAAKU,SAASiiE,OAC7BswD,iBAAmB,SAAnBA,iBAAmB16H,GAAC,OChOL,SAAhB26H,cAAiB3gH,MAAOhP,MAAO7C,OAAQqyH,cAAe92B,UAC/D,IAAIk3B,iBAAmB,EAEnBjB,iBAEA3/G,MAFA2/G,iBACA9E,QACA76G,MADA66G,QAEEgG,eAAiBn3B,SAASv7F,SAC1B2yH,eAAiBp3B,SAASM,QAAQ6wB,UAAYgG,eAAiBn3B,SAAS14F,QAAQ,GAAK04F,SAAShtF,SAAS/V,OAI7G,OAFAi6H,mBAAqB5vH,MAAM,GAAKA,MAAM,KAAO7C,OAAO,GAAKA,OAAO,KAC9C6C,MAAM,IAAM2uH,iBAAmBxxH,OAAO,IAAMyyH,kBAC1CJ,eAAiBM,eDqNHH,CAAc36H,EAAGgL,MAAOyvH,aAAcD,cAAe92B,WAE7EjuC,KAAO6C,UAEJY,YAAYA,YAAc7wD,KAAKC,IAAI8xH,YAAc,EAAGC,WAAa,EAAGnhE,aAAe,GACnF4c,aAAaA,cACbpc,SAASA,UACTqc,UAAUA,WACnBtuE,KAAKszH,YAAcV,WACnB5yH,KAAKuzH,aAAeZ,YAEpB,IAAM5nH,EAAIy3E,YAAYF,6BAAcnuD,WAAY,KAAM,GAAjC,GAAAloB,OAAwC4mH,cAAc,GAAtD,WACZp7C,QADC,GAAAxrE,OACU4mH,cAAc,GADxB,WACoC,GACrCtkE,KAAK,YAFJ,aAAAtiD,OAE8B2mH,WAAa,EAF3C,KAAA3mH,OAEgD0mH,YAAc,EAF9D,MAyBJa,oBACFC,YAAc,EAqBlB,OAPAjxC,YAAYz3E,EAAG,IAAK47F,gBAAT,GAAA16F,OAA6B4mH,cAAc,KAE9C/hG,OAvCM,SAARouD,MAAS55D,MACXk9D,YAAYl9D,KAAM,OAAQ,SAAC/sB,EAAGN,GAAJ,QACtBsa,MAAOha,EACPyL,MAAO/L,EACPy7H,MAAO1lE,KACPp/C,MACI22G,cAAezpB,UAAUqlB,YAAY5oH,EAAE+2H,UACvChK,cACAQ,sBAPG,GAAA75G,OASJ4mH,cAAc,GATV,UAUM19F,MAAM,OAAQ,SAAA58B,GAAC,OAAIujG,UAAUO,SAAS9jG,EAAEga,MAAM+8G,YAC9C5gE,aACA0wB,SAAS1wB,WAAW0wB,UACpBlX,GAAG,MAAOz3C,OAAKy7E,6BACf3rB,UAAU,IAAK,mBAAAxc,KAAAj9D,UAAAxH,OAAI0P,OAAJ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAIh1D,OAAJg1D,MAAAl9D,UAAAk9D,MAAA,OClMpB,SAAX2vD,SAAY3lE,KAAMilE,iBAAkB9tH,GAAM,IAC3CoN,MAAUpN,EAAE,GAAZoN,MACFo/C,YAAcshE,iBAAiB1gH,OAGrC,OAFAA,MAAMo/C,YAAcA,YACpBp/C,MAAM6/G,cAAczgE,YAAcp/C,MAAM6/G,cAAczgE,aAAeA,YAC9D,SAAUx4D,GACb,OAAO60D,KAAK5C,4BAAe74C,MAAM6/G,cAAe7/G,MAApC64C,CAA2CjyD,KD4LJw6H,CAAS3lE,KAAMilE,iBAAkBjkH,UAC/Du/C,KAAK,QAAS,SAACh2D,EAAGN,GACf,IAAM27H,gBAAkBtN,uBAAuB/tH,EAAGN,EAAG0uG,gBAAiBl2E,QACtE,SAAAxkB,OAAU4mH,cAAc,GAAxB,UAAA5mH,OAAmC4mH,cAAc,GAAjD,UAAA5mH,OAA4D1T,EAAEyL,MAA9D,0CAAAiI,OACM2nH,oBAqBtBxlE,KAhBU,SAAZylE,UAAavuG,KAAM/sB,GACrB,IAAIu7H,QAAUN,iBAAiBC,aACzBM,eAAiBN,YAClBK,QAEMA,QAAQA,QAAQx0H,OAAS,GAAGiT,MAAMvO,QAAUzL,EAAEyL,MAAQ,EAC7D8vH,QAAQtyH,MAAO8jB,UAAM/S,MAAOha,IAE5Bk7H,cAJAK,UAAaxuG,UAAM/S,MAAOha,IAM9Bi7H,iBAAiBO,gBAAkBD,WAQtBvlE,KAAK,QAAS,SAACh2D,EAAGN,GAAJ,SAAAgU,OAAa4mH,cAAc,GAA3B,KAAA5mH,OAAiC4mH,cAAc,GAA/C,KAAA5mH,OAAqDhU,KC3MhE,SAAf+7H,aAAgBR,iBAAkB9kE,WAAYukE,iBAAkBjlE,MACrEwlE,iBAAiBl0H,OAAS,GAC1Bk0H,iBAAiBh0H,QAAQ,SAACy0H,oBACtB,IAAMpiE,WAAaoiE,mBAAmB,GAAG1hH,MAAMs/C,WACzCE,SAAWkiE,mBAAmBA,mBAAmB30H,OAAS,GAAGiT,MAAMw/C,SACnEpgD,IAAiB,EAAV/Q,KAAKowC,GAAS6gB,YAA0B,EAAVjxD,KAAKowC,GAAU6gB,WAAaE,UAEvEkiE,mBAAmBz0H,QAAQ,SAACrF,GAAM,IACtBmrB,KAAgBnrB,EAAhBmrB,KAAM/S,MAAUpY,EAAVoY,MAEd+S,KAAKqd,KAAK,WACN,IAAMuxF,MAAQ5xC,6BAActiF,MAC5Bk0H,MAAMjmE,UAAU,QACCS,aACA0wB,SAAS1wB,WAAW0wB,UACpBmB,UAAU,IAAK,kBAAM,SAAUpnF,GAC5B,IAAMw4D,YAAcshE,iBAAiB1gH,OAErC,OADAA,MAAMo/C,YAAcA,YACb3D,KAAK5C,4BAAe74C,OACvBs/C,WAAYlgD,IACZogD,SAAUpgD,IACVggD,yBAHQvG,CAITjyD,OAENypC,SACjBsxF,MAAMtxF,eDmLlBoxF,CAAaR,iBAAkB9kE,WAAYukE,iBAAkBjlE,MACtDhuD,+EAUe+gB,aACtB,IAAK/gB,KAAKM,OACN,SAEJ,IAAM8kB,WAAarE,YAAY,GACzBpE,OAASoE,YAAYxG,MAAM,EAAGwG,YAAYzhB,QAC1C60H,UAAY7xC,6BAActiF,KAAKkvB,SAAS++B,UAAU,QAAQ3tD,OAC1Dkc,aAAexc,KAAKM,OAAOmc,kBAc3B23G,YAZeD,UAAU91G,OAAO,SAACg2G,OACnC,IAAM/zH,KAAO+zH,MAAM9hH,MAAMjS,KACnB2xH,IAAMoC,MAAM9hH,MAAM0/G,IACxB,OAAO7sG,WAAW3Q,MAAM,SAAC1H,MAAOoG,KAC5B,OAAIpG,SAASyP,cAAgBA,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUE,WACU,IAAvE6d,OAAO8G,UAAU,SAAAlrB,GAAC,OAAIA,EAAE4a,OAAS7S,KAAKkc,aAAazP,OAAO/I,SAC1D+I,QAAUy/C,gBAAeC,SACkB,IAA3C9vC,OAAO8G,UAAU,SAAAlrB,GAAC,OAAIA,EAAE4a,OAAS8+G,UAKnB,GACjC,GAAImC,YAAa,CACb,IAAMzkD,SAAWykD,YAAYV,MAAM/jD,SAASykD,YAAY7hH,OACxD,QACI6B,EAAGu7D,SAAS,GAAK3vE,KAAKszH,YAAc,EACpC/tH,EAAGoqE,SAAS,GAAK3vE,KAAKuzH,aAAe,EACrCt8F,MAAO,EACPC,OAAQ,IAGhB,iEAIA,OAAO,GAAAjrB,OAAIm6F,0BAAiBh6C,uBAArB,2EApSP,OAAO5tC,iFAWP,MAAO,sBEaA81G,cAvDE,SAAXA,SAAYngG,UAAW7zB,KAAM2O,OAAQ+rB,YACvC,IAAM+yB,UAAYu0B,6BAAcnuD,WAAW85B,UAAU,KAAK3tD,KAAKA,MAEzDi0H,eAAiBxmE,UAAUO,QAAQl+B,OAAO,KAC3CuS,KAAK,SAAUtmB,SACZinE,wBAAStjF,KAAMqc,QAAQiyC,SAE1BtjD,MAAM+iD,WACL54B,MAAQ8uD,qCAAsB3B,6BAAcnuD,WAAYllB,OAAOotB,WAC/D1F,SAAWtzB,SAAS8xB,MAAMwB,SAAU,IA2C1C,OAzCAqE,WAAWxF,SAASL,OACpBo/F,eAAe5xF,KAAK,SAAUtmB,SAC1B,IAGIm4G,cAHEjyC,QAAUD,6BAActiF,MACtB8wB,OAAsDzU,QAAtDyU,OAAQxuB,KAA8C+Z,QAA9C/Z,KAAMqtC,MAAwCtzB,QAAxCszB,MAAO8kF,WAAiCp4G,QAAjCo4G,WAAmBC,UAAcr4G,QAArB8Y,MACnCw/F,WAAat4G,QAAQs4G,WAE3B,GAAIH,cAAgBG,WAAWz7H,MAAO,CAClC,IACI6S,KADE6oH,kBAAoBD,WAAW32F,QADH62F,sBAGR75F,WAAWO,WAAWlf,QAAQ/Z,MAAhD20B,MAH0B49F,sBAG1B59F,MAAOC,OAHmB29F,sBAGnB39F,OACT49F,aAAetyC,YAAYD,QAAS,QAAS,IAG/Cx2E,KADe,QAAf0oH,WACOx9F,MACe,UAAfw9F,WACA,EAEAx9F,MAAQ,EAGnBqsD,wBAASwxC,aAAa9oG,QAClB5X,EAAG0c,OAAO1c,EAAIrI,KAAO6oH,kBAAoB,EACzCrvH,EAAGurB,OAAOvrB,EAAIoxB,SAAWi+F,kBAAoB,EAC7C39F,MAAOA,MAAQ29F,kBACf19F,OAAQA,OAAS09F,oBAErBD,YAAcpxC,yBAAUuxC,cACpBH,WAAYH,gBAGpB,IAAMrwC,OAAS3B,YAAYD,QAAS,OAAQ,SAAAhqF,GAAC,OAAKA,KAAI+J,KAAKA,MACrD+pG,SAAWloB,OAAOn4D,OACxB0oG,WAAanxC,yBAAU8oB,SAAUqoB,WACjC/kF,OAAS4zC,yBAAU8oB,UACfxyD,KAAMlK,QAEVtzB,QAAQggB,WAAa8nD,OAAO1M,QAAQp7D,QAAQggB,WAAW,GACvDinD,wBAAS+oB,SAAUv7E,QACnBqzD,OAAO51B,KAAK,cAAekmE,cAE/B1mE,UAAUK,OAAOxrB,SACVmrB,WChEEvvC,mCACT03E,aAAc,aACdC,YrDJuB,OqDKvB95D,UAAW,GACX8a,WACIp8C,KAAM,YAEVq5F,aACI8P,YACInpG,KAAM,OACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,KAE3BphB,QACIlpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,MAG/B32D,YACIi+B,OAAQ,QACRvN,SAAU,KAEd+lB,UACIx1D,SACArtC,MACIpJ,MAAO,GACPy7H,YACI32F,QAAS,MAIrB4yF,QACI1sB,WACI7nE,UAAS,GAAApwB,OrDtCM,OqDsCN,0BAEb4kH,SACIx0F,UAAS,GAAApwB,OrDzCM,OqDyCN,wBAEb6kH,UACIz0F,UAAS,GAAApwB,OrD5CM,OqD4CN,quDCnBA8oH,4qBAAkBtK,6RAc/B,MAAO,+DAUMnqH,KAAM6kG,SAAUjT,MAgB7B,IAhBmC,IAAAzwF,MAAAzB,KAC/B+vE,UACE+rB,UAAY5J,KAAKviD,MACjBqlF,aAAe7vB,SAAS7iG,KACf2yH,UAA+CD,aAAtDjoH,MAAkB7T,MAAoC87H,aAApC97H,MAAkBg8H,cAAkBF,aAA7B7wH,UAC3B6gH,cAAgB7f,SAASx1D,MACzB24E,WAAatD,eAAiBA,cAAcj4G,MAC5CyP,aAAexc,KAAKM,OAAOmc,kBAE3B04G,mBAAqBhwB,SAAS7iG,KAAKqyH,WACnCC,kBAAoBO,mBAAmBn3F,QACvCo3F,gBAAkBD,mBAAmBj8H,MACrC+rH,gBAAkBzoG,aAAa8rG,YAAc9rG,aAAa8rG,YAAYtkH,OAAS,EAC/EqxH,eAAiBJ,UAAYz4G,aAAay4G,YAAcz4G,aAAay4G,WAAWjxH,OAAS,EACzFgoH,KAAOzkB,SAASzsD,EAChBixE,KAAOxkB,SAAS5hG,EAfa2vH,MAAA,SAAAA,MAgB1Br9H,EAAOmU,KACZ,IAAM7T,EAAI+H,KAAKrI,GACTuiB,IAAMjiB,EAAE2qE,MACRqyD,UAAYN,UAAYz6G,IAAI66G,gBAAkBn8H,MAnBrBgtH,MAAAsP,oBAqBXxJ,KAAMD,MAAMziH,IAAI,SAAAvO,MAAI,OAAKm3F,KAAKn3F,MAAQm3F,KAAKn3F,MAAM88F,cAAct/F,EAAEwC,OAC7Em3F,KAAKn3F,MAAM+8F,eAAiB,EAAI,IAtBT,GAqBxBy2B,IArBwBrI,MAAA,GAqBnBsI,IArBmBtI,MAAA,GAAAuI,eAwBH1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACvD+sH,4BAAelpB,oBAAWmpB,kCADxBt1E,MAxBuB8+E,eAwBvB9+E,MAAOu1E,SAxBgBuJ,eAwBhBvJ,SAGTpxD,OACFxF,SACAx9B,QACI1c,EAAGm6G,IACHhpH,EAAGipH,KAEPlsH,KAAM4yH,cAAgBA,cAAcK,WAAaA,UACjD5lF,YACAglF,YACIz7H,MAAOk8H,2BAA2BtrH,SAAWsrH,gBAAgB78H,EAAGN,EAAGqI,KAAMmB,OAAQ,KACjFu8B,QAAS42F,mBAEbhmH,MACI02G,cACAC,cAAeL,SACfY,mBAEJ3wF,SACA+tC,MAAO1oD,IACPglE,IAAKjnF,EAAEinF,IACP59D,OAAQrpB,EAAE2qE,MACVyrD,MAAOp2H,EAAEinF,KAGD,OAARjnF,EAAE6b,GAAsB,OAAR7b,EAAEgN,GAClBwqE,OAAOvuE,KAAKsyD,OAGhBA,MAAMz3B,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMmB,QAvChDxJ,EAAI,EAAGmU,IAAM9L,KAAKhB,OAAQrH,EAAImU,IAAKnU,IAAKq9H,MAAxCr9H,GA4CT,OAFA83E,OAAS82C,eAAe7mH,KAAM+vE,8CAU1B57C,WAAW,IACX47C,OADWv6D,OAAAxV,KAETiP,OAASjP,KAAKiP,SACdk2F,SAAWl2F,OAAOk2F,SAClB2e,eAAiB9jH,KAAKypH,gBACtBptF,UAAYptB,OAAOotB,UACnBiiE,mBAAqB33B,sBAAsB13D,OAAOinF,aAAcl2F,KAAKk0B,KAAMjlB,OAAOknF,aAClFjE,KAAOlyF,KAAKkyF,OAoBlB,OAnB2B5P,6BAAcnuD,WAEtBsjD,QAAnB,GAAAxrE,OAA8BqyF,mBAAmBx5F,KAAK,KAAtD,KAAAmH,OAA8DowB,YAAa,GAC3EonD,+BACInjF,KAAMwjH,eACN1zF,OAAQ,IACR4gD,SAAU,IACV78C,oBACAwO,KAAM,SAAAA,KAACsoC,QAAS9vB,MAAOljD,GACnB,IAAM+zB,KAAOmvB,MAAMnvB,OACnB+jD,OAASv6D,OAAK45G,gBAAgBnkD,QAASk6B,SAAUjT,KAAMj6F,GACvDsrF,yBAAUv3D,MACNypG,ctD/Hc,WsDiIlBnB,cAAStoG,KAAM+jD,QACX1zC,UAAWiiE,mBAAmB,IAC/B9oF,OAAK67F,cAAcr2E,eAGvBh7B,6DAjHP,OAAOwe,kFAIP,MAAO,wBC8EAk3G,eAxCgC,SAAdA,YAAe1mH,QAC5C,IAAI2mH,aACIjgC,MAAoD1mF,OAApD0mF,MAAOvhE,UAA6CnlB,OAA7CmlB,UAAW47C,OAAkC/gE,OAAlC+gE,OAAQrhB,WAA0B1/C,OAA1B0/C,WAAYryB,UAAcrtB,OAAdqtB,UACtC+iD,SAA+B1wB,WAA/B0wB,SAAUuN,OAAqBj+B,WAArBi+B,OAAQ4M,SAAa7qC,WAAb6qC,SACpBrqE,MAAQozD,6BAAcnuD,WAE5BjF,MAAMq/B,KAAK,QAASlyB,WACpB,IAAMu5F,aAAe1mG,MAAM++B,UAAU,KAAK3tD,KAAKyvE,OAAQ/gE,OAAO2zE,OACxDkzC,YAAcD,aAAatnE,QAAQl+B,OAAO,KAAKm+B,KAAK,YAAa,SAAAh2D,GAAC,mBAAA0T,OAAiB1T,EAAE+1D,MAAMl6C,EAAzB,KAAAnI,OAA8B1T,EAAE+1D,MAAM/oD,EAAtC,OACxEowH,aAAeC,aAAa5qH,MAAM6qH,aACjBlzF,KAAK,SAAUpqC,IAvDhB,SAAdu9H,YAAwBv9H,EAAG+sB,MAC7B,IAAMywG,aAAezzC,6BAAch9D,MAC3B02E,MAAwBzjG,EAAxByjG,MAAOlmE,KAAiBv9B,EAAjBu9B,KAAMhF,OAAWv4B,EAAXu4B,OAErB,GAAIkrE,iBAAiBha,QACjBga,MAAMpW,KAAK,SAACp6D,KACRjzB,EAAEyjG,MAAQxwE,IACVsqG,YAAYv9H,EAAG+sB,aAEhB,GAAI02E,iBAAiBg6B,QAAS,CACjC,IAAIC,SAAWj6B,MAAM9oB,WAAU,GAE/B,GAAwC,QAApC+iD,SAASC,SAASzyH,cAAyB,CAC3C,IAAM0yH,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAWviG,SAASuM,gBAAgB,6BAA8B,UACzDd,aAAa,OAAQg3F,KAElC,IAAME,aAAe/zC,6BAAc2zC,UACT,SAAtBA,SAASC,UAA6C,UAAtBD,SAASC,SACzCG,aAAa9nE,KAAK,YAAlB,SAAAtiD,OAAwC6pB,KAAO,IAA/C,OAEAugG,aAAa9nE,KAAK,SAAUz4B,MAC5BugG,aAAa9nE,KAAK,QAASz4B,OAE/BugG,aAAa9nE,KAAK,KAAMz4B,KAAO,GAC/BugG,aAAa9nE,KAAK,KAAMz4B,KAAO,GAC/BwsD,6BAAcyzC,aAAa/pG,OAAOkT,YAAY+2F,gBAC3C,GAAqB,iBAAVj6B,MAAoB,CAClC,IAAIs6B,QAIAA,QA7CM,SAAZC,UAAajrH,KACf,SAAI,0CAA0C/N,KAAK+N,MAAQ,UAAU/N,KAAK+N,MAAQA,IAAIhM,OAAS,GAyCvFi3H,CAAUv6B,OACAA,MAEAjwB,uBAAUiwB,OAAOlmE,KAAKA,KAAtBi2C,CAA4Bj7C,QAE1C0xD,YAAYuzC,aAAc,OAAQ,SAAAz1H,MAAI,OAAKA,QAAOiuD,KAAK,IAAK+nE,cAE5D/9H,EAAEyjG,MAAQ,SACV85B,YAAYv9H,EAAG+sB,MAmBCwwG,CAAYv9H,EAAGyH,SAEnC21H,aAAep8B,SAAWo8B,aACtBA,aAAajnE,aACZ0wB,SAAS1wB,WAAW0wB,UACpBlX,GAAG,MAAOwtB,MAAMwW,8BACR39C,KAAK,YAAa,SAAAh2D,GAAC,mBAAA0T,OAAiB1T,EAAEu4B,OAAO1c,EAA1B,KAAAnI,OAA+B1T,EAAEu4B,OAAOvrB,EAAxC,OACfo9B,KAAK,SAAUpqC,GACZ,IAAM48B,MAAQ58B,EAAE48B,MACVotD,QAAUD,6BAActiF,MAC9BmnE,eAAehyC,MAAO,SAAA37B,KAAG,OAAI+oF,QAAQptD,MAAM37B,IAAK27B,MAAM37B,QACtD+oF,QAAQh0B,KAAK,QAAb,GAAAtiD,OAAyBowB,YACzBkmD,QAAQ9K,QAAQl/E,EAAE8jC,WAAW,KAGjD,IAAMm6F,WAAaZ,aAAaxnE,OAC3BmrC,SASDi9B,WAAW5zF,SARX4zF,WAAW9nE,aAAa2wB,KAAKtZ,QAAQ4mB,SACpBvN,SAASA,UACTlX,GAAG,MAAO,WACPoa,6BAActiF,MAAM4iC,WAEvBzN,MAAM,eAAgB,GACtBA,MAAM,iBAAkB,ICzGpC3W,oCACT03E,aAAc,cACd75D,UAAW,GACX85D,YxDLuB,OwDMvBsgC,cAAe,SACfriC,aACI8P,YACInpG,KAAM,OACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,KAE3BphB,QACIlpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,MAI/BsC,aAAc,GACdjgB,sBAAuB,GACvBvwD,WACIp8C,KAAM,YAEV2zD,YACIi+B,OAAQ,QACRvN,SAAU,KAEd+lB,UACIrvE,MACI58B,MAAO,IAEXy2C,SACAqsD,OACI9iG,MAAO,UAEXkb,KACA7O,KACAoiG,eACIzuG,MAAO,IAEXw9H,aACIx9H,MAAO,KAGfy9H,QAAS,SAAU,QAAS,UAAW,SAAU,OAAQ,MAAO,YAChEC,OAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,mrECjBXC,sCAOjB,SAAAA,aAAsB,IAAAr2B,iBAAA/+F,0JAAAq1H,CAAA92H,KAAA62H,YAAA,QAAA9yD,KAAAj9D,UAAAxH,OAANkJ,KAAM,IAAAyB,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANx7D,KAAMw7D,MAAAl9D,UAAAk9D,MAAA,OAClBviE,MAAAs1H,gCAAA/2H,MAAAwgG,iBAAAw2B,qBAAAH,aAAAz+H,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAASzD,SACJ8+D,SAAW,IAAIF,qBACpB3lE,MAAK4lH,WAAaz3C,OAAOxrC,OAHP3iC,wXAPcgpH,iSAoBhC,MAAO,4DAoDMnqH,KAAM6kG,SAAUjT,MA2B7B,IA3BgD,IAAA18E,OAAAxV,KAAbiP,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC5CipE,UAEMknD,aAKN9xB,SALArvE,KACOohG,cAIP/xB,SAJAnJ,MACOgpB,cAGP7f,SAHAx1D,MACAv7B,EAEA+wF,SAFA/wF,EACA7O,EACA4/F,SADA5/F,EAEEijH,UAAYyO,aAAalqH,MACzBoqH,UAAYF,aAAa/9H,MACzBqvH,WAAa2O,cAAcnqH,MAC3BulF,OAASl+E,EAAErH,MACXylF,OAASjtF,EAAEwH,MACHkvF,SAA+B/J,KAArCp8D,KAAuBimE,UAAc7J,KAArB8J,MAClBx/E,aAAexc,KAAKM,OAAOmc,kBAC3B4xG,OAAS7xG,aAAa81E,SAAW91E,aAAa81E,QAAQz1E,IAAI9hB,OAAS6D,yBAAUE,UAC7EwvH,OAAS9xG,aAAag2E,SAAWh2E,aAAag2E,QAAQ31E,IAAI9hB,OAAS6D,yBAAUE,UAC7EtF,IAAM60H,OAAS9mB,SAASzsD,EAAKwzE,OAAS/mB,SAAS5hG,EAAI,KACnD2iH,WAAatD,eAAiBA,cAAcj4G,MAC5Ck4G,gBAAkBzoG,aAAa8rG,aAAe9rG,aAAa8rG,YAAYtkH,MACvE01F,YAAc15F,KAAK05F,cACnB09B,gBAAkB56G,aAAa+rG,aAAe/rG,aAAa+rG,YAAYvkH,MACvEqzH,eAAiB76G,aAAagsG,YAAchsG,aAAagsG,WAAWxkH,MACpE83F,UAAY5J,KAAKviD,MAxByB2nF,eAyBbroH,OAAOivC,OAA/Bq5E,QAzBqCD,eAyBxCljH,EAAeojH,QAzByBF,eAyB5B/xH,EAzB4B+vH,MAAA,SAAAA,MA2BvCr9H,EAAOmU,KACZ,IAAM7T,EAAI+H,KAAKrI,GACTuiB,IAAMjiB,EAAE2qE,MACRptC,KAAOqhG,qBAAqBrtH,SAAWqtH,UAAU5+H,EAAGN,GAAKgkG,SAASM,QAAQ/hF,IAAI68G,iBAC9Er7B,MAAQD,UAAUO,SAAS9hF,IAAI48G,kBA/BOlR,MAAAuR,qBAiC1BlwB,SAASzsD,EAAGysD,SAAS5hG,GAAG2D,IAAI,SAACvO,MAC3C,IAAM7B,MAAoB,OAAZX,EAAEwC,WAAiBy4B,EAAYj7B,EAAEwC,MACzCyhG,QAAUzhG,OAASwsG,SAASzsD,EAAI4+C,YAAYziE,MAAQyiE,YAAYxiE,OACtE,OAAQiuE,SAASpqG,MAAMgS,MAAsBmlF,KAAKn3F,MAAM88F,cAAc3+F,OAAvCsjG,QAAU,IApCD,GAiCvC+xB,IAjCuCrI,MAAA,GAiClCsI,IAjCkCtI,MAAA,GAuC5CqI,KAAOgJ,QACP/I,KAAOgJ,QAxCqC,IAAA/I,eA0ChB1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACvD+sH,4BAAelpB,oBAAWmpB,kCADxBt1E,MA1CoC8+E,eA0CpC9+E,MAAOu1E,SA1C6BuJ,eA0C7BvJ,SAGT/vF,OACF0kB,KAAMlK,MACN++E,OAAQ/+E,OAGZ,IAAKn4B,MAAM+2G,OAAS/2G,MAAMg3G,KAAM,CAC5B,IAAM16D,OACFxF,OACIl6C,EAAGm6G,IACHhpH,EAAGipH,KAEP19F,QACI1c,EAAGm6G,IACHhpH,EAAGipH,KAEPxyB,YACAlmE,KAAMl1B,KAAKuL,IAAI2pB,MACflnB,MACI02G,cACAC,cAAeL,SACfY,mBAEJ3wF,YACA+tC,MAAO1oD,IACPglE,IAAKjnF,EAAEinF,IACP59D,OAAQrpB,EAAE2qE,MACVyrD,MAAOp2H,EAAEinF,KAEb1rB,MAAMz3B,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMkV,QACrDu6D,OAAOvuE,KAAKsyD,OACZt+C,OAAKo5G,WAAWr2H,EAAEiB,KAAMs6D,SAhDvB77D,EAAI,EAAGmU,IAAM9L,KAAKhB,OAAQrH,EAAImU,IAAKnU,IAAKq9H,MAAxCr9H,GAoDT,OADA83E,OAAS82C,eAAe7mH,KAAM+vE,8CAU1B57C,WAAW,IAEX06F,gBAFWp+F,OAAAzwB,KACX03H,QAAU,EAERzoH,OAASjP,KAAKiP,SACdzH,KAAOxH,KAAKupH,iBAAiBjgH,IAAI,SAAA/Q,GAAC,OAAIA,EAAEiB,MACtCk1D,WAAqDz/C,OAArDy/C,WAAYryB,UAAyCptB,OAAzCotB,UAAW65D,aAA8BjnF,OAA9BinF,aAAcC,YAAgBlnF,OAAhBknF,YACvC2tB,eAAiB9jH,KAAKypH,gBACtBqF,mBAAqBxsC,6BAAcnuD,WACnCmqE,mBAAqB33B,sBAAsBuvB,aAAcl2F,KAAKk0B,KAAMiiE,aAwB1E,OAvBAn2F,KAAK+qH,WACL/qH,KAAKusH,aAELuC,mBAAmBr3C,QAAQ6mB,mBAAmBx5F,KAAK,MAAM,GAAM2yE,QAAQp7C,WAAW,GAElFr8B,KAAK+qH,QAAU/qH,KAAK23H,mBAAmB7T,eAAgBt8G,MAEvDg7E,YAAYruD,UAAW,IAAKn0B,KAAK+qH,QAAS,MACtCj6F,OAAQ,SAAAA,OAACqqB,MAAO40B,QACZ2nD,QAAU92H,KAAKG,IAALD,MAAAF,MAAS82H,SAALzrH,OAAA2rH,wBAAiB7nD,OAAOzmE,IAAI,SAAA/Q,GAAC,OAAIA,EAAEu9B,UACjD+4F,gBAAe,GAAA5iH,OAAMqyF,mBAAmB,IACxC7tE,OAAK7Z,YAAYihH,QAAjBpnG,EACIilE,MAAOjlE,OACP0D,UAAWgnB,MAAMnvB,OACjB+jD,cACA1zC,UAAWwyF,gBACXngE,sBACAi0B,MAAO,SAAAA,MAAApqF,GAAC,OAAIA,EAAEinF,SAGvB,SAAAl/E,MAAI,OAAIA,KAAK,GAAGk/E,MACnBx/E,KAAK83H,SAA0C,EAA/Bl3H,KAAKkU,KAAK4iH,QAAU92H,KAAKowC,IACzCy1E,oBAAoBzmH,KAAKsnE,SAAUtnE,KAAK+qH,SACjC/qH,mEAGS8jH,eAAgBt8G,MAAM,IAAAqpB,OAAA7wB,KAChCmlG,SAAWnlG,KAAKiP,SAASk2F,SACzBjT,KAAOlyF,KAAKkyF,OAFoB6lC,qBAAAN,oBAGAzQ,2BAAmBhnH,KAAMwH,MAHzB,GAG/BwwH,aAH+BD,qBAAA,GAGjBE,cAHiBF,qBAAA,GAIhCG,cAAgBF,aAAaxQ,iBAC7B2Q,cAAgBF,cAAczQ,iBACpC,OAAO1D,eAAex6G,IAAI,SAAC2hE,QAAShzE,GAChC,IAAMmgI,gBAAkBvnG,OAAKwnG,qBAAqBH,cAAcjgI,GAAIkgI,cAAclgI,GAAI+/H,aAAa1Q,KAC/F2Q,cAAc3Q,MAClB,OAAOz2F,OAAKu+F,gBAAgBnkD,QAASk6B,SAAUjT,KAAMkmC,mBACtD/5G,OAAO,SAAA9lB,GAAC,OAAIA,EAAE+G,2EAGCi4H,QAASC,QAASc,UAAWC,YAC/C,OACIr6E,QACI9pC,GAAImjH,SAAW,GAAKe,UAAY,EAChC/yH,GAAIiyH,SAAW,GAAKe,WAAa,GAErCjR,MACIlzG,EAAGkkH,UACH/yH,EAAGgzH,qEAWEnkH,EAAG7O,GAChB,IAAMizH,cAAgB53H,KAAKG,IAAIf,KAAK83H,SAAU93H,KAAKiP,SAASy4F,uBAE5D,IAAK1nG,KAAKM,OACN,OAAO,KAGX,IAAMwzD,MAAQ9zD,KAAKsnE,SAAS1/C,KAAKxT,EAAG7O,EAAGizH,eACjCzyG,WAAa+tC,OAASA,MAAMxzD,KAAKA,KAAKwwB,OACtC6xC,OAAS7O,MAAQlzD,KAAKkU,KAAKg/C,MAAMxzD,KAAKA,KAAKw1B,KAAOl1B,KAAKowC,IAAM,EAEnE,GAAI8iB,MAAO,KAAA27D,iBACgB37D,MAAMxzD,KAAKA,KAA1B4iE,MADDusD,iBACCvsD,MAAOsc,IADRiwC,iBACQjwC,IAEf,OACItrD,GAFgBl0B,KAAK0vH,uBAAuBxsD,MAAOsc,KAGnDz5D,aACI3R,EAAG2R,WAAW3R,EACd7O,EAAGwgB,WAAWxgB,EACd0xB,MAAO0rC,OACPzrC,OAAQyrC,SAEZgtD,QAAS3vH,KAAKk0B,MAGtB,OAAO,6DAhOP,OAAO1V,uFAGW0B,KAAM2tG,UACxB,IAAM5+G,OAASw7G,qBAAUH,cAAcpqG,KAAM2tG,UACvC1oB,SAAWl2F,OAAOk2F,SAClBhuD,UAAYloC,OAAOkoC,UACnBmxE,WAAanjB,SAASx1D,OAASw1D,SAASx1D,MAAM5iC,MAKpD,OAHIu7G,aACAnxE,UAAU/2B,QAAUkoG,YAEjBr5G,uDAWP,MAAO,gDAWP,OAAOymH,iCClDyB+C,mBAAY,SAAZA,UAAazpH,QAAW,IACpD0mF,MAAoC1mF,OAApC0mF,MAAO3lB,OAA6B/gE,OAA7B+gE,OAAQ57C,UAAqBnlB,OAArBmlB,UAAWwuD,MAAU3zE,OAAV2zE,MAKlC,OAAOH,YAAYruD,UAAW,OAAQ47C,OAAQ,MAH1CzhB,MADc,SAAAA,MACPhpC,KAAM/sB,IAdF,SAAbmgI,WAAcpzG,KAAM/sB,GACtB,IAAMw1D,UAAYzoC,KACZgpC,MAAQ/1D,EAAE+1D,UAChB31D,OAAO4c,QAAQ+4C,OAAO9uD,QAAQ,SAAA+uD,MAAI,OAAM/2C,MAAM+2C,KAAK,KAAOR,UAAUQ,KAAKA,KAAK,GAAIA,KAAK,MAWjEmqE,CAAWpzG,KAAM/sB,IACnCu4B,OAFc,SAAAA,OAENxL,KAAM/sB,EAAGN,IAtCF,SAAjB0gI,eAAkBjjC,MAAOpwE,KAAM/S,MAAOvO,MAAO8zB,SAAY,IACnD42B,WAAe52B,QAAf42B,WACA0wB,SAA+B1wB,WAA/B0wB,SAAUma,SAAqB7qC,WAArB6qC,SAAU5M,OAAWj+B,WAAXi+B,OACtB5+B,UAAYzoC,KAEZszG,cAAgBr/B,SAAWxrC,UAC7BA,UAAUW,aACT0wB,SAASA,UACTC,KAAKtZ,QAAQ4mB,SACbzkB,GAAG,MAAOwtB,MAAMwW,6BACfp7E,OAASve,MAAMue,QAAUve,MACzBq0G,YAAcr0G,MAAM4iB,UAC1B5iB,MAAM8pB,WAAa0xB,UAAU0pB,QAAQllE,MAAM8pB,WAAW,GACtD1jC,OAAO4c,QAAQub,QAAQtxB,QAAQ,SAAA+uD,MAAI,OAAM/2C,MAAM+2C,KAAK,KAAOqqE,cAAcrqE,KAAKA,KAAK,GAAIA,KAAK,MAC5F51D,OAAO4c,QAAQqxG,aAAapnH,QAAQ,SAAAigC,UAAQ,OAAIsuB,UAAU54B,MAAMsK,SAAS,GAAIA,SAAS,MAwB5Dk5F,CAAejjC,MAAOpwE,KAAM/sB,EAAGN,EAAG+W,UAEG2zE,QChDtDnkE,kCACT23E,Y3DHuB,O2DIvBD,aAAc,YACd75D,UAAW,GACX+3D,aACI8P,YACInpG,KAAM,OACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,KAE3BphB,QACIlpG,KAAM,OACNsqH,WAAY,EAAG,EAAG,GAAK,MAG/BluE,WACIp8C,KAAM,SAEV2zD,YACIi+B,OAAQ,QACRvN,SAAU,KAEduoC,aAAc,GACdxiB,UACIx1D,SACAv7B,KACA7O,KACAu3C,MACAgT,OAEJ8gE,QACI1sB,WACI7nE,UAAS,GAAApwB,O3DrCM,O2DqCN,yBAEb4kH,SACIx0F,UAAS,GAAApwB,O3DxCM,O2DwCN,uBAEb6kH,UACIz0F,UAAS,GAAApwB,O3D3CM,O2D2CN,0BC9Bf4sH,sDAAoB,SAApBA,kBAAqB99H,KAAM+9H,SAAU7pH,OAAQ3O,MAC/C,IAWIqjF,IAXEo1C,UAAqB,MAATh+H,KAAe,QAAU,SADakF,MAE7BgP,OAAM,GAAAhD,OAAIlR,KAAJ,cAAsB+9H,SAAQ,GAAA7sH,OAAIlR,KAAJ,UAAxDyF,UAFiDP,KAAA,GAEtCktD,KAFsCltD,KAAA,GAIpDmnH,cAIAn4G,OAJAm4G,cACA6P,aAGAhoH,OAHAgoH,aACA+B,WAEA/pH,OAFA+pH,WACAt/B,YACAzqF,OADAyqF,YAGEy9B,UAAYF,aAAa/9H,MAC3Bo1D,MAAQ,EAERiiB,MAAQ,EACR0oD,WAAa,EACjB,QAAkBzlG,IAAdhzB,UACA,GAAIyO,OAAM,GAAAhD,OAAIlR,KAAJ,WAAmB,CACzB,IAEI8F,IACAE,IAHEm4H,OAAS54H,KAAKvF,MACdo+H,OAAS74H,KAAI,GAAA2L,OAAIlR,KAAJ,MAGnB,GAAe,OAAXm+H,QAA8B,OAAXC,OACnB,OACIF,gBAAYzlG,EACZ86B,WAAO96B,EACPmwD,SAAKnwD,EACL+8C,WAAO/8C,GAEJhzB,YAAc9B,8BAAeq0F,YAAcvyF,YAAclC,gCAAiBE,UACjFqC,IAAMD,KAAKC,IAAIq4H,OAAQC,QACvBp4H,IAAMH,KAAKG,IAAIm4H,OAAQC,UAEvBt4H,IAAMq4H,OACNn4H,IAAMo4H,QAEV,IAAM/vB,OAAkB,MAATruG,MAAgB8F,IAAKE,MAAQA,IAAKF,KACjD8iF,IAAMx2B,KAAK0qC,cAAcuR,OAAO,IAAMj8C,KAAK2qC,eAAiB,EAC5DvnB,MAAQ3vE,KAAKuL,IAAIghD,KAAK0qC,cAAcuR,OAAO,IAAMzlB,KAAOx2B,KAAK2qC,eAAiB,EAE9ExpC,MAAQq1B,IACRs1C,WAAa,OACV,GAAIz4H,YAAclC,gCAAiBC,aAAeiC,YAAclC,gCAAiBE,SAAU,CAK9F,GAJAmlF,IAAMx2B,KAAK0qC,cAAcv3F,KAAKvF,QACzBi+H,WAAoB,MAATj+H,KAAe,iBAAmB,oBAAsB,GAExEw1E,MAAQyoD,WAAoB,MAATj+H,KAAe,WAAa,kBAC7By4B,IAAd2jG,UAAyB,CACzB,IAAMiC,OAASjC,UAAY5mD,MAC3BA,OAAS6oD,OACTz1C,KAAOy1C,OAAS,EAEpB9qE,MAAQq1B,IACRs1C,WAAa1oD,UACV,CACH,IAAM8oD,QAAUlsE,KAAK0qC,cAAc,GAC7ByhC,SAAWnsE,KAAK0qC,cAAcv3F,KAAKvF,OACnCw+H,UAAYpsE,KAAK0qC,cAAcv3F,KAAI,GAAA2L,OAAIlR,KAAJ,OAEzCk+H,WAAa,EACA,MAATl+H,MACA4oF,IAAMrjF,KAAKvF,MAAQ,GAAKqsH,gBAAkBngB,MAAQqyB,SAAWD,QAC7D9oD,MAAQ3vE,KAAKuL,IAAIw3E,KAAOyjC,gBAAkBngB,MAAQsyB,UAAaj5H,KAAKvF,OAAS,EAAIu+H,SAAWD,YAE5F11C,IAAMyjC,gBAAkBngB,OAAS3mG,KAAKvF,OAAS,EAAIu+H,SAAWD,QAC9D9oD,MAAQ3vE,KAAKuL,IAAIw3E,KAAOyjC,gBAAkBngB,MAAQsyB,UAAaj5H,KAAKvF,OAAS,EAAIs+H,QAAUC,YAE/FhrE,MAAQ+qE,aAGZ11C,IAAM,EACNpT,MAAQmpB,YAAYq/B,WAGxB,OACIE,sBACA3qE,YACAq1B,QACApT,eAYFipD,kBAAoB,SAApBA,kBAAqBl5H,KAAM2O,OAAQijF,MACrC,IAAM4mC,UACF3mC,MAAOD,KAAK99E,EACZg+E,MAAOF,KAAK3sF,GAH8Bk0H,mBAU1CZ,6BAAkB,IAAKC,SAAU7pH,OAAQ3O,MAJ7Bo5H,WAN8BD,mBAM1CR,WACOU,OAPmCF,mBAO1CnrE,MACKsrE,KARqCH,mBAQ1C91C,IACO1sD,MATmCwiG,mBAS1ClpD,MAT0CspD,oBAiB1ChB,6BAAkB,IAAKC,SAAU7pH,OAAQ3O,MAJ7Bw5H,YAb8BD,oBAa1CZ,WAKJ,OACI3qE,OACIl6C,EAAGulH,OACHp0H,EArBsCs0H,oBAc1CvrE,MAQIr3B,MAAOyiG,WACPxiG,OAAQ4iG,aAEZhpG,QACI1c,EAAGwlH,KACHr0H,EA3BsCs0H,oBAe1Cl2C,IAaI1sD,YACAC,OA7BsC2iG,oBAgB1CtpD,smFCpGR,IAAM1xE,QAAUD,yBAAUC,QACpBgxE,cAAYD,OAAOxrC,KAaJ21F,kCAIjB,SAAAA,WAAwB,IAAAv5B,iBAAA/+F,wJAAAu4H,CAAAh6H,KAAA+5H,UAAA,QAAAh2D,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAw4H,8BAAAj6H,MAAAwgG,iBAAA05B,mBAAAH,WAAA3hI,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJq4G,WAAax3C,gBAClBpuE,MAAK04H,cACD/lH,EAAG,EACH7O,EAAG,GAEP9D,MAAK24H,WACDhmH,EAAG,EACH7O,EAAG,GAEP9D,MAAK8qH,aAXe9qH,kXAJUgpH,yRAyB9B,MAAO,+EAmDcnqH,KAAM8oH,iBAAkB5sG,cAC7C,IAAM9b,OAAS25H,QAAAH,mBAAAH,SAAAhgI,WAAA,0BAAAiG,MAAA5H,KAAA4H,KAA8BM,KAAM8oH,iBAAkB5sG,cAOrE,OANC,IAAK,KAAKhd,QAAQ,SAACjH,GACZ6wH,iBAAgB,GAAAn9G,OAAI1T,EAAJ,gBAAsBsG,SAAW6B,OAAOnI,KACxD6wH,iBAAgB,GAAAn9G,OAAI1T,EAAJ,YAAkBmI,OAAOnI,GAAKmI,OAAOnI,GAAGiZ,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,IACtEzE,OAAOnI,GAAG,GAAKqI,KAAKC,IAAIH,OAAOnI,GAAG,GAAI,MAG5CmI,+DAWMJ,KAAM04H,YACnB,ODgB2B,SAAtBsB,oBAAuBxiG,QAASx3B,KAAM04H,YAsB/C,IArBA,IAAIjpD,UACEo1B,SAAWrtE,QAAQ7oB,SAASk2F,SAC5BjT,KAAOp6D,QAAQo6D,OACf4J,UAAY5J,KAAKviD,MACjBnzB,aAAesb,QAAQx3B,OAAOmc,kBAC9BuoG,cAAgB7f,SAASx1D,MACzB24E,WAAatD,cAAcj4G,MAC3BkqH,aAAe9xB,SAASrvE,SARgCykG,sBActDziG,QAAQqvF,oBAJRiB,QAVsDmS,sBAUtDnS,QACAC,QAXsDkS,sBAWtDlS,QACAM,cAZsD4R,sBAYtD5R,cACAC,cAbsD2R,sBAatD3R,cAEFlvB,YAAc5hE,QAAQ4hE,cACtB20B,OAAS1F,gBAAkBrqH,gCAAiBC,aAAeoqH,gBAAkBrqH,gCAAiBE,SAC9F8vH,OAAS1F,gBAAkBtqH,gCAAiBC,aAAeqqH,gBAAkBtqH,gCAAiBE,SAC9FhF,IAAM60H,OAAS,IAAOC,OAAS,IAAM,KACrClH,cAAgBtvF,QAAQsvF,gBACxBnC,gBAAkBqD,YAAc9rG,aAAa8rG,aAAe9rG,aAAa8rG,YAAYtkH,MAElF/L,EAAI,EAAGmU,IAAM9L,KAAKhB,OAAQrH,EAAImU,IAAKnU,IAAK,CAC7C,IAAMM,EAAI+H,KAAKrI,GACTk9B,SACAvmB,QACAmX,WAAayzG,kBAAkBjhI,GACjCk6F,WAAYk2B,cACZj2B,WAAYk2B,cACZR,gBACAC,gBACAjB,4BACA1tB,wBACAs/B,sBACA/B,2BACD/kC,MAb0Cu8B,eAejB1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACvD+sH,4BAAelpB,oBAAWmpB,kCADxBt1E,MAfqC8+E,eAerC9+E,MAAOu1E,SAf8BuJ,eAe9BvJ,SAGf/vF,MAAM0kB,KAAOlK,MACb/gC,KAAK02G,cACL12G,KAAK22G,cAAgBL,SACrBt2G,KAAKk3G,kBAEL,IAAMh1F,OAAS/K,WAAW+K,OAE1B,IAAKtZ,MAAMsZ,OAAO1c,KAAOoD,MAAMsZ,OAAOvrB,SAAgBiuB,IAAVj7B,EAAEinF,IAAmB,CAC7D,IAAI1rB,MAAQ,MACZA,OACIxF,MAAOvoC,WAAWuoC,MAClBx9B,cACAqE,YACA+tC,MAAO3qE,EAAE2qE,MACTsc,IAAKjnF,EAAEinF,IACP59D,OAAQrpB,EAAE2qE,MACVyrD,MAAOp2H,EAAEinF,IACT5wE,YAEEytB,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMw3B,SACrDi4C,OAAOvuE,KAAKsyD,OAEZh8B,QAAQ82F,WAAWr2H,EAAEiB,KAAMs6D,QAKnC,OADAic,OAAS82C,eAAe/uF,QAASi4C,QClFtBuqD,CAAoBt6H,KAAMM,KAAM04H,kDAQnC7kG,WAAW,IAAA3e,OAAAxV,KACTiP,OAASjP,KAAKiP,SACdy/C,WAAaz/C,OAAOy/C,WACpB8rE,kBAAoBx6H,KAAKypH,gBAEzBjiH,KADkBxH,KAAKupH,iBACAjgH,IAAI,SAAA/Q,GAAC,OAAIA,EAAEiB,MAClCgjB,aAAexc,KAAKM,OAAOmc,kBAC3By1E,KAAOlyF,KAAKkyF,OACZh7D,OAASg7D,KAAK3sF,GAAK2sF,KAAK3sF,EAAEjE,QAAQiC,QAAQ,GAC1C0zB,MAAQi7D,KAAK99E,GAAK89E,KAAK99E,EAAE9S,QAAQiC,QAAQ,GACzC2yF,aAAejnF,OAAOinF,aACtBoI,mBAAqB33B,sBAAsBuvB,aAAcl2F,KAAKk0B,KAAMjlB,OAAOknF,aAC3E95D,UAAYptB,OAAOotB,UACnByyF,mBAAqBxsC,6BAAcnuD,WACnCpO,WAAaptB,OAAOgkB,OAAOH,cAAc6B,OAAO,SAAAlkB,GAAC,OAAIA,EAAE0iB,IAAI9hB,OAAS6D,yBAAUE,YAC/EwK,IAAI,SAAAnP,GAAC,OAAIA,EAAE6J,QA+BhB,OA9BA8qH,mBAAmBr3C,QAAQ6mB,mBAAmBx5F,KAAK,MAAM,GACzDgqH,mBAAmBr3C,QAAQp7C,WAAW,GlHmE1B,SAAdo+F,YAAetmG,UAAWulE,YAAaxlE,IACzC,IAAMwmG,gBAAkBl4C,YAAYvlE,WAAOkX,WAAY,YAAa,GAAjC,IAAAloB,OAAyCioB,KACvDsuD,YAAYk4C,gBAAiB,QAAS,IAC9CnsE,KAAK,IAAKmrC,YAAYtlF,GAClBm6C,KAAK,IAAKmrC,YAAYtlF,GACtBm6C,KAAK,QAASmrC,YAAYziE,OAC1Bs3B,KAAK,SAAUmrC,YAAYxiE,QAC5CwjG,gBAAgBnsE,KAAK,YAArB,QAAAtiD,OAA0CioB,GAA1C,MkHzEIumG,CAAYtmG,WACR/f,EAAG,EACH7O,EAAG,EACH0xB,YACAC,eAJO,MAAAjrB,OAKFjM,KAAKk0B,OAEdl0B,KAAK+qH,QAAU/qH,KAAK23H,mBAAmB6C,kBAAmBhzH,MAE1Di8E,+BACInjF,KAAMN,KAAK+qH,QACX52F,oBACA68C,SAAU,IACV5gD,OAAQ,IACRuS,KAAM,SAAAA,KAACotC,OAAQ50B,MAAOljD,GAClB,IAAM42H,gBAAkB,GAAA5iH,OAAGqyF,mBAAmB,GAAtB,KAAAryF,OAA4BzE,KAAKvP,IAAMA,GAAIwL,cACnE03C,MAAMhmB,MAAM,UAAW,SACvBsjG,oBACI/iC,MAAOlgF,OACP2e,UAAWgnB,MAAMnvB,OACjB+jD,cACA1zC,UAAWwyF,gBACXngE,sBACAv5B,SACAwtD,MAAO,SAAAA,MAAApqF,GAAC,OAAIwtB,WAAWzc,IAAI,SAAA9P,KAAG,OAAIjB,EAAE2qE,MAAM1pE,OAAMsL,KAAK,WAI1D9E,mEAWS8jH,eAAgBt8G,MAAM,IAAAipB,OAAAzwB,KAAA+3H,qBAAA4C,kBACM3T,2BAAmBhnH,KAAMwH,MAD/B,GAC/BozH,gBAD+B7C,qBAAA,GACd8C,iBADc9C,qBAAA,GAEhC+C,gBAAkBF,gBAAgBpT,iBAClCuT,iBAAmBF,iBAAiBrT,iBAW1C,OAVAxnH,KAAKo6H,WACDhmH,EAAGwmH,gBAAgBrT,WAAa,EAChChiH,EAAGs1H,iBAAiBtT,WAAa,GAErCvnH,KAAKm6H,cACD/lH,EAAGwmH,gBAAgB58F,SAAW,EAC9Bz4B,EAAGs1H,iBAAiB78F,SAAW,GAGnCh+B,KAAKusH,aACEzI,eAAex6G,IAAI,SAAChJ,KAAMrI,GAAP,OAAaw4B,OAAK2+F,gBAAgB9uH,MAEpD06H,SAAUJ,gBAAgBtT,KAC1B2T,eAAgBH,gBAAgB7iI,IAAM,EACtCijI,UAAWL,iBAAiBvT,KAC5B6T,gBAAiBJ,iBAAiB9iI,IAAM,8DAKhD,OAAO+H,KAAKm6H,qEASC/lH,EAAG7O,GAChB,IAAKvF,KAAKM,OACN,OAAO,KAEX,IACIpH,MAEA62E,OACAqrD,gBACApX,iBACAqX,WACAt6G,YACAu6G,WAAa,KACXh/G,UAAYtc,KAAKM,OACjB+b,QAAUC,UAAU/b,UACpBic,aAAeF,UAAUG,kBACzBy1E,KAAOlyF,KAAKkyF,OACZ5xF,KAAO+b,QAAQ/b,KACfgsH,SAAWtsH,KAAKusH,UAlBHE,sBAwBXzsH,KAAKmnH,oBAJL70B,OApBWm6B,sBAoBXn6B,OACAE,OArBWi6B,sBAqBXj6B,OACAm2B,cAtBW8D,sBAsBX9D,cACAC,cAvBW6D,sBAuBX7D,cAGJD,gBAAkBjqH,8BAAeq0F,YAEjC75F,MADOg5F,KAAK3sF,EACC2/B,OAAO3/B,GACpBy+G,iBAAmBxnG,aAAag2E,QAAQxuF,MACxCo3H,gBAAkBxS,gBAGlB1vH,MADOg5F,KAAK99E,EACC8wB,OAAO9wB,GACpB4vG,iBAAmBxnG,aAAa81E,QAAQtuF,MACxCo3H,gBAAkBzS,eAGlByS,kBAAoB98H,gCAAiBC,cACrCwxE,OAASu8C,SAASpzH,QAGlBkiI,kBAAoB98H,gCAAiBE,WAIrCuxE,OAASu8C,SADTpzH,OAFAmiI,WAAaE,sBAAI,IAAI56H,IAAIL,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyrH,uBACjC/+E,+BAAkBo2F,WAAYniI,UAI1C,IAAMkT,IAAM2jE,QAAUA,OAAOzwE,OAC7BywE,QAAUA,OAAOv+D,KAAK,SAAC09D,GAAIssD,IAAL,OAAYtsD,GAAGp+C,OAAOvrB,EAAIi2H,GAAG1qG,OAAOvrB,IAC1D,IAAK,IAAItN,EAAI,EAAGA,EAAImU,IAAKnU,IAAK,CAC1B,IAAM67D,MAAQic,OAAO93E,GACf64B,OAASgjC,MAAMhjC,OACrB,GAAI1c,GAAK0c,OAAO1c,GAAKA,GAAM0c,OAAOmG,MAAQnG,OAAO1c,GAAM7O,GAAKurB,OAAOvrB,GAAKA,GAAMurB,OAAOoG,OAASpG,OAAOvrB,EAAI,CACrG+1H,WAAaxnE,MACb,MAEJwnE,WAAa,KAGjB,IAAM3+G,OAAS2+G,YAAcA,WAAWp4D,MAIxC,OAHIvmD,SACAoE,YAAc/gB,KAAK0vH,uBAAuB/yG,OAAQ2+G,WAAW97C,MAE1D87C,YACHv1G,YAAau1G,WAAWxqG,QACxBoD,GAAInT,YACJ4uG,QAAS3vH,KAAKk0B,MACdonG,6DAIJ,OAAOt7H,KAAKo6H,4DAtOZ,MAAO,4DAQP,OAAO57G,qFAYW0B,KAAM2tG,UACxB,IAAM5+G,OAASw7G,qBAAUH,cAAcpqG,KAAM2tG,UAEvCvF,WADWr5G,OAAOk2F,SACIx1D,MAAM5iC,MAC5BoqC,UAAYloC,OAAOkoC,UAKzB,OAHImxE,aACAnxE,UAAU/2B,QAAUkoG,YAEjBr5G,uBC/FFuP,mCACT03E,aAAc,aACd75D,UAAW,GACX85D,Y9DLuB,O8DMvB/B,aACI8P,YACInpG,KAAM,SACNsqH,WAAY,EAAG,GAAI,GAAI,KAE3BthB,OACIhpG,KAAM,SACNsqH,WAAY,EAAG,EAAG,GAAI,KAE1BphB,QACIlpG,KAAM,SACNsqH,WAAY,EAAG,EAAG,GAAI,MAG9BsC,aAAc,GACdxwE,WACIp8C,KAAM,YAEV2zD,YACIi+B,OAAQ,QACRvN,SAAU,KAEd+lB,UACIx1D,SACAv7B,KACA7O,KACAu3C,MACAgT,MACA63C,eACIzuG,MAAO,IAEXw9H,aACIx9H,MAAO,KAGf03H,QACI1sB,WACI7nE,UAAS,GAAApwB,O9D3CM,O8D2CN,0BAEb4kH,SACIx0F,UAAS,GAAApwB,O9D9CM,O8D8CN,wBAEb6kH,UACIz0F,UAAS,GAAApwB,O9DjDM,O8DiDN,2BC1CqBwvH,cAAA,SAACzsH,QAAW,IAC1C+gE,OAAwC/gE,OAAxC+gE,OAAQ57C,UAAgCnlB,OAAhCmlB,UAAWwuD,MAAqB3zE,OAArB2zE,MAAOtmD,UAAcrtB,OAAdqtB,UAC5BnN,MAAQozD,6BAAcnuD,WACtB4N,MAAQ7S,MAAM++B,UAAU,QAAQ3tD,KAAKyvE,OAAQ4S,OAC7C+4C,WAAa35F,MAAMusB,QAAQl+B,OAAO,QAUxC,OARAlB,MAAMq/B,KAAK,QAASlyB,WAAa,IACjCq/F,WAAW/4F,KAAK,SAAUpqC,GACtB,IAAMw1D,UAAYu0B,6BAActiF,MAC1BsuD,MAAQ/1D,EAAE+1D,UAChB31D,OAAO4c,QAAQ+4C,OAAO9uD,QAAQ,SAAA+uD,MAAI,OAAM/2C,MAAM+2C,KAAK,KAAOR,UAAUQ,KAAKA,KAAK,GAAIA,KAAK,QAG3FxsB,MAAMqsB,OAAOxrB,SACNb,MAAM/2B,MAAM0wH,YACF/4F,KAAK,SAAUpqC,GACZ,IAAMw1D,UAAYu0B,6BAActiF,MAC1B8wB,OAASv4B,EAAEu4B,OACX81F,YAAcruH,EAAE48B,UAChB2nB,QAAmBtpB,IAAd1C,OAAOgsB,GAAmBhsB,OAAOgsB,GAAKhsB,OAAO1c,EAClD07C,QAAmBt8B,IAAd1C,OAAOg/B,GAAmBh/B,OAAOg/B,GAAKh/B,OAAOvrB,EAClDyoD,KAAI,KAAA/hD,OAAQ6kB,OAAO1c,EAAf,KAAAnI,OAAoB6kB,OAAOvrB,EAA3B,OAAA0G,OAAkC6wC,GAAlC,KAAA7wC,OAAwC6jD,IAClDv3D,EAAE8jC,WAAa0xB,UAAU0pB,QAAQl/E,EAAE8jC,WAAW,GAC9C0xB,UAAUQ,KAAK,IAAKP,MACpBr1D,OAAO4c,QAAQqxG,aAAapnH,QAAQ,SAAAigC,UAAQ,OAAIsuB,UAAU54B,MAAMsK,SAAS,GAAIA,SAAS,4rCCbzFk8F,6qBAAkB9E,yRA0C/B,MAAO,+DAUMv2H,KAAM6kG,SAAUjT,MAyB7B,IAzBgD,IAAbjjF,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC5CipE,UAD4CsgD,eAKxCpK,sBAAc/zB,MAFdC,MAHwCk+B,eAGxCl+B,MACAC,MAJwCi+B,eAIxCj+B,MAEF51E,aAAexc,KAAKM,OAAOmc,kBANegwG,sBAcxCzsH,KAAKmnH,oBANL70B,OARwCm6B,sBAQxCn6B,OACAE,OATwCi6B,sBASxCj6B,OACA41B,QAVwCqE,sBAUxCrE,QACAC,QAXwCoE,sBAWxCpE,QACA51B,WAZwCg6B,sBAYxCh6B,WACAC,WAbwC+5B,sBAaxC/5B,WAEF27B,OAAS57B,aAAe7zF,yBAAUE,UAClCwvH,OAAS57B,aAAe9zF,yBAAUE,UAClCtF,IAAM60H,OAAS9mB,SAASzsD,EAAKwzE,OAAS/mB,SAAS5hG,EAAI,KACnDq/G,cAAgB7f,SAASx1D,MACzB24E,WAAatD,eAAiBA,cAAcj4G,MAC5Ck4G,gBAAkBzoG,aAAa8rG,aAAe9rG,aAAa8rG,YAAYtkH,MACvE01F,YAAc15F,KAAK05F,cACnBoC,UAAY5J,KAAKviD,MAtByB2nF,eAuBbroH,OAAOivC,OAA/Bq5E,QAvBqCD,eAuBxCljH,EAAeojH,QAvByBF,eAuB5B/xH,EAvB4Bq2H,aAwBjB3sH,OAAOq4G,KAA3BuU,MAxBqCD,aAwBxCxnH,EAAa0nH,MAxB2BF,aAwB9Br2H,EACTtN,EAAI,EAAGmU,IAAM9L,KAAKhB,OAAQrH,EAAImU,IAAKnU,IAAK,CAC7C,IAAIs2H,SAAG,EACHwN,UAAI,EACJxL,UAAI,EACJ/B,SAAG,EACDj2H,EAAI+H,KAAKrI,GACTuiB,IAAMjiB,EAAE2qE,MACVovB,SAEAypC,MADAxN,IAAMp8B,MAAM0F,cAAct/F,EAAE6b,GAAKmjH,SACpBsE,OAGbrpC,SAEA+9B,KAAe,QADf/B,IAAMp8B,MAAMyF,cAAct/F,EAAEgN,GAAKiyH,SACXhJ,IAAMsN,MAAQ,MAGnCxpC,SACDi8B,IAAM,EACNwN,KAAOriC,YAAYziE,MACdzf,MAAMg3G,OAEP+B,KADA/B,KAAOsN,MAAQ,IAKlBtpC,SACDg8B,IAAM,EACN+B,KAAO72B,YAAYxiE,OACnB6kG,KAAOxN,KAAOsN,MAAQ,GAGtBzT,UACA2T,KAAO5pC,MAAM0F,cAAct/F,EAAEukD,IAAM++E,MACnCrN,KAAOsN,MAAQ,EACfvL,MAAQuL,MAAQ,GAGhBzT,UACAkI,KAAOn+B,MAAMyF,cAAct/F,EAAEu3D,IAAMgsE,MACnCvN,KAAOsN,MAAQ,EACfE,MAAQF,MAAQ,GAEpB,IAAM1mG,SACAvmB,QA5CuC6/G,eA6CjB1J,eAAgBxyG,MAAOha,EAAGyL,MAAO/L,IACvD+sH,4BAAelpB,oBAAWmpB,kCADxBt1E,MA7CqC8+E,eA6CrC9+E,MAAOu1E,SA7C8BuJ,eA6C9BvJ,SAOf,GAJA/vF,MAAMu5F,OAAS/+E,MACf/gC,KAAK02G,cACL12G,KAAK22G,cAAgBL,SACrBt2G,KAAKk3G,mBACAtuG,MAAM+2G,OAAS/2G,MAAMg3G,KAAM,CAC5B,IAAM16D,OACFxF,SACAx9B,QACI1c,EAAGm6G,IACHhpH,EAAGipH,IACH1xE,GAAIi/E,KACJjsE,GAAIygE,MAERp7F,YACA+tC,MAAO1oD,IACPglE,IAAKjnF,EAAEinF,IACP59D,OAAQpH,IACRm0G,MAAOp2H,EAAEinF,IACT5wE,WAEJklD,MAAMz3B,UAAYiqF,uBAAuB/tH,EAAGN,EAAGqI,KAAMN,MACrD+vE,OAAOvuE,KAAKsyD,OACZ9zD,KAAK4uH,WAAWr2H,EAAEiB,KAAMs6D,QAIhC,OADAic,OAAS82C,eAAe7mH,KAAM+vE,0EAIZwnD,QAASC,QAASc,UAAWC,YAC/C,OACIr6E,QACI9pC,EAAImjH,SAAW,EACfhyH,EAAIiyH,SAAW,GAEnBlQ,MACIlzG,EAAGkkH,UACH/yH,EAAGgzH,qEAxJX,OAAO/5G,kFAWP,MAAO,+CAWP,OAAOw9G,+BClDFC,WAAa,OACbC,UAAY,MACZC,WAAa,OACbC,WAAa,OACbC,YAAc,QACdC,UAAY,MACZC,WAAa,OACbC,aAAe,SACfC,WAAa,6fCN1B,oBAqBMC,iBAAmB,SAAnBA,iBAAoBv3B,UAEtB,IAAK,IAAM3rG,OAAO2rG,SACe,iBAAlBA,SAAS3rG,OAChB2rG,SAAS3rG,MACLuT,MAAOo4F,SAAS3rG,QC1BjBmjI,kBDyCO,WAClB,IAAMC,mBACAC,YACFC,iBAAkB,SAAAA,iBAACC,KACfF,WAAWG,eAAiBD,KAEhCE,kBAAmB,SAAAA,kBAACl4B,KAAMD,UACtB,IAAIo4B,eACEC,KAAOP,gBAAgB73B,MACvBslB,QAAUvgD,kBAAmBg7B,UAGnC,GAAIq4B,KACAD,eAAiBC,KAAK7zH,IAAI,SAAC8zH,cACvB,IAAMC,QAGN,OA1DS,SAAvBC,qBAAwBvzD,KAAMtkC,WAAYq/D,SAAUy4B,WACtD,IAAK,IAAM/jI,OAAOisC,WACd,GAAI9sC,OAAOqB,eAAe5B,KAAKqtC,WAAYjsC,KAAM,CAC7C,IAAIgkI,UAAI,EACJvvC,eAAS,EACPpxE,IAAM4oB,WAAWjsC,KACnBmxB,eAAe9N,MACfktD,KAAKvwE,QACL8jI,qBAAqBvzD,KAAKvwE,KAAMqjB,IAAKioF,SAAUy4B,YACzB,iBAAR1gH,MAAqB2gH,KAAO3gH,IAAItd,MAAM,OAASi+H,KAAK,KAAOD,eAEvD/pG,KADlBy6D,UAAYrmB,WAAU9mE,WAAV,GAAWgkG,UAAX74F,OAAAwxH,gCAAwBD,KAAKjjH,MAAM,EAAGijH,KAAKl+H,cAEnDyqE,KAAKvwE,KAAOy0F,WAGhBlkB,KAAKvwE,KAAOqjB,KAyCRygH,CAAqBD,KAAMD,aAAc/S,QAAStlB,MAClD23B,iBAAiBW,KAAKl4B,UACfk4B,WAER,CACH,IAAMl4B,SAAWklB,QAAQllB,SAEzBu3B,iBAAiBv3B,UACjB+3B,eAAiB7S,QAGrB,OAAO6S,gBAEXQ,iBAAkB,SAAAA,iBAAC54B,UAAwB,QAAA/gC,KAAAj9D,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAA85D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXh1D,OAAWg1D,KAAA,GAAAl9D,UAAAk9D,MACvC,IAAM6gC,cAAgBg4B,WAAWG,eAE3B13B,WADNR,SAAaA,oBAAoB76F,MAAsB66F,UAAZA,WAChBx7F,IAAI,SAAC+7F,UAC5B,IAAMs4B,iBAAmB94B,cAAcQ,SAASN,MAChD,OAAO44B,iBAAiBpkI,OAAjBuH,MAAA68H,iBAA2B3uH,UAEtC,OAA4B,IAArBs2F,UAAUhmG,OAAegmG,UAAU,GAAKA,WAEnDs4B,cAAe,SAAAA,cAAA74B,MAAI,OAAI83B,WAAWG,eAAej4B,OASjD84B,cAAe,SAAAA,cAACN,UAAW34B,WACvBg4B,gBAAgBW,WAAa34B,WAEjCk5B,oBAAqB,SAAAA,oBAACh5B,UAClB,IAAMulB,QAAUvgD,kBAAmBg7B,UAEnC,OADA43B,iBAAiBrS,QAAQllB,UAClBklB,UAGf,OAAOwS,WAvDW,+KEjCf,0BAAMkB,gBAAcC,wBAAAC,mBACtBC,WAAyBhO,gBADH8N,wBAAAC,gBAEtBC,UAAwBnN,cAFFiN,wBAAAC,gBAGtBC,WAAyBjQ,gBAHH+P,wBAAAC,gBAItBC,WAAyBnJ,gBAJHiJ,wBAAAC,gBAKtBC,YAA0BrH,kBALJmH,wBAAAC,gBAMtBC,WAAyBvC,gBANHqC,wBAAAC,gBAOtBC,UAAwBnE,cAPFiE,wBAAAC,gBAQtBC,WAAyBzT,sBARHwT,qDCHdnjF,EAAI,IAIJn1C,EAAI,IA0EJw4H,KAAO,OAKPC,QAAU,UAKVC,IAAM,MAKNC,IAAM,MAUNj3B,sBAAQ,QAKRC,sBAAQ,QAKRF,qBAAO,OA6BPY,eAAO,OAIPC,gBAAQ,QAiBRs2B,KAAO,OAIPC,OAAS,QAITC,OAAS,QAITC,YAAc,YAQdC,WAAa,WA4Bbx3B,iBAAS,SAITD,gBAAQ,QAoCR03B,QAAU,UAIVC,UAAY,6LChPzB,IAAAC,eAAAC,6BAAAC,yBDQsB,aCRtBD,6BAAAC,sBAEKb,SAFLY,6BAAAC,sBAGKZ,YAHLW,6BAAAC,sBAIK33B,0BAJL03B,6BAAAC,sBAKK13B,0BALLy3B,6BAAAC,sBAMK53B,yBANL23B,6BAAAC,sBDuGsB,aCvGtBD,6BAAAC,sBD4GsB,aC5GtBD,6BAAAC,sBDiHyB,gBCjHzBA,2TC+BeC,6fArCP,MAAM,IAAI5uH,MAAMu5D,UAAUC,wDAY1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8DAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,kEAW1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,mUCzCbq1D,yeAQb,MAAM,IAAI7uH,MAAMu5D,UAAUC,4DAS1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,qxCCyEnBs1D,kCA/EX,SAAAA,eAAuB,IAAA3+B,iBAAA/+F,kKAAA29H,CAAAp/H,KAAAm/H,cAAA,QAAAp7D,KAAAj9D,UAAAxH,OAAP+/H,MAAO,IAAAp1H,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAPq7D,MAAOr7D,MAAAl9D,UAAAk9D,MAAA,OACnBviE,MAAA69H,wCAAAt/H,MAAAwgG,iBAAA++B,6BAAAJ,eAAA/mI,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAASozH,UACJG,KAAKH,OAFS59H,0YAPAy9H,gTAanB,OAAIp4H,UAAOxH,QACPU,KAAKy/H,MAAL34H,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKy/H,0CAGH,QAAAv7D,MAAAp9D,UAAAxH,OAAJqU,GAAI,IAAA1J,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAJxwD,GAAIwwD,OAAAr9D,UAAAq9D,OACT,OAAIxwD,GAAGrU,QACHU,KAAKw/H,OAAOhgI,QAAQ,SAAAjH,GAAC,OAAIA,EAAE+H,KAAKqT,GAAG,MAC5B3T,MAEJA,KAAKkjE,sDAWZ,OADaljE,KAAKw/H,OACNl2H,IAAI,SAAAo2H,QAAM,OAAIA,OAAOntC,aAAa,yCAS9C,OAAOvyF,KAAKw/H,OAAO,GAAGzkI,mDAItB,OAAOiF,KAAKw/H,OAAOl2H,IAAI,SAAA/Q,GAAC,OAAIA,EAAE8L,aAAYS,KAAK,yDAS/C,OAAO9E,KAAKw/H,OAAO,GAAGroH,qDAGlBwF,QACJ,OAAO3c,KAAKw/H,OAAO,GAAGv9H,OAAO0a,kDAU7B,OAAO3c,KAAKw/H,OAAO,GAAG1nH,0DAUtB,OAAO9X,KAAKw/H,OAAO,GAAGp+H,wvCCpFTu+H,8CAOjB,SAAAA,eAAar9H,MAAM,IAAAb,MAAA,+JAAAm+H,CAAA5/H,KAAA2/H,iBACfl+H,MAAAo+H,qCAAA7/H,KAAA8/H,0BAAAH,gBAAAvnI,KAAA4H,QACK+/H,OAAOz9H,MAFGb,sYAPqBy9H,6SAmBpC,OAAIp4H,UAAKxH,QACLU,KAAKggI,QAALl5H,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKggI,4CAIZ,OAAIl5H,UAAGxH,QACHU,KAAKkjE,MAALp8D,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKkjE,kDAIZ,OAAOljE,KAAK+/H,6DAUZ,MAAoB,YAAhB//H,KAAKjF,OACaiF,KAAKM,OAAO0P,gBAAgBhD,aAAahN,KAAK+/H,UAC/C5oH,eACZ,SAAA/W,KAAG,OAAIA,2CAGZuc,QACJ,GAAIA,QAA6B,aAAnB3c,KAAK8X,UAA0B,CACzC,IAAM3T,UAAYnE,KAAKM,OAAO0P,gBAAgB/C,eAAejN,KAAK+/H,UAAUp+H,SAASM,OAC/Eg+H,SAAW,IAAIj+H,iCAAkBmC,WACvCwY,OAASA,OAAOrT,IAAI,SAAAnP,GAAC,OAAI8lI,SAASr2H,cAAczP,KAEpD,OAAOwiB,uDAUP,OAAQ3c,KAAK+/H,8CAWb,OADiB//H,KAAKM,OAAOmc,kBAAkBzc,KAAK+/H,UAAUljH,IAC9C9hB,+CAWhB,IAAMwoB,SAAWvjB,KAAKM,OAAOmc,kBAAkBzc,KAAK+/H,UAAUljH,IAC9D,OAAO0G,SAASzL,SAAWyL,SAASxoB,qDAUpC,OADmBiF,KAAKM,OAAO0P,gBACbnD,YAAY7M,KAAK+/H,UAAUG,qEAQzCC,SACJ,OAAOngI,KAAK+/H,WAAaI,QAAQJ,gmCC7GzC,IAmFMK,6BAAe,SAAfA,aAAgB/xH,UAAWrE,QAC7B,IAAMw1H,QAUN,OARAx1H,QAAUA,OAAOxK,QAAQ,SAACuN,OAClBA,iBAAiBoyH,eACjBK,KAAKh+H,KAAKuL,OACVA,MAAMzM,KAAK+N,YAEXmxH,KAAKh+H,KAAK,IAAIm+H,0BAAe5yH,OAAOzM,KAAK+N,cAG1CmxH,MAWEa,gCAAkB,SAAlBA,gBAAmBhyH,UAAWY,QAAW,IAAAi3G,MAAAoa,+BACjBnC,KAAMC,SAAS90H,IAAI,SAACU,QACjD,IAAMu2H,iBA5CU,SAAlBC,gBAAmBvxH,OAAQlU,MAC7B,IAAM2qB,aACA1b,OAASiF,OAAOlU,MAQtB,OANMiP,OAAO,aAAcC,OAGvByb,UAAU,GAAK1b,OAAO,OACtB0b,UAAU,GAAK1b,OAAO,QAHtB0b,UAAU,GAAK1b,OAKZ0b,UAkCsB86G,CAAgBvxH,OAAQjF,QAC3Cy2H,WAAaL,6BAAa/xH,UAAWkyH,iBAAiB,KAK5D,OAHIA,iBAAiB,KACjBE,UAAU,GAAKL,6BAAa/xH,UAAWkyH,iBAAiB,KA/GhD,SAAdG,YAAeC,WAAY5lI,MAC7B,IAAMwrB,qBACAC,mBACAo6G,oBACAC,uBAENF,WAAWnhI,QAAQ,SAACshI,UAAW98H,OAC3B88H,UAAUthI,QAAQ,SAACuN,ONsCF,cMrCTA,MAAMhS,QACNwrB,aAAaviB,OAAOxC,KAAKuL,ON+NjB,aM9NRA,MAAM+K,UAAyB8oH,YAAY58H,OAAOxC,KAAKuL,OAAS8zH,eAAe78H,OAAOxC,KAAKuL,QAE3FyZ,WAAWxiB,OAAOxC,KAAKuL,WAKnC,IAAMg0H,cAAgBv6G,WAAW,GAAGlnB,QAAUknB,WAAW,GAAKA,WAAW,GAAGlnB,OAAS,GAGrF,IAAKqhI,WAAW,KAEZn6G,WAAW,GAAKzrB,OAASqjI,QAAU53G,WAAW,MAE9CA,WAAW,GAAKzrB,OAASqjI,QAAU53G,WAAW,MAE9CD,aAAa,MAEbA,aAAa,GAAKA,aAAa,GACT,IAAlBw6G,eAAqB,CACrB,IAAMC,iBAAa/0H,OAAAg1H,kCAAO16G,aAAa,IAApB06G,kCAA2B16G,aAAa,KACvDxrB,OAASqjI,SACT73G,aAAa,GAAKy6G,cAAcA,cAAc1hI,OAAS,IAAM0hI,cAAcA,cAAc1hI,OAAS,OAElG0hI,cAAcl4H,QAAQ,EAAG,IAEzByd,aAAa,MAEjBA,aAAa,GAAb06G,kCAAsBD,eAQ9B,OAJIz6G,aAAa,GAAGjnB,QAAUinB,aAAa,GAAGjnB,QAAUyhI,cAAgB,IACpEx6G,aAAa,MAAbta,OAAAg1H,kCAAsB16G,aAAa,IAAnC06G,kCAA0C16G,aAAa,KACvDA,aAAa,QAGbvc,OAAQuc,aAAajd,IAAI,SAACgjB,KAAMr0B,GAAP,OAAoB,IAANA,EACnCuuB,WAAWvuB,GAAGgU,OAAOsa,aAAatuB,IAAMsuB,aAAatuB,GAAGgU,OAAOua,WAAWvuB,MAC9E8tB,cAAU9Z,OAAAg1H,kCAAM16G,aAAa,IAAnB06G,kCAA0B16G,aAAa,KACjDP,YAAQ/Z,OAAAg1H,kCAAMz6G,WAAW,IAAjBy6G,kCAAwBz6G,WAAW,KAC3C06G,YAAQj1H,OAAAg1H,kCAAML,YAAY,IAAlBK,kCAAyBL,YAAY,KAC7CO,eAAWl1H,OAAAg1H,kCAAMJ,eAAe,IAArBI,kCAA4BJ,eAAe,MA6D/CH,CAAYD,UAAWz2H,UARgB,GAC3Co3H,SAD2Clb,MAAA,GACjCmb,YADiCnb,MAAA,GAWtCjsG,KAKRmnH,SALAp3H,OACYs3H,cAIZF,SAJAr7G,WACUw7G,YAGVH,SAHAp7G,SACUw7G,kBAEVJ,SAFAF,SACaO,qBACbL,SADAD,YAGQnoH,QAKRqoH,YALAr3H,OACY03H,iBAIZL,YAJAt7G,WACU47G,eAGVN,YAHAr7G,SAIJ,OACI/L,UACAqnH,4BACAC,wBACAC,oCACAC,0CACAzoH,gBACA4oH,qBARAP,YAFAH,SAWAW,wBATAR,YADAF,YAWAO,kCACAC,q4BC1IaG,uiBAQb,MAAM,IAAIzxH,MAAMu5D,UAAUC,0EAS1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wEAS1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8DAI1B,OAAI/iE,UAAKxH,QACLU,KAAK+hI,WAAaj4D,eAAe9pE,KAAK+hI,eAANj7H,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACzB9G,MAEJA,KAAK+hI,iEAWA1zH,UAAWY,QAEvB,OADAjP,KAAKknH,UAAUmZ,gCAAgBhyH,UAAWY,SACnCjP,KAAKknH,wDAWZ,OAAIpgH,UAAOxH,QACPU,KAAKgiI,UAALl7H,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKgiI,0DAWZ,OAAIl7H,UAAOxH,QACPU,KAAKiiI,YAALn7H,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKkiI,2EAU0B,IAAvBC,SAAuBr7H,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAARkD,OAAQlD,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAA4uG,oBAAAC,6BACTC,8BAAkBhE,IAAKt0H,OAAOiQ,KAAMkoH,UAD3B,GAC/BI,UAD+BH,oBAAA,GACpBI,QADoBJ,oBAAA,GAAAK,oBAAAJ,6BAETC,8BPKf,SOLyCt4H,OAAOgP,QAASmpH,UAFjC,GAE/BO,UAF+BD,oBAAA,GAEpBE,QAFoBF,oBAAA,GAYtC,OARAziI,KAAKmiI,UACD3nH,IAAKgoH,QACL3nH,OAAQ8nH,UAEZ3iI,KAAK4iI,YACDpoH,IAAK+nH,UACL1nH,OAAQ6nH,YAEL1iI,0BC5GF6iI,WACTpvF,OAAQ+/D,6BACRpvE,KAAMiwE,mBACN6sB,SAAUtsB,mBACV9+E,KAAMqsF,mBACNxyE,MAAO2wE,qBACPtkB,MAAO0mB,sBCHEogB,sCACTxqC,UAAW2R,2BAAU1B,KACrB44B,YAAal3B,2BAAU1B,KACvB24B,SAAUj3B,2BAAUzB,KACpBhM,QAASyN,2BAAU3B,OACnBvvD,WAAYkxD,2BAAU3B,kgBCK1B,IA+Fay6B,mCAAsB,SAAtBA,oBAAuBzJ,SAAUpS,UAAW8b,aAAcC,WACnE,IAAIC,QACEC,eACEn5H,OAAkBk9G,UAAlBl9G,OAAQhG,MAAUkjH,UAAVljH,MAEVsF,IADgB05H,aAAdI,UACa,GAAAn3H,OAAIqtH,SAAJ,YAEf+J,cAAgBC,WAAWhK,SAAUt1H,OAuB3C,OAtBAgG,OAAOxK,QAAQ,SAACuN,MAAOq2F,WACnB8/B,QAAUI,WAAWhK,SAAUt1H,MAAOo/F,UAAW0/B,qCAAiB/1H,MAAM+K,YACxE,IAEIq1C,KAFEo2E,WAzGQ,SAAhBC,cAAiBC,SAAU12H,MAAOi2H,cACpC,IAAIU,gBACI1/H,MAA+By/H,SAA/Bz/H,MAAOo/F,UAAwBqgC,SAAxBrgC,UAAWk2B,SAAamK,SAAbnK,SAClBrqH,OAAqB+zH,aAArB/zH,OAAQ4uB,SAAamlG,aAAbnlG,SACV8lG,eAAiB10H,OAAOijF,MAAQjjF,OAAOijF,KAAKonC,cAU9CoK,gBV6OY,SU9OZ7lG,UAFoBy7F,WAAa3zH,GADjC0iG,iCAJAL,KAIAK,iCAHAJ,QAGAI,iCAFAN,IAEAM,iCADAP,SAKkC1E,WAEhBvlE,SAEtB,IAAM0lG,YACFrvG,GAAE,GAAAjoB,OAAKqtH,SAAL,KAAArtH,OAAiBjI,MAAjB,KAAAiI,OAA0Bm3F,WAC5B5qG,KAAMuU,MAAM1I,WACZ0I,MAAOA,MAAM1I,WACb8S,aAAcpK,MAAMoK,eACpBioF,YAAaskC,gBACb/4B,cAAc,EACdpS,MAAM,EACNx9F,KAAM+nI,qCAAiB/1H,MAAM+K,YAKjC,OAHA6rH,eAAer2E,WAAavgD,MAAM9K,OAAO0hI,eAAer2E,YACxDq2E,eAAejjI,OAASqM,MAAM9K,OAAO0hI,eAAejjI,QAE7CopE,eAAey5D,WAAYI,gBA0EXH,EAAgBx/H,YAAOo/F,oBAAWk2B,mBAAYvsH,MAAOi2H,cAGnE15H,IAAImJ,IAAIywH,WAGT/1E,KAAO7jD,IAAIxQ,IAAIoqI,UACVU,eAAgB,EACrBz2E,KAAKl+C,OAAOs0H,YACZA,WAAW7iI,OAASysD,KAAKzsD,OAAO6iI,WAAW7iI,QAAUysD,KAAK02E,eAL1D12E,KAnEa,SAAnB22E,iBAAoBP,WAAYx2H,MAAOi2H,cAAiB,IAClD93B,aAAiB83B,aAAjB93B,aAGR,OADmB,IAAI64B,EADXlB,UAAUC,qCAAiB/1H,MAAM+K,aAClByrH,YAAcr4B,4BAgE1B44B,CAAiBP,WAAYx2H,MAAOi2H,cAO/CG,YAAY3hI,KAAK2rD,MACjB7jD,IAAIoJ,IAAIwwH,QAAS/1E,QAGjBg2E,YAAY7jI,SACZgK,IAAIoJ,IAAI2wH,cAAeF,aACvBF,UAAUh6G,IAAIo6G,gBAGXF,aA+EEa,SAAW,SAAXA,SAAYn4H,IAAKzL,KAI1B,IAHA,IAAInI,EAAI,EACJgsI,UAAY,GAEK,IAAdA,UAAmBhsI,EAAI4T,IAAIvM,QAC1BuM,IAAI5T,GAAGoM,aAAejE,IAAIiE,aAC1B4/H,SAAWhsI,GAEfA,IAEJ,OAAOgsI,o1EChNUC,iyBAAyBpC,qVAoB9BkB,aAAc9b,WAAW,IAAAzlH,MAAAzB,KAC3BmkI,gBAEFjyC,KACA8wC,aADA9wC,KAGAkyC,YAEAld,UAFAkd,YACA3iC,QACAylB,UADAzlB,QAGA4iC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAMEjyC,aACFroF,OAAQq6H,UACRrgI,MAHAy9F,QAFC8iC,WAODv6H,OAAQs6H,aACRtgI,MANAy9F,QADC+iC,cASCC,MAAQvyC,KAAK99E,MACbswH,MAAQxyC,KAAK3sF,MAanB,OAXC8+H,UAAWC,cAAc9kI,QAAQ,SAACwK,OAAQ/R,GACvC,IAAM8C,KAAa,IAAN9C,EAAUqmI,IXoCb,SWnCJnxE,KAAa,IAANl1D,EAAU0N,EAAIm1C,EAEvB9wC,OAAO1K,OAAS,EAChB0jI,aAAanlG,SXiMT,OW/LJmlG,aAAanlG,SAAWp8B,MAAK0gI,WAAWpnI,MAE5CopI,aAAah3E,MAAQ41E,mCAAoB51E,KAAMklC,WAAWp6F,GAAI+qI,aAAc71E,OAASrS,EAAI2pF,MAAQC,SAE9FP,iEAGIp6H,MAAOmoF,MAClB,IAAMuyC,MAAQvyC,KAAK99E,EACbswH,MAAQxyC,KAAK3sF,EACnBwE,MAAM8R,MAAM8oH,OACZ,IAAK,IAAI1sI,EAAI,EAAGA,EAAIwsI,MAAMnlI,OAAQrH,IAC9B,IAAK,IAAIqiB,EAAI,EAAGA,EAAImqH,MAAMxsI,GAAGqH,OAAQgb,IACjCvQ,MAAMkgH,OAAN,GAAAh+G,OAAgBm6F,0BAAiBh6C,uBAAjC,aAAoE,GAApEngD,OAAwEhU,EAAxE,KAA8EwsI,MAAMxsI,GAAGqiB,GAAG5Z,UAGlG,IAAK,IAAIzI,GAAI,EAAGA,GAAIysI,MAAMplI,OAAQrH,KAC9B,IAAK,IAAIqiB,GAAI,EAAGA,GAAIoqH,MAAMzsI,IAAGqH,OAAQgb,KACjCvQ,MAAMkgH,OAAN,GAAAh+G,OAAgBm6F,0BAAiBh6C,uBAAjC,cAAAngD,OAAoEhU,GAAI,EAAxE,KAA8EysI,MAAMzsI,IAAGqiB,IAAG5Z,UAC1FgkI,MAAMzsI,IAAGqiB,IAAGi3F,aAAc,EAIlCxnG,MAAM8R,MAAM+oH,mEAGE9sG,SAUd,IATA,IAAM/tB,MAAQ+tB,QAAQ/tB,QAChB86H,YAAc96H,MAAMjR,IAAN,GAAAmT,OAAam6F,0BAAiBp6C,sBAA9B,YACdn/B,SAAWiL,QAAQjL,WACnBi4G,MAAQj4G,SAASi4G,QACjB1/D,SACFzjB,KACAojF,MAPmBzP,MAAA,SAAAA,MAUd0P,KAAU54H,KAEf,IADA,IAAM64H,SAAWH,MAAME,MAXJE,OAAA,SAAAA,OAYVC,KAAUC,MACf,IACM/yC,WADO4yC,SAASE,MACEn7H,UACvBqoF,WAAWj+E,EAAGi+E,WAAW9sF,GAAG/F,QAAQ,SAACmN,SAAU2sH,UAC5C3sH,SAASnN,QAAQ,SAACuN,MAAOq2F,WACrB,IAAM5pG,IAAO8/H,SAAD,GAAArtH,OAAwC+4H,KAAxC,KAAA/4H,OAAgDm3F,WAAhD,IAAAn3F,OAAgBk5H,MAAhBl5H,OAAuBm3F,WAC7B/9B,IAAMw/D,YAAW,GAAA54H,OAAI+4H,MAAJ/4H,OAAWk5H,OAC9B9/D,KAAmC,IAA5B1sE,OAAO6O,KAAK69D,KAAK/lE,SACxB8lE,QAAQk0D,UAAU9/H,KAAO2rE,0BAAcC,QAAQk0D,WAAal0D,QAAQk0D,UAAU9/H,SAC1E6rE,IAAG,GAAAp5D,OAAIc,SAAWA,MAAM+K,iBATnCqtH,KAAO,EAAGC,KAAOH,SAAS3lI,OAAQ6lI,KAAOC,KAAMD,OAAQD,OAAvDC,OAFJH,KAAO,EAAG54H,IAAM04H,MAAMxlI,OAAQ0lI,KAAO54H,IAAK44H,OAAQ1P,MAAlD0P,MAVc,IAAAK,eA4BQx4G,SAASqlE,OAA7BuyC,MA5BYY,eA4BfjxH,EAAaswH,MA5BEW,eA4BL9/H,EAClBwE,MAAM8R,MAAM8oH,QACXF,MAAOC,OAAOllI,QAAQ,SAAC8lI,QAAShM,UAC7BgM,QAAQ9lI,QAAQ,SAAC0yF,KAAM/+E,KACnB,IAAMtS,OACAE,OACFL,UACA6kI,kBACArzC,KAAK5yF,OAAS,GAAoC,WAA/B4yF,KAAK,GAAGt7E,YAAY7b,QAAuBm3F,KAAK,GAAGjjF,SAASu2H,gBAC/EtzC,KAAK1yF,QAAQ,SAAC2tD,KAAMl1D,GAChB,IAAMuB,IAAO8/H,SAAD,GAAArtH,OAA+BkH,IAA/B,KAAAlH,OAAsChU,GAAtC,IAAAgU,OAAgBkH,KAAhBlH,OAAsBhU,GAClCyI,OAAS0kE,QAAQk0D,UAAU9/H,KAC3BqH,IAAI5I,GAAKyI,OAAO,GAChBK,IAAI9I,GAAKyI,OAAO,KAEpB6kI,eDhFa,SAApBE,kBAAqB1kI,IAAKF,KACnC,IAAM6kI,QAAU3kI,IAAI,IAAMA,IAAI,GAAKF,IAAI,IACjC8kI,QAAU5kI,IAAI,IAAMA,IAAI,GAAKF,IAAI,IAGnC+kI,aAAc,EA0BlB,OAvBI/kI,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKE,IAAI,GAAK,IACnD6kI,aAAc,EACd/kI,IAAI,GAAK,EACTA,IAAI,GAAK,GAITA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKE,IAAI,GAAK,IACnD6kI,aAAc,EACd7kI,IAAI,GAAK,EACTA,IAAI,GAAK,GAIR6kI,aAAeF,UAAYC,UACxBD,QAAUC,QAEV9kI,IAAI,GAAKA,IAAI,GAAKE,IAAI,GAAKA,IAAI,GAG/BF,IAAI,GAAKA,IAAI,GAAKE,IAAI,GAAKA,IAAI,MAIlCF,IAAI,GAAIE,IAAI,KACZF,IAAI,GAAIE,IAAI,KC+CgB0kI,CAAkB1kI,IAAKF,MAG5CqxF,KAAK1yF,QAAQ,SAAC2tD,KAAMnpD,OAChB,IAAMxK,IAAO8/H,SAAD,GAAArtH,OAAmCkH,IAAnC,KAAAlH,OAA0CjI,OAA1C,IAAAiI,OAAgBkH,KAAhBlH,OAAsBjI,OAClCtD,OAAS6kI,eAAevhI,QAAUohE,QAAQk0D,UAAU9/H,KACpD2zD,KAAKzsD,OAAOA,QACZ,IAAM3F,KAAQu+H,SAAiB,IAAN,IACzBvvH,MAAMkgH,OAAN,GAAAh+G,OAAgBm6F,0BAAiBh6C,uBAAjC,YAAAngD,OAAkElR,KAAlE,KAAAkR,OAA0EkH,KAA1ElH,OAAgFjI,OAAStD,cAIrGqJ,MAAM8R,MAAM+oH,iFAUS56H,OAAQjP,MAY7B,IAXA,IAAI8qI,UACAzB,eACA0B,QAAU,EACRC,iBACAC,mBACAC,cAAgBj8H,OAAO,GACvBk8H,gBAAkBl8H,OAAO,GACzBm8H,WAAaF,cAAc3mI,OAC3B8mI,aAAeF,gBAAgB5mI,OAC/B6iI,SAAWniI,KAAKmiI,WAEblqI,EAAI,EAAGA,EAAIkuI,WAAYluI,IAAK,CACjC,IAAIouI,SAAWJ,cAAchuI,IACvBquI,aAAeL,cAAchuI,GAEnC,GX1HW,YW0HPquI,aAAavrI,OAAoB,CACjC,IAAMwrI,eAAiBL,gBAAgBJ,SACnCS,gBX5HG,YW4HeA,eAAexrI,SACjC+qI,UACAO,SAAWC,aAAcC,iBAE7BnC,YAAY5iI,KAAK6kI,cAEjBR,OAAOrkI,KAAK8kI,cACZP,cAAcvkI,KAAK8kI,cAG3B,GAAIF,aAAeN,QACf,IAAK,IAAI7tI,IAAI6tI,QAAS7tI,IAAImuI,aAAcnuI,MAAK,CACzC,IAAMsuI,gBAAiBL,gBAAgBjuI,KACjCouI,UAAWE,iBXzIV,YW0IHA,gBAAexrI,OACfqpI,YAAY5iI,KAAK6kI,WAEjBR,OAAOrkI,KAAK+kI,iBACZP,gBAAgBxkI,KAAK+kI,kBAIjC,IAAKR,cAAczmI,QAAU0mI,gBAAgB1mI,UAAY8kI,YAAY9kI,OAEjE,GAAK6iI,SADLpnI,KAAOA,OAASsjI,IXtGN,SWsGqBtjI,QACPitG,gBXnDjB,QWmDyBm6B,SAASpnI,QAAkBgrI,cAAczmI,OAUlE,CACH,IACMknI,OAAQR,gBADQ,GAEtB5B,cAAgBoC,SAChB,IAAMC,YAAazC,SAAS+B,cAAeS,QACvCC,aAAc,IACdrC,cAAgBoC,OAAOA,SACvBT,cAAcj9H,OAAO29H,YAAY,IAErCT,gBAAgBl9H,OARM,EAQgB,OAnBuC,CAC7E,IAAM49H,cAAgBX,cAAczmI,OAAS,EACvCknI,MAAQT,cAAcW,eAC5BtC,cAAgBoC,QAChB,IAAMC,WAAazC,SAASgC,gBAAiBQ,OACzCC,YAAc,IACdrC,cAAgBoC,MAAOA,QACvBR,gBAAgBl9H,OAAO29H,WAAY,IAEvCV,cAAcj9H,OAAO49H,cAAe,GAgB5C,OACIb,OAFJA,QADAA,UAAM55H,OAAO85H,cAAkBC,kBACf3nH,OAAO,SAACs/E,GAAI35F,MAAOi7E,MAAZ,OAAqBj7E,QAAUi7E,KAAKx7D,UAAU,SAAAtqB,GAAC,OAAKA,EAAEkL,aAAes5F,GAAGt5F,eAG3F+/H,+EAYQ/1H,UAAWY,QACvB,OAAA03H,sBAAAC,iCAAA1C,iBAAAnqI,WAAA,iBAAAiG,MAAA5H,KAAA4H,KAA4BqO,UAAWY,8EAUnBiyF,WAAYiE,UAChC,IAAM0hC,aAAe3lC,WAAW2lC,aAC1BzhE,WACN,IAAK,IAAM5rE,OAAO2rG,SACd,MAAOnrG,eAAe5B,KAAK+sG,SAAU3rG,KAAM,CACvC,IAAMstI,YAAc3hC,SAAS3rG,KACvBuT,MAAQ+5H,YAAY/5H,MAC1B,IAAK+5H,YAAYpmI,QAAUqM,MAAO,CAC9B,IAAMrM,OAASqmI,sBAAsBF,aAAc95H,OACnDq4D,QAAQr4D,OAASrM,QAI7B,OAAO0kE,0EASW4hE,YAClB,IAAMC,oBAON,OALAD,WAAW1nI,QAAU0nI,WAAWxnI,QAAQ,SAACk2F,MAAOz9F,GAC5C,IAAM4kB,IAAM8/G,kBAAamB,oBAAoBpoC,OAC7C74E,IAAIsH,MAAQlsB,EACZgvI,iBAAiBzlI,KAAKqb,OAEnBoqH,uEAWKj9H,OAAQk9H,iBACpB,IAAM/d,eAEFmb,aAEAt6H,OAFAs6H,aACAD,UACAr6H,OADAq6H,UAiDJ,OA7CAC,aAAa9kI,QAAQ,SAAC2nI,UAClB,IAAMC,aAAeD,SAAS9iI,WAC9BggI,UAAU7kI,QAAQ,SAAC6nI,UACf,IAAIC,WACEC,aAAeF,SAAShjI,WACxB8gG,UACF/wF,GACIrH,MAAOq6H,cAEX7hI,GACIwH,MAAOw6H,eAGTC,aAAeH,SAASvvH,UAExBitF,KD9IQ,SAAjB0iC,eAAkBC,aAAcF,cAWzC,MV+CuB,gBUvDnBE,cVuDmB,gBUvDaF,aV+DrB,MAJK,aUzDTE,cVyDS,aUzDoBF,aViExB,OAIC,QWoEQC,CADQN,SAASrvH,UACY0vH,cAEpCG,aACF5iC,UACAloF,KACIkoF,UACAI,qBAIFyiC,aD3FgB,SAAzBC,uBAA0BC,UAAWzD,UAAW6C,iBAAvB,OAA2CA,gBAAgB7oH,OAAO,SAAC6B,MAAS,IAAAjgB,KAAAmiB,MAAAf,MACxGwsG,SAAW3tG,gBAAgBjW,MAAQiW,MAAQA,MAC3C6nH,aAAc9nI,SAAGgM,OAAHnL,MAAAb,KAAA+nI,iCAAana,SAASvkH,IAAI,SAAA/Q,GAAC,OAAIA,EAAE4sG,WAAU9mF,OAAO,SAAA9lB,GAAC,YAAUi7B,IAANj7B,MAE3E,IAAKwvI,YAAYzoI,OACb,OAAO,EAGX,IAAM8vF,SAAUhtE,UAAGnW,OAAHnL,MAAAshB,MAAA4lH,iCAAaD,YAAYz+H,IAAI,SAAA/Q,GAAC,OAAKA,EAAE6b,GAAK7b,EAAE6b,EAAErH,MAAOxU,EAAEukD,IAAMvkD,EAAEukD,GAAG/vC,WACrEsR,OAAO,SAAA9lB,GAAC,YAAUi7B,IAANj7B,GAAyB,OAANA,IACtC82F,SAAUhuE,UAAGpV,OAAHnL,MAAAugB,MAAA2mH,iCAAaD,YAAYz+H,IAAI,SAAA/Q,GAAC,OAAKA,EAAEgN,GAAKhN,EAAEgN,EAAEwH,MAAOxU,EAAEu3D,IAAMv3D,EAAEu3D,GAAG/iD,WACrEsR,OAAO,SAAA9lB,GAAC,YAAUi7B,IAANj7B,GAAyB,OAANA,IAE5C,IAAK62F,QAAQ9vF,SAAW+vF,QAAQ/vF,OAC5B,OAAO,EAGX,IAAM2oI,gBAAgB74C,QAAQ9vF,QAAS8vF,QAAQ36E,MAAM,SAAAlc,GAAC,OAA8B,IAA1BuvI,UAAUngI,QAAQpP,KACtE2vI,gBAAgB74C,QAAQ/vF,QAAS+vF,QAAQ56E,MAAM,SAAAlc,GAAC,OAA8B,IAA1B8rI,UAAU18H,QAAQpP,KAC5E,OAAI62F,QAAQ9vF,QAAU+vF,QAAQ/vF,OACnB2oI,eAAiBC,cAErBD,eAAiBC,gBCqESL,CAAuBV,SAAS50C,aACjD80C,SAAS90C,aAAc20C,qBAEvBI,QADAM,aAAatoI,OACHsoI,aAAat+H,IAAI,SAAC6+H,WACxB,IAAMC,gBAAkBt+D,eAAeA,kBAAmB69D,WAAW,GAAG9qH,KAAMsrH,WACxEE,sBAAwB1L,kBAAaM,kBAAkBmL,gBAAgBrjC,KACzEqjC,iBACJ,OACIrjC,KAAMqjC,gBAAgBrjC,KACtB5gF,MAAOikH,gBAAgBjkH,MACvBtH,IAAKwrH,yBAIHV,WAGdxe,YAAY3nH,KAAZV,MAAAqoH,YAAWmf,oCAAShB,cAGrBne,kDAlUP,MXwMiB,syEY3NJof,qvBAAqBzG,qUAU1BkB,aAAc9b,WAAW,IAI3Bid,aADFnB,aADA9wC,KAIAuP,QACAylB,UADAzlB,QAGA8iC,SAEA9iC,QAFA8iC,SACAC,YACA/iC,QADA+iC,YAGEgE,QAAUrE,aAAal2D,QAS7B,OAPAu6D,QAAQjE,UAAYiE,QAAQjE,cAC5BiE,QAAQjE,UAAUC,gBAElBL,aAAal2D,IAAMu6D,QACnBrE,aAAa/vH,EAAI,KACjB+vH,aAAa5+H,EAAI,KAEV4+H,qFAUcn6H,QASrB,IARA,IAAI87H,QAAU,EACRD,UACAzB,eACA6B,cAAgBj8H,OAAO,GACvBk8H,gBAAkBl8H,OAAO,GACzBm8H,WAAaF,cAAc3mI,OAC3B8mI,aAAeF,gBAAgB5mI,OAE5BrH,EAAI,EAAGA,EAAIkuI,WAAYluI,IAAK,CACjC,IAAMquI,aAAeL,cAAchuI,GACnC,GZJW,YYIPquI,aAAavrI,OAAoB,CACjC,IAAMwrI,eAAiBL,gBAAgBJ,WACjCO,QAAUE,gBAAkBD,aAAcC,iBAAmBD,cACnElC,YAAY5iI,KAAK6kI,cAEjBR,OAAOrkI,KAAK8kI,cAGpB,GAAIF,aAAeN,QACf,IAAK,IAAI7tI,GAAI6tI,QAAS7tI,GAAImuI,aAAcnuI,KAAK,CACzC,IAAMsuI,gBAAiBL,gBAAgBjuI,IACjCouI,UAAWE,iBZfV,YYgBHA,gBAAexrI,OACfqpI,YAAY5iI,KAAK6kI,UAEjBR,OAAOrkI,KAAK+kI,iBAIxB,OACIV,cACAzB,mFAIUtsG,SACd,IAAM/tB,MAAQ+tB,QAAQ/tB,QAChBq7D,QAAUr7D,MAAMjR,IAAN,GAAAmT,OAAam6F,0BAAiBp6C,sBAA9B,YACVy8E,aACF9lE,QAASnuD,KAAWA,MAExB7b,OAAOgkB,OAAOyoD,SAAS5lE,QAAQ,SAAC4yG,WAC5B,IAAK,IAAM54G,OAAO44G,UACdq2B,YAAYjvI,MAAQoH,KAAKC,IAAIuxG,UAAU54G,KAAK,GAAIivI,YAAYjvI,KAAK,IAC7DoH,KAAKC,IAAIuxG,UAAU54G,KAAK,GAAIivI,YAAYjvI,KAAK,OAGzDuQ,MAAMkgH,OAAN,GAAAh+G,OAAgBm6F,0BAAiBh6C,uBAAjC,kBAAyEq8E,YAAY9lE,kEAWrF,OAAO3iE,6CAcP,OAAI8G,UAAOxH,QACPU,KAAKsmG,QAALx/F,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKsmG,8DAUAj4F,UAAWY,QACvB,IAAIy5H,sBACAC,yBACE3+H,OAAS4+H,kBAAAC,6BAAAN,aAAAxuI,WAAA,iBAAAiG,MAAA5H,KAAA4H,KAAqBqO,UAAWY,QAE3CwmF,OACAxmF,OADAwmF,OAGAx7E,KAEAjQ,OAFAiQ,KACAjB,QACAhP,OADAgP,QAGEmsF,SADQ1P,OAAO,GACE0P,SACjBxiC,OAASwiC,UAAYA,SAASxiC,OAASwiC,SAASxiC,OAAO51D,MAAQ,KAC/D6+F,MAAQzG,UAAYA,SAASyG,MAAQzG,SAASyG,MAAM7+F,MAAQ,KAC5D+7H,iBAAmBJ,cAAeC,kBAYxC,OAVC1uH,KAAMjB,SAASxZ,QAAQ,SAACgB,UAAWuoI,WAChCvoI,UAAUhB,QAAQ,SAACwpI,SAAU/wI,GAAX,OAAiB+wI,SAASxpI,QAAQ,SAACuN,OAC7CA,MAAM1I,aAAes+D,QAAU51D,MAAM1I,aAAeunG,OZnGjD,YYmG0D7+F,MAAMhS,QACnE+tI,gBAAgBC,WAAW9wI,GAAGuJ,KAAKuL,aAI/C47H,iBAAmBM,gCAAI,IAAItoI,IAAIgoI,mBAC/BD,cAAgBO,gCAAI,IAAItoI,IAAI+nI,gBAC5B1oI,KAAKknH,WAAYjtG,KAAMyuH,cAAe1vH,QAAS2vH,mBACxC3oI,KAAKknH,kFAGQhmB,WAAYiE,SAAU+jC,YAAa9oH,SACvD,IAAIooG,UACAF,WACEt+G,UACAyrF,OAASz1F,KAAKy1F,SACdn5E,UAAY4kF,WAAW2lC,aACvBrqH,aAAeF,UAAUG,kBACzB2oD,WACN,GAAIqwB,QAAUA,OAAO,GAAI,CACrB,IACM0zC,cADQ1zC,OAAO,GACO54E,IAAIsoF,cAE/BgC,iBAAQD,gBAAOE,qBAAMC,uBAAO7nG,QAAQ,SAAC4pI,SAClC,IAAMr8H,MAAQo8H,cAAcC,SAAWD,cAAcC,SAASr8H,MAAQ,GAChEs8H,aAAe7sH,aAAazP,QZ5H3B,YY4HqCyP,aAAazP,OAAO8P,IAAI9hB,KAChEquI,UAAYhiC,sBAAQiiC,eACpB7gB,UAAYz7G,OAEZq8H,UAAY/hC,wBACZihB,WAAav7G,OAEjByP,aAAazP,SAAWs8H,cAAgBr/H,OAAOxI,KAAKuL,SAU5D,GANIy7G,YACApjD,QAAQojD,WAAalsG,UAAU8D,QAAQ8oH,6LAAlBI,IAChB9gB,UAAY,QACdx4G,gBAAgBnD,YAAY27G,WAAW9nH,UAG1C4nH,WAAY,CACZ,IAAM30G,GAAK2I,UAAU8D,WAAVnU,OAAAg9H,gCAAsBC,aAAgBl/H,QAASoW,QAAQ4F,UAClEo/C,QAAQkjD,YAAc30G,GAAG3D,gBAAgBnD,YAAYy7G,YAAY5nH,SAErE,OAAO0kE,8DAUKp7D,OAAQk9H,iBACpB,IAAI/d,eAEImb,aAEAt6H,OAFAs6H,aACAD,UACAr6H,OADAq6H,UAsBR,SApBep4H,OAAAg9H,gCAAO3E,cAAP2E,gCAAwB5E,YAE7B7kI,QAAQ,WACd,IACIyP,QACA81F,KZAG,MYCHloF,KACIsoF,cAGJ+hC,iBAAmBA,gBAAgB5nI,OAAS,IAC5C2P,OAAS66D,eAAe76D,OAAQi4H,gBAAgB,KAEpD/d,YAAY3nH,KAAKyN,UAEM,IAAvBk6G,YAAY7pH,SACZ6pH,YAAc+d,iBAGlBlnI,KAAKy1F,OAAO0zB,aACLA,8EAUW6d,YAClB,IAAMC,oBASN,OAPAD,WAAW1nI,QAAU0nI,WAAWxnI,QAAQ,SAACk2F,OACrC,IAAM74E,IAAM8/G,kBAAaM,kBAAkBvnC,MAAMqP,KAAMrP,OACvDuxC,iBAAiBzlI,MACbujG,KAAMrP,MAAMqP,KACZloF,YAGDoqH,uDA3IP,MZgHa,qyCa/NAsC,2wBAAuBzH,6UAS5BkB,cAAc,IACdxmH,aAAyBwmH,aAAzBxmH,aAAcvN,OAAW+zH,aAAX/zH,OAChBu6H,WAKN,OAHCniC,sBAAOC,sBAAOF,sBAAM5nG,QAAQ,SAAC85H,UAC1BkQ,QAAO,GAAAv9H,OAAIqtH,WHgLU,SAApBmQ,kBAAqBzG,cAAkC,IAApB0G,WAAoB5iI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACxDwyH,SAA2B0J,aAA3B1J,SAAU98G,aAAiBwmH,aAAjBxmH,aACZzP,MAAQ28H,WAAW38H,MACnBogD,QACA42E,IAAMlB,UAAUvJ,UAItB,OAFAoQ,WAAW3uI,KAAO2uI,WAAW3uI,KAAO2uI,WAAW3uI,KAAO4uI,wBAAYntH,aAAczP,OAAS,MACzFogD,KAAK3rD,KAAK,IAAIuiI,IAAI2F,aACXv8E,KGxL0Bs8E,EAAoBnQ,kBAAU98G,2BAAgBvN,OAAOqqH,aAE3EkQ,8DAsBKI,gBAAiB1C,iBAC7B,IAAM/d,eAqBN,OApBA+d,gBAAgB1nI,QAAQ,SAACrF,GACrB,IAAM8U,OAAS9U,GACdktG,sBAAOC,sBAAOF,sBAAM5nG,QAAQ,SAAC2tD,MAC1B,GAAIy8E,gBAAgBz8E,OAASy8E,gBAAgBz8E,MAAMpgD,MAAO,CACtD,IAAM8P,IAAM5N,OAAO4N,IACf5N,OAAO4N,eAAe5S,MACtB4S,IAAIrd,QAAQ,SAAC0gB,MACTA,KAAKilF,SAAWjlF,KAAKilF,cACpBjlF,KAAKilF,SAASh4C,QAAUjtC,KAAKilF,SAASh4C,UACvCjtC,KAAKilF,SAASh4C,MAAMpgD,MAAQ68H,gBAAgBz8E,MAAMpgD,SAGtD8P,IAAIsoF,SAAWtoF,IAAIsoF,cAClBtoF,IAAIsoF,SAASh4C,QAAUtwC,IAAIsoF,SAASh4C,UACrCtwC,IAAIsoF,SAASh4C,MAAMpgD,MAAQ68H,gBAAgBz8E,MAAMpgD,UAI7Do8G,YAAY3nH,KAAKyN,UAEdk6G,oEAUMrxF,SAAS,IACdstC,QAA4BttC,QAA5BstC,QAAS8sB,KAAmBp6D,QAAnBo6D,KAAMiT,SAAartE,QAAbqtE,SAevB,OAbAxsG,OAAO4c,QAAQ4vF,UAAU3lG,QAAQ,SAAC6tH,KAC9B,GAAIA,IAAI,IAAMA,IAAI,GAAGtgH,MAAO,CACxB,IAAMq8H,QAAU/b,IAAI,GACdtgH,MAAQsgH,IAAI,GAAGtgH,MAEjBA,OACAmlF,KAAKk3C,SAAS5pI,QAAQ,SAAC2tD,MACnB,IAAMzsD,OAAS0kE,QAAQr4D,QACtBsgH,IAAI,GAAG3sH,QAAUysD,KAAK2zD,aAAapgH,aAK7CwxF,2CA3DP,MAAO,wwCCFR,wBASM23C,gCAAsB,SAAtBA,oBAAsBh+H,KAAG,SAAII,OAAA69H,8BAAIj+H,IAAI,IAARi+H,8BAAej+H,IAAI,KAAImH,OAAO,SAACu2D,QAAS/uD,KAC9E,IAAMuvH,QAAUvvH,IAAIzf,OAKpB,MdSmB,YcZfgvI,SdkMgB,aclMOA,UACvBxgE,SAAU,GAEPA,UACR,IAMUygE,oBAAsB,SAAtBA,sBAAsB,OAC/BC,QAAS,IAAI53H,IACb63H,SAAU,IAAI73H,IACd83H,SAAU,IAAI93H,IACd+3H,aAAc,IAAI/3H,IAClBg4H,YAAa,IAAIh4H,MASRixH,WAAa,SAAbA,WAAcl5B,UAAD,QAAArmC,KAAAj9D,UAAAxH,OAAc0P,OAAd,IAAA/E,MAAA85D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAch1D,OAAdg1D,KAAA,GAAAl9D,UAAAk9D,MAAA,SAAA/3D,OAA4Bm+F,SAA5B,UAAAn+F,OAA6C+C,OAAOlK,KAAK,OA6DtEwlI,0BAAgB,SAAhBA,cAAiBtgI,OAAQugI,aAAcC,SAAUt/B,cAI1D,OAHgBlhG,OAAO1K,OAAS,EAAI0K,OAAO,GAAGV,IAAI,SAACu0D,KAAM5lE,GAAP,OAAa,IAAIuyI,UAAWzvI,KdoJ5D,WcpJ8EmwG,4BAC/EtpF,OA1BQ,SAAhB6oH,cAAiBjyH,QAASxU,MAAO0mI,WAC1C,IAAIhyH,OAAS,GAEb,GAAI1U,QAAU0mI,UAAY,GAAKlyH,QAAQlZ,OAASorI,UAAW,CACvD,IAAK,IAAIzyI,EAAI+L,MAAO/L,EAAIugB,QAAQlZ,OAAS,EAAGrH,IACxCygB,QAAM,GAAAzM,OAAOuM,QAAQvgB,GAAGoM,WAAlB,OAGV,OADAqU,QAAUF,QAAQA,QAAQlZ,OAAS,GAAG+E,WAEnC,OAAImU,QAAQxU,OACRwU,QAAQxU,OAAOK,WAEnB,GAciBomI,CAAcF,aAActyI,EAAG+R,OAAO,GAAG1K,SAChD2P,QAASspF,KAAM16B,KAAK5uD,SAASspF,aAyDrCoxC,wBAAc,SAAdA,YAAentH,aAAczP,OACtC,IAAIvM,UdtDe,Uc2DnB,OAHIuM,Od7IiB,cc6IRyP,aAAazP,OAAO8P,IAAI9hB,OACjCyF,UdpDc,UcsDXA,WAUEumI,sBAAwB,SAAxBA,sBAAyB14H,UAAWlN,WAE7C,OADckN,UAAU2B,gBAAgBhG,OAAO4d,KAAK,SAAArvB,GAAC,OAAIA,EAAEC,SAAW2I,UAAUkD,aACnE3D,UA6DJ4hI,8BAAoB,SAApBA,kBAAqBvnI,KAAMiP,OAAQ2gI,oBAC5C,IAAIxI,SAAWwI,mBAAmB5vI,MAC9B6nI,WAAa,GACXz6H,QAAUpN,OAASujI,KAAOt2B,eAAMC,kBdlHpB,SAJH,OcmHoD2iC,QAAAC,0BAIjC7gI,OAJiC,GAI5D8gI,WAJ4DF,QAAA,GAIhDG,YAJgDH,QAAA,GAK7DI,eAAiB,SAAjBA,eAAiB/yI,GAAC,OAAK6yI,WAAWxrI,OAASwrI,WAAW7yI,GAAG8C,OAAS,MAClEkwI,gBAAkB,SAAlBA,gBAAkBhzI,GAAC,OAAK8yI,YAAYzrI,OAASyrI,YAAY9yI,GAAG8C,OAAS,MAwB3E,MdvPqB,cciOjBiwI,eAAeF,WAAWxrI,OAAS,IdjOlB,cciOsC2rI,gBAAgB,IACvErI,WAAaT,SAAWh6H,QAAQ,EAAIA,QAAQR,QAAQw6H,WAAah6H,QAAQ,GAGrEg6H,SdnLU,WckLVpnI,MAAoB+vI,WAAWA,WAAWxrI,OAAS,GAAG+E,aAAe0mI,YAAY,GAAG1mI,Wd9H7E,MciII89H,UAAYh6H,QAAQ,IdvOlB,ccyOV8iI,gBAAgBF,YAAYzrI,OAAS,IAC5CsjI,WAAa7nI,OAASujI,IAAMr2B,gBdhId,SciIdk6B,SAAWpnI,OAASujI,IAAMr2B,gBdjIZ,WcmId26B,WAAa7nI,OAASujI,IAAMt2B,edvIjB,McwIXm6B,SAAWpnI,OAASujI,IAAMt2B,edxIf,OAjGI,Yc2OfgjC,eAAeF,WAAWxrI,OAAS,Id3OpB,Yc2OsC2rI,gBAAgB,GACrE9I,SAAWpnI,OAASujI,IAAMt2B,ed3If,MAjGI,Yc6ORijC,gBAAgB,GACvB9I,SAAWpnI,OAASujI,IAAMr2B,gBdzIZ,SArGC,Yc+OR+iC,eAAeF,WAAWxrI,OAAS,KAC1C6iI,SAAWpnI,OAASujI,IAAMt2B,ed/If,QciJP46B,WAAYT,WAYX+I,wBAA0B,SAA1BA,wBAA2BpzG,QAASovF,UAAWikB,SAAY,IAEhEnhI,OAEAk9G,UAFAl9G,OACAjP,KACAmsH,UADAnsH,KAHgEqwI,sBAKpCD,QAAQE,cAAcC,wBAAwBthI,OAAQjP,MAA9E8qI,OAL4DuF,sBAK5DvF,OAAQzB,YALoDgH,sBAKpDhH,YAKhB,OAHAtsG,QAAQ+tG,OAAR0F,8BAAA,GAAAt/H,OAAqBlR,KAArB,UAAoC8qI,SACpC/tG,QAAQssG,YAARmH,8BAAA,GAAAt/H,OAA0BlR,KAA1B,eAA8CqpI,eAErCyB,cAAQzB,wBAAap6H,gBAiDrBwhI,uBAAa,SAAbA,WAAcC,SAAUN,SACjC,IAAIO,gBAAmB5tG,KAAK,EAAOivB,QAAQ,GACvC4+E,gBAAmB1qG,MAAM,EAAOC,OAAO,GACvC0qG,kBAAqB9tG,KAAK,EAAOivB,QAAQ,EAAO9rB,MAAM,EAAOC,OAAO,GAEpEjnB,KAGAwxH,SAHAxxH,KACAjB,QAEAyyH,SAFAzyH,QACQ6yH,YACRJ,SADA9uH,OAPyCmvH,MAAAjB,0BASf5wH,KATe,GAStC8xH,SATsCD,MAAA,GAS5BE,UAT4BF,MAAA,GAAAG,SAAApB,0BAUT7xH,QAVS,GAUtCkzH,WAVsCD,SAAA,GAU1BE,cAV0BF,SAAA,GAAAG,mBAkBzCjB,QAAQjkB,YANRoa,cAZyC8K,mBAYzC9K,cACAI,iBAbyC0K,mBAazC1K,iBACAF,kBAdyC4K,mBAczC5K,kBACAI,qBAfyCwK,mBAezCxK,qBACAD,eAhByCyK,mBAgBzCzK,eACAJ,YAjByC6K,mBAiBzC7K,YAEE8K,mBAAqB/K,cAAchiI,OAASoiI,iBAAiBpiI,OAC7DgtI,kBAAoB/K,YAAYjiI,OAASqiI,eAAeriI,OACxDitI,wBAA0B/K,kBAAkBliI,OAASsiI,qBAAqBtiI,OAEhF,GdlKiB,UckKb6rI,QAAQv0H,YAAY7b,QACpB,IAAKsxI,mBACD,OAASX,8BAAgBC,8BAAgBC,wCAE1C,IAAKU,oBAAsBC,yBAA2BF,oBAAsB,EAC/E,OAASX,8BAAgBC,8BAAgBC,mCAe7C,OAZAF,eA7EkB,SAAhBc,cAAiBvrG,KAAMC,OACzB,IAAMurG,SACNA,KAAc,EACdA,QAAiB,GAKjB,OAJIxrG,KAAK3hC,OAAS,GAAK4hC,MAAM5hC,OAAS,KAClCmtI,QAAQ3uG,KAAM,EACd2uG,QAAQ1/E,QAAS,GAEd0/E,QAqEUD,CAAcT,SAAUC,WACzCL,eAnEsB,SAApBe,kBAAqB5uG,IAAKivB,QAC5B,IAAM0/E,SACNA,MAAe,EACfA,OAAgB,GAOhB,OANI3uG,IAAIx+B,QAAUytD,OAAOztD,UAChBw+B,IAAI,IAAMA,IAAI,GAAGx+B,OAAS,GAAOytD,OAAO,IAAMA,OAAO,GAAGztD,OAAS,KAClEmtI,QAAQxrG,MAAO,EACfwrG,QAAQvrG,OAAQ,GAGjBurG,QAyDUC,CAAkBR,WAAYC,eAC/CP,iBAvDoB,SAAlBe,gBAAmB1yH,KAAMjB,SAC3B,IAAMyzH,SAAY3uG,KAAK,EAAMmD,MAAM,EAAM8rB,QAAQ,EAAM7rB,OAAO,GACxD0rG,eAAiB5kC,eAAMC,iBACvB4kC,edrMS,MAIG,UciNlB,OAfA5yH,KAAKza,QAAQ,SAACrF,EAAGlC,GACTkC,EAAE,IAAMA,EAAE,GAAGmF,OACbmtI,QAAQG,cAAc30I,KAAM,EAE5Bw0I,QAAQG,cAAc30I,KAAM,IAGpC+gB,QAAQxZ,QAAQ,SAACrF,EAAGlC,GACZkC,EAAEmF,OACFmtI,QAAQI,cAAc50I,KAAM,EAE5Bw0I,QAAQI,cAAc50I,KAAM,IAI7Bw0I,QAoCYE,EAAiBZ,SAAUC,YAAaE,WAAYC,gBAEnEN,YAAYvsI,OAAS,IACrBssI,iBAAiB9tG,KAAM,EACvB8tG,iBAAiB7+E,QAAS,GAE1B8+E,YAAYvsI,QAAUusI,YAAY,GAAGvsI,OAAS,IAC9CssI,iBAAiB3qG,MAAO,EACxB2qG,iBAAiB1qG,OAAQ,IAEpBwqG,8BAAgBC,8BAAgBC,4NC9ZtC,IAAMh+C,oBAAkBk/C,oCAAAriD,uBAC1BsiD,wBAAQtmD,MACLiF,YAAasb,2BAAW7V,OACxBvX,OAAO,IAHgBkzD,oCAAAriD,oBAK1BsiD,wBAAQrmD,OACLgF,YAAasb,2BAAW5V,aAND07C,oCAAAriD,oBAQ1BsiD,wBAAQlmD,WACL6E,YAAasb,2BAAWx5F,QACxBosE,OAAO,IAVgBkzD,oCAAAriD,oBAY1BsiD,wBAAQjmD,WACL4E,YAAasb,2BAAW7V,OACxBvX,OAAO,IAdgBkzD,oCAAAriD,oBAgB1BsiD,wBAAQnmD,OACL8E,YAAasb,2BAAWx5F,QACxBosE,OAAO,IAlBgB6Q,+fCaxB,IAyCMuiD,uBAAkB,SAAlBA,gBAAmBl1G,QAAS2N,WAAYwnG,cAAe38D,YAChE,IAAIg1B,UAAY2nC,cACV9xI,aAAe28B,QAAQo1G,WACvBlnC,QAAUluE,QAAQkuE,UACnBinC,gBACD3nC,UAAYq3B,kBAAae,iBAAiBj4F,YAC1CjV,QAAQ80E,WAAW9lG,QAAQ,SAAC2tI,KAAMl1I,GAC9Bk1I,KAAKnnC,SACDylB,aAAczlB,QAAQu+B,SACtB7Y,aAAc1lB,QAAQonC,SACtB1lE,UAAW4I,WAAWr4E,KAE1Bk1I,KAAKpjI,MAAM+tB,QAAQ/tB,YAG3B,IAAM0rF,UACA43C,YAAc78G,QAAQ80E,WAe5B,OAdA7/D,WAAajV,QAAQiV,aACVzyB,OAAO,SAACC,IAAK4J,IAAK1J,KACzB,IAAM63F,SAAWqiC,YAAYl6H,KAU7B,OATA63F,SAAS/7F,OAAO4N,KAChBmuF,SAAS7vG,aAAaA,cACtB6vG,SAAS0c,WACLnsB,UAAWzjE,QAAQw1G,aAEnBzwH,IAAIrkB,MACJwyG,SAAS8f,MAAMjuG,IAAIrkB,MAEvBi9F,OAAOuV,SAAS8f,SAAW9f,SACpB/3F,SAEJwiF,QAGE83C,yBAA2B,SAA3BA,yBAA4BC,UAAWzjI,OAChD,IAAMg9G,kBAAoBymB,UAAUv+H,SAAS83G,sBACvC0mB,WAAa1mB,kBAAkB0mB,WACjCC,UACJ,GAAID,WAAY,CACZ,IAAM18G,SAAW08G,WAAW1jI,OAC5B2jI,OAAS38G,SAAS28G,OAClBF,UAAUzmB,kBAAkBh2F,SAAS7T,SAC9B6pG,6BAA6Bj9G,UACpC0jI,UAAUzmB,kBAAkBA,mBAEhC,OAAO2mB,QAgDEC,wBAAmB,SAAnBA,iBAAoB/oC,WAC7B,IAAMgpC,iBAoBN,OAnBAhpC,UAAUplG,QAAQ,SAACslG,SAAU7sG,GACzB,IAAM4kB,IAAMioF,SAASjoF,IACfkoF,KAAOD,SAASC,KACtB,GAAKloF,IAUIA,IAAIrkB,OACLqkB,IAAIrkB,KAAJ,GAAAyT,OAAc84F,KAAd,KAAA94F,OAAsBhU,IAE1B21I,cAAcpsI,KAAKsjG,cAbb,CACN,IAAM+oC,MAAQlR,kBAAaM,kBAAkBn4B,SAASC,KAAMD,UACvD+oC,MAAMr1I,OACPq1I,MAAMr1I,KAAN,GAAAyT,OAAgB84F,KAAhB,KAAA94F,OAAwBhU,IAE5B21I,cAAcpsI,MACVujG,KAAMD,SAASC,KACfloF,IAAKgxH,WASVD,eA4IEE,YAAc,SAAdA,YAAer4C,OAAQs4C,SAAU70I,OAAnB,OAA6Bu8F,OAAOp3E,OAAO,SAACq3E,OAEnE,OAD0B,SAAbq4C,SAAsBr4C,MAAM9+E,YAAYkvE,aAAe4P,MAAMo1B,WAC1D5xH,SAGP80I,eAAiB,SAAjBA,eAAkBv4C,OAAQs4C,SAAU70I,OAC7Cu8F,OAAOp3E,OAAO,SAAC8uH,MAEX,OAD0B,SAAbY,SAAsBZ,KAAKl+H,SAAS81F,KAAOooC,KAAKriB,WAChD5xH,QACTi0I,KAAKvqG,UACE,MAQNqrG,oBAAsB,SAAtBA,oBAAuB5sI,MACRA,KAAK6sI,iBACbtoD,KAAK,WACjBvkF,KAAK6sI,iBAAmB,IAAIlsD,QAAQ,SAAC57D,SACjC/kB,KAAK8sI,iBAAmB/nH,UAE5B6nH,oBAAoB5sI,SCvUf+sI,UAAY,YACZC,UAAY,6uCCGjB/R,qBAA0B4B,4BAA1B5B,UAAWC,sBAAe2B,4BAAf3B,WAEbj0B,kBAAS2B,2BAAU3B,OAiEZgmC,mCAA0B,SAA1BA,wBAA2Bx2G,QAAS7oB,OAAQlU,MAAlB,OAA4B,IAAK,KAAKuO,IAAI,SAACgwH,UAC9E,IAAMpnC,KAAOp6D,QAAQo6D,OACrB,OAAKA,KAAKonC,WAGGxyD,aAAa73D,OAAOqqH,WAAarqH,OAAOqqH,UAAU/gC,KAZvC,SAAtBg2C,oBAAuBh2C,KAAMprC,MAC/B,OAAIA,KAAKv2C,YAAY7b,SAAWutG,mBACrB/P,KAWPg2C,CAAoBt/H,OAAOspF,KAAMrG,KAAKonC,UAAU,KArE7B,SAArBkV,mBAAsB12G,QAASo6D,KAAMn3F,KAAMqkG,aAAgB,IAAAqvC,YACzDtpC,SAUqCupC,UATnCz/H,OAAS6oB,QAAQ7oB,SACfknF,YAAsClnF,OAAtCknF,YAAaw4C,UAAyB1/H,OAAzB0/H,UAAWC,UAAc3/H,OAAd2/H,UAC1BC,cAAgBF,UAAUh/F,MAC1Bm/F,cAAgBH,UAAUG,cAC1B54C,aAAen7F,OAASqzI,UAAYQ,UAAU14C,aAAey4C,UAAUz4C,aACvE64C,cAAgBH,UAAUxvC,aAAazvD,MACvCwd,KAAO+kC,KAAKkN,aAAa,GACzB4vC,cAAgB7hF,KAAKv2C,YAAY7b,SAAWutG,kBAE9CvtG,OAASqzI,WAAaY,eACdC,0BAAAP,aACHtvC,YADG,GAAAnzF,OACcmzF,YADd,UAAA6vC,0BAAAP,UAAA,GAAAziI,OAEAmzF,YAFA,QAAAnzF,OAEoBmzF,YAFpB,WAAR+F,SAAQupC,WAKRvpC,SAAW8pC,6BACN7vC,YAA2B,GAAAnzF,OAAMmzF,YAAnB4vC,cAAa,gBAapC,OAVA7pC,SAASx1D,OACLz2C,MAAO,SAAAA,MAACoH,KAAMrI,GACV,IAAMi3I,iBAAmBF,eAAiB7hF,KAAKzsD,SAAS,GAAK,EAC7D,OAAI3F,OAASqzI,UACFW,cAAc92I,EAAI,GAEtBi3I,kBAA0C,IAAtB5uI,KAAK8+F,aAAqB0vC,cAAgBD,iBAKzEppG,YAAUgpG,aACNv4C,aAAY,GAAAjqF,OAAKiqF,aAAL,KAAAjqF,OAAqBmzF,aACjC/iE,UAAWptB,OAAOotB,UAClB7jC,KAAM4mG,YACNmnB,oBAAqB,SAAAA,oBAACjmH,KAAMrI,GAQxB,OANyB+2I,eAAiB7hF,KAAKzsD,SAAS,GAAK,GAC1B,IAAXJ,KAAKiF,GAAWxK,OAASqzI,UACpC,GAAAniI,OAAMkqF,YAAN,mBAEA,GAAAlqF,OAAMkqF,YAAN,UAAAlqF,OAA0BlR,KAA1B,KAAAkR,OAAkCmzF,YAAlC,KAAAnzF,OAAiDhU,EAAI,KAVhEg3I,0BAAAR,YAAA,MAAAxiI,OAcCmzF,YAAYrkD,eAAkBhgD,OAASqzI,UAAY,OAAI56G,GAdxDy7G,0BAAAR,YAAA,WAeNtpC,UAfMspC,aAiBVv8C,KAAM+8C,6BACD7vC,YAAcjyC,MAEnBwoC,aAAa,GAmBH64C,CAAmB12G,QAASo6D,KAAMn3F,KAAMu+H,UAL3C,OAMZj7G,OAAO,SAAA9lB,GAAC,OAAU,OAANA,KA8GF42I,2BAA6B,SAA7BA,2BAA8Br3G,SAAY,IAAA73B,KAC7CiyF,KAAOp6D,QAAQo6D,OACfwH,aACFziE,MAAOa,QAAQb,QACfC,OAAQY,QAAQZ,UAEdy3G,UAAY72G,QAAQs3G,WACpBR,UAAY92G,QAAQu3G,WACpBC,cApHsB,SAAnBC,iBAAoBr9C,KAAMloF,OAAQwS,cAC3C,IAAMgzH,YAyCN,OAxCC,IAAK,KAAKhwI,QAAQ,SAACzE,MAChB,IAAIgnC,MAAQmwD,KAAKn3F,MAAM,GAAG0zG,gBACpB32F,QAAU8vD,WAAWprD,aAAcorD,WAAW59D,OAAQjP,KAAM,GAAGw3F,aAAa,GAAI,MAAO,WACvFtvE,YACAthB,SAEEnJ,KAAM,SACNuC,KAAM,YAENvC,KAAM,SACNuC,KAAM,YAGNvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,OACNuC,KAAM,YACN+c,kBAEAtf,KAAM,OACNuC,KAAM,YACN+c,kBAGF1L,IAAMxL,KAAKG,IAAIghC,MAAMziC,QAC3ByiC,MAAQjqB,UAAYxZ,gCAAiBE,SAAWujC,MAAMz4B,IAAI,SAAA/Q,GAAC,OAAIA,EAAEmT,YAAaq2B,MAC9E,IAAK,IAAI9pC,EAAI,EAAGA,EAAImU,IAAKnU,GAAK,EAAG,KAAAw3I,eAC7BxsH,SAASzhB,MAATytI,0BAAAQ,kBAAA,GAAAxjI,OACQlR,KADR,SACsBgnC,MAAM9pC,IAD5Bg3I,0BAAAQ,eAAA,GAAAxjI,OAEQlR,KAFR,UAEuBgnC,MAAM9pC,EAAI,IAFjCg3I,0BAAAQ,eAAA,GAAAxjI,OAGQlR,KAHR,OAGoBgnC,MAAM9pC,IAH1Bg3I,0BAAAQ,eAAA,GAAAxjI,OAIQlR,KAJR,OAIoBgnC,MAAM9pC,IAJ1Bw3I,iBAOJD,SAASz0I,MAAQ,IAAIgD,oBAAUklB,SAAUthB,UAEtC6tI,SA0EeD,CAAiBr9C,KAAMp6D,QAAQ9tB,SAAU8tB,QAAQx3B,OAAOmc,oBAC9Exc,SAAGgM,OAAHnL,MAAAb,KAAAyvI,6BAAad,WAAb3iI,OAAAyjI,6BAA2Bf,aAAWnvI,QAAQ,SAAC2tI,MAC3CA,KAAK7sI,KAAK6sI,KAAKj7C,OAAO99E,EAAIk7H,cAAcl7H,EAAIk7H,cAAc/pI,GAAGm0F,YAAYA,gBCzMpEl7E,kCACT23E,YFPuB,OEQvBD,aAAc,cACd75D,UAAW,GACXszG,iBAAkB,sBAClBhB,WACIz4C,aAAc,kBACd75D,UAAW,GACXk8D,MAAM,EACN5oD,MAAO,UACPm/F,cAAe,WAEnBF,WACI14C,aAAc,kBACd75D,UAAW,GACXk8D,MAAM,EACNhzF,GACIoqC,OAAQ,OAAQ,YAEpBv7B,GACIu7B,OAAQ,OAAQ,aAGxBigG,kBAAmB,YACnBx7C,aACIC,SACIj7F,KFvBgB,iBE0BxBy2I,oBAAqB,osBC9BzB,IAAAC,mBAAAC,iCAAAC,yBCLsB,UDOd92I,MAAO,KACP0V,MACIm6D,aAAc,SAAAA,aAAC95D,OAAQ8hG,WAAT,OACVjnC,eAAeinC,WAAajnC,kBAAmBtrD,kCAAgBvP,YAL/E8gI,iCAAAC,sBCFyB,YDYjB92I,MAAO,KACP0V,MACIs6D,OAAQ,SAAAA,OAAA47B,UAAQ,OAAI6oC,wBAAiB7oC,cAZjDirC,iCAAAC,sBCEyB,aDcjB92I,MAAO,OAhBf62I,iCAAAC,sBCOsB,UDYd92I,MAAO,OAnBf62I,iCAAAC,sBCJoB,QD0BZ92I,MAAO,KACP0V,MACIs6D,OAAQ,SAAAA,OAAC5oE,KAAMw3B,SACX,GAAIA,QAAQC,OAAQ,CAChB,IAAMk4G,WAAan4G,QAAQm4G,aAC3Bn4G,QAAQm4G,cAARhkI,OAAAikI,gCAAuBD,aAAY3vI,YAChC,CACH,IAAM6vI,QAAUr4G,QAAQx3B,OACxB6vI,SAAWA,QAAQpiD,YAAY,eAC/Bj2D,QAAQm4G,YAAY3vI,YA/BxCyvI,iCAAAC,sBCG+B,mBDkCvB92I,MAAO,KACP0V,MACI45D,aAAa,KAvCzBwnE,8lBEOA,WAgBaI,qCAA0B,SAA1BA,wBAA2Bt4G,QAAS4vC,WAAV,OAAwB,WAC3D,IAAMhnE,ON8L2B,SAAxB2vI,sBAAyB56C,OAAQpD,WAAYi+C,eAAgB9zH,cACtE,IAAI4oD,WA4BJ,OA3BAqwB,OAASA,OAAOp3E,OAAO,SAAAq3E,OAAK,OAA8B,OAA1BA,MAAM66C,mBAC/B/wI,QAAQ,SAACk2F,OACZ,IAAI86C,gBACEvhI,OAASymF,MAAMzmF,SACfk2F,SAAWl2F,OAAOk2F,SAClBsrC,YAAc/6C,MAAM66C,gBACpB5gB,QAAUj6B,MAAMxhE,KAEF,OAAhBu8G,cAAmD,IAA3BxhI,OAAOu2F,kBAC/BgrC,aAAe73I,OAAO4c,QAAQk7H,aAC9BrrE,QAAUorE,aAAax9H,OAAO,SAAC09H,YAAahwI,QACxC,IAAMurH,aAAevrH,OAAO,GACtBqM,MAAQo4F,SAAS8mB,cAAcl/G,MAC/Bq2F,UAAYktC,eAAe3gB,SAAS1D,cAC1C,GAAIA,gBAAgB55B,WAAY,CAC5B,IAAMs+C,SAAQ,GAAA1kI,OAAMomF,WAAW45B,cAAc7oB,YAC7CstC,YAAYC,UAAYD,YAAYC,cACpCD,YAAYC,UAAYxrE,0BAAcurE,YAAYC,UAAWjwI,OAAO,IAChE8b,aAAazP,OAAO8P,IAAI/E,QAAU0E,aAAazP,OAAO8P,IAAI/E,QAClD0E,aAAazP,OAAO8P,IAAI9hB,WAEpC21I,YAAYzkB,cAAgBvrH,OAAO,GAEvC,OAAOgwI,aACRtrE,YAGJA,QM3NQirE,CAAsBv4G,QAAQ29D,SAAU39D,QAAQ9tB,SAAU8tB,QAAQ84G,gBAC7E94G,QAAQx3B,OAAOmc,mBACnBqb,QAAQ/tB,QAAQkgH,OAAhB,GAAAh+G,OAA0Bm6F,0BAAiBp6C,sBAA3C,KAAA//C,ODlBkB,SCkBlB,KAAAA,OAAoFy7D,WAAahnE,UAGxF2qE,6BAAc,SAAdA,YAAevzC,QAAS4vC,UAAWs+B,SAArB,QAEnBjrG,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,ODrCO,WCsCd4/D,SAAU,SAAAA,SAAA5rE,MAAgB,IAAZgP,OAAY4hI,+BAAA5wI,KAAA,MACtBgP,QAAU6oB,QAAQi4D,WAAW9gF,OAAOA,OAAOmlF,gBAI/Cr5F,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,ODzCU,aC0CjB4/D,SAAU,SAAAA,SAAAxqD,OAAmB,IAAfujF,UAAeisC,+BAAAxvH,MAAA,MACnByvH,UAAYh5G,QAAQ9tB,SAC1B,GAAI46F,WAAaksC,UAAW,EAnCf,SAAnBC,iBAAoBnsC,UAAW9sE,SACjC,IAAMk5G,UAAYl5G,QAAQguE,WACpBmrC,WAMN,IAAK,IAAMz3I,OALXorG,UAAUplG,QAAQ,SAACslG,SAAU7sG,GACzB,IAAMi8B,GAAE,GAAAjoB,OAAM64F,SAASC,KAAf,KAAA94F,OAAuBhU,GAC/Bg5I,QAAQ/8G,KAAM,IAGA88G,UACRx3I,OAAOy3I,UACTD,UAAUx3I,KAAKgG,QAAQ,SAAAk2F,OAAK,OAAIA,MAAM9yD,kBAC/BouG,UAAUx3I,MAyBbu3I,CAAiBnsC,UAAW9sE,SAC5B,IAAMo6D,KAAOp6D,QAAQo6D,OACrB,GAAIA,KAAK99E,GAAK89E,KAAK3sF,EAAG,CAClB,IAAMoqB,OAAQ,GAAA1jB,OAAIm6F,0BAAiBh6C,uBAArB,cAAAngD,OAAwD+5F,QAAQu+B,SAAhE,QAAAt4H,OACPm6F,0BAAiBh6C,uBADV,cAAAngD,OAC6C+5F,QAAQonC,SADrD,MAERrjI,MAAQ+tB,QAAQ/tB,QAChBmnI,aACFxpE,UAAWA,UAAU+D,MACrBjyE,IAAK,oBAETuQ,MAAMgkF,YAAYmjD,aAClBnnI,MAAM+/G,uBAAuBn6F,MAAO,WAChCw/G,2BAA2Br3G,WAC5B,EAAOo5G,aAGdp5G,QAAQ6sE,SAASC,WACjB9sE,QAAQq5G,kBAAkBC,QACtBrrD,OAAQjuD,QAAQ29D,SAChBr0E,OAAQ,cACR0kE,WAAY,cAMxB/qF,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,OD1EK,SC2EZ4/D,SAAU,SAAAA,SAAA66C,OAAmB,IAAfpqG,UAAeu0H,+BAAAnqB,MAAA,MACnBr0B,WAAav6D,QAAQ9tB,SACrBqnI,QAAUv5G,QAAQo6D,OACxB,GAAI51E,WAAa+1E,YAAcg/C,QAAS,CACpC,IAAM91C,aACA8G,qBACL,IAAK,KAAK7iG,QAAQ,SAACzE,MAChB,IAAMgS,MAAQslF,WAAWt3F,MAAM,GAC3BgS,OAASA,MAAM+K,YAAcxZ,gCAAiBE,WAC9C+8F,UAAUxgG,MAAQgS,MAAM3L,aACxBihG,iBAAiBt1F,OAASwuF,UAAUxgG,MACpCs2I,QAAQt2I,MAAMyE,QAAQ,SAAA2tD,MAAI,OAAIA,KAAKl1C,QAAQsjF,UAAUxgG,YAG7D+8B,QAAQw5G,kBAAoBjvC,iBAC5BvqE,QAAQw1G,WAAa/xC,cAK7BxgG,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,ODjGO,WCkGd4/D,SAAU,SAAAA,YJyDiB,SAAtB0lE,oBAAuBz5G,SAChC,IAAM05G,OAAS15G,QAAQ7oB,SACjB+2F,QAAUluE,QAAQkuE,UAClBj8F,MAAQ+tB,QAAQ/tB,QAChBwxF,UAAYzjE,QAAQw1G,YACzBc,UAAWC,WAAW7uI,QAAQ,SAACzE,MAC5B,IAAIgqG,KACA91F,OACAlU,OAASqzI,WACTrpC,KAAOu3B,qBACPrtH,OAASuiI,OAAO5C,YAEhB7pC,KAAOw3B,sBACPttH,OAASuiI,OAAO7C,WAEpB,IAAM9oI,YAAcyoI,mCAAwBx2G,QAAS7oB,OAAQlU,MAEvDkvE,IAAG,IAAAh+D,OAAOlR,KAAP,aACT+8B,QAAQmyC,KAtCe,SAAlBwnE,kBAAyE,IAAtDnsC,UAAsDx+F,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAAtC4qI,SAAsC5qI,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAA5B3tB,YAA4BiB,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAfm+G,WAAe7qI,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAC5ElqB,OAUN,IAAK,IAAM9P,OATXqM,YAAYrG,QAAQ,SAACqd,KACjB,IAAMrkB,KAAOqkB,IAAI4oB,WAAWjtC,KACxBwyG,SAAW1F,UAAU9sG,MACpBwyG,WACD1F,UAAU9sG,MAAQwyG,SAAW0mC,SAAS70H,MAE1C80H,WAAW3mC,SAAUnuF,IAAKrkB,MAC1B8Q,IAAI9Q,MAAQ,IAEE8sG,UACR9rG,OAAO8P,MACTg8F,UAAU9rG,KAAKopC,gBACR0iE,UAAU9rG,MAGzB,OAAO8rG,UAqBYmsC,CAAgB35G,QAAQmyC,KAAM,WACzC,IAAMkjE,KAAOxQ,kBAAae,kBAAmB34B,YAE7C,OADAooC,KAAKhyI,aAAa28B,QAAQo1G,YACnBC,MACRtnI,YAAa,SAAC6vF,MAAOk8C,UAAWp4I,KAC/B,IAAMisC,WAAamsG,UAAUnsG,WACvBooG,MAAQlR,kBAAaM,kBAAkBl4B,KAAMt/D,YAC7C4rG,QAAUO,UAAU1/C,KAC1BwD,MAAMsQ,SACFylB,aAAczlB,QAAQu+B,SACtB7Y,aAAc1lB,QAAQonC,SACtB1lE,UAAS,GAAAz7D,OAAK+5F,QAAQt+B,WAAbz7D,OAAyBlR,MAAzBkR,OAAgCzS,OAExCuQ,MAAMA,OACNkF,OAAO4+H,OACPnmB,WACGnsB,sBAEHrJ,KAAKm/C,WAEdv5G,QAAO,IAAA7rB,OAAKlR,OAAUpC,OAAOgkB,OAAOmb,QAAQmyC,QI9FxCsnE,CAAoBz5G,YAIxB/8B,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,ODvGK,QCuGL,GAAAA,OACAy7D,UAAU+D,MADV,KAAAx/D,ODjGU,cCmGjB4/D,SAAU,SAAAA,SAAAgmE,MAAAC,OAAkC,IAA9Bx1H,UAA8Bu0H,+BAAAgB,MAAA,MAAf16F,UAAe05F,+BAAAiB,MAAA,MACxC,GAAIx1H,UAAW,CACX,IAAM4kF,WNhEa,SAAtB6wC,oBAAuB56F,UAAW76B,WAC3C,IAAM4kF,cACN,IAAK,IAAM1nG,OAAO29C,UACd,MAAOn9C,eAAe5B,KAAK++C,UAAW39C,KAAM,CACxC,IAAMw4I,aAAe76F,UAAU39C,KAC/B0nG,WAAW1nG,KAAOw4I,aAAa11H,WAIvC,OAAO4kF,WMuDwB6wC,CAAoB56F,UAAW76B,WAClDwb,QAAQ/tB,QAAQkgH,OAAhB,GAAAh+G,OAA0By7D,UAAU+D,MAApC,KAAAx/D,ODrGe,mBCqGuDi1F,gBAK9EnmG,KAAM,4BACN40B,OAAO,GAAA1jB,OAAIy7D,UAAU+D,MAAd,KAAAx/D,OD3GgB,mBC2GhB,GAAAA,OACAy7D,UAAU+D,MADV,KAAAx/D,ODvGO,WCyGd4/D,SAAU,SAAAA,SAAAomE,OAAAC,QAAqC,IAAjCvrC,gBAAiCkqC,+BAAAoB,OAAA,MAAZx8C,OAAYo7C,+BAAAqB,OAAA,MACrCC,kBAAoBr6G,QAAQ84G,gBAC5BwB,QAAUt6G,QAAQo6D,OAClB51E,UAAYwb,QAAQx3B,OAC1B,GAAIqmG,iBAAmBlR,QAAU28C,SAAWD,kBAAmB,CAC3Dr6G,QAAQq5G,kBAAkBC,QAASrrD,OAAQ0P,OAAQr0E,OAAQ,eAAgB0kE,WAAY,UACvF,IAAMjqE,MAAQic,QAAQ/tB,QAAQ8R,MAC9B45E,OAAOj2F,QAAQ,SAAA6yI,KAAG,OAAIA,IAAIC,kBNiDR,SAArBC,mBAAsB98C,OAAQ9hF,GAAI6+H,uBAC3C/8C,OAAOj2F,QAAQ,SAACk2F,OACZ,IAAM+8C,WAAa/8C,MAAMzmF,SAAS2S,OAC5BtF,UAAYm2H,sBAAsB3oI,SAAW2oI,WAAW9+H,IACzD6+H,sBAAsBC,aAAe9+H,GACtC+hF,MAAMp1F,SAAWgc,WACjBo5E,MAAMp1F,KAAKgc,aMtDPi2H,CAAmB98C,OAAQn5E,UAAWqqF,iBACtC9qF,MAAM8oH,OACNlvC,OAAOj2F,QAAQ,SAAC6yI,KACZA,IAAIK,eAAehyI,OAAO2xI,IAAIzhC,WAElC/0F,MAAM+oH,SACN9sG,QAAQ66G,qBNpHc,SAAzBC,uBAA0Bn9C,OAAQj5E,cAC3C,IAAMq2H,+BAoBN,IAAK,IAAMr5I,OAlBXi8F,OAAOj2F,QAAQ,SAACk2F,OAAU,IAAAo9C,sBAOlBp9C,MAAMyxB,oBALNmB,WAFkBwqB,sBAElBxqB,WACAE,UAHkBsqB,sBAGlBtqB,UACAD,WAJkBuqB,sBAIlBvqB,WAIEviG,UARgB8sH,sBAKlBxgD,OALkBwgD,sBAMlBtgD,QAE8Bn0E,OAAO,SAAAtR,OAAK,OAAIyP,aAAazP,QAAUyP,aAAazP,OAAO8P,IAAI9hB,OAC7F6D,yBAAUC,WACbypH,WAAYE,UAAWD,YAAY/oH,QAAQ,SAACuN,OACwC,IAAAgmI,sBAA7Ev2H,aAAazP,QAAUyP,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUE,aACjE+zI,4BAA4B9lI,SAAW8lI,4BAA4B9lI,YACpEgmI,sBAAAF,4BAA4B9lI,QAAOvL,KAAnCV,MAAAiyI,sBAAAC,6BAA2ChtH,gBAKrC6sH,iCACP74I,eAAe5B,KAAKy6I,4BAA6Br5I,OACpDq5I,4BAA4Br5I,KAA5Bw5I,6BAAuC,IAAIryI,IAAIkyI,4BAA4Br5I,QAGnF,OAAOq5I,4BM0FoCD,CAAuBn9C,OAClDn5E,UAAUG,kBAAmBqb,QAAQm7G,iBNoDvB,SAArBC,mBAAsBhhD,KAAMuD,OAAQ66C,gBAC7C76C,OAAOj2F,QAAQ,SAACk2F,OACZ,IAAMi6B,QAAUj6B,MAAMxhE,KAChBm9G,WAENlqE,eAAe+qB,KAAM,SAAC14F,KAClB,IAAM25I,QAAU7C,eAAe3gB,SAC3BwjB,SACAjhD,KAAK14F,OAAS63I,QAAQ73I,KAAO04F,KAAK14F,KAAK25I,QAAQ35I,MAAQ,MAG/Db,OAAO6O,KAAK6pI,SAAS/xI,QAAUo2F,MAAMxD,KAAKm/C,WM9DlC6B,CAAmBd,QAAS38C,OAAQ08C,mBACpCr6G,QAAQq5G,kBAAkBC,QAASrrD,OAAQ0P,OAAQr0E,OAAQ,UAAW0kE,WAAY,wLCpI3F,IAAM+qB,iBAAKuiC,qBAAAC,UNSa,oBMTbD,qBAAAC,ONUY,oBMVZD,qBAAAC,ONWU,kBMXVD,qBAAAC,ONYI,aMZJD,qBAAAC,ONaS,iBMbTD,qBAAAC,OAAA,mBAAAD,qBAAAC,OAAA,WAAAD,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,cAAAD,qBAAAC,OAAA,eAAAD,qBAAAC,OAAA,YAAAD,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,yBAAAA,ykCCEX,IA6BMjoE,yBAAoB,SAApBA,kBAAqB2kB,UAC9B,IAAMj4D,QAAUi4D,SAASj4D,QACnB/tB,MAAQ+tB,QAAQ/tB,QAEtBA,MAAMo8F,2BAA0B,eAAAl6F,OAAgB6rB,QAAQkuE,UAAUt+B,UAAlC,KAAAz7D,OHpChB,SGoCwE,SAACqQ,WAGrF,GAFWA,UAAU,GAEb,CACJyzE,SAASujD,mBAAmBvjD,SAASj4D,QAAQx3B,OAAOC,UAAUikB,MAC9DurE,SAAShE,wBACT,IAAMwnD,aAAexjD,SAASj4D,QAAQm4G,aAAa,GACnDlgD,SAASyjD,0BAA0BD,iBAI3CxpI,MAAM+/G,wBAAuB,eAAA79G,OAAgB6rB,QAAQkuE,UAAUt+B,UAAlC,KAAAz7D,OH/Cb,SG+CqE,WAC5E8jF,SAASj4D,QAAQ5I,SACG6gE,SAASj4D,QAAQm4G,aAAa,GACtCliD,YAAY,iBAIjCj2D,QAAQo1G,WAAWljB,UAAUF,wBAAwBp9D,aAAYE,eAC7D,SAAA3sD,MAAqBwzI,8BAAAxzI,KAAA,QAhCY,SAA5ByzI,0BAA6B57G,SACtC,IAAMo0D,kBAAoBp0D,QAAQgzD,mBAClCnyF,OAAO4c,QAAQ22E,mBAAmB1sF,QAAQ,SAACquB,OACvC,IAAMs+D,WAAat+D,MAAM,GACzBiK,QAAQk1D,mBAARlsF,MAAAg3B,SAA2Bq0D,WAAW3zF,MAA/ByT,OAAA0nI,kCAAwCxnD,WAAWn9E,YAE9D8oB,QAAQgzD,sBA4BI4oD,CAA0B3jD,UA3CR,SAArB6jD,mBAAsB97G,SAC/B,IAAMm0D,cAAgBn0D,QAAQ+yD,eAC9B,IAAK,IAAMrxF,OAAOyyF,cACVA,cAAczyF,KAAKkuB,wBACZoQ,QAAQ+yD,eAAerxF,KAwC1Bo6I,CAAmB7jD,ohBCzDnC,IAoCa8jD,kBACTC,MAAO,SAAAA,MAAC9oC,SAAU+oC,mBAAoBtyH,YAClC,IAAMuyH,YAAcvyH,WAAWjC,QACzB7Q,SAvCW,SAAnBslI,iBAAoBjpC,SAAU+oC,mBAAoBtyH,YACpD,IACMpF,QAAU03H,mBAAmB,GAAGxzI,UAChC2zI,aAAezyH,WAAWjC,QAAQ7Q,SAClC8Q,kBAAoBgC,WAAWhC,kBAC/B9d,OAAS0a,QAAQ1a,OACjB+tF,SAAWsb,SAAS1qG,OAAOmc,kBAC3Bnc,KAAO+b,QAAQ/b,KA0BrB,OAzB2B0qG,SAAS92E,OAASzS,WAAW/B,SAGzCw0H,aAEuB,OAAtBz0H,kBAA8B9d,OAAOqR,OAAO,SAACC,IAAK1J,IAAKvF,OAC/D,IAAIT,MACEwJ,MAAQxD,IAAI/Q,KACZqkG,SAAWnN,SAAS3iF,OAEpBonI,aADOt3C,WAAaA,SAAShgF,IAAI/E,QAAU+kF,SAAShgF,IAAI/E,QAAU+kF,SAAShgF,IAAI9hB,SACxDuD,gCAAiBC,YAE9C,OAAKs+F,UAODt5F,MAHC4wI,YAGO7zI,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,UAFfpD,KAAKC,IAALC,MAAAF,KAAIwzI,oCAAQ9zI,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,WAAUpD,KAAKG,IAALD,MAAAF,KAAIwzI,oCAAQ9zI,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,YAI/EiP,IAAIlG,OAASxJ,MACN0P,KATIA,SAUN,KAQQghI,CAAiBjpC,SAAU+oC,mBAAoBtyH,YAC1DjC,QAAU7mB,OAAOmgB,UAAWk7H,aAElC,OADAx0H,QAAQ7Q,SAAWA,SACZ6Q,SAGX60H,UAAW,SAAAA,UAACrpC,SAAU+oC,mBAAoBtyH,YACtC,IAAMuyH,YAAcvyH,WAAWjC,QACzBC,kBAAoBgC,WAAWhC,kBAC/BpD,QAAU03H,mBAAmB,GAAGxzI,UAClCoB,OAAS0a,QAAQ1a,OACf6d,QAAU7mB,OAAOmgB,UAAWk7H,aAClCryI,OAAS0a,QAAQ1a,OACjB,IAAMrB,KAAO+b,QAAQ/b,KACfkhG,aAAe7/F,OAAO2H,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAIvC,OAHAgnB,QAAQ7Q,UAAY8Q,mBAAqBs0H,mBAAmB,GAAGhzC,UAAY,MACtES,cADcv1F,OAAAmoI,oCACG9zI,OACtBkf,QAAQgiF,aAAe/hF,kBAAoBA,kBAAkBitE,YAAYpjF,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,UAC7EgnB,wgBCzDf,IAyBa80H,gCAAkB,SAAlBA,gBAAmBtpC,SAAU5pF,QAAwB,IAC1D/B,gBAD0CpQ,OAAgBnI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAExD0Y,QAAUvQ,OAAOuQ,QACjB6pE,aAAep6E,OAAOo6E,aACtBkrD,oBAAsBtlI,OAAOulI,kBAAkBpzH,YAC/CozH,kBAAoBD,oBAAoBvqI,WACxComB,OAASmkH,oBAAoBnkH,OAC7BzhB,SAAW6Q,QAAQ7Q,SACnBmpB,QAAUkzE,SAASlzE,QACnBxb,UAAYwb,QAAQm4G,aAAa,GACjCvwH,SAAWoY,QAAQ5D,KACnBugH,aAAezpC,SAAS3iB,cACxBqB,mBAAqBshB,SAASrgB,oBAC9B+pD,YAAcrrD,aAAaN,YAAYltE,MACvCW,aAAeF,UAAUG,kBAC/B+C,QAAQm1H,WAAaj1H,SACrBF,QAAQ4B,OAASA,OACjB5B,QAAQo1H,aAAe98G,QAAQ+8G,cAC/B,IACMC,qBAD0B9pC,SAASzgB,yBACYnpE,SAAWA,OAE5D2zH,cACa,OAAbpmI,SACA0Q,gBAAkB,KACXsL,eAAehc,WACtBomI,WAAap8I,OAAO6O,KAAKmH,cACzB0Q,gBAAkBq1H,YAAcA,YAAY10H,QAAQ+0H,YAAc,OAElEA,WAAapmI,SAAS,GACtB0Q,gBAAkBq1H,YAAcA,YAAY10H,QAAQ+0H,YAAc,MAGtE,IAAMC,cAAgBl9G,QAAQk9G,gBAC9B,GAAwB,OAApB31H,iBAA4Bm1H,kBAAkBl1I,OAAQ,CACtD,IAAM0K,OAASqV,gBAAgB9e,UAAUoB,OAAO2H,IAAI,SAAA/Q,GAAC,OAAIA,EAAEC,OAC3D6mB,gBA5DsB,SAAxB41H,sBAAyBthI,GAAIrT,MAC/B,IAAM+b,QAAU1I,GAAGpT,UACb20I,QAAU74H,QAAQ1a,OAClBwzI,MAAQ94H,QAAQ/b,KAChB2iB,YACAmyH,QAAU90I,KAAK,GAAGgJ,IAAI,SAAA/Q,GAAC,OACzBC,KAAI,GAAAyT,OAAK1T,GACTwC,KAAM6D,yBAAUE,aAEdu2I,MAAQ/0I,KAAK,GAanB,OAXA60I,MAAM31I,QAAQ,SAACjH,GACX,IAAMoY,SACNukI,QAAQ11I,QAAQ,SAAC+J,IAAKtR,GAClB0Y,MAAMpH,IAAI/Q,MAAQD,EAAEN,KAExBm9I,QAAQ51I,QAAQ,SAAC+J,IAAKtR,GAClB0Y,MAAMpH,IAAI/Q,MAAQ68I,MAAMp9I,KAE5BgrB,SAASzhB,KAAKmP,SAGX,IAAI5S,oBAAUklB,YAAdhX,OAAAqpI,kCAA4BJ,SAA5BI,kCAAwCF,WAsCzBH,CAAsB51H,gBAAiB21H,eACzDD,WAAa3kH,UAAMnkB,OAAAqpI,kCAAOtrI,QAAPsrI,kCAAkBd,oBAAqBA,kBAC1Dn1H,gBAAkBA,gBAAgBW,QAAQ+0H,YAG9C,IAAIQ,6BAA8B,EAC9BR,WAAWz1I,QAAUy1I,WAAWtgI,MAAM,SAAA1H,OAAK,OAAIyP,aAAazP,QAC5DyP,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUC,YAC3C02I,6BAA8B,GAGlC,IAAMC,QAAU19G,QAAQ+8G,cACxBr1H,QAAQ4B,OAASA,OACjB,IAAMq0H,kBAAoBzqC,SAASjhB,SAASC,YAAY8qD,sBAClDptH,kBAAkB+tH,mBAAoBA,kBAAkB7+H,YAAYm2E,UAEpEp9E,SAAW,SAAXA,SAAYke,MAAO6nH,iBACrB,IAAMlqD,QAAU9B,mBAAmB77D,MAAM5e,OAAOmS,QAC1C2rE,SAAUl/D,MAAM5e,OAAOumI,SACzBhqD,QAAQ1uE,KAAK,SAAAvkB,GAAC,OAAIk8I,aAAal8I,EAAEC,MAAQD,GAAGqe,YAAYm2E,YAC5D,OAAOl/D,MAAM5e,OAAOumI,UAAYE,gBAAgBF,SAAWzoD,SAGzD4oD,gBAAkB3qC,SAASjhB,SAASC,YAAY5oE,QAChD2rE,UAAU4oD,iBAAkBA,gBAAgB/+H,YAAYm2E,UAC1DtrE,YACAjC,gBACA4B,cACAzS,SAAU0Q,gBACVqI,gBAAiBqlE,QACjBwoD,wDACAC,gBACA91H,SAAUqtE,QAAUyoD,QAAU91H,SAC9B/P,kBACAimI,QAAS,SAAAA,QAACC,SAAU9lD,UAAX,OAAyB3uE,SAAW0zH,sBACzCe,SAASr2H,QAAQo1H,eAAiB7kD,SAASj4D,QAAQ+8G,gBAG3Dv4H,UAAU4wE,UAAU7tE,gBAAiBoC,YAAY,GAE7CL,SAAW0zH,uBACXrzH,YACIjC,gBACAE,SAAUgI,gBAAkB8tH,QAAU91H,SACtC/Q,SAAU0Q,gBACVqI,gCACA6tH,wDACAn0H,OAAQ0zH,qBACRU,gBACAM,cAAe10H,SAAW0zH,qBAC1Bc,QAAS,SAAAA,QAACC,SAAU9lD,UAAX,OAAwB8lD,SAASr2H,QAAQo1H,eAAiB7kD,SAASj4D,QAAQ+8G,eACpFllI,mBAGJ2M,UAAU4wE,UAAU7tE,gBAAiBoC,YAAY,GAC7Cs0H,sBAAuB,SAAAA,sBAACC,UAAWC,SAAZ,OAAwBD,UAAUR,UAAYS,QAAQT,qlDC3GpEU,0CACjB,SAAAA,eAAwB,IAAA11C,iBAAA/+F,iKAAA00I,CAAAn2I,KAAAk2I,cAAA,QAAAnyE,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,kLAAA20I,CAAAp2I,MAAAwgG,iBAAA61C,wBAAAH,eAAA99I,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,UACTo8D,yBAAkBkrE,8DAAA70I,SAFEA,gYADcgoF,qTAM3B8C,UAAW/sE,QAAS6pE,aAAchB,aACzCisD,gCAAgBt0I,KAAMusF,WAClB/sE,gBACA6pE,0BACAhB,wBACAmsD,kBAAmBx0I,KAAKoqF,+FAIN/B,YAAa7oE,QAAS2vE,gBAC5C,IAAMr3D,QAAU93B,KAAK83B,QACfy+G,OAASz+G,QAAQ5D,KACjBsiH,UAAY1+G,QAAQ+8G,cACpB4B,wBAA0BtnD,eAAe6kD,aAAe7kD,eAAe6kD,YAAYY,aACnF8B,aAAevnD,eAAe6kD,aAAe7kD,eAAe6kD,YAAYW,WACxEgC,kBAAoB32I,KAAKqqF,mBACzBusD,oBAAsB52I,KAAKqoF,cAC3BwuD,gBAAiBH,cAAeA,eAAiBH,OAEjD/oD,sBAAwBhuE,QAAQ6oE,cAClCmD,QAAShsE,QAAQ6oE,YACjBqD,YAAalsE,QAAQ4B,UACpBinE,YAoBL,OAnBAmF,sBAAsBhuF,QAAQ,SAACjH,GAC3B,IAAIu+I,cAAgBv+I,EAAEizF,QACtBsrD,cAAgBA,cAAcz4H,OAAO,SAAC04H,IAElC,GADgBH,oBAAoBG,GAAGv+I,MAAQu+I,IAAIngI,YAAYm2E,YACb,IAAnCoC,eAAeznE,gBAC1B,OAAO,EAEX,IAAKmvH,gBAAuC,OAArBr3H,QAAQ7Q,SAAmB,CAC9C,IAAMqoI,kBAAoBL,kBAAkBI,GAAGv+I,MAAQu+I,IACvD,OAAOC,mBAAoBA,kBAAkB7nD,eAAe6kD,YAAal8G,SAE7E,OAAI2+G,0BAA4BD,YAAaK,iBACb,IAArBE,GAAGjB,gBAKlBv9I,EAAEizF,QAAUsrD,gBAETtpD,4FAGaN,WACpB,OAAqB,IAAdA,kFAGe,IAAA13E,OAAAxV,KACtB,OAAO,SAACM,KAAM2O,QACV,IAAI2hF,sBAAuB,EACvBlpE,iBAAkB,EAChBssH,YAAc/kI,OAAOuQ,QACrBC,kBAAoBxQ,OAAOwQ,kBAC3Bw3H,UAAYhoI,OAAO2mI,QACnBx0H,OAASnS,OAAOmS,OAChB81H,UAAYrD,iBAAiBzyH,SAAWyyH,iBAAiBQ,UAE/D,GAAI50H,kBAAmB,CACnB,IAAMjD,aAAeiD,kBAAkBhD,kBACjC06H,uBAAyBx+I,OAAO6O,KAAKgV,cACrCu4H,WAAap8I,OAAO6O,KAAKlH,KAAK,GAAGmc,mBAClC9jB,OAAOgkB,OAAOH,cAAcM,KAAK,SAAAvkB,GAAC,OAAIA,EAAEskB,IAAI9hB,OAAS6D,yBAAUC,YAChE+xF,qBAAuBumD,uBAAuBr6H,KAAK,SAAAvkB,GAAC,OAA+B,IAA3Bw8I,WAAWptI,QAAQpP,MAInF,IAAMinB,QAAU03H,UAAU1hI,OAAKsiB,QAASx3B,KAAM2O,QACxCmoI,iBAAmB5hI,OAAKg1E,kBACxB76E,SAAWynI,iBAAiBh2H,SAAWg2H,iBAAiB,KAC1DxB,SAAU,EAUd,GARIjmI,WACAimI,QAAUjmI,SAASqkI,gBAAmBx+H,OAAKsiB,UAG3Cm/G,YACArB,QAAUqB,UAAUhoI,OAAQuG,UAAqB,IAAZogI,SAGrCA,QAAS,CACT,IAAMpqD,QAAUh2E,OAAKm1E,oBAAoBvpE,QACnCw1H,oBAAsBphI,OAAK6yE,cACjC3gE,gBAAkBzY,OAAOumI,QACrBhqD,QAAQ1uE,KAAK,SAAAvkB,GAAC,OAAIq+I,oBAAoBr+I,EAAEC,MAAQD,GAAGqe,YAAYm2E,YAAa99E,OAAOyY,gBAEvF,IAAMynE,gBACFjC,WAAW,EACX5sF,UACA0zI,wBACAv0H,oCACA43H,YAAY,EACZzmD,0CACAlxE,SAAUzQ,OAAO0Q,oBACjB+H,gBAAiBzY,OAAOyY,iBAG5BlS,OAAKq1E,eAAezpE,SAChB5B,gBACA2vE,8BACAznE,iCAEJlS,OAAK04E,kBAAkB9sE,OAAQ5B,QAAS2vE,oFAK9BzD,YAClB,IAAMprF,KAAON,KAAK83B,QAAQx3B,OAI1B,OAHIA,MACAN,KAAKszI,mBAAmBhzI,KAAKC,UAAUikB,KAAMknE,YAE1C1rF,2EAOP,OAHIA,KAAK83B,QAAQx3B,QACbg3I,aAAAjB,wBAAAH,aAAAn8I,WAAA,wBAAAiG,MAAA5H,KAAA4H,MAEGA,6CAKP,OADAA,KAAK83B,QAAQm4G,aAAa,GAAGliD,YAAY,eAClC/tF,uuDClGf,IAYqBu3I,kCAQjB,SAAAA,WAAatxC,SAAU9qG,cAAc,IAAAsG,MAAAzB,+JAAAw3I,CAAAx3I,KAAAu3I,YACjCv3I,KAAKw/E,IAAM/zE,cACXzL,KAAKqxG,cAAgBl2G,aACrB6E,KAAKktI,YACDljB,UAAW,IAAIniD,mBAAJ4vE,8BACN/qF,aAAYE,eAAgB,IAEjC5xB,WAAY7/B,aAAa6/B,WACzB08G,iBAAkBv8I,aAAau8I,kBAEnC13I,KAAKmuI,iBAAmB,KACxBnuI,KAAKkuI,iBAAmB,IAAIlsD,QAAQ,SAAC57D,SACjC3kB,MAAK0sI,iBAAmB/nH,UAE5B6nH,oBAAoBjuI,MACpBA,KAAKktI,WAAWljB,UAAUF,wBAAwBp9D,aAAYE,eAAgB,WAC1EnrD,MAAK0sI,mBACL1sI,MAAK0vI,kBAAkBC,QAASrrD,OAAQtkF,MAAKg0F,SAAUr0E,OAAQ,QAAS0kE,WAAY,YAGxF9lF,KAAKmxI,kBAAoBh2I,aAAau8I,iBACtC13I,KAAK8lG,cACL9lG,KAAK23I,uBACL33I,KAAK43I,uBACL53I,KAAKovI,cACLpvI,KAAKqvI,cACLrvI,KAAK63I,oBACL73I,KAAK4wI,mBACL5wI,KAAK83I,0BACLnb,kBAAaG,iBAAiB72B,SAASpB,eACvCz7B,sBAAsBppE,KAAM6wG,iBAC5B7wG,KAAKimG,SAASA,UACdjmG,KAAKiwI,6SAiBL,GAAInpI,UAAOxH,OAAQ,CACfU,KAAKirH,OAALnkH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACA,IAAMk/F,QAAUhmG,KAAKgmG,UACrBhmG,KAAK+J,QAAQqmB,OAAb,GAAAnkB,OAAuBm6F,0BAAiBn6C,sBAAxCwrF,8BAAA,GAAAxrI,OACQ+5F,QAAQt+B,WAAc,OAE9B,IAAMwjD,QAAO,GAAAj/G,OAAMm6F,0BAAiBn6C,qBAAvB,KAAAhgD,OAA+C+5F,QAAQt+B,WAgBpE,OAfAW,wBAAWroE,KAAM+3I,kBAAc/3I,KAAK+J,QAAQ8R,OACxC6rD,UAAWwjD,UAEf9/C,+BAAkBprE,KAAMqrE,8BACpBI,MAAOy/C,QACPM,OAAQplB,0BAAiBp6C,wBAEzBu4E,SAAUv+B,QAAQu+B,SAClB6I,SAAUpnC,QAAQonC,WAEtBptI,KAAK+vF,SAAS,IAAImmD,sBAAal2I,MAC3BiqF,SAAU2E,gBACV5E,YAAaoE,4BACbjD,uBAAwByC,oBACzBvF,6BAAaqB,0CACT1pF,KAEX,OAAOA,KAAKirH,mDAyBZ,OAAInkH,UAASxH,QACTU,KAAKg4I,UAALlxI,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKg4I,0CAUZ,OAAOh4I,KAAKw/E,kDAKZ,OADAx/E,KAAKirH,OAAOpvG,MAAM8oH,OACX3kI,uDAKP,OADAA,KAAKirH,OAAOpvG,MAAM+oH,SACX5kI,iEAIP,OAAI8G,UAAOxH,OACAU,KAEJA,KAAKsxI,wDAQRn9G,WACJ,IAAMllB,OAASjP,KAAKiP,SACZotB,UAA8DptB,OAA9DotB,UAAW65D,aAAmDjnF,OAAnDinF,aAAc25C,oBAAqC5gI,OAArC4gI,oBAAqB15C,YAAgBlnF,OAAhBknF,YAChDmI,mBAAqB33B,sBAAsBuvB,aAAcl2F,KAAKk0B,KAAMjlB,OAAOknF,aAC3El/D,MAAQj3B,KAAKi3B,QACbC,OAASl3B,KAAKk3B,SACd43F,mBAAqBxsC,6BAAcnuD,WAAWgB,MAAM,WAAY,YAEtEn1B,KAAKi4I,SAAWz1D,YAAYssC,mBAAoB,OAAQ,MAAOzyF,WAC9ClH,MAAM,QADP,GAAAlpB,OACmBgrB,MADnB,OAC8B9B,MAAM,SADpC,GAAAlpB,OACiDirB,OADjD,OAGhB,IAAMlL,KAAOhsB,KAAKi4I,SAASjsH,OAC3Bs3D,wBAASt3D,MACLiL,YACAC,cACAghH,MAAO55C,mBAAmBx5F,KAAK,OVJP,SAAvBqzI,qBAAwBrgH,QAAS3D,WAC1C,IACMgiE,YADSr+D,QAAQ7oB,SACIknF,YACrBw4C,UAAY72G,QAAQs3G,WACpBR,UAAY92G,QAAQu3G,WAEpB+I,oBAAsB51D,YAAYruD,UAAW,KAAM,GAAlB,GAAAloB,OAAyBkqF,YAAzB,KAAAlqF,ODrNV,wBCsN3B0iI,UAAD,GAAA1iI,OAAekqF,YAAf,KAAAlqF,ODxNuC,gBCyN/B2iI,UAAD,GAAA3iI,OAAekqF,YAAf,KAAAlqF,ODxNgC,gBCwN+BzM,QAAQ,SAACquB,OAAU,IAAAwqH,OAAAC,yBACxCzqH,MADwC,GACvEy3E,UADuE+yC,OAAA,GAC5DE,iBAD4DF,OAAA,GAExE5mH,WAAa+wD,YAAY41D,oBAAqB,KAAM,GAA5B,IAAAnsI,OAAoCssI,mBAC5Dl8G,UAAS,GAAApwB,OAAMssI,iBAAN,UACf/1D,YAAY/wD,WAAY,IAAK6zE,UAAlB,IAAAr5F,OAAiCowB,YACxCvL,OAAQ,SAAAA,OAACqqB,MAAO6vD,UACZA,SAAS0c,WAAYnsB,UAAWzjE,QAAQw1G,aAAcp+G,MAAMisB,MAAMnvB,aURlFmsH,CAAqBn4I,KAAMgsB,MZkCP,SAAfwsH,aAAgB1gH,QAAS3D,UAAWshE,OAAQiE,aACrD5hE,QAAQq5G,kBAAkBC,QAASrrD,OAAQ0P,OAAQr0E,OAAQ,aAAc0kE,WAAY,UACrF,IACMqQ,YADSr+D,QAAQ7oB,SACIknF,YACrBsiD,cAAgB3gH,QAAQ29D,SAASjkF,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAE4U,SAASkV,MAAQhf,EAAE8J,SAASkV,QAC9Eu0H,iBAAmBl2D,YAAYruD,UAAW,KAAM,GAAlB,GAAAloB,OAAyBkqF,YAAzB,iBAC9BwiD,cAAgB5xE,mBAAmBjvC,QAAQ8gH,gBAC3C5jE,UACNwN,YAAYk2D,iBAAkB,IAAKD,cAAe,MAC9C3nH,OAAQ,SAAAA,OAACqqB,MAAOu6C,OACZ1gB,OAAO0gB,MAAMo1B,UACT3vE,YACAu6C,gBAIKijD,cAAcrvI,IAAI,SAAA9Q,MAAI,OAAIw8E,OAAOx8E,QACzCgH,QAAQ,SAAC9G,GACd,IAAMg9F,MAAQh9F,EAAEg9F,MACVv6C,MAAQziD,EAAEyiD,MAChBu6C,MAAMgE,YAAYA,aAClBhE,MAAMgyB,WACFnsB,UAAWzjE,QAAQw1G,cAEG,IAA1B53C,MAAMzmF,SAAS2vF,QAAoBlJ,MAAMxmE,MAAMisB,MAAMnvB,UYzDrDwsH,CAAax4I,KAAMgsB,KAAMhsB,KAAKy1F,UAC1Bx+D,YACAC,gBAEJl3B,KAAK64I,iBZwGwB,SAAxBC,sBAAyB3kH,UAAWkI,WAAZ,OAA0BmmD,YAAYruD,UAAW,KAAM,GAAIkI,WAAWrQ,OYxG3E8sH,CAAsB9sH,KAAD,GAAA/f,OAAUkqF,YAAV,KAAAlqF,OAAyB4jI,sBACtE,IAAM9/C,SAAW/vF,KAAK+vF,WAEtB,OJ7NuB,SAAlBgpD,gBAAmB1wD,YAAa0H,UACzC,IAAK,IAAMv2F,OAAO6uF,iBACPruF,eAAe5B,KAAKiwF,YAAa7uF,MACpC6uF,YAAY7uF,eAAgBq8F,+BAAuBxN,YAAY7uF,KAAK+8F,eAAe,WAE/E,OADgBxG,SAASj4D,QACVi8D,sBIuNvBglD,CAAgBhpD,SAAS1H,cAAe0H,UACjC/vF,yCAIP,OAAOA,KAAKkuI,uEAaZ,OADAluI,KAAK+3B,QAAS,EACP/3B,yDAaP,OAFAA,KAAK+3B,QAAS,EACd/3B,KAAKiwI,YAAYjwI,KAAKiwI,aAAa,KAC5BjwI,mEAwBP,IAAMg5I,QAAUh5I,KAAKi4I,UAAYj4I,KAAKi4I,SAASjsH,OACzCiL,MAAQj3B,KAAKi3B,QACbC,OAASl3B,KAAKk3B,SAHH+hH,sBAIUj5I,KAAKk5I,qBAAxBv7C,GAJSs7C,sBAITt7C,GAAI53E,WAJKkzH,sBAILlzH,WACZ,OACI83E,cAAe79F,KAAKkvB,QACpBolE,aAAc0kD,QACd/hH,YACAC,cACA8+D,gBAAiBh2F,KAAK64I,iBACtBzjH,gBAAiBuoE,GACjBqE,0BAA2Bj8E,WAC3Bu9E,QAAS,EACTwH,QAAS,iDAUb,OACIrV,OAAQz1F,KAAKy1F,SAASnsF,IAAI,SAAAosF,OAAK,OAAIA,MAAM5tB,cACzC74D,OAAQjP,KAAKiP,SACbijF,KAAMlyF,KAAKkyF,OAAO5oF,IAAI,SAAA6jD,MAAI,OAAIA,KAAK2a,qDAKvC,OAAIhhE,UAAMxH,QACNU,KAAKu9F,OAALz2F,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACA9G,KAAK4+F,OAAL93F,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACA9G,KAAK+vF,WAAWjC,yBACT9tF,MAEJA,KAAKu9F,iDAyBN47C,iBAAiB,IAAA/2H,MAAAf,MAAA7L,OAAAxV,KACjBo5I,iBAAmBzL,wBAAiBn9G,QAAQ2oH,kBAE5CnI,UAAYhxI,KAAK8lG,WACjBmrC,WACAlnI,OACF0rF,UACA4jD,YACIh4I,KAAMrB,OAGVs5I,WAAa,EACbC,YAAan3H,UAAGnW,OAAHnL,MAAAshB,MAAAo3H,8BAAa7gJ,OAAOgkB,OAAO3c,KAAK8lG,cAAaxmG,OACxD0mG,QAAUhmG,KAAKgmG,UACfr2E,MAAQ3vB,KAAK63I,iBACbpiD,OAAS2jD,iBAAiB5nI,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAE8pB,MAAQhf,EAAEgf,QAAOnR,OAAO,SAACymI,UAAW30C,UAAa,IAAA40C,WACxFj0G,WAAaq/D,SAASjoF,IACtB88H,OAASl0G,WAAWjtC,KACpBohJ,OAASppH,QAAQiV,YACjB6qC,cACNspE,OAAOp6I,QAAQ,SAACqd,KACZA,IAAIsH,MAAQ2gF,SAAS3gF,MAAQm1H,WAC7B,IAAM5xE,UAAS,GAAAz7D,OAAM+5F,QAAQt+B,WAAdz7D,OAA0BstI,YACpCvI,UAAU2I,UACXJ,cACmC,IAA/B9zG,WAAW+/D,kBACX71E,MAAK,GAAA1jB,OAAIm6F,0BAAiBj6C,uBAArB,KAAAlgD,OPlWP,SOkWO,KAAAA,OAAyDy7D,aAAe,IAGrF4I,WAAW9uE,KAAKkmE,aAEpB4xE,YAAcM,OAAOt6I,OACrB,IAAMgmG,UAAY0nC,uBAAgBx3H,OAAMiwB,WAAYurG,UAAU2I,QAASrpE,YACvEvmE,MAAM0rF,OAAS98F,OAAOmgB,OAAO/O,MAAM0rF,OAAQ6P,WAC3C,IAAMu0C,eAAiBlhJ,OAAOgkB,OAAO2oF,WAIrC,OAHAm0C,WAAYC,WAAAD,WAAUxtI,OAAVnL,MAAA44I,WAAAF,8BAAoBK,iBAChC7I,UAAU2I,QAAUE,eACpB5I,QAAQ0I,QAAUA,OACXF,eAGX1vI,MAAM1I,KAAOrB,KACb,IAAM85I,aACAL,WAAYp4H,UAAGpV,OAAHnL,MAAAugB,MAAAm4H,8BAAa7gJ,OAAOgkB,OAAO3c,KAAK8lG,cAElD2zC,UAAUj6I,QAAQ,SAACk2F,OACf,IAAMo1B,MAAQp1B,MAAMo1B,QACpB/gH,MAAM0rF,OAAOq1B,OAASp1B,MACtBokD,UAAUhvB,YAEdr1B,OAAOj2F,QAAQ,SAACk2F,OACZ,IAAMg4C,OAASH,yBAAyB73C,MAAO3rF,OAC/C+vI,UAAUpkD,MAAMo1B,SAAW4iB,SAG/B1tI,KAAK44I,eAAiBkB,UACtB95I,KAAK4wI,gBAAkBj4I,OAAOmgB,OAAO9Y,KAAK4wI,gBZtMjB,SAApBmJ,kBAAqBtkD,OAAQzrF,QACtC,IAAMsmI,kBAgBN,OAfA76C,OAAOj2F,QAAQ,SAACk2F,OAAU,IAAAskD,cACKtkD,MAAMzmF,SAAzBk+C,KADc6sF,cACd7sF,KAAMg4C,SADQ60C,cACR70C,SACRjxE,GAAKwhE,MAAMxhE,MAChB,IAAK,KAAK10B,QAAQ,SAACzE,MAChB,IAAIiJ,MACE+I,MAAQ+5D,aAAac,WAAWza,KAAMpyD,MAAOoqG,SAASpqG,OAASoqG,SAASpqG,MAAMgS,OAEhF/I,MADAgG,OAAOjP,MACCiP,OAAOjP,MAAM0oB,UAAU,SAAA4/E,WAAS,OAA+C,IAA3CA,UAAU9Q,aAAa5qF,QAAQoF,SAEnE,GAEXujI,eAAep8G,MAAQo8G,eAAep8G,QACvCo8G,eAAep8G,IAAIn5B,MAAQiJ,UAG5BssI,eYqLwDyJ,CAAkBtkD,OAAQz1F,KAAKgK,WAC1F,IAAMiwI,WAAaj6I,KAAK+J,QAYxB,OAVAkwI,WAAWlsD,aACPv0F,IAAK,0BACLkuE,UAAS,GAAAz7D,OAAKm6F,0BAAiBn6C,qBAAtB,KAAAhgD,OAA8C+5F,QAAQt+B,aAEnEuyE,WAAW9zC,0BAA0BxtG,OAAO6O,KAAKmoB,OAAQygH,qCAAwBpwI,KAAMgmG,QAAQt+B,YAC3F,GACIluE,IAAK,0BACLkuE,UAAS,GAAAz7D,OAAKm6F,0BAAiBn6C,qBAAtB,KAAAhgD,OAA8C+5F,QAAQt+B,aAEvE1nE,KAAKy1F,OAAOgkD,WACLhkD,+CAUP,IAAMiiD,iBAAmB13I,KAAKqxG,cAAcqmC,iBAY5C,OAXAA,iBAAiBtG,QAASrrD,OAAQ/lF,KAAMohB,OAAQ,eAAgB0kE,WAAY,SAC5E9lF,KAAK+J,QAAQgkF,aACTrmB,UAAS,GAAAz7D,OAAKm6F,0BAAiBn6C,qBAAtB,KAAAhgD,OAA8CjM,KAAKgmG,UAAUt+B,aAE1E4a,6BAActiF,KAAKkvB,SAAS0T,SAC5B5iC,KAAK+vF,WAAWntD,SAEhB80G,iBAAiBtG,QAASrrD,OAAQ/lF,KAAKy1F,SAAUr0E,OAAQ,eAAgB0kE,WAAY,UACrF9lF,KAAKy1F,SAASj2F,QAAQ,SAAAk2F,OAAK,OAAIA,MAAM9yD,WACrC80G,iBAAiBtG,QAASrrD,OAAQ/lF,KAAKy1F,SAAUr0E,OAAQ,UAAW0kE,WAAY,UAChF4xD,iBAAiBtG,QAASrrD,OAAQ/lF,KAAMohB,OAAQ,UAAW0kE,WAAY,SAChE9lF,qFAUkB+gB,YAAa3nB,KAAM8gJ,aAC5C,GAAoB,OAAhBn5H,YACA,OAAO,KAEX,IAAMzE,UAAY49H,aAAel6I,KAAKM,OACtC,OAAOyqE,yCAA4BzuD,UAAWyE,YAAa3nB,oDAY3D,OADA4G,KAAKM,KAAKN,KAAKiwI,aAAa,IACrBjwI,2DAUP,OACIo7F,oBAAqBp7F,KAAK2yI,qBAC1B3oI,OAAQhK,KAAKgK,SACb1J,KAAMN,KAAKM,OACX4xF,KAAMlyF,KAAKkyF,sFAUU,IAAA8Q,aACahjG,KAAKiP,SAAnCknF,YADiB6M,aACjB7M,YAAaD,aADI8M,aACJ9M,aACrB,OAAO,IAAAjqF,OAAKkqF,YAAL,KAAAlqF,OAAoBiqF,uEAYdn7F,MAEb,OADe+yI,YAAY9tI,KAAKy1F,SAAU,OAAQ16F,4DAatCvC,MAEZ,OADes1I,YAAY9tI,KAAKy1F,SAAU,OAAQj9F,MACpC,2DA2BD4b,EAAG7O,EAAG0J,QACnB,IAAIm9G,UACAl4F,GAAI,MAEFimH,SZxQ4B,SAA7BC,2BAA8BtiH,QAAS+F,UAChD,IAAM7zB,OAAS8tB,QAAQ9tB,SACvB,IAAKA,OAAOoK,EAAE9U,SAAW0K,OAAOzE,EAAEjG,OAC9B,OAAO,KAEX,IAAMgB,KAAOw3B,QAAQx3B,OACf4xF,KAAOp6D,QAAQo6D,OACf11E,aAAelc,KAAKmc,kBACpB61E,OAAS1qB,WAAW59D,OAAQ,IAAK,GAAGuoF,aAAa,GACjDC,OAAS5qB,WAAW59D,OAAQ,IAAK,GAAGuoF,aAAa,GACjDE,WAAaj2E,aAAa81E,QAAQz1E,IAAI/E,QACtC46E,WAAal2E,aAAag2E,QAAQ31E,IAAI/E,QAEtCuiI,WAAa,IAAK5nD,WAAYH,SAAU,IAAKI,WAAYF,SAAS5qE,KAAK,SAAAiG,OAAK,OAC9EA,MAAM,KAAOvvB,gCAAiBC,aAAesvB,MAAM,KAAOvvB,gCAAiBE,WAE/E,IAAK67I,UAAa5nD,aAAe/zF,8BAAeq0F,YAAcL,aAAeh0F,8BAAeq0F,WACxF,OAAO,KAEX,IAAMhmF,MAAQstI,SAAS,GACjBr2I,MAAQwY,aAAazP,OAAO/I,MAC9BxK,IAAM04F,KAAKmoD,SAAS,IAAI,GAAGn1G,OAAOrH,SAASw8G,SAAS,KACxD,GAAIA,SAAS,KAAO/7I,gCAAiBE,SAAU,CAC3C,IAAM68H,WAAa2X,6BAAI,IAAIryI,IAAIL,KAAKC,UAAUD,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEyL,WAC9DxK,IAAM6hI,WAAWp2F,+BAAkBo2F,WAAY7hI,MAGnD,YAAeg6B,IAARh6B,MAAsBuT,QAASvT,MAAQ,KY6OzB4gJ,CAA2Bp6I,MACxCoU,IACA7O,MAGJ,GAAiB,OAAb40I,UAAqBlrI,OAAOwlF,aAAc,CAC1C23B,SAASl4F,GAAKimH,SACd,IAAMG,SAAWt6I,KAAKu6I,qBAAqBnmI,EAAG7O,EAAG0J,QAEjD,OADAm9G,SAASvzE,OAASyhG,UAAYA,SAASpmH,GAAKomH,SAASpmH,GAAKk4F,SAASl4F,GAC5Dk4F,SAGX,IAAMouB,QAAUx6I,KAAKu6I,qBAAqBnmI,EAAG7O,EAAG0J,UAAailB,GAAI,MAIjE,OAHAk4F,SAAWzzH,OAAOmgB,UAAW0hI,UAEpB3hG,OAAS2hG,QAAQtmH,GACnBk4F,2EAGWh4G,EAAG7O,EAAGiD,MAMxB,IALA,IAAMitF,OAASz1F,KAAKy1F,SACdrpF,IAAMqpF,OAAOn2F,OACfw0D,MAAQ,KAGH77D,EAAI,EAAGA,EAAImU,IAAKnU,IAAK,CAC1B,IAAMy9F,MAAQD,OAAOx9F,GAKrB,IAH2B,IADZy9F,MAAMzmF,SACV0mF,cACP7hC,MAAQ4hC,MAAMlB,gBAAgBpgF,EAAG7O,EAAGiD,OAEpCsrD,MACA,OAAOA,MAGf,OAAOA,wFAsDmB/yC,aAA0B,IAAb9R,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAChDipE,UACA0qE,kBAAoB15H,YACxB,GAAoB,OAAhBA,YACA,SAEJ,IAAM00E,OAASz1F,KAAKy1F,SACdrpF,IAAMqpF,OAAOn2F,OACfqrB,eAAe5J,eACf05H,mBAAqB9hJ,OAAO6O,KAAKuZ,cACjC05H,qBAAiBxuI,OAAAutI,8BAAOiB,mBAAPjB,8BjPmrBN,SAAjBkB,eAAiB7uI,KAAG,OAAIA,IAAI,GAAGvC,IAAI,SAACqhE,IAAK1yE,GAAN,OAAY4T,IAAIvC,IAAI,SAAAkR,KAAG,OAAIA,IAAIviB,OiPnrBdyiJ,CAAe/hJ,OAAOgkB,OAAOoE,iBAE/E,IAAK,IAAI9oB,EAAI,EAAGA,EAAImU,IAAKnU,IAAK,CAC1B,IAAMy9F,MAAQD,OAAOx9F,IACc,IAA/By9F,MAAMzmF,SAAS0mF,cACf5lB,UAAM9jE,OAAAutI,8BAAOzpE,QAAPypE,8BAAkB9jD,MAAMilD,yBAAyBF,kBAAmBxrI,WAGlF,OAAO8gE,mEAWQv3E,MAEf,OADAw1I,eAAe,OAAQx1I,MAChBwH,mEAWSjF,MAEhB,OADAizI,eAAe,OAAQjzI,MAChBiF,uDAlkBP,MAxDY,mDA4DZ,QAEQU,WAEJq3I,2DAyCkB,QAAAh0E,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MACtB,OAAA42E,sBAAW56I,KAAQgP,mkCC1I3B,IAAM6rI,cAAgB,SAAhBA,cAAiBC,SAAD,OAA4BA,QAA5Bh0I,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,OAA8CwC,IAAI,SAAAU,QAAM,OAAIA,OAAOgJ,OAAO,SAACC,IAAK1a,GAElG,OADA0a,OAAGhH,OAAA8uI,+BAAO9nI,KAAP8nI,+BAAexiJ,EAAEg6F,uBAYlByoD,wBAA0B,SAA1BA,wBAA2B3sI,UAAW+W,WAAY81E,aAAxB,OAC5B7sF,UAAU4O,OAAO,SAAAjT,QAAM,OAAIob,WAAW3Q,MAAM,SAAC1H,MAAOb,GAAR,OAAclC,OAAO+C,OAAO7T,QAAUgiG,YAAYhvF,QAS5F+uI,gCAAqB,SAArBA,mBAAsBC,SAAUpjH,SAAiC,IAAxBsL,MAAwBt8B,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAAhB,EAAG1G,IAAa0G,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAE/D++H,OAGA/tG,QAHA+tG,OACAvpH,UAEAwb,QAFAxb,UACAqiG,aACA7mF,QADA6mF,aAIJ,GAAIknB,OAAOziG,MAAQ,GAAI,CACnB,IAAMr2B,MAAQ84H,OAAOziG,OACrBu7E,aAAan/G,QAAQ,SAACtG,OAClB,IAAMiiJ,MAAQ7+H,UAAUW,OAAO,SAAAjT,QAAM,OAAIA,OAAO+C,OAAO7T,QAAUA,QAC3DkiJ,sBAAwBrU,sBAAsBoU,MAAOtV,OAAOziG,MAAQ,IAO1E63G,mBAAmBC,UALfrV,cACAvpH,UAAW6+H,MACXx8B,aAAcy8B,uBAGuBh4G,MAAQ,KAA/Bn3B,OAAA8uI,+BAAsC36I,MAAKlH,gBAGjEylH,aAAan/G,QAAQ,SAACtG,OAClBgiJ,SAAS15I,QAATyK,OAAA8uI,+BAAkB36I,MAAKlH,YAW7BmiJ,YAAc,SAAdA,YAAehtI,UAAW+1H,aAAgB,IAExCkX,qBAGAlX,YAHAkX,qBACAC,eAEAnX,YAFAmX,eACAC,oBACApX,YADAoX,oBAGJ,OAAID,eAAej8I,OAAS,EACjBi8I,eAAejyI,IAAI,SAACmyI,eAAkB,IAAAC,gBAAAC,2BACGd,cAAcY,cAAeH,sBADhC,GAClCM,eADkCF,gBAAA,GAClBG,kBADkBH,gBAAA,GAEzC,OAAOrtI,UAAU2R,WAAV/T,OAAA8uI,+BAAsBa,gBAAtBb,+BAAyCc,mBAAzCd,+BAA+DS,0BAGtEntI,YASNytI,aAAe,SAAfA,aAAgBhkH,QAASz4B,UAAa,IAAA08I,iBACpCn/E,SAEAllB,OAIA5f,QAJA4f,OACArpC,UAGAypB,QAHAzpB,UACA2tI,UAEAlkH,QAFAkkH,UACA90B,UACApvF,QADAovF,UAIAq0B,eAGAr0B,UAHAq0B,eACAU,eAEA/0B,UAFA+0B,eACAT,oBACAt0B,UADAs0B,oBAGAjX,SAEAyX,UAFAzX,SACAC,YACAwX,UADAxX,YAEE0X,QAAUX,eAAgBhX,SAAYgX,eAAej8I,YAIvD28I,eAAe38I,OAAS,EACxBs9D,MAAQq/E,eAAe3yI,IAAI,SAACmyI,cAAeU,SAAY,IAAAC,gBAAAT,2BACJd,cAAcY,cAAeS,SADzB,GAC5CL,kBAD4CO,gBAAA,GACzBC,kBADyBD,gBAAA,GAE7CE,YAAcjuI,UAAU2R,WAAV/T,OAAA8uI,+BAAsBc,mBAAtBd,+BAA4CsB,mBAA5CtB,+BAAkES,uBAChFpX,aAAgBC,UAAW6X,QAAS5X,aAAcmX,eAClDh6C,SAAY8iC,kBAAUC,YAAaA,YAAcyX,eAAe38I,OAAS68I,SAE/E,OAAO98I,SAASi9I,aAAelY,wBAAa3iC,iBAAWu6C,aAM3Dp/E,OAASv9D,SAASgP,WAAa+1H,aAHTC,UAAW6X,QAAS5X,iBAGE7iC,SAF1B8iC,kBAAUC,0BAE2BwX,YAG3DtkG,OAAO6sF,UAAY7sF,OAAO6sF,eAC1BwX,iBAAArkG,OAAO6sF,WAAU/iI,KAAjBV,MAAAi7I,iBAAAhB,+BAAyBn+E,kjCC/G7B,IAoBa2/E,8BAAmB,SAAnBA,iBAAoBzkH,QAASzpB,UAAW64G,UAAW2e,QAAW,IAEnEzB,YAEAld,UAFAkd,YACA3iC,QACAylB,UADAzlB,QAGA4iC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAGCC,SAED9iC,QAFC8iC,SACAC,YACD/iC,QADC+iC,YAGDgY,eAMA1kH,QANA0kH,eACMC,SAKN3kH,QALA+lC,KACAhxC,SAIAiL,QAJAjL,SACA5d,OAGA6oB,QAHA7oB,OACAk8H,QAEArzG,QAFAqzG,QACA9vC,aACAvjE,QADAujE,aAEEnJ,KAAOrlE,SAASqlE,OAChBkxC,UAAYv2G,SAASu2G,YACrBsZ,aAAe7vH,SAAS6vH,eACxBxxC,aAAer+E,SAAS1xB,eAAeu6B,WACvCinH,eAAiB9vH,SAAS8vH,iBAC1BC,aAAe/vH,SAAS+vH,eACxBC,mBAAqBhwH,SAASgwH,qBAEhCzS,aAEAhH,UAFAgH,aACAC,YACAjH,UADAiH,YAEEyS,eAAiB3R,QAAQ4R,gBAAiBzY,0BAAcD,qBAAamY,oBACrExZ,cAAiB/zH,cAAQi8F,0BAAchZ,UAAMkxC,qBAEnDlc,UAAU81B,kBAAoBJ,aAAa5yI,OAC3Ck9G,UAAU+1B,eAAiBN,eAAe3yI,OAE1C,IAAMi5H,UAAYkI,QAAQn6B,WAAWgyB,aAAc9b,WAEnDw1B,aAAanY,UAAYmY,aAAanY,UAAYmY,aAAanY,aAC/DmY,aAAanY,UAAUC,aAAesY,eAGtC,IAAMI,YhBFgB,SAAbC,WAAcxuB,MAAOyuB,UAAR,cAAAnxI,OAA6B0iH,MAA7B,KAAA1iH,OAAsCmxI,UgBExCD,CAAW5Y,SAAUC,aACnCx6H,QACFzE,EAAG8+H,UACHjwH,EAAGkwH,cAED+Y,cAAYpxI,OAAAqxI,+BACVzX,OAAO0X,UAAU,IADPD,+BACczX,OAAO2X,UAAU,QAD/BvxI,OAAAqxI,+BAEVzX,OAAO0X,UAAU,IAFPD,+BAEczX,OAAO2X,UAAU,MAE3CC,SAAYpT,YAAY53H,IAAIyqI,aAAgC7S,YAAYvxI,IAAIokJ,aAAjC,IAAIT,SAarD,OAXAgB,SAASn9I,KAAK+N,WACG6jF,KAAK+wC,WACLj5H,OAAOA,QACPmtC,UAAU0lG,oBACVxhD,aAAaA,cACb25C,cAAcqI,WAC/BjT,aAAa13H,IAAIwqI,YAAaO,UAC9BpT,YAAY30H,OAAOwnI,aAlFH,SAAdQ,YAAe7wH,SAAUg5G,OAAQ4X,WAClCnf,IAAKD,KAAK7+H,QAAQ,SAACuN,OAChB,IAAM6vD,MAAQ/vC,SAAQ,GAAA5gB,OAAIc,MAAJ,YAChB4wI,SAAW9X,OAAM,GAAA55H,OAAIc,MAAJ,WAAmB,GAAGjI,QAE5C83D,MAAM+gF,YAAc/gF,MAAM+gF,cAC3B/gF,MAAM+gF,UAAUn8I,KAAKi8I,UACrB5wH,SAAQ,GAAA5gB,OAAIc,MAAJ,UAAkB6vD,SA6E9B8gF,CAAY7wH,SAAUg5G,OAAQ4X,UAEvBrT,aAAatxI,IAAIokJ,cAatBU,6BAAkB,SAAlBA,gBAAmB7vF,UAAWmkC,KAAMkR,UAAWxmC,OAA7B,OACpBoN,6BAAgBjc,UAAW,SAAAZ,MAAI,OAAIA,MAAM+kC,KAAM,SAAC/mF,KAAMlT,GAAP,OAAaA,EAAIkT,KAAK6H,OAAO,SAAC7Y,EAAGT,GAE5E,OAAOS,GADIT,EAAEw6B,GAAKkvE,YAEnB,MAAK95F,IAAI,SAAC6jD,MACT,GAAIA,MAAQA,KAAKi2C,WAAY,CACzB,IAAMy6C,SAAW1wF,KAAKi2C,WADG06C,iBAEKD,SAAS5uI,SAA/BmwF,YAFiB0+C,iBAEjB1+C,YAAa7G,KAFIulD,iBAEJvlD,KAErB,OAAO,IAAI37B,MAAMmhF,UAAWn8H,OAAOi8H,UAAU5uI,QACzCs+F,SAAUnO,cAAgBiJ,iCAAgBL,MAAQ5I,cAAgBiJ,iCAAgBN,IAClFxP,YAGR,OAAO,IAAI37B,MAAMohF,WAAY/uI,QAASspF,MAAM,OAoE9C0lD,iCAAsB,SAAtBA,oBAAuBnmH,QAASomH,aAActhF,MAAOsuC,cAAiB,IAEpE/9C,KAIAr1B,QAJAq1B,KACA3lD,KAGAswB,QAHAtwB,KACAzM,KAEA+8B,QAFA/8B,KACAyrI,MACA1uG,QADA0uG,MAEEV,QAAU34E,KAAK7tD,OAASkI,KAAKlI,OAC7B6+I,cAAgB32I,KAAKlI,OAAS6tD,KAAK7jD,IAAI,SAAC/Q,EAAGN,GAAJ,OAAUuP,KAAK5G,KAAKgR,MAAM3Z,EAAI6tI,eAE3E,OAAO97D,6BAAgBk0E,aAAY,GAAAjyI,OAAIlR,KAAJ,YAAoB,SAAAqjJ,QAAM,OAAIA,QAAQD,cACrE,SAACC,OAAQnmJ,GAAT,SAAAgU,OAAkBmyI,OAAOt5I,KAAK,KAA9B,KAAAmH,OAAsChU,KACzBqR,IAAI,SAAA80I,QAAM,OAxBP,SAAlBC,gBAAmBtwF,UAAWv1C,QAASokD,MAAOsuC,cAA5B,OAA6ClhC,6BAAgBjc,UACjF,SAAAh7C,OAAK,OAAI,IAAI6pD,MAAM4tE,aAAet/B,4BAAgBtpF,OAAO7O,QAAQyF,QAAS,SAAChf,IAAKvB,GAAN,OAAYuB,IAAMvB,IAuB7DomJ,CAAgB,KAAMD,OAAQxhF,MAAOsuC,cACnC5hG,IAAI,SAACu0D,KAAM3xD,EAAGjU,GAAV,OAAgB4lE,KAAKj8C,OAAOw8H,OAAOnmJ,IAAIgX,OAAOu3H,YAajF8X,kCAAuB,SAAvBA,qBAAwBxmH,QAAS8kC,MAAOsuC,cAC1C,IAAIgzC,aAEAzS,SAMA3zG,QANA2zG,SACAzhI,OAKA8tB,QALA9tB,OACAu0I,qBAIAzmH,QAJAymH,qBACAxwF,UAGAj2B,QAHAi2B,UACAy4E,MAEA1uG,QAFA0uG,MACAgY,SACA1mH,QADA0mH,SAGAvkI,KAEAjQ,OAFAiQ,KACAjB,QACAhP,OADAgP,QAGAylI,aACAhT,SADAgT,aAGAlD,eAEAgD,qBAFAhD,eACAU,eACAsC,qBADAtC,eAGAyC,QAEAD,aAFAC,QACAC,WACAF,aADAE,WAEEC,aAAeJ,SAASnT,cAAcrJ,UACtC6c,eAAiBL,SAASnT,cAAcpJ,YAE9Cic,aAAenwF,eAEd,MAAOjT,EAAGn1C,GAAGnG,QAAQ,SAAC2tD,MACnB,IAAMg1E,SAAWh1E,OAASrS,EAAI8jG,aAAa/jI,OAAS+jI,aAAapkI,IACjE0jI,aAnHkB,SAApBY,kBAAqBhnH,QAASinH,OAAQniF,OAAU,IAK9CoiF,WAFAlnH,QADA2zG,SAGAuT,WAGJ,OAAO,SAACjkJ,KAAMonI,UACV,IAAMjwC,KAAO8sD,WAAU,GAAA/yI,OAAIlR,OAE3B,GAAIm3F,MAAQA,KAAK5yF,OACb,GAAIvE,OAAS+/C,GAAK//C,OAAS4K,EAAG,CAC1B,IAAMyf,WAAarqB,OAAS4K,EAAIw4H,KAAOC,SAEtCQ,QAASC,WAAWr/H,QAAQ,SAACgB,UAAWwD,OACrC,IAAMi7I,WAAU,GAAAhzI,OAAMmZ,YAANnZ,OAAmBzL,WAC/B4iG,UAAYp/F,MACZk7I,YAAchtD,KACdiwC,WAAal6B,iB9BAf,W8BAwBk6B,WACtB/+B,UAAY,EAAIA,WAEfx7B,WAAWsqB,KAAM,EAAGkR,aACrB87C,gBAEJH,OAAOE,YAAcrB,6BAAgBmB,OAAOE,YAAaC,YAAa97C,UAAWxmC,cAGrFmiF,OAAOI,YAAcvB,6BAAgBmB,OAAOK,SAAUltD,KAAK5oF,IAAI,sBAAW,EAAGszD,OAC7EmiF,OAAOM,eAAiBzB,6BAAgBmB,OAAOO,SAAUptD,KAAK,GAAI,EAAGt1B,OAG7E,OAAOmiF,QAmFQD,CAAkBhnH,QAASomH,aAActhF,MAAzCkiF,CAAgD3xF,KAAMg1E,YAhCd,IAAAod,cAwCvDrB,aAJAiB,YApCuDI,cAoCvDJ,YACAK,cArCuDD,cAqCvDC,cACAH,eAtCuDE,cAsCvDF,eACAI,iBAvCuDF,cAuCvDE,iBAGEjd,QAAU2c,aAAeA,YAAYO,aAAapgJ,OAAS6/I,YAAYO,aACxEF,eAAiBA,cAAcE,aAAapgJ,OAASkgJ,cAAcE,gBAClE/c,QAAU0c,gBAAkBA,eAAeK,aAAapgJ,OAAS+/I,eAAeK,aACjFD,kBAAoBA,iBAAiBC,aAAapgJ,OAASmgJ,iBAAiBC,gBA6CjF,QA1CM3kJ,KAAMitG,eAAM23C,QAAS1lI,KAAK,GAAIkzC,KAAMq1E,QAASI,WAAYic,eAAerkI,MACxEzf,KAAMktG,gBAAO03C,QAAS1lI,KAAK,GAAIkzC,KAAMq1E,QAASI,WAAYic,eAAerkI,MACzEzf,K9BtHS,M8BsHE4kJ,QAAS3mI,QAAQ,GAAIm0C,KAAMw1E,QAASC,WAAYic,eAAehkI,SAC1E9f,K9BnHY,S8BmHE4kJ,QAAS3mI,QAAQ,GAAIm0C,KAAMw1E,QAASC,WAAYic,eAAehkI,SAGtErb,QAAQ,SAACyP,OAAQjL,OAC1B,IAAIwD,KACAlI,OAEAvE,KAIAkU,OAJAlU,KACA4kJ,QAGA1wI,OAHA0wI,QACAxyF,KAEAl+C,OAFAk+C,KACAy1E,WACA3zH,OADA2zH,WAWJ,GARI5+H,MAAQ,GACRwD,KAAOk3I,QACPp/I,OAASi8I,eAAej8I,OAAS,EAAIi8I,eAAej8I,OAAS,IAE7DkI,KAAOm3I,WACPr/I,OAAS28I,eAAe38I,OAAS,EAAI28I,eAAe38I,OAAS,GAG7DqgJ,QAAQrgJ,QAAUsjI,aAAe7nI,MAAQoyD,MAAQ3lD,KAAKlI,OAAQ,CAC9D,IAAMsgJ,UAAazyF,UAAM7tD,cAAQvE,WAC7Byd,WACAxU,MAAQ,GACR47I,SAASp4I,KAAOA,KAChBo4I,SAASpZ,MAAQA,MAAMvsH,KACvBzB,QAAUylI,iCAAoB2B,SAAU1B,aAActhF,MAAOsuC,gBAE7D00C,SAASpZ,MAAQA,MAAMxtH,QACvB4mI,SAASp4I,KAAOA,KAAK,GAAG8B,IAAI,SAAC9P,IAAKvB,GAAN,OAAYuP,KAAK8B,IAAI,SAAAnP,GAAC,OAAIA,EAAElC,OAExDugB,QAAUylI,iCAAoB2B,SAAU1B,aAActhF,MAAOsuC,eAEjEgzC,aAAY,GAAAjyI,OAAIlR,KAAJ,YAAqByd,aAEjC0lI,aAAY,GAAAjyI,OAAIlR,KAAJ,YAAqB,OAGlCmjJ,cAmIE2B,6BAAkB,SAAlBA,gBAAmB/nH,QAAS7oB,QAAW,IAE5C4d,SAIAiL,QAJAjL,SACAxe,UAGAypB,QAHAzpB,UACAyxI,kBAEAhoH,QAFAgoH,kBACAtB,SACA1mH,QADA0mH,SAGIuB,aAGA9wI,OAHA8wI,aACAhyF,UAEA9+C,OAFA8+C,UACA5W,UACAloC,OADAkoC,UAEF/2B,QAAU2/H,aAAaC,YACT90C,aAAiBr+E,SAAS1xB,eAAtCu6B,WACFg6D,SAAWrhF,UAAUoO,kBACrB0sG,YAAct8F,SAASs8F,cACvBljB,SAAWp5E,SAASo5E,WACVg3C,eAAmBpwH,SAAS8vH,iBAApC3yI,OACQgzI,kBAAsBnwH,SAAS+vH,eAAvC5yI,OACFi2I,eAAiBpzH,SAAS2uH,oBAAoBvsI,OAAQk6G,aACtDo1B,qBAAuB1xH,SAAS7J,eAChCk9H,iBAGFlD,oCACAC,8BACAsB,0CACA9oD,OAAQ0zB,YACRz5B,kBACAuwD,8BACAzB,kBACAhY,MAAOuZ,aAAavZ,UACpBrE,SAAU4d,aAAa5d,aACvBp0E,qBAEE6O,OACF6/E,SAAU5vH,SAASszH,WAAWl6C,SAASw2C,UACvCsB,SAAUlxH,SAASszH,WAAWl6C,SAAS83C,UACvCC,UAAWnxH,SAASszH,WAAWl6C,SAAS+3C,WACxCxT,SAAU39G,SAASszH,WAAWl6C,SAASukC,WAErC4V,eAAiBvW,gCAAoBoT,gBACrCoD,kBAAoBxW,gCAAoBmT,mBAE9CnwH,SAASyzH,aACTzzH,SAAS0zH,aACT1zH,SAASgwH,mBAAmB1lG,eAG5BtqB,SAAS2zH,kBAjDuC,IAsD1CC,aACFpW,YAFAx9G,SAASu2G,YADTgH,aAIAA,aAAc,IAAI/3H,KAGtBwa,SAASu2G,UAAUqd,aAEnB,IAAMC,kBACFzxI,OAAQ8wI,aACRvD,eAAgBgC,SAASnT,cAAcsV,qBAAqB9zH,SAASs8F,eACrEt8F,kBACAgxC,KAAMjB,MAAM6/E,SACZtR,QAASqT,SAASnT,cAClBoV,wBACAplD,aAAcpsF,OAAO8lE,QAEnBv4D,aAAenO,UAAUoO,kBAC3BoqH,aAAex4H,UACnB,IAAK+R,QAAQm5E,SAAU,CACnB,IACMp7E,UhB7Fe,SAAhByiI,cAAiBrC,qBAAsBsC,aAAgB,IAAAn6B,MAC1D18G,OAASrR,OAAOgkB,OAAO4hI,sBAAsBj1I,IAAI,SAACuC,KAAQ,IAAAwV,MAAA0kG,MACtD+6B,cAAez/H,UAAGpV,OAAHnL,MAAAugB,MAAAyoH,8BAAaj+H,MAClC,OAAOk6G,UAAG95G,OAAHnL,MAAAilH,MAAA+jB,8BAAagX,aAAax3I,IAAI,SAACyD,OAClC,OAAIA,iBAAiBmyH,kBACVnyH,MAAMwlF,aAEVxlF,YAGf,OAAO25G,UAAGz6G,OAAHnL,MAAA4lH,MAAAojB,8BAAa9/H,QAAbiC,OAAA69H,8BAAwB+W,egBmFTD,CAAcrC,qBhBrGG,SAA9BwC,4BAA+BC,oBAAqBxkI,cAAiB,IAAA4F,MAC1EpY,UACE+9H,YAAciZ,oBAAoB13I,IAAI,SAAA4W,MAAI,OAAKA,KAAKilF,eAG1D,OADAn7F,QADAA,UAAMiC,OAAA69H,8BAAO9/H,UAAQoY,UAAGnW,OAAHnL,MAAAshB,MAAA0nH,8BAAa/B,YAAYz+H,IAAI,SAAA+jH,KAAG,OAAI10H,OAAOgkB,OAAO0wG,KAAK/jH,IAAI,SAAA/Q,GAAC,OAAIA,EAAEwU,eACvEsR,OAAO,SAAAtR,OAAK,OAAIyP,aAAazP,QAAUyP,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUE,YgBgG/EiiJ,CAA4BL,iBAAiBlE,eAAgBnuI,UAAUoO,oBAGhFsJ,WAAa5H,UAAUE,OAAO,SAAAtR,OAAK,OACrCyP,aAAazP,QAAUyP,aAAazP,OAAO8P,IAAI9hB,OAAS6D,yBAAUE,YAChEmiJ,eAAiB7gI,QAAQ4F,SAE/B6gH,aAAex4H,UAAU+R,QAAQ2F,WAAWzmB,OAASymB,YAAc,IAAKk7H,gBAAgBjhI,QAAQ7B,WAIpG,IAEM+iI,gBDvYoB,SAAjBC,eAAkB7kI,UAAWiiI,qBAAsBl/I,UAC5D,IAAI+hJ,iBACE1C,WACAC,cACArD,wBACA5jG,UACAskG,aAEA90B,UAAYvuH,OAAOmgB,UAAWylI,sBAEhChB,UAGAr2B,UAHAq2B,UACAC,UAEAt2B,UAFAs2B,UAUJ,GARIt2B,UADA+0B,eAGWz8I,QAAQ,SAAC6hJ,SACpB/F,qBAAqB95I,KAArBV,MAAAw6I,qBAAoBP,+BAASsG,YAEjCn6B,UAAUo0B,qBAAuBA,qBAG7BiC,UAAUj+I,OAAS,EAAG,CAEtB,IAAMyN,MAAQwwI,UAAU,GAAGl5I,WACrBi9I,kBAAoBva,sBAAsBzqH,UAAWvP,OAG3DkuI,gCAAmByD,SAAW7Y,OAAQ0X,UAAWjhI,oBAAWqiG,aAAc2iC,oBAG1E5C,QAAQl/I,QAAQ,SAACY,KAAQ,IAAAmhJ,eAEdC,mBAFc7F,2BAEQd,cAAc0C,WAFtB,MAGfkE,kBAAoBzG,wBAAwB1+H,UAAWklI,mBAAoBphJ,KAGjF47I,UAAUx6I,MAAM+7I,UAAWn9I,OAC3BmhJ,eAAAH,eAAc5/I,KAAdV,MAAAygJ,eAAAxG,+BAAsBM,YAAYoG,kBAAmBv6B,mBAEtD,KAAAw6B,iBAEHA,gBAAAN,eAAc5/I,KAAdV,MAAA4gJ,gBAAA3G,+BAAsBM,YAAY/+H,UAAW4qG,aAOjD,GAHAk6B,cAAgBA,cAAc9hJ,OAAS,EAAI8hJ,mBAGvC5D,UAAUl+I,OAAS,EAAG,CACtB,IAAMqiJ,cAAgBnE,UAAUl0I,IAAI,SAAA/Q,GAAC,SAAA0T,OAAO1T,KAEtCwU,OAAQ40I,cAAc,GACtBC,qBAAuB7a,sBAAsBzqH,UAAWvP,QAG9DkuI,gCAAmB0D,YACf9Y,OAAQ8b,cACRrlI,oBACAqiG,aAAcijC,uBAIlBR,cAAc5hJ,QAAQ,SAACqiJ,IAAKC,QACxB9F,UAAU8F,QAAU9F,UAAU8F,iBAC9BnD,WAAWn/I,QAAQ,SAACY,IAAK2hJ,QACrBrqG,OAAOoqG,QAAUpqG,OAAOoqG,YAGxB,IAAMzzI,UAAYwzI,eAAe9jJ,oBAAY8jJ,IAAMvlI,UAG7CmlI,kBAAoBzG,wBAAwB3sI,UAAWszI,cAAevhJ,KACtE03B,SACF4f,cACArpC,UAAWozI,kBACXzF,WACIuB,UAAWvB,UAAU8F,QACrBtE,WAAYA,UAAWp9I,KACvBmkI,SAAUud,OACVtd,YAAaud,QAEjB76B,qBAEJ40B,aAAahkH,QAASz4B,mBAK9B+hJ,cAAc5hJ,QAAQ,SAACqiJ,IAAKC,QACxB9F,UAAU8F,QAAU9F,UAAU8F,iBAC9B,IAAMhqH,SACF4f,cACArpC,UAAWwzI,KAAOvlI,UAClB0/H,WACIuB,UAAWvB,UAAU8F,QACrBtE,kBACAjZ,SAAUud,OACVtd,YAAa,GAEjBtd,qBAGJ40B,aAAahkH,QAASz4B,YAK9B,IAAM2iJ,kBAAoBrD,WAAWr/I,OAAS,EAAIq/I,WAAW,GAAGr1I,IAAI,SAACqhE,IAAK1yE,GAAN,OACpD0mJ,WAAWr1I,IAAI,SAAAkR,KAAG,OAAIA,IAAIviB,OAAO0mJ,WAEjD,OAASjnG,cAAQgnG,gBAASC,WAAYqD,mBCyRdb,CAAeta,aAAc0X,qBAFjC1xH,SAASo1H,kBAAkBvB,mBAI/C7zH,SAASu2G,YAAYiH,YAAY7qI,QAAQ,SAAC0iJ,aACtCA,YAAYt/G,WAEhB/V,SAASu2G,YAAYiH,YAAYxnG,QACjChW,SAASg/G,YAAYqV,gBAAgBxpG,QA5FW,IAAAyqG,mBhBnOnB,SAApBC,kBAAqBhf,UAAWlxC,MACzC,IAAIuyC,MAAQ,KACRC,MAAQ,KAERwF,SAEA9G,UAFA8G,SACAC,SACA/G,UADA+G,SAGGkY,SAEHnwD,KAFA99E,EACGkuI,SACHpwD,KADA3sF,EAeJ,OAZA88I,UAAYA,SAAS7iJ,QAAQ,SAAC+iJ,QAC1B,IAAMpwD,MAAQ+3C,SAASpxI,IAAIypJ,SAC3B9d,MAAQA,WACFjjI,KAAK2wF,SAGfmwD,UAAYA,SAAS9iJ,QAAQ,SAAC+iJ,QAC1B,IAAMnwD,MAAQ+3C,SAASrxI,IAAIypJ,SAC3B7d,MAAQA,WACFljI,KAAK4wF,UAIXqyC,YAAOC,agBwSc0d,CAAkBv1H,SAASu2G,YAAav2G,SAASqlE,QAAlEuyC,MA9FwC0d,mBA8FxC1d,MAAOC,MA9FiCyd,mBA8FjCzd,MAEf73G,SAASqlE,MACL99E,EAAGqwH,MACHl/H,EAAGm/H,QAEP,IAAM36H,MAAQ8iB,SAAS9iB,SAEtB06H,MAAOC,OAAOllI,QAAQ,SAAC8lI,QAASvqI,MAC7B,IAAMwtE,eACN+8D,QAAUA,aACF9lI,QAAQ,SAAC0yF,KAAM/+E,KACnB++E,KAAK1yF,QAAQ,SAAC2tD,KAAMi2C,WAChB76B,WAAU,GAAAt8D,OAAIkH,KAAJlH,OAAUm3F,YAAe,SAG3Cr5F,MAAMqmB,OAAN,GAAAnkB,OAAgBm6F,0BAAiBh6C,uBAAjC,YAAAngD,OAAkElR,KAAO,IAAM,KAAOwtE,cAE1F17C,SAAS21H,YAAY1C,kBAAmB7wI,QAExC,IAlHgDwzI,kBAvHpB,SAAnBC,iBAAoB5qH,QAAS2zG,SAAU7uE,MAAOsuC,cAAiB,IAEpEzU,WASC3+D,QATD2+D,WACAD,UAQC1+D,QARD0+D,UACA+nD,qBAOCzmH,QAPDymH,qBACAtB,eAMCnlH,QANDmlH,eACAD,kBAKCllH,QALDklH,kBACAjvF,UAICj2B,QAJDi2B,UACAo0E,SAGCrqG,QAHDqqG,SACAqE,MAEC1uG,QAFD0uG,MACAgY,SACC1mH,QADD0mH,SAeEN,aAAeI,mCAZjBt0I,QACIiQ,KAAMgjI,eACNjkI,QAASgkI,mBAEbvR,kBACA8S,0CACAxwF,oBACAo0E,kBACAqE,YACAgY,mBAG0D5hF,MAAOsuC,cAEjEm0C,eAQAnB,aARAmB,eACAI,iBAOAvB,aAPAuB,iBACAN,YAMAjB,aANAiB,YACAK,cAKAtB,aALAsB,cACAmD,YAIAzE,aAJAyE,YACAC,WAGA1E,aAHA0E,WACAC,cAEA3E,aAFA2E,cACAC,aACA5E,aADA4E,aAlCoE58B,MAAA68B,4BAoC1B5D,YAAaK,cAAeH,eAAgBI,kBACrFn2I,IAAI,SAAA/Q,GAAC,OAAKA,EAAIA,EAAEmnJ,kBArCmD,GAoCjEN,SApCiEl5B,MAAA,GAoCvD88B,OApCuD98B,MAAA,GAoC/Co5B,SApC+Cp5B,MAAA,GAoCrC+8B,OApCqC/8B,MAAA,GAAAC,MAAA48B,4BAsCrCJ,YAAaG,cAC3Cx5I,IAAI,SAAAnP,GAAC,OAAKA,EAAIA,EAAEulJ,aACAp2I,IAAI,SAAA0Q,GAAC,OAAIA,EAAE0lI,oBAxCwC,GAsCjEwD,WAtCiE/8B,MAAA,GAsCrDg9B,YAtCqDh9B,MAAA,GAyCpEi9B,YAAcJ,OAAO1jJ,OAAS,GAAK,EACvC8/I,SAAS9/I,QAAU8jJ,cACnB,IAAIC,YAAcJ,OAAO3jJ,OAAS,GAAK,EACvCggJ,SAAShgJ,QAAU+jJ,cAGnB,IAAIC,WAAaJ,WAAW5jJ,OAAS4jJ,WAAW55I,IAAI,SAAC/Q,EAAGN,GAEpD,OADAmnJ,SAASnnJ,GAAKmnJ,SAASnnJ,IAAMmnJ,SAASnnJ,UACtCgU,OAAAqxI,+BAAW/kJ,GAAX+kJ,+BAAiB8B,SAASnnJ,OACxBmnJ,SAAWA,SAAS91I,IAAI,SAAA/Q,GAAC,OAAKA,QAG9BgrJ,YAAcP,OAAO1jJ,OAAS0jJ,OAAO15I,IAAI,SAAC/Q,EAAGN,GAAJ,OAAWM,GAAX0T,OAAAqxI,+BAAkB6F,YAAYlrJ,WAAekrJ,YAAY7jJ,OACpG6jJ,YAAY75I,IAAI,SAAA/Q,GAAC,OAAA+kJ,+BAAQ/kJ,QAEvBirJ,aACFZ,YACgBA,WAAWlD,aACnBlgJ,QAAQ,SAACrF,GACQA,EAAEulJ,aACVlgJ,QAAQ,SAAC4U,EAAGnc,GACrBurJ,UAAUvrJ,GAAKurJ,UAAUvrJ,OACzBurJ,UAAUvrJ,GAAGuJ,KAAK4S,OAK1BkrI,SAAShgJ,QACTkkJ,UAAUhiJ,KAAK89I,UAInB,IAAImE,gBACAR,OAAO3jJ,QACPmkJ,aAAajiJ,KAAKyhJ,QAEtB,IAAMS,oBAAsBD,aAAankJ,OACrCujJ,eACgBA,cAAcnD,aACtBlgJ,QAAQ,SAACrF,GACQA,EAAEulJ,aACVlgJ,QAAQ,SAAC4U,EAAGnc,GACrBwrJ,aAAaxrJ,EAAIyrJ,qBAAuBD,aAAaxrJ,EAAIyrJ,yBACzDD,aAAaxrJ,EAAIyrJ,qBAAqBliJ,KAAK4S,OAKvD,IAAKkvI,WAAWhkJ,SAAWikJ,YAAYjkJ,OAAQ,CAC3C,IAAMu+D,KAAO,IAAIjB,MAAMohF,UACvBngF,KAAK8lF,kBAAkBntD,UAAWC,YAClC6sD,aAAezlF,OAGnB,KAAK2lF,UAAUlkJ,QAAYmkJ,aAAankJ,QAAWmkJ,aAAa,GAAGnkJ,QAAS,CACxE,IAAMu+D,MAAO,IAAIjB,MAAMohF,UACvBngF,MAAK8lF,kBAAkBntD,UAAWC,YAClCgtD,eAAiB5lF,QAGrB,OACI5jD,MAAOqpI,WAAYC,aACnBvqI,SAAUwqI,UAAWC,cACrBvF,0BACAmF,wBACAD,yBA0IAV,CAAiBxC,iBAVjBzB,aAAcyC,gBACdlC,WAAYnyH,SAASqlE,QASuBt1B,MAAOsuC,cALnDjxF,KAxH4CwoI,kBAwH5CxoI,KACAjB,QAzH4CypI,kBAyH5CzpI,QACAklI,aA1H4CuE,kBA0H5CvE,aACAkF,YA3H4CX,kBA2H5CW,YACAC,YA5H4CZ,kBA4H5CY,YAMJ,OAHAx2H,SAAS+2H,UAAU3pI,MACnB4S,SAASg3H,aAAa7qI,UAGlBiB,KAAM4S,SAAS+2H,YACf5qI,QAAS6T,SAASg3H,eAClBlnI,OAAQkQ,SAASg/G,cACjBwU,oCACAD,8BACAppE,UACIx8D,IAAK4oI,YACLz4E,IAAK04E,aAETt1F,UAAWmwF,aACXh9C,YACI2lC,0BACAqT,YAAa7rI,aC7kBZy1I,gBACT3oJ,gBACA2pI,SACA+X,sBACA1zB,eACAuzB,gBACA4D,YACAC,YACAqD,aACAC,gBACAhY,eACAV,o3CCUiB4Y,0CAOjB,SAAAA,eAAa5oJ,4KAAc6oJ,CAAAhkJ,KAAA+jJ,gBACvB/jJ,KAAKikJ,aACLjkJ,KAAKkkJ,gBACLlkJ,KAAKmkJ,iBACLnkJ,KAAKqxG,cAAgBl2G,aACrB6E,KAAKokJ,cACLpkJ,KAAKqkJ,iBACLrkJ,KAAKskJ,gBACLtkJ,KAAKukJ,SAAYhH,aAAeC,cAChCx9I,KAAKwkJ,cAAiBjJ,kBAAoBU,mBAC1Cj8I,KAAKykJ,uBACLzkJ,KAAK0kJ,UACL1kJ,KAAK2kJ,cACL3kJ,KAAK4kJ,OACDxwI,KACA7O,KACAoqC,SACA7Z,QACAkmE,UAEJ5yB,sBAAsBppE,KAAM8jJ,gBAC5B9jJ,KAAKojI,UAAU4G,2UAUQ,IAAAvoI,MAAAzB,KACvB,OAAI8G,UAAaxH,QACb3G,OAAO4c,QAAPzO,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IAAgCtH,QAAQ,SAACY,KACrCqB,MAAKwiJ,UAAU7jJ,IAAI,IAAMA,IAAI,KAE1BJ,MAEJA,KAAKikJ,wDAUI,QAAAzuI,OAAAxV,KAAA+jE,KAAAj9D,UAAAxH,OAANulJ,KAAM,IAAA56I,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAN6gF,KAAM7gF,MAAAl9D,UAAAk9D,MAChB,OAAI6gF,KAAKvlJ,SACJi/H,KAAMC,OAAQC,OAAQC,YAAaC,YAAYn/H,QAAQ,SAACrF,GACrDqb,OAAKmvI,WAAL,GAAA14I,OAAmB9R,EAAnB,QAA6B0qJ,KAAK,GAAL,GAAA54I,OAAW9R,EAAX,SAAsBqb,OAAKmvI,WAAL,GAAA14I,OAAmB9R,EAAnB,UAEhD6F,MAEJA,KAAK2kJ,+CAWZ,OAAI79I,UAAKxH,QACLU,KAAK4kJ,MAAQjsJ,OAAOmgB,UAAW9Y,KAAK4kJ,MAAvB99I,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IACN9G,MAEJA,KAAK4kJ,8CAUG,IAAAn0H,OAAAzwB,KACf,OAAI8G,UAAOxH,QACP3G,OAAO4c,QAAPzO,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IAA0BtH,QAAQ,SAACrF,GAC/Bs2B,OAAK8zH,QAAQpqJ,EAAE,IAAMA,EAAE,KAEpB6F,MAEJA,KAAKukJ,0DAUa,IAAA1zH,OAAA7wB,KACzB,OAAI8G,UAAYxH,QACZ3G,OAAO4c,QAAPzO,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IAA+BtH,QAAQ,SAACrF,GACpC02B,OAAK2zH,aAAarqJ,EAAE,IAAMA,EAAE,KAEzB6F,MAEJA,KAAKwkJ,6EAWKv1I,OAAQk6G,aACzB,IAAM82B,kBACAzE,uBA2BN,OA1B4Bp0C,qBAAMC,sBAAOC,uBAEtB9nG,QAAQ,SAACzE,MACxB,GAAIkU,OAAOlU,OAASkU,OAAOlU,MAAMgS,MAAO,CACpC,IAAMsgH,IAAMp+G,OAAOlU,MACnBklJ,eAAellJ,MAAQsyH,IAAItgH,MAC3ByuI,oBAAoBh6I,KAAK6rH,IAAItgH,UAIjCkC,OAAM,QACNusI,oBAAoBh6I,KAApBV,MAAA06I,oBAAmBsJ,kCAAS71I,OAAO8lE,SAGnCo0C,YAAY7pH,QACZ6pH,YAAY3pH,QAAQ,SAACk2F,OACbA,MAAMyP,UACNxsG,OAAOgkB,OAAO+4E,MAAMyP,UAAU3lG,QAAQ,SAAC6tH,KAC/BA,MAAmD,IAA5CmuB,oBAAoB7zI,QAAQ0lH,IAAItgH,QACvCyuI,oBAAoBh6I,KAAK6rH,IAAItgH,MAAQsgH,IAAItgH,MAAQsgH,SAMrErtH,KAAKokI,aAAcoX,0CACZyE,qEAUKhmI,KAAMkxH,SAClB,OAAIlxH,MACAja,KAAK+kJ,gBAAkB7Z,wBAAwBlrI,MAAQjF,KAAMujI,IAAKt0H,OAAQiQ,MAAQkxH,SAC3EnrI,MAEJA,KAAK+kJ,kEAUF/rI,QAASmyH,SACnB,OAAInyH,SACAhZ,KAAKglJ,cAAgB9Z,wBAAwBlrI,MAAQjF,KAAMsjI,IAAKr0H,OAAQgP,SAAWmyH,SAC5EnrI,MAEJA,KAAKglJ,4DAWJnnF,MACR,IAAMooC,SAAWjmG,KAAKimG,WAOtB,OALAttG,OAAOgkB,OAAOspF,UAAUzmG,QAAQ,SAACrF,GACzBA,EAAEJ,qBAAqB8jE,OACvBA,KAAO1jE,KAGR0jE,iEAWQ/lC,SAIf,OAFA93B,KAAK08I,iBAEE,SAACruI,UAAW64G,UAAW2e,QAAvB,OAAkC0W,8BAAiBzkH,QAASzpB,UAAW64G,UAAW2e,iDAUpFof,WAAY5lJ,UACjBW,KAAKilJ,cAAczlJ,QAAQ,SAACgb,IAAKsnI,QAC7BtnI,IAAIhb,QAAQ,SAACmrE,IAAKo3E,QACd1iJ,SAASyiJ,OAAQC,OAAQp3E,6DAYjC,IAAM79D,OAAS9M,KAAKokI,cAKpB,OAHAzrI,OAAO4c,QAAQvV,KAAK6lI,UAAUrmI,QAAQ,SAACrF,GACnC2S,OAAO3S,EAAE,IAAMA,EAAE,KAEd2S,iEASP,OAAO9M,KAAKkyF,MACR99E,EAAG,IAAIzT,IACP4E,EAAG,IAAI5E,sDAWFm/I,kBAAmB7wI,QAAQ,IAEhC8wI,aAEA9wI,OAFA8wI,aACAj1B,MACA77G,OADA67G,MAGAjmB,cAEAi7C,kBAFAj7C,cACAqgD,mBACApF,kBADAoF,mBAPgCC,mBAYhCnlJ,KAAK7E,eAFO6/B,WAVoBmqH,mBAUhCzvH,WACAgiH,iBAXgCyN,mBAWhCzN,iBAGE5S,WAEAsgB,WlBxNmB,SAApBC,kBAAqBp2I,QAC9B,IAAMm2I,cAQN,Od6KuB,cAID,YAIA,ac1LZ5lJ,QAAQ,SAAC+uD,WACM/6B,IAAjBvkB,OAAOs/C,QACP62F,WAAW72F,MAAQt/C,OAAOs/C,SAG3B62F,WkB+MgBC,CAAkBtF,kBAC/B30B,YAAcmsB,uBAAWlsB,WAAW,GACpCi6B,gBACAv7I,MAAQ/J,KAAK+J,QA4BnB,IAAK,IAAMvQ,OA3BXwG,KAAKR,QhClGe,cgCkGO,SAACvH,EAAGqiB,EAAGqjF,IAC9B,IAAIt8F,KAAOs8F,GAAG/7E,SACd,IAAKvgB,KAAM,CACP,IAAMqmE,UAAS,GAAAz7D,OAAMhU,GAANgU,OAAUqO,GAEzBjZ,KAAOk2I,uBAAWh+I,QACdsrG,4BACAqgD,wCAEAlqH,sBACA08G,oCAEJ4N,aAAa59E,WAAa,KAC1BrmE,KAAK2kG,SACDu+B,SAAUtsI,EACVm1I,SAAU9yH,EACVotD,sBAEJrmE,KAAK0I,MAAMA,OACX4zF,GAAG/7E,OAAOvgB,OAEbyjI,MAAM7sI,KAAO6sI,MAAM7sI,OACpB6sI,MAAM7sI,GAAGqiB,GAAKjZ,KACdA,KAAKwzI,YAAY/pB,OACjBntB,GAAG1uF,OAAOm2I,cAGIh6B,YACdrhH,MAAMqmB,OAAN,GAAAnkB,OAAgBm6F,0BAAiBp6C,sBAAjC,KAAA//C,OAA0DzS,KAAO8rJ,cAIrE,OADA5N,iBAAiBtG,QAASrrD,OAAQ++C,MAAO1jH,OhCzJtB,cgCyJ2C0kE,WhC7IlD,SgC8IL9lF,KAAK8kI,MAAMA,qDASV71H,OAAQZ,UAAWmwI,UAAU,IAEjC7uG,MAIA1gC,OAJA0gC,MACAqsD,MAGA/sF,OAHA+sF,MACAlmE,KAEA7mB,OAFA6mB,KAGE1V,QADFnR,OADA8wI,aAEyBC,YAPQuF,mBAWjCvlJ,KAAKgjB,eAFLu6H,UATiCgI,mBASjChI,UACAC,UAViC+H,mBAUjC/H,UAEEr4C,UACFx1D,YACAqsD,YACAlmE,WAEEozG,eAAWj9H,OAAA64I,kCAAOvH,UAAUj0I,IAAI,SAAAnP,GAAC,OAAIA,EAAEkK,cAA5BygJ,kCAA4CtH,UAAUl0I,IAAI,SAAAnP,GAAC,OAAIA,EAAEkK,eAC5EmhJ,YACFpgF,QAASo5E,SAASnT,cAAcoa,uBAAuBp3I,UAAW82F,SAAU+jC,YAAa9oH,SACzF8xE,KAAMlyF,KAAKkyF,OACXiT,mBAGJ,OADAq5C,SAASkH,eAAeC,gBAAgBH,YACjCxlJ,mFAMP,OAFAA,KAAKukJ,WACLvkJ,KAAKwkJ,gBACExkJ,6DASO,IAAA4lJ,WAKV5lJ,KAAKkyF,OAHLviD,MAFUi2G,WAEVj2G,MACAqsD,MAHU4pD,WAGV5pD,MACAlmE,KAJU8vH,WAIV9vH,KAGJ,OACI6Z,MAAOm1G,kCAAIn1G,OACXqsD,MAAO8oD,kCAAI9oD,OACXlmE,KAAMgvH,kCAAIhvH,2DAWH/6B,MACX,OAAOiF,KAAKkyF,OAAL,GAAAjmF,OAAelR,mEAUPyhB,aAAcvN,OAAQuvI,UAAU,IAAAv6E,OAAAjkE,KACzCmpH,YAAcnpH,KAAKmpH,cACzBnpH,KAAKw7I,oBAAoBvsI,OAAQk6G,aACjC,IAAM08B,YAAcrH,SAASkH,eAAe10C,YACxCx0F,0BACAvN,cACAijF,KAAMlyF,KAAKkyF,SAGXwlD,iBACA13I,KAAK7E,eADLu8I,kBAGHrwC,sBAAOC,sBAAOF,sBAAM5nG,QAAQ,SAACrF,GAC1B8pE,OAAKiuB,OAAO/3F,GAAK0rJ,YAAY1rJ,KAGjCu9I,iBAAiBtG,QAASrrD,OAAQ/lF,KAAKkyF,OAAQ9wE,OhC1P5B,cgC0PiD0kE,WhClPxD,SgCmPZ4xD,iBAAiBtG,QAASrrD,OAAQ/lF,KAAK8kI,QAAS1jH,OhCvO3B,egCuOkD0kE,WhC/O3D,SgCiPZ,IAAMg/C,SACA4X,aAAe18I,KAAK08I,eAY1B,OAVA18I,KAAKR,QhCxOe,cgCwOO,SAACvH,EAAGqiB,EAAGqjF,IAC9BA,GAAGzL,KAAK2zD,aACRloD,GAAG/7E,UAAY+7E,GAAG/7E,SAASqxH,cAAchkI,QACzC0uF,GAAGmH,SAAS05C,SAASkH,eAAe3I,eAAe9tI,OAAQytI,aAAazkJ,GAAGqiB,KAC3EqjF,GAAGmoD,cAEHhhB,MAAMtjI,KAAKm8F,GAAG/7E,YAGlB81H,iBAAiBtG,QAASrrD,OAAQ++C,MAAO1jH,OhCzP1B,UgCyP2C0kE,WhC7P9C,SgC8PL9lF,yDAWI+lJ,aAAc3gI,WAAYnW,QACrC,IAAI+2I,cACAC,eAEAhsI,KAEA8rI,aAFA9rI,KACAjB,QACA+sI,aADA/sI,QALyCktI,oBAUzClmJ,KAAK7E,eAFO+vG,aAR6Bg7C,oBAQzCxwH,WACAgiH,iBATyCwO,oBASzCxO,iBAEElN,SAAWxqI,KAAKmgJ,WAAWngJ,KAAKimG,WAAWukC,UAC3CwT,UAAYh+I,KAAKmgJ,WAAWngJ,KAAKimG,WAAW+3C,WAZLlS,MAAAqa,8BAaflsI,KAbe,GAatC8xH,SAbsCD,MAAA,GAa5BE,UAb4BF,MAAA,GAAAG,SAAAka,8BAcfntI,QAde,GActCotI,QAdsCna,SAAA,GAc7Boa,WAd6Bpa,SAAA,GAevCqa,WAAalhI,WAAWnL,KACxBssI,iBAAmB,SAAnBA,iBAAmB1oF,MAAI,OAAI,IAAImgF,WAAY/uI,QAASspF,KAAM16B,KAAK5uD,SAASspF,QAIxE//E,SACFyoB,KAAMqpG,0BAAcyB,SAAUua,WAAW,GAAIr3I,OAAOu3I,YAAchc,SAAWwT,UAAW9yC,cACxFhqE,MAAOopG,0BAAc0B,UAAWsa,WAAW,GAAIr3I,OAAOu3I,YAAchc,SAAWwT,UAAW9yC,eAExFu7C,SACFxlH,KAAM8qG,SAASzsI,OAAS,EAAIysI,SAAS,GAAGziI,IAAIi9I,qBAC5CrlH,MAAO8qG,UAAU1sI,OAAS,EAAI0sI,UAAU,GAAG1iI,IAAIi9I,sBA1BNrgC,MAAAigC,+BA4BhBn+C,eAAMC,iBAAO3+F,IAAI,SAAAvO,MAAI,OAAIqrJ,QAAQ98I,IAAI,SAACqhE,IAAK1yE,GACpE,OAAIA,IAAMmuJ,QAAQ9mJ,OAAS,EAChBkZ,QAAQzd,MAEZ0rJ,QAAQ1rJ,UAhC0B,GA4BtC2rJ,QA5BsCxgC,MAAA,GA4B7BygC,SA5B6BzgC,MAAA,GAoC7C,GAAuB,IAAnBkgC,QAAQ9mJ,OAAc,KAAA6mH,MAAAggC,+BACOn+C,eAAMC,iBAAO3+F,IAAI,SAAAvO,MAAI,OAAIsrJ,WAAW/8I,IAAI,SAACqhE,IAAK1yE,GACvE,OAAU,IAANA,EACOugB,QAAQzd,MAEZ0rJ,QAAQ1rJ,UALG,GACrBirJ,WADqB7/B,MAAA,GACT8/B,YADS9/B,MAAA,QAQtB6/B,WAAaK,WAAW/8I,IAAI,kBAAOyiI,SAASzsI,OAAS,EAAIysI,SAAS,GAAGziI,IAAIi9I,uBACzEN,YAAcI,WAAW/8I,IAAI,kBAAO0iI,UAAU1sI,OAAS,EAAI0sI,UAAU,GAAG1iI,IAAIi9I,uBAShF,OANA7O,iBAAiBtG,QACbrrD,QAAS2gE,QAASC,SAAUX,WAAYC,aACxC7kI,OhCvUe,cgCwUf0kE,WhC5SiB,mBgC+SZ4gE,gBAASC,kBAAUX,sBAAYC,yEAa/B53I,UAAWY,OAAQ6wI,kBAAmBtB,UAQ/C,OAAOqB,8BANHxxI,oBACAyxI,oCACAtB,kBACA3xH,SAAU7sB,MAGkBiP,8CAIhC,OAAInI,UAAOxH,QACPU,KAAKirH,OAALnkH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKirH,iUC3ZL27B,wBAzHX,SAAAA,YAAaC,sKAAWC,CAAA9mJ,KAAA4mJ,aACpB,IAAMG,iBAEN/mJ,KAAK03C,OAAOmvG,eACZ7mJ,KAAKqe,OAAO,kBAAM,IAElBre,KAAK2iC,KAAK,SAACg7D,GAAIqnC,KAAMG,MACjB,IAAM6hB,UAAYrpD,GAAG3gF,UACrB,GAAIgqI,WAAaA,UAAU9yH,GAAI,CAC3B,IAAMA,GAAK8yH,UAAU9yH,KACrB6yH,cAAc7yH,KACV82E,SAAUg8C,UACVziB,SAAUS,KACVoI,SAAUjI,SAKtBnlI,KAAK+mJ,cAAcA,iUAInB,OAAIjgJ,UAAGxH,QACHU,KAAKinJ,eAALngJ,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKinJ,uDAUZ,OAAIngJ,UAAOxH,QACPU,KAAKknJ,QAALpgJ,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKknJ,gDAYZ,OAAIpgJ,UAAGxH,QACHU,KAAKmnJ,UAALrgJ,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKmnJ,gDASZ,IAAIC,SAAW,EASf,OAPApnJ,KAAK03C,SAASl4C,QAAQ,SAACgb,KACnB,IAAI6sI,gBAAkB,EACtB7sI,IAAIhb,QAAQ,SAACq+D,MACTwpF,iBAAmBxpF,KAAKypF,kBAAkBrwH,QAE9CmwH,SAAWxmJ,KAAKG,IAAIqmJ,SAAUC,mBAE3BD,iDASP,IAAIG,UAAY,EAShB,OAPAvnJ,KAAK03C,SAASl4C,QAAQ,SAACgb,KACnB,IAAIgtI,iBAAmB,EACvBhtI,IAAIhb,QAAQ,SAACq+D,MACT2pF,iBAAmB5mJ,KAAKG,IAAIymJ,iBAAkB3pF,KAAKypF,kBAAkBpwH,UAEzEqwH,WAAaC,mBAEVD,4CAULrqI,IACF,IAAMw6B,OAAS13C,KAAK03C,SACd/nC,SAAW3P,KAAKqe,SAStB,OAPAq5B,OAAOl4C,QAAQ,SAACgb,IAAKsnI,QACjBtnI,IAAIhb,QAAQ,SAACmrE,IAAKo3E,QACVpyI,SAASg7D,MACTztD,GAAGytD,IAAKm3E,OAAQC,OAAQrqG,YAI7B13C,qEAGUk0B,IACjB,OAAOl0B,KAAK+mJ,gBAAgB7yH,0mBC3H7B,6BAgCMuzH,0BAAqB,SAArBA,mBAAsB3vH,QAASoqH,aAAgB,IAEpDvlI,OAGAulI,YAHAvlI,OACA1C,KAEAioI,YAFAjoI,KACAjB,QACAkpI,YADAlpI,QAcJ,OAZA2D,OAASA,WACT1C,KAAOA,SACPjB,QAAUA,YACV8e,QAAQ4vH,aAAajc,UACjBvyI,MAAO,IAAI0tJ,aAAYjqI,QACvBskB,KAAM,IAAI2lH,aAAY3sI,KAAK,IAC3BinB,MAAO,IAAI0lH,aAAY3sI,KAAK,IAC5B6jB,IAAK,IAAI8oH,aAAY5tI,QAAQ,IAC7B+zC,OAAQ,IAAI65F,aAAY5tI,QAAQ,KAGpC8e,QAAQu5E,cAAc2Y,UAAUC,OAAOv9D,aAAYG,gBAAgB,GAC5D/0B,SAGE6vH,sBAAiB,SAAjBA,eAAkB7vH,SAC3B,IAAM7d,KAAO6d,QAAQ7d,OACfjB,QAAU8e,QAAQ9e,UAClB22B,MAAQ7X,QAAQ6X,QAChBthC,UAAYypB,QAAQx3B,OACpBw1B,KAAOgC,QAAQhC,OACfi/C,OAASj9C,QAAQi9C,SACjB0gB,OAAS39D,QAAQ29D,SACjBt+C,UAAYrf,QAAQqf,YACpBloC,OAAS6oB,QAAQ7oB,SACjB+sF,MAAQlkE,QAAQkkE,QAGhBnvE,SAAWiL,QAAQjL,WACzBA,SAAS9iB,MAAM+tB,QAAQ/tB,SAEvB,IAAI69I,cACA75F,UAAWj2B,QAAQi2B,YACnB+8D,MAAOhzF,QAAQgzF,QACfi1B,aAAc9wI,WACdgL,UACAjB,gBACA+7D,cACA0gB,cACAt+C,sBCvDkC,SAA7B0wG,2BAA8B/vH,SACvCA,QAAQ/tB,QAAQgkF,aACZrmB,UAAW,QACXluE,IAAK,gBDuDTquJ,CAA2B/vH,SAE3B,IAAMgwH,cAjEoB,SAAxBC,sBAAyBC,aAC3B,IAAM9nI,QACN,IAAK,IAAM1mB,OAAOwuJ,YAAa,CAC3B,IAAMC,UAAYD,YAAYxuJ,KAM1B0mB,KAAK1mB,KALgB,iBAAdyuJ,WAA2BA,UAKtBA,WAHRl7I,MAAOi7I,YAAYxuJ,MAM/B,OAAO0mB,KAqDe6nI,EAClBp4G,YACAqsD,YACAlmE,YAGJ8xH,aAAejvJ,OAAOmgB,OAAO8uI,aAAcE,eAE3C,IAAMtJ,YACNA,SAASkH,eAAiB,IAAInc,+BAC9BiV,SAASnT,cpB0Ja,SAAb6c,WAAczyD,QACvB,IAAI01C,QAAU,IAAIjH,mCAMlB,OAJIzuC,OAAOn2F,SAEP6rI,QAAU11C,OAAOhhF,MAAM,SAAAta,GAAC,MAAe,QAAXA,EAAE4qG,OAAkB,IAAIwjC,2BAAiB4C,SAElEA,QoBjKkB+c,CAAWzyD,QACpC5oE,SAASs+G,QAAQqT,SAASnT,eAG1BvzG,QAAQqwH,UAAU3J,SAASnT,cAAcz0H,YAAY7b,QAGrD,IAAMiP,OAASw0I,SAASnT,cAAc+c,eAAe/5I,UAAWu5I,cAChEpJ,SAASnT,cAAcgd,kBAAkBp5I,OAASA,OAAOkzH,YAAen4H,QAExEyrF,QAAU5oE,SAASs8F,YAAY1zB,QAE/B5oE,SAAS8vH,eAAe3yI,OAAOiQ,KAAMukI,UAAU5B,aAAa5yI,OAAOgP,QAASwlI,UAE5E,IAAM8J,gBAAkBz7H,SAAS07H,YAAYl6I,UAAWu5I,aAAc9vH,QAAQmuE,WAAYu4C,UA6B1F,OA5BA1mH,QAAQ0wH,kBAAoBF,gBAAgBpnD,WAAW2lC,aAEvD/uG,QAAQi2B,UAAUu6F,gBAAgBv6F,WAGlClhC,SAAS47H,kBAAkBH,gBAAgBpnD,WAAWg5C,YAAYz9H,kBAAmBqrI,cAC7EtJ,UAGR3xH,SAAS67H,WAAWd,aAAcU,gBAAgBpnD,WAAYs9C,UAG9DiJ,0BAAmB3vH,QAASwwH,iBAG5BxwH,QAAQ6wH,eAAe97H,SAAS+7H,cAAcN,gBAAiBt+I,OAAQiF,SAGvE6oB,QAAQwwH,gBAAgBA,iBAExBxwH,QAAQ4vH,aAAax1D,KAAOrlE,SAASqlE,OACrCp6D,QAAQ+wH,UACJC,OAAQtd,uBAAW8c,gBAAiB9J,SAASnT,iBAGjDx+G,SAASs+G,UAAU4d,iBAAiBjxH,SCxHI,SAA/BkxH,6BAAgClxH,SAC3BA,QAAQ/tB,QAChB+/G,wBAAuB,GAAA79G,OAAIm6F,0BAAiBp6C,sBAArB,YAAsD,WAC/El0B,QAAQjL,WAAWs+G,UAAU4d,iBAAiBjxH,WAC/C,GACC4vC,UAAW,QACXluE,IAAK,gBDoHTwvJ,CAA6BlxH,SACtBA,+LE7IJ,IAAM+4E,8BAAKo4C,kCAAAC,0BACdp+B,SACAxqH,QACAqoJ,gBACI7hF,cACI4/E,WACAC,YACAX,cACAC,iBAGRkC,aAEAU,UACI/hF,cACIgiF,YAGRR,iBACIxhF,iBAEJj6C,YACAo5E,UACIl9B,aAAc,SAAAA,aAACjxC,QAAS5+B,OAIpB,OAHI4+B,QAAQjL,UACRiL,QAAQjL,WAAWo5E,SAAS/sG,MAAMiwJ,cAE/BjwJ,QAGf60D,cpCFkB,aoC5BJk7F,kCAAAC,yBAgCb/qB,SAhCa8qB,kCAAAC,yBAiCb9qB,YAjCa6qB,kCAAAC,yBAkCb7hD,0BAlCa4hD,kCAAAC,yBAmCb5hD,0BAnCa2hD,kCAAAC,yBAoCb9hD,yBApCa6hD,kCAAAC,yBpC2HI,aoC3HJD,kCAAAC,yBpCgII,aoChIJD,kCAAAC,yBpCqIO,gBoCrIPA,myCC0PHE,oCApNX,SAAAA,YAAanjD,SAAU9qG,cAAc,IAAAsG,iKAAA4nJ,CAAArpJ,KAAAopJ,aACjC3nJ,0LAAA6nJ,CAAAtpJ,KAAAupJ,4BAAAH,aAAAhxJ,KAAA4H,OADiC,IAI7BwpJ,qBACAvjD,SADAujD,qBAJ6B,OAOjC/nJ,MAAK4vG,cAAgBl2G,aAKrBiuE,sBAAsBqgF,sEAAAhoJ,QAAMovG,8BAC5BznC,sBAAsBqgF,sEAAAhoJ,QAAMs2I,eAG5Bt2I,MAAKimJ,gBAELjmJ,MAAKyhE,SAELzhE,MAAK87F,OAAS,KAEd97F,MAAKioJ,cAELjoJ,MAAKorB,SAAS,IAAIk3H,+BAAetiJ,MAAK4vG,gBAEtCo2C,0BAAmBgC,sEAAAhoJ,YAEnBA,MAAKwkG,UACDpB,cAAe2kD,qBAAqB3kD,cAAc/rG,MAClDqwJ,aAAcK,qBAAqBL,aAAarwJ,QA9BnB2I,uYAVfw9H,ySAuDlB,OAAIn4H,UAAOxH,QACPU,KAAKirH,OAALnkH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GHxEyB,SAAxBqkH,sBAAyBrzF,SAClC,IAAMszF,YAActzF,QAAQlhB,YAAYy0G,WAAW,GACrCvzF,QAAQ/tB,QAChBqmB,OAAOg2E,0BAAiBh6C,uBAAwBg/D,aGsE9CD,CAAsBnrH,MH/EH,SAAlB2pJ,gBAAmB7xH,SAAY,IACjCszF,YADiCw+B,kCAClBrS,uBAAWlsB,WADO,MAE1BvzF,QAAQ/tB,QAChBqmB,OAAOg2E,0BAAiBp6C,sBAAuBo/D,aG6E7Cu+B,CAAgB3pJ,MHpEI,SAAnB6pJ,iBAAoB/xH,SAAY,IAClCszF,YADkCw+B,kCACnBn/B,qBAAUY,WADS,MAEzCvzF,QAAQ/tB,QAAQqmB,OAAOg2E,0BAAiBj6C,uBAAwBi/D,aGmExDy+B,CAAiB7pJ,MFvFO,SAAvB8pJ,qBAAwBhyH,SACjC,IAAM/tB,MAAQ+tB,QAAQ/tB,QAEtBA,MAAM+/G,wBAAuB,GAAA79G,OAAIm6F,0BAAiBh6C,uBAArB,cAAyD,WAChEt0B,QAAQjL,WAAWqlE,OAC3B99E,EAAE5U,QAAQ,SAAA0yF,MAAI,OAAIA,KAAK1yF,QAAQ,SAAC2tD,MACtCA,KAAKyxC,eAIb70F,MAAM+/G,wBAAuB,GAAA79G,OAAIm6F,0BAAiBh6C,uBAArB,cAAyD,WAChEt0B,QAAQjL,WAAWqlE,OAC3B3sF,EAAE/F,QAAQ,SAAA0yF,MAAI,OAAIA,KAAK1yF,QAAQ,SAAC2tD,MACtCA,KAAKyxC,eE4ELkrD,CAAqB9pJ,MACdA,MAEJA,KAAKirH,+DASZ,OAAInkH,UAASxH,OACFU,KAEJA,KAAK4kF,cAAc6mD,2DA8B1B,OAAI3kI,UAAOxH,OACAU,KAEJA,KAAK0nJ,2DAWZ,OADA1nJ,KAAK+J,QAAQ8R,MAAM8oH,OACZ3kI,uDAUP,OADAA,KAAK+J,QAAQ8R,MAAM+oH,SACZ5kI,yCAWJ+pJ,UACH,OvBzBmB,SAAdC,YAAeD,SAAU5rI,WAClC,IAAI8rI,QAAU,KAQd,OANC5iD,sBAAOD,qBAAME,uBAAO9nG,QAAQ,SAACrF,GACtB+vJ,iBAAKngJ,MAAMjR,IAAIqB,IAAM4vJ,WAAaG,iBAAKngJ,MAAMjR,IAAIqB,GAAG,KACpD8vJ,QAAU9vJ,KAId8vJ,SACSA,mBAEZ3rB,IAAKD,KAAK7+H,QAAQ,SAAC2qJ,WAChBhsI,UAAS,GAAAlS,OAAIk+I,UAAJ,WAAuB3qJ,QAAQ,SAACrF,GACjCA,EAAEkK,aAAe0lJ,WACjBE,SAAYA,Qd4HP,Qc5HuBlvJ,KAAMovJ,YAAc9rB,IdzD1C,ScyDyDC,UAKvE2rB,WAIH3rB,IAAKD,KAAK7+H,QAAQ,SAAC4qJ,UAChBjsI,UAAS,GAAAlS,OAAIm+I,SAAJ,gBAA2B5qJ,QAAQ,SAACrF,GACzCA,EAAEqF,QAAQ,SAACnH,GACHA,EAAEgM,aAAe0lJ,WACjBE,QAAUG,WAAa/rB,IAAMvjF,EAAIn1C,SAM7CskJ,SACSA,iBAEN,OuBZID,CAAYD,SAAU/pJ,KAAK6sB,WAAW7J,wDAWxCjoB,MACL,MrClBe,YqCkBXA,KACOiF,KAAK6sB,WAAWw9H,iBAEpBrqJ,KAAK6sB,WAAWy9H,cAAcvvJ,gDAS/BA,MACN,OAAOiF,KAAK6sB,WAAL,GAAA5gB,OAAmBlR,KAAnB,8EAGWkvJ,SAAS,IAAAM,sBAIvBvqJ,KAAK6sB,WAAW7J,eAFhBu4H,eAFuBgP,sBAEvBhP,eACAU,eAHuBsO,sBAGvBtO,eAEJ,OAAOgO,UAAYtkJ,EAAI41I,eAAiBU,6EAGxB0B,UAChB,IAAM9wH,SAAW7sB,KAAK6sB,WAEtB,OADcA,SAAS0zH,WAAW5C,WAAa9wH,SAASyzH,WAAW3C,0EAIpDrkB,SAAUqkB,UACzB,IAAM9wH,SAAW7sB,KAAK6sB,WAItB,OAHcA,SAAS0zH,WAAW5C,WAAa9wH,SAASyzH,WAAW3C,WAChD,GAAG3gI,UAAUk1E,OAAOonC,4DAW9B,IAAAr5H,KACH8J,MAAQ/J,KAAK+J,QAEnB,OAAAygJ,4BAAAvqJ,QrCzMc,SqC0MA8J,MAAMjR,IrC1MN,WqCyMd0xJ,4BAAAvqJ,KrC5Ja,QqC8JA8J,MAAMjR,IrC9JN,UqC4JbmH,6DAaA,OAAOD,KAAKwoJ,0EAIZb,sBAAe3nJ,oDA7Kf,QACIU,QACI0T,KACA7O,KACAo9D,y3DC7EKovB,wyBAAwBJ,mWAKxB3J,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO1oF,OAAQ,CAEtB,IAAMmrJ,kBAAoBziE,OAAO3pE,OAAO,SAAA9lB,GAAC,OAAI8wF,aAAaj/D,KAAK7xB,KAAOswF,gCAAUzB,oBACzEiC,aAAaj/D,KAAK7xB,KAAOswF,gCAAU5B,qBAEtCwjE,kBAAkBnrJ,QAClB+pF,aAAauI,cACbvI,aAAapgE,IAAIwhI,qBAEjBphE,aAAa4H,aACb5H,aAAazmD,OAAOolD,SAVF,IAYdF,QAAYuB,aAAaqH,UAAzB5I,QACF+J,iBAAa5lF,OAAAy+I,yBAAO,IAAI/pJ,IAAImnF,QAAQ,KAAvB4iE,yBAA+B,IAAI/pJ,IAAImnF,QAAQ,MAC5DgK,iBAAmBzI,aAAa6H,iBAAiB5xF,OACnDwoF,QAAQ,GAAGxoF,SAAWwyF,kBAAoBD,cAAcvyF,SAAWwyF,kBACnEzI,aAAa0H,aAGjB1H,aAAazmD,OAAOymD,aAAa6H,kBAErC,OAAOlxF,uDA3BP,MAAO,iOCFf,2EAEa4tF,kDAAkB+8D,6CAAAC,2CAC1B7d,wBAAQtmD,MACL5tC,OAAM,IAAA5sC,OAJM,OAIN,kBACNy/E,YAAasb,2BAAW7V,SAHDw5D,6CAAAC,wCAK1B7d,wBAAQrmD,OACL7tC,QAAQ,IAAA5sC,OARI,OAQJ,oBACRy/E,YAAasb,2BAAW5V,aAPDu5D,6CAAAC,wCAS1B7d,wBAAQnmD,OACL/tC,QAAQ,IAAA5sC,OAZI,OAYJ,oBACRy/E,YAAasb,2BAAWx5F,UAXDo9I,yCAelBC,8CAAuBF,6CAAAG,yBAC/B9jD,2BAAWx5F,OAASw5F,2BAAW1V,QADAq5D,6CAAAG,sBAE/B9jD,2BAAW7V,MAAQ6V,2BAAW5V,WAFC05D,wNChB7B,IAAMphE,sDAAkBqhE,6CAAAC,oDCHV,SCAO,gBFKpBxyJ,KEJmB,cFKnB2P,SACI60F,SAAU,WAJS+tD,6CAAAC,iDCFN,aCAE,gBFEID,6CAAAC,iDAAA,WASvBxyJ,KEXmB,cFYnB2P,SACI60F,SAAU,WAXSguD,kDAgBlBC,wBAAsBF,6CAAAG,yBCnBd,UDqBb1yJ,KEpBmB,cFqBnB2P,SACI60F,SAAU,WAJa+tD,6CAAAG,sBClBV,cD0BjB1yJ,KE1BmB,cF2BnB2P,SACI60F,SAAU,WAVa+tD,6CAAAG,sBCfb,UD4BI,WAbSA,uBGCtBC,iBACTr1H,KAAM,UACNkmE,MAAO,WACPrsD,MAAO,YASEy7G,MAAQ,shBC3Bd,IAAMl+D,iBAAY,SAAZA,UAAa6C,SAAU3uE,OAAQioE,cAA8B,IAClEhqE,gBADkDpQ,OAAgBnI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAEhE/L,KAAOg1F,SAASj4D,QAAQlhB,YAAY7b,OACpCykB,QAAUvQ,OAAOuQ,QACjBlf,KAAOyvF,SAASj4D,QAAQx3B,OACxBuoJ,SAAW94D,SAASj4D,QAAQ+wH,WAC5BroJ,UAAYqoJ,SAAStoJ,UAAUoB,OAAO,GAAG5G,KAEzCi5I,eACAt0H,SAAWqwE,SAASj4D,QAAQ0nD,IAClCw0D,YAAY5yH,OAASypI,6CAAwBzpI,SAAWA,OACxD4yH,YAAY3rD,YAAc4iE,uBAAuB7pI,QACjD4yH,YAAYY,aAAe7kD,SAASj4D,QAAQuzH,cAC5C,IAAM3jI,gBAAkBqoE,SAAShG,SAASC,YAAYgqD,YAAY5yH,QAAQxK,YAAYm2E,UACtF,GAAyB,OAArBvtE,QAAQ7Q,SACR0Q,gBAAkB,SACf,CACH,IAAMwoE,SAAWwB,aAAaN,YAC1BpsE,OAASrc,KAAK+d,OAAO,SAAA9lB,GAAC,OAAqC,IAAjCsvF,SAASrjE,KAAK7c,QAAQpP,EAAE27B,MAAY5qB,IAAI,SAAA/Q,GAAC,OAAIA,EAAEW,QAC7E,GDPY,SCOR6B,MDkBY,aClBMA,MDmBP,YCnB4ByF,UAAwB,CAC/D,IAAMuM,MAAQpU,OAAO6O,KAAKgY,QAAQ7Q,cAAgB,GAElD0Q,iBADA1C,OAASrc,KAAK+d,OAAO,SAAA9lB,GAAC,OAAqC,IAAjCsvF,SAASrjE,KAAK7c,QAAQpP,EAAE27B,MAAY5qB,IAAI,SAAA/Q,GAAC,OAAIA,EAAEgL,SAChDjE,OAASupJ,SAAS5rI,OAAO,SAACjT,QAE/C,IADA,IAAIshJ,OAAQ,EACHrzJ,EAAI,EAAGA,EAAI0kB,OAAOrd,SAET,KADdgsJ,MAAQthJ,OAAO+C,OAAO7T,OAASyjB,OAAO1kB,GAAG,IAAM+R,OAAO+C,OAAO7T,OAASyjB,OAAO1kB,GAAG,IADjDA,KAMnC,OAAOqzJ,QAEPnuI,WAAW,IACV,SDpBO,aCqBLpiB,KACPskB,gBAAkBurD,sBAAsBi+E,SAAUrpI,QAAQ7Q,UACnDgO,OAAOrd,OACd+f,gBjQynCyB,SAA/BksI,6BAAgC1vI,MAAOkF,aACzC,IACIzgB,KADAqB,UAEE+tF,SAAW7zE,MAAMY,kBA2BvB,OA1BIsE,YAAYzhB,OAAQ,WAGpB,IAFA,IAAM0K,OAAS+W,YAAY,GACrB3U,IAAMpC,OAAO1K,OACVrH,EAAI,EAAGA,EAAImU,IAAKnU,IAAK,CAC1B,IAAM8U,MAAQ/C,OAAO/R,GACf4kG,SAAWnN,SAAS3iF,QAAUpU,OAAOmgB,UAAW42E,SAAS3iF,OAAO8P,KAClEggF,UACAl7F,OAAOH,KAAK7I,OAAOmgB,OAAO+jF,WAIlCv8F,QAEA,IADA,IAAMoY,OAASqI,YAAY,GAZPu0G,MAAA,SAAAA,MAaXr9H,KACL,IACM6rE,QADO/iD,YAAY9oB,KAEpBuH,QAAQ,SAACgT,SAAU2yH,MACpBrhE,KAAKprD,OAAOysH,OAAS3yH,WAEzBlS,KAAKkB,KAAKsiE,OANL7rE,IAAI,EAAGA,IAAI8oB,YAAYzhB,OAAQrH,KAAK,EAAGq9H,MAAvCr9H,KAbW,IAsBpBqI,QACAqB,WAGG,IAAIka,MAAMjF,YAAYtW,KAAMqB,QiQvpCT4pJ,CAA6B1C,UAAWrpI,QAAQ7Q,SAAS,IAA7B1C,OAAAu/I,sCAAoC7uI,OAAOrT,IAAI,SAAA/Q,GAAC,OAAKA,SAEnGy7I,YAAYrlI,SAAW,KACvB0Q,gBAAkBwpI,SAAS5rI,OAAO,kBAAM,IACpCE,WAAW,KAKvB,IAAIo4H,6BAA8B,EAE9Bl2H,kBAEAk2H,4BADel2H,gBAAgBqtE,YACMj4E,MAAM,SAAAlc,GAAC,MDZ7B,YCYiCA,EAAEwC,QAGtD,IAAM0mB,YACF/B,SAAQ,UAAAzT,OAAYyT,UACpBF,QAASw0H,YACTrlI,SAAmC,OAAzBqlI,YAAYrlI,SAAoB,KAAO0Q,gBACjDqI,gCACA6tH,wDACAn0H,OAAQ4yH,YAAY5yH,QAGxBynI,SAAS37D,UAAU7tE,gBAAiBoC,YAAY,ywCCzD7C,IAAMgqI,+BAAb,SAAAC,WACI,SAAAD,iBAAwB,IAAAjrD,iBAAA/+F,oKAAAkqJ,CAAA3rJ,KAAAyrJ,gBAAA,QAAA1nF,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAmqJ,0CAAA5rJ,MAAAwgG,iBAAAqrD,+BAAAJ,iBAAArzJ,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJ+8E,wBAFetqF,MAD5B,0XAAAqqJ,CAAAL,eAAoChiE,qQAApCsiE,CAAAN,iBAAAjyJ,IAAA,6BAAAN,MAAA,SAAAm0F,2BAMgChE,cACxB,OAAOA,aAAa,MAP5B7vF,IAAA,YAAAN,MAAA,SAAAg0F,UAUe8+D,cAAexsI,QAAS6pE,cAC/B6D,iBAAUltF,KAAMgsJ,cAAe3iE,cAC3B7pE,qBAZZhmB,IAAA,wBAAAN,MAAA,SAAAm3F,sBAgB2B1hF,UACnB,IAAIgO,OACAwxE,UACEpzF,KAAOiF,KAAK83B,QAAQlhB,YAAY7b,OAkBtC,OAhBiB,OAAb4T,SACAw/E,UAAY,KFfJ,SEgBDpzF,MACP4hB,OAAShkB,OAAOgkB,OAAOhO,UACvBw/E,UAAYnuF,KAAK83B,QAAQx3B,OAAO+d,OAAO,SAAA9lB,GAAC,OAAiC,IAA7BokB,OAAOhV,QAAQpP,EAAEgL,SAAe+F,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MFjB3E,aEkBLn5B,KACPozF,cAEAxxE,OAAShO,SAAS,IAEdw/E,UAAYnuF,KAAK83B,QAAQx3B,OAAO+d,OAAO,SAAA9lB,GAAC,OAAiC,IAA7BokB,OAAOhV,QAAQpP,EAAEW,SAAeoQ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MAEvFvX,OAAShkB,OAAOgkB,OAAOhO,UACvBw/E,UAAYnuF,KAAK83B,QAAQx3B,OAAO+d,OAAO,SAAA9lB,GAAC,OAAiC,IAA7BokB,OAAOhV,QAAQpP,EAAEgL,SAAe+F,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,OAI3F1P,KAAM2pE,UACNtyE,MAAO,SAvCnBriB,IAAA,cAAAN,MAAA,SAAAy2F,cA4CQ,OAAO,SA5Cf87D,eAAA,2KCC2B,6BCkBZt3D,wBArB0B,SAARA,MAAQpE,UAAQ,OAAI,SAAC4D,SAAUjI,YAC5D,IAAMwC,kBAAoB,SAApBA,kBAA8B1lF,MAChC,IAAM6qE,MAAQwQ,0BACRrkE,SACF7Q,SAAUohF,SAASj4D,QAAQm0H,oBAAoBzjJ,OAEnDkjF,WAAWlsF,QAAQ,SAAA+sF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW/sE,WACtE6zD,MAAM/gD,mBAGVqhE,SAASzrB,GAAG,YAAagmB,mBACRhmB,GAAG,YAAagmB,mBAChBhmB,GAAG,WAAY,WACZ,IAAMmL,MAAQwQ,0BACd6H,WAAWlsF,QAAQ,SAAA+sF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,WACvD59E,SAAU,SAEd0kE,MAAM/gD,sBCRfsiE,wBAXD,SAARA,MAAQ7E,UAAQ,OAAI,SAAC4D,SAAUjI,YAQjCiI,SAASzrB,GAAG,QAPc,SAApBgmB,kBAA8B1lF,MAChC,IAAMgX,SACF7Q,SAAUohF,SAASj4D,QAAQm0H,oBAAoBzjJ,OAEnDkjF,WAAWlsF,QAAQ,SAAA+sF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW/sE,oMCNvE,IAAMovE,mCAAes9D,iCAAAC,4BCLR,OJWoB,SAAP1wE,KAAOsU,UAAQ,OAAI,SAAC4D,SAAUjI,YAC3D,IAEIlsE,QAFAozE,YACAC,UAEEiB,OAAS/P,2BACTjsD,QAAUi4D,SAASj4D,QACnBs0H,YAAct0H,QAAQ4hE,cAAc2yD,mBACpC/yB,SAAsC,eAA3BxhG,QAAQ7oB,SAASw1B,MAAyB,IAAM,IAC3D6nH,UAAYx0H,QAAQq1B,OAAOvrC,SAAStgB,QACpCirJ,aAAeD,UAAU/oJ,QAAqB,MAAb+1H,SAAmB,EAAI,GAE9D3lC,SAASv7F,KAAK07F,SAAS5rB,GAAG,QAAS,WAC/B,IAAMmL,MAAQwQ,0BACd+O,UACIx+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,KAEd2iE,GAAG,OAAQ,WACV,IAAMmL,MAAQwQ,2BAEdgP,QACIz+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,IAEN6O,EAAIxT,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOz+E,EAAGg4I,YAAYn1H,QACtD47D,OAAOttF,EAAI3E,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOttF,EAAG6mJ,YAAYl1H,SAEtD1X,SACI7Q,SAAU69I,uBACL10H,QAAQ32B,aAAemrJ,UAAUpnH,OAAO0tD,SAAS0mC,UAA2B,EAAfizB,cAC1DD,UAAUpnH,OAAO2tD,OAAOymC,UAA2B,EAAfizB,eAAmB/6I,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,MAGtFumF,WAAWlsF,QAAQ,SAAA+sF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW/sE,aACvE0oD,GAAG,MAAO,WACT,IAAMmL,MAAQwQ,2BAEdgP,QACIz+E,EAAGi/D,MAAMj/D,EACT7O,EAAG8tE,MAAM9tE,IAEN6O,EAAIxT,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOz+E,EAAGg4I,YAAYn1H,QACtD47D,OAAOttF,EAAI3E,KAAKG,IAAI,EAAGH,KAAKC,IAAIgyF,OAAOttF,EAAG6mJ,YAAYl1H,SAElD1X,QADAozE,SAAS0mC,YAAczmC,OAAOymC,WAE1B3qH,cAIAA,SAAU69I,uBACL10H,QAAQ32B,aAAemrJ,UAAUpnH,OAAO0tD,SAAS0mC,UAA2B,EAAfizB,cAC1DD,UAAUpnH,OAAO2tD,OAAOymC,UAA2B,EAAfizB,eAAmB/6I,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,MAI1FumF,WAAWlsF,QAAQ,SAAA+sF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW/sE,iBG7DlD0sI,iCAAAC,yBCJP,QDMIh4D,yBAFG+3D,iCAAAC,yBCFP,QDKIv3D,yBAHGu3D,gNEE5B,IAAMM,qBAAuB,SAAvBA,qBAAwB/xE,QAASvtB,KAAMnnC,UACzC,IAAIrX,YAEA29I,UAEAn/F,KAFAm/F,UACAhzB,SACAnsE,KADAmsE,SAGA1mC,SAKA5sE,SALA4sE,SACAC,OAIA7sE,SAJA6sE,OACA65D,oBAGA1mI,SAHA0mI,oBACAC,kBAEA3mI,SAFA2mI,kBACAzuG,OACAl4B,SADAk4B,OAEE0uG,kBAAoBlyE,QAAQ4+C,UAalC,OAVI3qH,SADAikF,SAAS0mC,YAAczmC,OAAOymC,aAEvBszB,kBAAoBF,qBAAuBC,kBAAoBzuG,QAC1DouG,UAAUpnH,OAAOynH,kBAAoBzuG,OAASwuG,qBACtDJ,UAAUpnH,OAAOynH,kBAAoBzuG,SAClC0uG,kBAAoB1uG,OAASA,QACxBouG,UAAUpnH,OAAgB,EAATgZ,QAAaouG,UAAUpnH,OAAOwnH,oBAA+B,EAATxuG,UAErEouG,UAAUpnH,OAAO0nH,mBAAoBN,UAAUpnH,OAAO0nH,kBAAoBF,sBAE7E,MAAbpzB,UAA8B3qH,SAASmzB,UAChCnzB,y5CC6CIynF,4zBAlEuCP,mWAmBhBxM,aAAc7pE,SAC5C,IAAIpL,EACA7O,EACA0xB,MACAC,OACE64D,SAAW/vF,KAAK+vF,SAChBj4D,QAAUi4D,SAASj4D,QACnB7oB,OAASjP,KAAKiP,SACdk+C,KAAOr1B,QAAQq1B,OAAOvrC,SACtBya,UAAS,GAAApwB,OAAMgD,OAAOknF,YAAb,KAAAlqF,OAA4BgD,OAAOotB,WAE5C37B,OAAS8e,QAAQ7Q,SAASohF,SAASj4D,QAAQ32B,aAC3CmrJ,UAAYn/F,KAAK7rD,QACjBiC,MAAQ7C,QAAUysD,KAAK0qC,cAAcn3F,OAAO,IAAKysD,KAAK0qC,cAAcn3F,OAAO,QAE3E44H,STjBY,eSiBDxhG,QAAQ7oB,SAASw1B,MAAuB,IAAM,IAEzDooH,kBAAoB98D,SAASj4D,QAAQ4hE,cAAc2yD,mBAAgC,MAAb/yB,STxC9D,SAFD,SS6CPizB,aAAeD,UAAU/oJ,QAAqB,MAAb+1H,SAAmB,EAAI,GACxDwzB,oBAAsBh1H,QAAQi8D,oBAAoBO,aAClDy4D,eAAiBvqE,YAAYsqE,oBAAqB,KAAM,GAA5B,GAAA7gJ,OAAmCgD,OAAOknF,YAA1C,yBTxBhB,eS0BdpG,SAASj4D,QAAQ7oB,SAASw1B,OAC1BrwB,EAAI7Q,MAAM,GAAKgpJ,cAAgB,EAC/BhnJ,EAAI,EACJ0xB,MAAQ1zB,MAAM,GAAKA,MAAM,IAAM,EAC/B2zB,OAAS21H,oBAETz4I,EAAI,EACJ7O,EAAIhC,MAAM,GAAKgpJ,cAAgB,EAC/Br1H,OAAS3zB,MAAM,GAAKA,MAAM,IAAM,EAChC0zB,MAAQ41H,mBAKGrqE,YAAYuqE,eTjCf,SSiCwCrsJ,cAAQ0T,IAAG7O,IAAG0xB,YAAOC,gBAAWmF,WAC9EiyB,MAJU,SAAV0+F,QAAoBrvD,KD9BF,SAAnBnF,iBAAmBzI,UAAQ,OAAI,SAAC4D,SAAUjI,YACnD,IACIlsE,QADAozE,YAEEC,UACAiB,OAAS/P,2BACTjsD,QAAUi4D,SAASj4D,QACnBw0H,UAAYx0H,QAAQq1B,OAAOvrC,SAAStgB,QACpCg4H,SRdgB,eQcLxhG,QAAQ7oB,SAASw1B,MAAuB,IAAM,IAIzDze,UACF2mI,kBAJsB70H,QAAQ4hE,cAAc2yD,mBAAgC,MAAb/yB,SRtClD,QAEC,UQyCdp7E,OAHWouG,UAAU/oJ,QAAqB,MAAb+1H,SAAmB,EAAI,IAKpD5+C,WAEJiZ,SAASv7F,KAAK07F,SAAS5rB,GAAG,QAAS,WAC/B,IAAMmL,MAAQwQ,0BACd+O,S7K6LY,SAAdq6D,YAAe1qE,QAASlP,OAC1B,IAAM65E,mBAAqB3qE,QAAQnJ,wBACnC,OACIhlE,EAAGi/D,MAAMj/D,EAAI84I,mBAAmB94I,EAChC7O,EAAG8tE,MAAM9tE,EAAI2nJ,mBAAmB3nJ,G6KjMrB0nJ,CAAYjtJ,KAAMqzE,MAAMmB,aACnCkG,QAAUrH,MAAMqH,UACjBxS,GAAG,OAAQ,WACV,IAAMmL,MAAQwQ,0BACR6oE,oBAAsBhyE,QAAqB,MAAb4+C,SRrDvB,QAEC,UQqDd5+C,QAAQtmE,GAAKi/D,MAAMriB,GACnB0pB,QAAQn1E,GAAK8tE,MAAMpiB,GAEnBjrC,SAAS0mI,oBAAsBA,oBAC/B1mI,SAAS4sE,SAAWA,SACpB5sE,SAAS6sE,OAASA,OAClB,IAAMlkF,SAAW89I,qBAAqB/xE,SAAW4xE,oBAAWhzB,mBAAYtzG,UAExExG,SACI7Q,SAAUw+I,qCACLr1H,QAAQ32B,YAAcwN,UAE3By+I,SAAS,GAEbr9D,SAAS7B,kBAAkBxC,WAAW,GAAIlsE,WAC3C0oD,GAAG,MAAO,WACT,IAAMmL,MAAQwQ,0BACR6oE,oBAAsBhyE,QAAqB,MAAb4+C,SRxEvB,QAEC,UQuEdtzG,SAAS0mI,oBAAsBA,oBAC/B1mI,SAAS4sE,SAAWA,SACpB5sE,SAAS6sE,OAASA,OAClB,IAAMlkF,SAAW89I,qBAAqBp5E,OAASi5E,oBAAWhzB,mBAAYtzG,UACtExG,SACI7Q,SAAUw+I,qCACLr1H,QAAQ32B,YAAcwN,UAE3By+I,SAAS,EACTn+I,QACIy/C,YACI0wB,SAAU,OAItB2Q,SAAS7B,kBAAkBxC,WAAW,GAAIlsE,aC3BtCg5E,CAAiBzI,SAAjByI,CAA2BmF,IAAK,aAI7BpvC,KAAK,IAAKhpD,GACAgpD,KAAK,IAAKn6C,GACVm6C,KTnEJ,QSmEgBt3B,OACZs3B,KTlEH,SSkEgBr3B,0DA5D9B,MVdoB,qEUsBpB,OACImF,UAAW,uBACX85D,YTxBe,4BUEd+J,yCAAa,SAAbA,WAAcnQ,UACvB,IAAMj4D,QAAUi4D,SAASj4D,QACnB2/C,QAAU,SAAVA,QAAW/kE,IAAK2pB,UAAWisD,QAC7B,IAAM6N,YAAcr+D,QAAQ7oB,SAASknF,YACrC7T,6BAAcxqD,QAAQ5I,SACL++B,UADjB,IAAAhiD,OAC+BkqF,YAD/B,oBAEiB93E,OAAO,SAAA9lB,GAAC,OAAgC,IAA5Bma,IAAI8R,KAAK7c,QAAQpP,EAAE27B,MAC/B+5B,UAAU,OACVwpB,QAAQp7C,UAAWisD,SAGxC,OACIyb,KAAM,SAAAA,KAACrxF,KAAqB,IAAhBzD,OAAgBnI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAClBqvF,YAAcr+D,QAAQ7oB,SAASknF,YAChCzjF,IAAIq2E,YAAYzpF,QAAWoT,IAAIw2E,WAAW5pF,QAG3Cm4E,QAAQ/kE,IAAIw2E,WAAYj6E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,qBAAsD,GAC9E1e,QAAQ/kE,IAAIw2E,WAAYj6E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,oBAAqD,GAC7E1e,QAAQ/kE,IAAIq2E,YAAa95E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,oBAAqD,IAJ9E1e,QAAQ/kE,IAAI40E,YAAar4E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,oBAAqD,IAOtFk3D,SAAU,SAAAA,SAAC36I,KAAqB,IAAhBzD,OAAgBnI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACtBqvF,YAAcr+D,QAAQ7oB,SAASknF,YAChCzjF,IAAIq2E,YAAYzpF,QAAWoT,IAAIw2E,WAAW5pF,QAG3Cm4E,QAAQ/kE,IAAIq2E,YAAa95E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,qBAAsD,GAC/E1e,QAAQ/kE,IAAIw2E,WAAYj6E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,qBAAsD,IAH9E1e,QAAQ/kE,IAAI40E,YAAar4E,OAAOotB,WAAP,GAAApwB,OAAuBkqF,YAAvB,qBAAsD,6yCCvB1Em3D,kEACjB,SAAAA,oBAAwB,IAAA9sD,iBAAA/+F,uKAAA8rJ,CAAAvtJ,KAAAstJ,mBAAA,QAAAvpF,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAA+rJ,6CAAAxtJ,MAAAwgG,iBAAAitD,kCAAAH,oBAAAl1J,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJsmF,YAAc4K,yCAAWz+F,MAAKsuF,UACnCtuF,MAAK4zF,UAAY,WAHG5zF,yZADmB0zF,0TAWpC9L,aAAc7pE,SAAuB,IAAdrX,QAAcrB,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,OAGxCk2F,EAFiBh9F,KAAKs1F,YAAYntF,QAAQ60F,UAAYh9F,KAAKq1F,YAElDhM,aAAcrpF,wDANvB,MZXmB,uCaCd6wG,oBACT5hG,QACI85D,aAAc,SAAAA,aAACjxC,QAAS5+B,OAAV,OAAoB4wE,eAAehyC,QAAQ4yD,YAAexxF,SAE5EoH,QACAa,aACAusJ,mBACAh0D,aACI3wB,aAAc,SAAAA,aAACjxC,QAAS5+B,OACpB,IAAMwgG,YAAc5vB,eAAehyC,QAAQkzF,aAAc9xH,OAKzD,OAJC,UAAW,SAAU,UAAUsG,QAAQ,SAAC+wE,OACrCmpB,YAAYnpB,OAAS3vE,KAAKC,IAAI64F,YAAYnpB,OAAS,EAAImpB,YAAYnpB,OAAS,EAChD,GAAvBmpB,YAAYrhE,SAAwC,GAAxBqhE,YAAYphE,aAE1CohE,cAGfwX,gBACA23C,YACAtlJ,OACIwlE,aAAc,SAAAA,aAACjxC,QAAS5+B,OAIpB,OAHA4+B,QAAQx2B,QAAQiC,MAAMrK,OACtB4+B,QAAQ61H,oBACR71H,QAAQ/tB,QAAQkgH,OAAO,QAAS/wH,OACzBA,QAGfoI,SACAmpG,cACA1gG,SACA6jJ,OACI7kF,aAAc,SAAAA,aAACjxC,QAAS5+B,OAAV,OAAoB4wE,eAAehyC,QAAQ+1H,WAAc30J,UC1BlE40J,iBACG,aADHA,eAEC,WAGDC,qBACT72H,OAAQ,GACRD,MAAO,GACPoB,SAAU7jB,IACV8jB,UAAW9jB,IACXwpB,QAAS,EACT66D,OAAQ,EACRiwD,OAAQ,GAGCkF,cACT1rJ,KAAM,GACN88F,YAAa,SAAAA,YAACzb,KACV,MbCY,SaDRA,KbES,UaFOA,IbCR,OAKE,WaATs6B,gCACT9nB,YAAa,OACb83D,YAAa,QACbC,YAAa,gBACb/pJ,WACIgqJ,QACIt7E,MAAO,YACPu7E,MAAO,cAGfjjJ,MACI7I,MACI88F,YAAa,QACbnoE,MAAO,GACP9yB,UAAW,SAAAA,UAAA/D,KAAG,OAAIA,MAEtBg8F,MACI//D,UAAW,cACXnF,OAAQ,GACRD,MAAO,GACP0Y,MAAO,iBACP50C,KAAM,YAWLszJ,kBAAW,SAAXA,SAAYjyD,MACrB,OAAIA,MAA0B,iBAAVA,KACTrwB,uBAAUqwB,MACZA,uLC/CN,IAAMkyD,2BAAe,SAAfA,aAAgBhtJ,OACzB,IAAMitJ,UAAYjtJ,MAAMsV,YAAY7b,OAKpC,OAASwzJ,oBAAW7tJ,OAJLY,MAAMq9G,eAIO6vC,MAHdltJ,MAAM2N,SAAS2Z,OAAS,EAGH6lI,QAFnBtD,gBAAgBoD,aAYvBG,kCAAsB,SAAtBA,oBAAuBhuJ,OAAQ8tJ,OAIxC,IAHA,IAAMG,mBACAC,eAAiBtkF,kCAAqB5pE,OAAO,GAAIA,OAAO,IAErDzI,EAAI,EAAGA,GAAKu2J,MAAOv2J,IACxB02J,gBAAgB12J,GAAK22J,eAAe32J,EAAIu2J,OAE5C,OAAOG,iBAgMEE,gBAAkB,SAAlBA,gBAAmB9zJ,KAAMsmH,UAAWkB,YAAe,IAAAtiH,KAExDwuJ,QAGAptC,UAHAotC,QACAF,UAEAltC,UAFAktC,UACAjtJ,MACA+/G,UADA//G,MAGAZ,OAIA6hH,WAJA7hH,OACAouJ,aAGAvsC,WAHAusC,aACAC,UAEAxsC,WAFAwsC,UACAP,MACAjsC,WADAisC,MAEEQ,IAAMtuJ,OAAgB,UAAT3F,KAAmB,EAAI2F,OAAOpB,OAAS,GACpDmiC,KAAO+sH,MAAe,UAATzzJ,KAAmB,EAAIyzJ,MAAMlvJ,OAAS,GAEzD,OAAA2vJ,6BAAAhvJ,QACKsuJ,UAA0B,SAAdA,UAAuBjtJ,MAAMmtJ,SAASO,KAAO1tJ,MAAM4tJ,iBAAmB5tJ,MAAMmtJ,SAASO,MADtGC,6BAAAhvJ,KAAA,QAEW6uJ,aAAa/zJ,OAFxBk0J,6BAAAhvJ,KAAA,KAGiB,UAATlF,KAAmB,EAAIg0J,UAAUzvJ,OAAS,GAHlD2vJ,6BAAAhvJ,KAAA,SAIY+uJ,IAAKvtH,OAJjBxhC,uWC9NiBkvJ,sCAOjB,SAAAA,aAAah0J,0KAAci0J,CAAApvJ,KAAAmvJ,cACvBnvJ,KAAKkjE,SACLljE,KAAKqvJ,aACLrvJ,KAAKu9F,OAAS,KACdv9F,KAAKsvJ,WAAa,KAClBtvJ,KAAK6tJ,OAASl1J,OAAOmgB,UAAWk1I,cAChChuJ,KAAKqvJ,UAAY,KACjBrvJ,KAAKuvJ,cAAgBp0J,aAAa+vG,aAClClrG,KAAKwvJ,OAASr0J,aAAayhE,MAC3B58D,KAAKw/E,IAAM/zE,cACXzL,KAAKgrH,aAAeryH,OAAOmgB,UAAW9Y,KAAK4W,YAAY64I,sBACvDzvJ,KAAK0qF,QAAU5gB,kBAAmB9pE,KAAK4W,YAAY4H,iBAEnD4qD,sBAAsBppE,KAAM6wG,oBAC5B7wG,KAAK0vJ,eAAiBzrE,qCAAsB3B,6BAAc,QAAf,GAAAr2E,OACpCjM,KAAKiP,SAASknF,YADsB,sBAG3Cn2F,KAAKg4I,UAAY,IAAIyT,+BAAezrJ,MAChCgqF,YAAarxF,OAAOmgB,UAAWs1E,4BAAoBuhE,sCACnD1lE,SAAU2E,kCACVzD,uBAAwByC,kDACzBvF,sCAAaqB,sVAIhB,OAAO1pF,KAAKw/E,gDA2CZ,OAAI14E,UAAOxH,OACAU,KAEJA,KAAKg4I,sDAUZ,MflFY,yDesFZ,OAAIlxI,UAAMxH,QACNU,KAAK4vJ,aAAL9oJ,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK4vJ,mDAUZ,OAAI9oJ,UAAOxH,QACPU,KAAKu9F,OAALz2F,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACA9G,KAAK4+F,SACE5+F,MAEJA,KAAKu9F,+DAWE,IAAAyF,aAIVhjG,KAAKiP,SAFL9D,KAFU63F,aAEV73F,KACAgrF,YAHU6M,aAGV7M,YAIJ,OAFAn2F,KAAKuvJ,cAAc/5H,SAASyuD,qCAAsB3B,6BAAc,QAAf,GAAAr2E,OAC1CkqF,YAD0C,uBDnD1B,SAAlB05D,gBAAmBvvJ,KAAMovB,KAAMw7E,aAAc/mG,WACtD,IAAMosE,SAON,OALAjwE,KAAKd,QAAQ,SAAC2L,KAAMnH,OAChB,IAAM9K,MAAQw2B,KAAOvkB,KAAKukB,MAAQvkB,KADR2kJ,sBAEA5kD,aAAa3vE,WAAWp3B,UAAUjL,QAApDg+B,OAFkB44H,sBAElB54H,OAAQD,MAFU64H,sBAEV74H,MAChBs5C,MAAMvsE,QAAWkzB,OAAQA,OAAS,EAAGD,MAAOA,MAAQ,KAEjDs5C,MC6CIs/E,CAAgB7vJ,KAAKM,OAAQ8qJ,MAAOprJ,KAAKuvJ,cAAepkJ,KAAK7I,KAAK6B,yEAUxD,IAAAuuH,kBASb1yH,KAAK05F,cAPLziE,MAFay7F,kBAEbz7F,MACAC,OAHaw7F,kBAGbx7F,OACAmB,SAJaq6F,kBAIbr6F,SACAC,UALao6F,kBAKbp6F,UACA0F,QANa00F,kBAMb10F,QACA66D,OAPa65B,kBAOb75B,OACAiwD,OARap2B,kBAQbo2B,OAGArkH,MACAzkC,KAAKiP,SADLw1B,MAIEsrH,WAAuB,EAAV/xH,QACbgyH,UAAqB,EAATlH,OACZmH,UAAqB,EAATp3D,OAElB74F,KAAKM,KAAKN,KAAKkwJ,cAAclwJ,KAAKsB,UAElC,IAAM6uJ,WAAanwJ,KAAKowJ,gBAClBC,YAAcF,WAAWj5H,OAAS,EAAIi5H,WAAWj5H,OAAS64H,WAAa,EACvEO,WAAaH,WAAWl5H,MAAQ84H,WAGhCQ,YAAcvwJ,KAAKwwJ,eAAeT,WAAYtrH,OA1BnCgsH,mBD3CQ,SAApBC,kBAAqBzhJ,OAAQ+W,SAAU1lB,MAChD,IAAIugG,YAAc,EACdC,WAAa,EACb6vD,eACA15H,MAAO,EAAGC,OAAQ,GAGlB64H,WAKA/pI,SALA+pI,WACAO,WAIAtqI,SAJAsqI,WACAC,YAGAvqI,SAHAuqI,YACAF,YAEArqI,SAFAqqI,YACAh4H,SACArS,SADAqS,SAGAltB,KAEA8D,OAFA9D,KACAs5B,MACAx1B,OADAw1B,MAGA23D,KAEAjxF,KAFAixF,KAGEw0D,gBADFzlJ,KADA7I,KAEyB88F,YACvByxD,cACAC,cACFC,aAAe,EA4EnB,OA3EAR,YAAY/wJ,QAAQ,SAACwxJ,WAAY/4J,GAC7B,IAAMg5J,WAAch6H,MAAO,EAAGC,OAAQ,GAChCg6H,WAAcj6H,MAAO,EAAGC,OAAQ,GAChC3kB,MAAQjS,KAAKrI,Od7HP,Sc+HR24J,iBd9HS,Uc8HmBA,iBAE5BI,WAAW/5H,OAAS84H,WACpBmB,UAAUj6H,OAAS1kB,MAAMujB,KAAO,EAAIl1B,KAAKkU,KAAKvC,MAAMujB,KAAOl1B,KAAKowC,IAAMorD,KAAKnlE,OAAS84H,WACpFgB,aAAenwJ,KAAKG,IAAImwJ,UAAUj6H,MAAO85H,cACzCE,UAAUh6H,MAAQ+5H,WAAW/5H,MAAQ85H,aAGrCC,WAAW95H,OAASt2B,KAAKG,IAAIiwJ,WAAW95H,OAAQklE,KAAKllE,QAAU64H,WAC/DmB,UAAUh6H,OAAS85H,WAAW95H,OAC9B+5H,UAAU/5H,OAAS85H,WAAW95H,SAG9B85H,WAAW/5H,MAAQr2B,KAAKG,IAAIiwJ,WAAW/5H,MAAO1kB,MAAMujB,KAAO,EAAIl1B,KAAKkU,KAAKvC,MAAMujB,KAAOl1B,KAAKowC,IACzForD,KAAKnlE,OAAS84H,WAChBmB,UAAUj6H,MAAQ+5H,WAAW/5H,MAC7Bg6H,UAAUh6H,MAAQ+5H,WAAW/5H,MAC7B85H,aAAenwJ,KAAKG,IAAImwJ,UAAUj6H,MAAO85H,cAGzCC,WAAW95H,QAAU64H,WACrBmB,UAAUh6H,OAASklE,KAAKllE,OAAS64H,WACjCkB,UAAU/5H,OAAS85H,WAAW95H,OAASg6H,UAAUh6H,QAGvC,eAAVuN,MACAo8D,YAAcjgG,KAAKG,IAAI8/F,YAAaowD,UAAU/5H,SAE9C2pE,aAAeowD,UAAU/5H,OACzB4pE,WAAalgG,KAAKG,IAAI+/F,WAAYmwD,UAAUh6H,MAAOq5H,YAAcP,YAErEY,eACI15H,MAAOr2B,KAAKG,IAAIkwJ,UAAUh6H,MAAO05H,cAAc15H,OAC/CC,OAAQt2B,KAAKG,IAAIkwJ,UAAU/5H,OAAQy5H,cAAcz5H,SAErD25H,WAAWrvJ,KAAKyvJ,WAChBH,WAAWtvJ,KAAK0vJ,aAEpBL,WAAWrxJ,QAAQ,SAACyxJ,UAAWh5J,GAC3B,GAAc,eAAVwsC,MACAwsH,UAAU/5H,OAAS2pE,YACnBiwD,WAAW74J,GAAGg/B,MAAQ85H,adxKd,ScyKJH,iBdxKK,UcwKuBA,iBAC5BL,YAAYt4J,GAAGi/B,OAAS2pE,YACxBiwD,WAAW74J,GAAGi/B,OAAS2pE,YACvBgwD,WAAW54J,GAAGg/B,MAAQs5H,YAAYt4J,GAAGg/B,MAAQ85H,eAE7CR,YAAYt4J,GAAGg/B,MAAQ85H,aACvBF,WAAW54J,GAAGg/B,MAAQ85H,aACtBR,YAAYt4J,GAAGg/B,MAAQ85H,cAE3BjwD,WAAalgG,KAAKG,IAAI+/F,WAAa+vD,WAAW54J,GAAGg/B,YAGjD,GADAg6H,UAAUh6H,MAAQr2B,KAAKG,IAAI+/F,WAAYzoE,UdrLhC,QcsLHu4H,iBdnLM,WcmLqBA,gBAC3BL,YAAYt4J,GAAGg/B,MAAQ6pE,WACvBgwD,WAAW74J,GAAGg/B,MAAQ6pE,WACtBiwD,aAAejwD,eACZ,CACH,IAAM0R,WAAa+9C,YAAYt4J,GAAGg/B,MAC5Bk6H,cAAiBR,cAAc15H,MAAQ85H,aAC7CD,WAAW74J,GAAGg/B,MAAQ85H,aACtBF,WAAW54J,GAAGg/B,MAAQs5H,YAAYt4J,GAAGg/B,MAAQ85H,aAC7CR,YAAYt4J,GAAGg/B,MAAQr2B,KAAKG,IAAIyxG,WAAY2+C,eAC5CrwD,WAAalgG,KAAKG,IAAI+/F,WAAYmwD,UAAUh6H,OAAS84H,cAIjEjvD,WAAalgG,KAAKG,IAAI+/F,WAAYwvD,aAEzBzvD,YADTA,aAAewvD,YAAcN,WACPjvD,sBAAY+vD,sBAAYC,sBAAYH,4BAAeI,2BC5BjEL,CAAkB1wJ,KAAKiP,UACzB8gJ,sBAAYO,sBAAYC,wBAAaF,wBAAah4H,kBAAUC,qBAAat4B,KAAKM,QAF5EugG,YA5Ba4vD,mBA4Bb5vD,YAAaC,WA5BA2vD,mBA4BA3vD,WAAY+vD,WA5BZJ,mBA4BYI,WAAYC,WA5BxBL,mBA4BwBK,WAAYH,cA5BpCF,mBA4BoCE,cAAeI,aA5BnDN,mBA4BmDM,aAiBpE,OAbA/wJ,KAAK05F,aACDziE,MAAOr2B,KAAKG,IAAI+/F,WAAY7pE,OAASg5H,UAAYD,UACjD94H,OAAQt2B,KAAKG,IAAI8/F,YAAa3pE,QAAU+4H,UAAYD,UACpDO,wBACAO,sBACAD,sBACAF,4BACAI,0BACAK,aACIn6H,MAAOr2B,KAAKC,IAAIw3B,SAAUr4B,KAAK05F,cAAcziE,OAASg5H,UAAYD,UAClE94H,OAAQm5H,eAGTrwJ,2DAYP,OAFAA,KAAKuvJ,cAAc/5H,SAASyuD,qCAAsB3B,6BAAc,QAAf,GAAAr2E,OACNjM,KAAKiP,SAASknF,YADR,mBAE1Cn2F,KAAKuvJ,cAAch0H,WAAWv7B,KAAK4tJ,QAAQtrJ,KAAOtC,KAAK4tJ,QAAQtrJ,KAAO,oDAUpE6xB,WAAW,IAAAk9H,mBACsCrxJ,KAAK05F,cAAvD03D,YADYC,mBACZD,YAAatI,OADDuI,mBACCvI,OAAQ9qH,QADTqzH,mBACSrzH,QAAS/G,MADlBo6H,mBACkBp6H,MAAOoB,SADzBg5H,mBACyBh5H,SADzB07E,cAEiB/zG,KAAKiP,SAAlCg/I,YAFYl6C,cAEZk6C,YAAaC,YAFDn6C,cAECm6C,YACrB,ODvLoB,SAAfoD,aAAgBn9H,UAAWy5H,MAAOl0D,YAAazqF,QACxD,IAAMqhJ,WAAa1vJ,KAAKC,IAAI64F,YAAYrhE,SAAUqhE,YAAYziE,OAExDs6H,eAAiB/uE,YAAYruD,UAAW,SAAU,GAAtB,GAAAloB,OAA6BgD,OAAOknF,YAApC,kBACzBhhE,MdnDQ,QckDM,GAAAlpB,OACEqkJ,WADF,OAEdn7H,MdlDS,ScgDK,GAAAlpB,OAEGytF,YAAYxiE,OAFf,OAGd/B,MAAM,gBAHQ,GAAAlpB,OAGYytF,YAAYovD,OAHxB,OAAA78I,OAGoCgD,OAAOg/I,YAH3C,KAAAhiJ,OAG0DgD,OAAOi/I,cAC/E/4H,MAAM,aAAcy4H,MAAMxuD,uBAAuBt1F,SAClD8jJ,MAAMxuD,YAAYnwF,OAAO4uB,UAAY+vH,MAAMxuD,aACnD,OAAO5c,YAAY+uE,eAAgB,MAAO,GAAxB,GAAAtlJ,OAA+BgD,OAAOknF,YAAtC,uBACDhhE,MdzDA,QcwDV,GAAAlpB,OAC0BqkJ,WAD1B,OAEUn7H,MdzDG,YcuDb,GAAAlpB,OAE6BqkJ,WAF7B,OAGUn7H,MdzDC,ScyDa,QACdA,MAAM,cAAe,GACrBA,MAAM,UALhB,GAAAlpB,OAK8BytF,YAAY17D,QAL1C,OAMU17B,KAAKsrJ,MAAMtrJ,MACX6yB,MAAM,aAAc,UACpBnJ,OCsKNslI,CAAan9H,UAAWn0B,KAAK4tJ,SAChC12H,OAAQk6H,YAAYl6H,OACpBD,YACAoB,kBACAywH,cACA9qH,gBACAiwH,wBACAC,yBACDluJ,KAAKiP,kDAWR,IAAM8gF,SAAW/vF,KAAK+vF,WADhByhE,cAMFxxJ,KAAKiP,SAHLknF,YAHEq7D,cAGFr7D,YACA83D,YAJEuD,cAIFvD,YACAC,YALEsD,cAKFtD,YALEuD,mBAcFzxJ,KAAK05F,cANLrhE,SAREo5H,mBAQFp5H,SACAC,UATEm5H,mBASFn5H,UACArB,MAVEw6H,mBAUFx6H,MACAC,OAXEu6H,mBAWFv6H,OACA2hE,OAZE44D,mBAYF54D,OACAiwD,OAbE2I,mBAaF3I,OAEE4E,gBAAkBlrE,YAAYF,6BAActiF,KAAKkvB,SAAU,OAAQ,GAAtC,GAAAjjB,OAA6CkqF,YAA7C,gBAcnC,OAZAu3D,gBAAgBj2E,QAAhB,GAAAxrE,OAA2BkqF,YAA3B,gBAAAlqF,OAAqDjM,KAAKw/E,MAAO,GACjEkuE,gBAAgBv4H,MAAM,QAAS,QAE/Bu4H,gBAAgBv4H,MAAM,QAAtB,GAAAlpB,OAAkCrL,KAAKC,IAAIw3B,SAAUpB,OAAkB,EAAT4hE,OAA9D,OACiB1jE,MAAM,SADvB,GAAAlpB,OACoCrL,KAAKC,IAAIy3B,UAAWpB,QAAmB,EAAT2hE,OADlE,OAEiB1jE,MAAM,SAFvB,GAAAlpB,OAEoC4sF,OAFpC,OAGiB1jE,MAAM,SAHvB,GAAAlpB,OAGoC68I,OAHpC,OAAA78I,OAGgDgiJ,YAHhD,KAAAhiJ,OAG+DiiJ,cAC/DluJ,KAAK0tJ,gBAAgBA,gBAAgB1hI,QAGrChsB,KAAK0xJ,YAAYhE,iBACjB39D,SAASujD,mBAAmBtzI,KAAKM,OAAOgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MAC5Cw5H,gFASUptJ,MACjB,IAAMa,UAAYnB,KAAKmB,YAEvB,MAAa,YADAnB,KAAK6oJ,WAAWtoJ,UAAUoB,OAAO,GAAG5G,sLAE7C42J,IACKxwJ,UAAYb,KAAKiD,SAGjBpC,YAAab,KAAKpH,gDAvOhBiC,cACX,OAAO,IAAIg0J,aAAah0J,oEAWxB,OAAO8iH,+FAWP,OAAO8vC,2NC9Ef,IAAM6D,mBAAiBC,+BAAAC,sBhBeG,cgBblBC,SAAU,SAAAA,SAAAzxJ,MAAI,OACVka,KAAM,GACNK,OAAQva,OAEZ0xJ,sBAAuB,SAAAA,sBAACt4D,aAAgB,IAEhCm3D,WAEAn3D,YAFAm3D,WACA55H,MACAyiE,YADAziE,MAEJ,OACIzc,KACIyc,MAAK,GAAAhrB,OAAKgrB,MAAL,MACL+G,QAAO,GAAA/xB,OAAK,EAAL,OAEX4O,QACIoc,MAAO,SAAAA,MAAC1+B,EAAGN,GAAJ,SAAAgU,OAAa4kJ,WAAW54J,GAAGg/B,MAA3B,OACP+G,QAAO,GAAA/xB,OAAK,EAAL,SAInBgmJ,kBAAmB,SAAAA,kBAACv4D,aAAgB,IACxBi3D,cAA0Bj3D,YAA1Bi3D,cACR,OACIuB,WAF8Bx4D,YAAXxiE,OAGnBi7H,UAAWxB,cAAc15H,MACzBm7H,aACIC,YAAY,EACZC,UAAU,OA7BPT,+BAAAC,mBhBgBC,YgBmBhBC,SAAU,SAAAA,SAAAzxJ,MAAI,OACVka,IAAKla,KACLua,OAAQ,SAAAA,OAAAtiB,GAAC,OAAKA,MAElBy5J,sBAAuB,SAAAA,sBAACt4D,YAAazqF,QAAW,IAExCgoB,MACAyiE,YADAziE,MAEI+G,QAAY/uB,OAAZ+uB,QACR,OACIxjB,KACIyc,MAAK,GAAAhrB,OAAKgrB,MAAL,MACL+G,QAAO,GAAA/xB,OAAK+xB,QAAL,OAEXnjB,QACIoc,MAAK,GAAAhrB,OAAKgrB,MAAL,MACL+G,QAAO,GAAA/xB,OAAK,EAAL,SAInBgmJ,kBAAmB,SAAAA,kBAACv4D,aAAgB,IACxBi3D,cAAyBj3D,YAAzBi3D,cAAe15H,MAAUyiE,YAAVziE,MACvB,OACIi7H,WAAYvB,cAAcz5H,OAC1Bi7H,UAAWl7H,MACXm7H,aACIC,YAAY,EACZC,UAAU,OA9DPR,oBAqEVS,gBAAcV,+BAAAW,mBhBzDP,OgB0DRZ,kBAAiB,UADFC,+BAAAW,gBhBxDN,QgB0DRZ,kBAAiB,UAFHC,+BAAAW,gBhB1DR,MgB6DRZ,kBAAiB,YAHDC,+BAAAW,gBhBvDL,SgB2DRZ,kBAAiB,YAJJY,iBAOdC,cAAYZ,+BAAAa,iBhBhEL,OAcD,OgBkDMb,+BAAAa,chB/DJ,QAUA,SgBqDIb,+BAAAa,chBjEN,MAMG,UgB2DGb,+BAAAa,chB9DH,SAGA,UgB2DGA,eAgBZC,WAASd,+BAAAe,chBhFF,QgBiFPxH,MhBzEQ,UgBwECyG,+BAAAe,WhB/ED,SAOA,QgB0EAxH,QAFCyG,+BAAAe,WhBjFH,OgBoFPxH,MhB3ES,UgBwECyG,+BAAAe,WhB9EA,UAMD,QgB4ECxH,QAJAwH,YCjDTC,8BAAuB,SAAvBA,qBAAwB/6H,QAAS3D,UAAWgiE,YAAa71F,MAClE,IAAIwyJ,UACAC,WACAC,cACAC,aACEv5D,YAAc5hE,QAAQ4hE,cAEpBb,OAOAa,YAPAb,OACAiwD,OAMApvD,YANAovD,OACAsI,YAKA13D,YALA03D,YACAn6H,MAIAyiE,YAJAziE,MACAC,OAGAwiE,YAHAxiE,OACAmB,SAEAqhE,YAFArhE,SACAC,UACAohE,YADAphE,UAGRy6H,WAAa77H,QAAUk6H,YAAYl6H,OAAS,EAAI2hE,OAAS,EAAIiwD,QAC7DgK,UAAY77H,OAAkB,EAAT4hE,OAAsB,EAATiwD,QAElCkK,cAAgB16H,WAAa84H,YAAYl6H,OAAkB,EAAT2hE,OAAsB,EAATiwD,QAC/DmK,aAAe56H,UAAqB,EAATwgE,OAAsB,EAATiwD,QAExC,IAAIoK,WAAa1wE,YAAYruD,UAAW,OAAQ,GAApB,GAAAloB,OAA2BkqF,YAA3B,iBAiB5B,OAhBA+8D,WAAWj2I,OAAX,IAAAhR,OAAsBkqF,YAAtB,qBAAqDvzD,SAEjDqwH,cAAgBA,aAAeH,YAC/BI,WAAaA,WAAW/9H,MjB7EX,QiB6EA,GAAAlpB,OAA2BgnJ,aAA3B,OAA6C99H,MAAM,aAAc,WAG9E69H,eAAiBA,cAAgBD,YACjCG,WAAW/9H,MjB/EG,SiB+Ed,GAAAlpB,OAA4B+mJ,cAA5B,OAA+C79H,MAAM,aAAc,WAGvE+9H,WAAa1wE,YAAY0wE,WAAY,OAAQ,GAArB,GAAAjnJ,OAA4BkqF,YAA5B,sBAEbhhE,MjBtFM,QiBsFjB,GAAAlpB,OAA2B6mJ,UAA3B,OACAI,WAAW/9H,MjBrFO,SiBqFlB,GAAAlpB,OAA4B8mJ,WAA5B,QAGSI,WA1EoB,SAApBC,kBAAqBj/H,UAAW7zB,KAAM+yJ,gBAC/C,IAAM35D,YAAc25D,eAAe35D,cAC7BzqF,OAASokJ,eAAepkJ,SAE1B4hJ,WACAn3D,YADAm3D,WAGA16D,YAEAlnF,OAFAknF,YACAt4D,SACA5uB,OADA4uB,SAEEy1H,YAAcf,eAAe10H,UAC7Bk0H,SAAWuB,YAAYvB,SAASzxJ,MAChC0lB,SAAWstI,YAAYtB,sBAAsBt4D,YAAazqF,QAE1DgL,KAAOuoE,YAAYruD,UAAW,MAAO49H,SAASv3I,IAA5B,GAAAvO,OAAoCkqF,YAApC,gBACxBl8E,KAAKkb,MjB7Ba,SiB6BC,SAAC58B,EAAGN,GAAJ,SAAAgU,OAAa4kJ,WAAW54J,GAAGi/B,OAA3B,QACnBjd,KAAKkb,MjBhCY,QiBgCCnP,SAASxL,IAAIyc,OAC/Bhd,KAAKkb,MAAM,UAAWnP,SAASxL,IAAIwjB,SAEnC,IAAMhlB,QAAUwpE,YAAYvoE,KAAM,MAAO83I,SAASl3I,OAAvB,GAAA5O,OAAkCkqF,YAAlC,oBAI3B,OAHAn9E,QAAQmc,MjBpCS,QiBoCInP,SAASnL,OAAOoc,OACrCje,QAAQmc,MAAM,UAAWnP,SAASnL,OAAOmjB,SAElChlB,QAkDYo6I,CAAkBF,WAAY5yJ,KAAMw3B,WAW9Cy7H,4BAAqB,SAArBA,mBAAsBz7H,QAAS3D,WAAc,IAAAm7E,gBAIlDx3E,QAAQ7oB,SAFRknF,YAFkDmZ,gBAElDnZ,YAGEy6D,gBALgDthD,gBAGlDnkG,KAEyB7I,KAAK88F,YAE5BtyB,MAAQ6lF,UAAU/B,iBAClB4C,aAAehxE,YAAYruD,UAAW,MAAO,SAAC57B,EAAGN,GAAJ,OAAU60E,MAAMxjE,IAAI,SAAAnP,GAAC,OAAKA,EAAG5B,EAAE4B,GAAI5B,EAAEo3C,MAAOp3C,EAAEu9B,KAC7Fv9B,EAAEW,MAAO4+B,QAAQ32B,YAAalJ,MADF,GAAAgU,OACUkqF,YADV,sBAG1Bs9D,WAAahB,aAAa7B,iBAGhC,OADA4C,aAAa/7E,QAAQg8E,YAAY,IACxBD,4BASAE,wBAAiB,SAAjBA,eAAkBvoJ,KAAMwoJ,YAAaC,eAAgB97H,SAAY,IAAA+7H,qBAMtE/7H,QAAQ4hE,cAJR17D,QAFsE61H,qBAEtE71H,QACAuyH,YAHsEsD,qBAGtEtD,YACAO,WAJsE+C,qBAItE/C,WACAC,aALsE8C,qBAKtE9C,aAEEhlJ,KAAO6nJ,eAA4B,GAAV51H,QAAc,EAE7C,OAAI7yB,KAAK,KAAOigJ,MACZ,GAAAn/I,OAAUskJ,YAAYplJ,KAAK,IAAIwoJ,aAA/B,MAEJ,GAAA1nJ,OAA0B,UAAhB0nJ,aAA4BC,eAAgC9C,WAAW3lJ,KAAK,IAAIwoJ,aAAe5nJ,KAAlDglJ,aAAvD,OA+ES+C,oBAAa,SAAbA,WAAc13D,KAAMjoE,UAAW5hB,MAAOulB,SAAY,IAEvDq+D,YAMAr+D,QANAq+D,YACA+7D,WAKAp6H,QALAo6H,WACAC,UAIAr6H,QAJAq6H,UACApB,aAGAj5H,QAHAi5H,aACA/yH,QAEAlG,QAFAkG,QACA2R,MACA7X,QADA6X,MAEE7P,IAAM0iD,YAAYruD,UAAW,MAAO,SAAAna,GAAC,OAAKA,IAAzB,GAAA/N,OAAgCkqF,YAAhC,qBACtB5nC,KjBhOgB,QiBgOJwiG,cACZxiG,KjB/NiB,SiB+NJ2jG,YACb/8H,MjBlOgB,QiB+NL,GAAAlpB,OAGK8kJ,aAHL,OAIX57H,MjBjOiB,SiB6NN,GAAAlpB,OAIMimJ,WAJN,OjBjMI,SiBuMZ91D,KAxEY,SAAd05B,YAAwBv9H,EAAG+sB,KAAMyuI,YAAa98H,MAAOC,QACvD,IAAM6+F,aAAezwG,KAEfwQ,KAAOv9B,EAAE,IAAMqI,KAAKC,IAAIo2B,MAAOC,QAAUt2B,KAAKowC,GAC9CgrD,MAAQzjG,EAAE,IAAMw7J,YAEtB,GAAI/3D,iBAAiBha,QACjBga,MAAMpW,KAAK,SAACp6D,KAER,OADAjzB,EAAEyjG,MAAQxwE,IACHsqG,YAAYv9H,EAAG+sB,YAEvB,IAAI02E,iBAAiBg6B,QAAS,CACjC,IAAIC,SAAWj6B,MAAM9oB,WAAU,GAE/B,GAAwC,QAApC+iD,SAASC,SAASzyH,cAAyB,CAC3C,IAAM0yH,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAWviG,SAASuM,gBAAgB,6BAA8B,UACzDd,aAAa,OAAQg3F,KAIlC,OAFqB7zC,6BAAc2zC,UACtB1nE,KAAK,YAAlB,SAAAtiD,OAAwC6pB,KAAO,IAA/C,MACOwsD,6BAAcyzC,aAAa/pG,OAAOkT,YAAY+2F,WAErD,IAAIK,QADD,GAAqB,iBAAVt6B,MAOd,OAFIs6B,QAxCM,SAAZC,UAAajrH,KACf,SAAI,0CAA0C/N,KAAK+N,MAAQ,UAAU/N,KAAK+N,MAAQA,IAAIhM,OAAS,GAoCvFi3H,CAAUv6B,OACAA,MAEAqyD,kBAASryD,OAAOlmE,KAAKA,KAArBu4H,GAEP7rE,YAAYuzC,aAAc,OAAQ,SAAAz1H,MAAI,OAAKA,QAAOiuD,KAAK,IAAK+nE,SAGvE,OADA/9H,EAAE,GAAK,SACAu9H,YAAYv9H,EAAG+sB,KAAM,UA0CxBwwG,CAAYvjH,MADEiwE,YAAY1iD,IAAK,KAAMvtB,MAAM,IAAlB,GAAAtG,OAA0BkqF,YAA1B,iBACC5jF,MAAM,GAAK,SAAW,SAAU4/I,UAAWD,YACpD3jG,KAAK,YADtB,aAAAtiD,OACgD8kJ,aAAe,EAAI/yH,QADnE,KAAA/xB,OAC8EimJ,WAAa,EAD3F,MAEiB3jG,KAAK,OAAQh8C,MAAM,IAAMo9B,OAE1C6yC,YAAY1iD,IjB7MA,QiB6MYvtB,MAAM,IAAnB,GAAAtG,OAA2BkqF,YAA3B,iBACM5nC,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KjB9OJ,QiB8OgBwiG,cACZxiG,KjB7OH,SiB6OgB2jG,YACb3jG,KAAK,OAAQh8C,MAAM,IAAMo9B,i+EC1O7BqkH,0wBAAuB7E,iVAgCzB7tJ,OAAO,IAAA2yJ,cACqB3F,2BAAahtJ,OAA5CitJ,UADU0F,cACV1F,UAAW7tJ,OADDuzJ,cACCvzJ,OAAQ+tJ,QADTwF,cACSxF,QACvBE,gBAAkBuF,kCAAI,IAAIvzJ,IAAID,SAC5B3F,KAAOiF,KAAK6oJ,WAAWtoJ,UAAUoB,OAAO,GAAG5G,KAuBjD,OArBA4zJ,gBAAkBA,gBAAgBrlJ,IAAI,SAAC0lJ,IAAK/2J,GAAM,IAAAgI,KAC1C/G,MAAQ,EACRqK,MAAQ,EACC,YAATxI,KAGAwI,OAFArK,QAAUy1J,gBAAgB12J,IAAI2iD,QAAQ,IACtB+zG,gBAAgB12J,EAAI,IAAM02J,gBAAgB12J,EAAI,IAAMiB,OAC5C0hD,QAAQ,KAEhC1hD,MAAQy1J,gBAAgB12J,GACxBsL,OAASorJ,gBAAgB12J,KAE7B,OAAAk8J,+BAAAl0J,QACKsuJ,UAAYjtJ,MAAMmtJ,SAASO,MADhCmF,+BAAAl0J,KAAA,QAEI/G,OAFJi7J,+BAAAl0J,KAAA,KAGQhI,GAHRk8J,+BAAAl0J,KAAA,QAIIsD,OAJJtD,OAMDoe,OAAO,SAAA9lB,GAAC,OAAgB,OAAZA,EAAEW,QAEjBy1J,gBlB3BY,SkB2BMJ,UAAqBI,gBAAgBn9I,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAEk0J,WAAappJ,EAAEopJ,aACjFI,wDAYN,IAAM5+D,SAAW/vF,KAAK+vF,WAChBzvF,KAAON,KAAKM,OACV61F,YAAgBn2F,KAAKiP,SAArBknF,YACFu3D,gBAAkB0G,oBAAAC,+BAAAL,eAAAj6J,WAAA,SAAAiG,MAAA5H,KAAA4H,KAAaA,KAAKkvB,SAElCikI,WAAeN,8BAAqB7yJ,KAAM0tJ,gBAAiBv3D,YAAa71F,MAAxE6yJ,WAMR,ODoK0B,SAArBmB,mBAAsBx8H,QAAS3D,WACxC,IAAM+2E,aAAepzE,QAAQy3H,cADyB9hD,iBAKlD31E,QAAQ7oB,SAFL9D,KAH+CsiG,iBAG/CtiG,KACAgrF,YAJ+CsX,iBAI/CtX,YAJ+Co+D,sBASlDz8H,QAAQ4hE,cAFRq3D,aAPkDwD,sBAOlDxD,aACA/yH,QARkDu2H,sBAQlDv2H,QARkDw2H,WAe9CrpJ,KAAKixF,KAJE+1D,UAXuCqC,WAW9Cv9H,MACQi7H,WAZsCsC,WAY9Ct9H,OACAyY,MAb8C6kH,WAa9C7kH,MACAtT,UAd8Cm4H,WAc9Cn4H,UAGFu0H,gBAAkBzlJ,KAAK7I,KAAK88F,YAC5Bj7F,UAAYgH,KAAK7I,KAAK6B,UAE5B+mG,aAAa/yE,uBAAsB,GACnCgrD,WAAWhvD,WACP8C,MAAO,SAAAA,MAAA1+B,GAAC,OAAIm7J,wBAAen7J,EjBhRd,SiBgRwB,EAAOu/B,UAC5CZ,OAAQ,SAAAA,OAAA3+B,GAAC,OAAIm7J,wBAAen7J,EjB/Qd,UiB+QyB,EAAOu/B,UAC9C28H,ajBzPc,SiB0Pdz2H,QAAO,GAAA/xB,OAAK+xB,QAAL,QAGXktE,aAAa11E,SAASsC,QAAQ43H,gBAC9Bv7H,UAAUwO,KAAK,SAAUpqC,EAAGN,GACpBM,EAAE,KAAO6yJ,MACT9oE,6BAActiF,MAAMsC,KAAK6B,UAAU5L,EAAE,KACpB48B,MADjB,WAAAlpB,OjBpQS,UiBqQyB2kJ,gBjBtQ1B,OACC,SiBqQqE,QAG9EtuE,6BAActiF,MAAMy3E,QAApB,GAAAxrE,OAA+BkqF,YAA/B,KAAAlqF,OAA8CowB,YAAa,GAC3DimD,6BAActiF,MAAMy3E,QAApB,GAAAxrE,OAA+BkqF,YAA/B,KAAAlqF,OAA8CowB,UAA9C,KAAApwB,OAA2DhU,IAAK,GAChE67J,oBAAW,SAAUxxE,6BAActiF,MAAOzH,GACtC49F,wBACAg8D,oBAEAD,sBACAnB,0BACA/yH,gBACA2R,iBCpNR2kH,CAAmBt0J,KADMuzJ,4BAAmBvzJ,KAAMmzJ,YAA1CK,cAER9F,gBAAgBz/F,UAAU,OAAO94B,MAAM,QlB/D3B,QkBgEZ46D,SAASjC,yBACTiC,SAASujD,mBAAmBtzI,KAAKM,OAAOgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MAC5Cw5H,wDAtEIvyJ,cACX,OAAO,IAAI64J,eAAe74J,kDAW1B,MlBQgB,iCmB9BXu5J,kBAAoB,SAApBA,kBAAqBp0J,MAC9B,MAA6B,iBAAlBA,KAAK,GAAGpH,MACRoH,KAAK0S,OAAO,SAAC2hJ,YAAaC,cAAd,OACdh0J,KAAKC,IAAI+zJ,aAAa17J,MAAOy7J,YAAY,IAAK/zJ,KAAKG,IAAI6zJ,aAAa17J,MAAOy7J,YAAY,OACnFv9I,OAAOy9I,UAAWz9I,OAAO09I,YAE/Bx0J,KAAKgJ,IAAI,SAAAnP,GAAC,OAAIA,EAAEjB,SA+DrB25J,qCAAuB,SAAvBA,qBAAwB1+H,UAAWgiE,YAAa71F,MAClD,IAAMI,OAASg0J,kBAAkBp0J,MAC3BotJ,gBAAkBlrE,YAAYruD,UAAW,OAAQ,GAApB,GAAAloB,OAA2BkqF,YAA3B,iBAC7B4+D,cAAgBvyE,YAAYkrE,gBAAiB,OAAQ,GAA1B,GAAAzhJ,OAAiCkqF,YAAjC,cAC3B6+D,eAAiBxyE,YAAYuyE,cAAe,KAAM,GAAtB,GAAA9oJ,OAA6BkqF,YAA7B,oBAIlC,OACIu3D,gCACAsH,8BACAD,4BACAE,eAhE0B,SAArBC,mBAAsB/gI,UAAW7zB,KAAMI,QAChD,IAAMy8H,KAAO36C,YAAYruD,UAAW,QAAS,IACvC8gI,eAAiBzyE,YAAY26C,KAAM,kBAAmB,IAC/C5uE,KAAK,KAAM,mBACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MAIxB,OAHAi0B,YAAYyyE,eAAgB,OAAQ30J,KAAM,iBACzBiuD,KAAK,SAAU,SAAAh2D,GAAC,SAAA0T,OAA+B,KAAvB1T,EAAEW,MAAQwH,OAAO,KAAaA,OAAO,GAAKA,OAAO,IAAzD,OAChB6tD,KAAK,aAAc,SAAAh2D,GAAC,OAAIA,EAAEo3C,QACpCslH,eAgDgBC,CAAmBH,cAAez0J,KAAMI,QAQ3Dy0J,WAPe3yE,YAAYwyE,eAAgB,QAAS,GAA1B,GAAA/oJ,OAAiCkqF,YAAjC,qBAmBrB2c,2BAAa,SAAbA,WAAch7E,QAAS3D,UAAW+C,OAAQD,OACnD,IAAMk2B,KAAOr1B,QAAQq1B,OAErBA,KAAKw2F,kBAAkB1sH,MAAOC,QAC9Bi2B,KAAKyxC,OAAOzqE,UAAUnI,QACtBmhC,KAAKvrC,SAASg9E,m+ECnGGw2D,0wBAAuBjG,iUAiCpC,OAAIroJ,UAAKxH,QACLU,KAAK8xG,MAALhrG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAK8xG,0DAUDxwG,OACX,IAAIqtJ,mBADcsF,cAE4B3F,2BAAahtJ,OAAnDitJ,UAFU0F,cAEV1F,UAAW7tJ,OAFDuzJ,cAECvzJ,OAAQ8tJ,MAFTyF,cAESzF,MAAOC,QAFhBwF,cAEgBxF,QAelC,OAbID,iBAAiBvkJ,OACbvJ,OAAO,GAAK8tJ,MAAM,KAClBG,gBAAgB,GAAKjuJ,OAAO,IAEhCiuJ,mBAAe1iJ,OAAAopJ,kCAAO1G,iBAAP0G,kCAA2B7G,QACtC9tJ,OAAOA,OAAOpB,OAAS,GAAKkvJ,MAAMA,MAAMlvJ,OAAS,IACjDqvJ,gBAAgBntJ,KAAKd,OAAO,KAGhCiuJ,gBAAkBD,kCAAoBhuJ,OAAQ8tJ,MAAQ,IAE1DG,gBAAkB0G,kCAAI,IAAI10J,IAAIguJ,kBAAkBn9I,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,KAE5CmE,IAAI,SAAC0lJ,IAAK/2J,GAAM,IAAAgI,KAC7B/G,MAAQy1J,gBAAgB12J,GAC9B,OAAAq9J,+BAAAr1J,QACKsuJ,UpBtCG,SoBsCSA,UAAqBjtJ,MAAMmtJ,SAASO,KAAO1tJ,MAAM4tJ,iBACxD5tJ,MAAMmtJ,SAAS7tJ,KAAKgR,MAAMo9I,OAFpCsG,+BAAAr1J,KAAA,SAGY/G,MAAM0hD,QAAQ,IAH1B06G,+BAAAr1J,KAAA,KAIQhI,GAJRgI,OAMDoe,OAAO,SAAA9lB,GAAC,OAAgB,OAAZA,EAAEW,8DAWL62J,YACZ/vJ,KAAKiP,QACD9D,MACI7I,MACI88F,YAAap/F,KAAKiP,SAAS4uB,aAIvC,IAAMsvB,KDvDY,SAAb6jD,WAAcl5E,SACvB,IAAMx3B,KAAOw3B,QAAQx3B,OACbmkC,MAAU3M,QAAQ7oB,SAAlBw1B,MACFs5G,SAAWjmH,QAAQ03H,OAAOzR,SAC1BwX,QAAU,IAAI/hD,8BAChBt/E,GAAE,UAAAjoB,OAAY6rB,QAAQ0nD,KACtB4f,YAAa36D,QAAUqpH,enB3BV,QACC,SmB2Bd34H,MAAO2C,QAAQ43H,eACf9yG,MAAM,EACN+tD,cAAc,EACdr9C,WAAYhtD,KAAKgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAEW,QAC5BoxG,eAAe,EACfC,QACIC,SAAU,KAEbU,aAAcpzE,QAAQy3H,gBAI3B,OAFAgG,QAAQ70J,OAAOg0J,kBAAkBp0J,OACjCi1J,QAAQhyJ,OAAO,EAAG,KACX,IAAIw6I,UAAWn8H,OAAO2zI,SAAStmJ,QAClC4pF,QAAU53D,KAAM,EAAG8rB,OAAQ,EAAGjvB,IAAK,EAAGoD,MAAO,KCmChC8vE,CAAWhxG,MAClBw1J,UAAYroG,KAAKm6F,kBACjB/2E,OAAUt5C,MAAOu+H,UAAUv+H,MAAQ84H,WAAY74H,OAAQs+H,UAAUt+H,OAAS64H,YAC1E0F,iBAAmBtoG,KAAKvrC,SAASlhB,SAASpB,OAC1CixJ,YAAc,IAAItmJ,MAAMwrJ,kBAAkB57G,KAAK02B,OAGrD,OADAvwE,KAAKmtD,KAAKA,MACHojG,0EAUP,OACIj8D,aAAct0F,KAAK01J,4DAYvB,IAAM3lE,SAAW/vF,KAAK+vF,WAChB29D,gBAAkBiI,oBAAAC,+BAAAR,eAAAr7J,WAAA,SAAAiG,MAAA5H,KAAA4H,KAAaA,KAAKkvB,SAM1C,ODpBsB,SAAjB2mI,eAAkB/9H,QAAS3D,WACpC,IAAI4+H,WACAD,UAF8CrlD,iBAO9C31E,QAAQ7oB,SAHRw1B,MAJ8CgpE,iBAI9ChpE,MACA0xD,YAL8CsX,iBAK9CtX,YACAhrF,KAN8CsiG,iBAM9CtiG,KAEE7K,KAAOw3B,QAAQx3B,OAR6Bw1J,sBAgB9CjD,qCAAqB1+H,UAAWgiE,YAAa71F,MAL7CotJ,gBAX8CoI,sBAW9CpI,gBACAqH,cAZ8Ce,sBAY9Cf,cACAC,eAb8Cc,sBAa9Cd,eACAC,eAd8Ca,sBAc9Cb,eACAE,WAf8CW,sBAe9CX,WAEElhD,SAAWn8E,QAAQq1B,OAAOvrC,SAAS+rF,oBAAoBC,eAjBXimD,qBA4B9C/7H,QAAQ4hE,cATR17D,QAnB8C61H,qBAmB9C71H,QACA66D,OApB8Cg7D,qBAoB9Ch7D,OACAiwD,OArB8C+K,qBAqB9C/K,OACAsI,YAtB8CyC,qBAsB9CzC,YACAT,cAvB8CkD,qBAuB9ClD,cACAr4H,UAxB8Cu7H,qBAwB9Cv7H,UACAD,SAzB8Cw7H,qBAyB9Cx7H,SACAnB,OA1B8C28H,qBA0B9C38H,OACAD,MA3B8C48H,qBA2B9C58H,MAEEo1H,sBAEN0G,WAAanyJ,KAAKgR,MAAMslB,QAAUk6H,YAAYl6H,OAAS,EAAI2hE,OAAS,EAAIiwD,SACxEgK,UAAYlyJ,KAAKgR,MAAMqlB,OAAkB,EAAT4hE,OAAsB,EAATiwD,SAEzCrkH,QAAUqpH,kBACVzB,mBAAmBn1H,OAAS/rB,KAAKixF,KAAKllE,OACtCm1H,mBAAmBp1H,MAAQ67H,UAAY,EAAI90H,QAAUi2E,SAASh9E,MAAQ,EACtEg+H,eAAe1mG,KAAK,KAAM,QAAQA,KAAK,KAAM,MAC7CymG,eAAezmG,KAAK,YAApB,cAAAtiD,OAA+CgoG,SAASh9E,MAAQ,EAAhE,QACA67E,2BAAWh7E,QAAS41H,gBAAiBqF,WAAa5nJ,KAAKixF,KAAKllE,OAAS8G,QAAS80H,UAAY,EAAI90H,QAAU,GACxG0vH,gBAAgBj2E,QAAhB,GAAAxrE,OAA2BkqF,YAA3B,eAAqDl/D,MAAQoB,UAE7D8qD,WAAWuqE,iBACPx2H,OAAM,GAAAjrB,OAAK0kJ,cAAcz5H,OAAS4xH,OAAS9qH,QAArC,MACN/G,MAAK,GAAAhrB,OAAKrL,KAAKC,IAAIo2B,MAAOoB,UAArB,MACL2F,QAAO,GAAA/xB,OAAK+xB,QAAL,QAGXm3H,WAAW5mG,KAAK,SAAU89F,mBAAmBn1H,QAC7Ci+H,WAAW5mG,KAAK,QAAS89F,mBAAmBp1H,MAAQg9E,SAASh9E,MAAQ,KAErEo1H,mBAAmBn1H,OAAS67H,WAAa,EAAI/0H,QAAUi2E,SAAS/8E,OAAS,EACzEm1H,mBAAmBp1H,MAAQ9rB,KAAKixF,KAAKnlE,MACrCg+H,eAAe1mG,KAAK,KAAM,MAAMA,KAAK,KAAM,QAC3CymG,eAAezmG,KAAK,YAApB,eAAAtiD,OAAgDgoG,SAAS/8E,OAAS,EAAlE,MACA47E,2BAAWh7E,QAAS41H,gBAAiBqF,WAAa,EAAI/0H,QAAU,EAAG80H,UAAY3nJ,KAAKixF,KAAKnlE,MAAkB,EAAV+G,SACjG0vH,gBAAgBj2E,QAAhB,GAAAxrE,OAA2BkqF,YAA3B,eAAqDj/D,OAASoB,WAC9D6qD,WAAWuqE,iBACPx2H,OAAM,GAAAjrB,OAAKrL,KAAKC,IAAIq2B,OAAQoB,WAAtB,MACNrB,MAAK,GAAAhrB,OAAKgrB,MAAL,MACL+G,QAAO,GAAA/xB,OAAK+xB,QAAL,QAEXm3H,WAAW5mG,KAAK,SAAU89F,mBAAmBn1H,OAAS+8E,SAAS/8E,OAAS,GACxEi+H,WAAW5mG,KAAK,QAAS89F,mBAAmBp1H,QAIhDksD,WAAW4xE,eACP79H,OAAM,GAAAjrB,OAAKogJ,mBAAmBn1H,OAAxB,MACND,MAAK,GAAAhrB,OAAKogJ,mBAAmBp1H,MAAxB,QAITksD,WAAWgyE,YACPt7G,KAAM,0BAEVk7G,cAAcxmG,KAAK,SAAU89F,mBAAmBn1H,QAChD69H,cAAcxmG,KAAK,QAAS89F,mBAAmBp1H,OAE/Ca,QAAQ4hE,aACJ2yD,wCAEJv0H,QAAQ49H,mBAAqBX,cClEzBc,CAAe71J,KAAM0tJ,iBACrBA,gBAAgBz/F,UAAU,OAAO94B,MAAM,QpB/G3B,QoBgHZ46D,SAASjC,yBACTiC,SAASujD,mBAAmBtzI,KAAKM,OAAOgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MAC5Cw5H,gFASUptJ,MACjB,QAASN,KAAKmB,cAAeb,KAAKpH,gDAhIvBiC,cACX,OAAO,IAAIi6J,eAAej6J,kDAW1B,MpBhBgB,+7EqBGH46J,8tBAAmB5G,iUAgCrB7tJ,OACX,IAAIytJ,aADckF,cAE4B3F,2BAAahtJ,OAAnDitJ,UAFU0F,cAEV1F,UAAW7tJ,OAFDuzJ,cAECvzJ,OAAQ8tJ,MAFTyF,cAESzF,MAAOC,QAFhBwF,cAEgBxF,QAE1BtqJ,UAAcnE,KAAKiP,SAAnB9K,UACF2qJ,cACFj8E,MAAO,KAAMu7E,MAAO,MA6BxB,GA1BII,iBAAiBvkJ,OACbvJ,OAAO,GAAK8tJ,MAAM,KAClBM,aAAaj8E,OAAQ,GAAA5mE,OAAI9H,UAAUgqJ,OAAOt7E,MAArB,KAAA5mE,OAA8BuiJ,MAAM,MAE7DO,aAAS9iJ,OAAA+pJ,8BAAOjH,WAAPiH,8BAAqBxH,QAC1B9tJ,OAAOA,OAAOpB,OAAS,GAAKkvJ,MAAMA,MAAMlvJ,OAAS,KACjDwvJ,aAAaV,OAAQ,GAAAniJ,OAAI9H,UAAUgqJ,OAAOC,MAArB,KAAAniJ,OAA8BuiJ,MAAMA,MAAMlvJ,OAAS,OAG5EyvJ,UAAYL,kCAAoBhuJ,OAAQ8tJ,OAI5CO,WADAA,UAAYiH,8BAAI,IAAIr1J,IAAIouJ,YAAYv9I,KAAK,SAACnX,EAAG8K,GAAJ,OAAU9K,EAAI8K,KACjCmE,IAAI,SAAC0lJ,IAAK/2J,GAAM,IAAAgI,KAC9B/G,MAAQ,KAIZ,OAHIjB,EAAI82J,UAAUzvJ,OAAS,IACvBpG,MAAK,GAAA+S,OAAO+iJ,IAAIp0G,QAAQ,GAAnB,OAAA3uC,QAA8B8iJ,UAAU92J,EAAI,GAAG2iD,QAAQ,KAEhEq7G,2BAAAh2J,QACKsuJ,UrBxCG,SqBwCSA,UAAqBjtJ,MAAMmtJ,SAASO,KAAO1tJ,MAAM4tJ,iBAAmB5tJ,MAAMmtJ,SAASO,MADpGiH,2BAAAh2J,KAAA,QAEI/G,OAFJ+8J,2BAAAh2J,KAAA,KAGQhI,EAAI,GAHZg+J,2BAAAh2J,KAAA,SAIY+uJ,IAAKD,UAAU92J,EAAI,KAJ/BgI,OAMDoe,OAAO,SAAA9lB,GAAC,OAAgB,OAAZA,EAAEW,QAEb41J,aAAaj8E,MAAO,CACpB,IAAMqjF,YAAcrH,gBrBlDX,SqBkDoCvtJ,YAAOmtJ,gBAASF,sBACvD7tJ,cAAQ8tJ,YAAOM,4BACrBC,WAAamH,aAAJjqJ,OAAA+pJ,8BAAoBjH,YAEjC,GAAID,aAAaV,MAAO,CACpB,IAAM+H,YAActH,gBrBxDX,SqBwDoCvtJ,YAAOmtJ,gBAASF,sBAC3D7tJ,cAAQ8tJ,YAAOM,0BAAcC,sBAC/BA,aAAS9iJ,OAAA+pJ,8BAAOjH,YAAWoH,cAE/B,OAAOpH,gEAWKgB,WAAYtrH,OAQxB,OAPAzkC,KAAKiP,QACD9D,MACI7I,MACI88F,YAAap/F,KAAKiP,SAAS4uB,aAIvCu4H,gBAAAC,2BAAAN,WAAAh8J,WAAA,iBAAAiG,MAAA5H,KAAA4H,KAA4B+vJ,WAAYtrH,mDAUxC,MrB3FY,+CqBsGZ,IAAMsrD,SAAW/vF,KAAK+vF,WADhBklB,cAE4Bj1G,KAAKiP,SAA/BknF,YAFF8e,cAEE9e,YAAat4D,SAFfo3E,cAEep3E,SACfv9B,KL1CU,SAAXg2J,SAAWh2J,MAAI,IAAAL,KAAA,OAAA4xJ,+BAAA5xJ,QhBxER,OgByERK,KAAKwhC,WADW+vH,+BAAA5xJ,KhBvEP,QgByERK,KAAKwhC,WAFU+vH,+BAAA5xJ,KhBzET,MgB4ERK,MAHiBuxJ,+BAAA5xJ,KhBtEN,SgB0ERK,MAJcL,KK0CPq2J,CAASt2J,KAAKM,QAAQu9B,UAE7B6vH,gBAAkB0I,gBAAAC,2BAAAN,WAAAh8J,WAAA,SAAAiG,MAAA5H,KAAA4H,KAAaA,KAAKkvB,SAGlCikI,WAAeN,8BAAqB7yJ,KAAM0tJ,gBAAiBv3D,YAAa71F,MAAxE6yJ,WAOR,OJgKsB,SAAjBoD,eAAkBz+H,QAAS3D,WACpC,IAAM+2E,aAAepzE,QAAQy3H,cADqBp/C,iBAM/Cr4E,QAAQ7oB,SAHT9D,KAHgDglG,iBAGhDhlG,KACA0yB,SAJgDsyE,iBAIhDtyE,SACAs4D,YALgDga,iBAKhDha,YALgDqgE,sBAW/C1+H,QAAQ4hE,cAHTi3D,cARgD6F,sBAQhD7F,cACAI,aATgDyF,sBAShDzF,aACA/yH,QAVgDw4H,sBAUhDx4H,QAVgDy4H,YAgB/CtrJ,KAAKixF,KAHLnlE,MAb+Cw/H,YAa/Cx/H,MACAC,OAd+Cu/H,YAc/Cv/H,OACAyY,MAf+C8mH,YAe/C9mH,MAGCxrC,UACDgH,KAAK7I,KADJ6B,UAGJ+mG,aAAa/yE,uBAAsB,GArBe,IAAAu+H,sBAsBHnE,eAAe10H,UAAUo0H,mBACpEtB,4BAAez5H,cAAQD,cADnBi7H,WAtB0CwE,sBAsB1CxE,WAAYC,UAtB8BuE,sBAsB9BvE,UAAWC,YAtBmBsE,sBAsBnBtE,YAI/BjvE,WAAWhvD,WACP8C,MAAO,SAAAA,MAAA1+B,GAAC,OAAIm7J,wBAAen7J,EjB7Ud,QiB6UwB65J,YAAYC,WAAYv6H,UAC7DZ,OAAQ,SAAAA,OAAA3+B,GAAC,OAAIm7J,wBAAen7J,EjB5Ud,SiB4UyB65J,YAAYE,SAAUx6H,UAC7D28H,aAAc,SACdz2H,QAAO,GAAA/xB,OAAK+xB,QAAL,QAGXktE,aAAa11E,SAASsC,QAAQ43H,gBAC9Bv7H,UAAUwO,KAAK,SAAUpqC,GACjBA,EAAE,KAAO6yJ,MACT9oE,6BAActiF,MAAMsC,KAAK6B,UAAU5L,EAAE,KAErCu7J,oBjB1TQ,OiB0TSxxE,6BAActiF,MAAOzH,GAClC49F,wBACAg8D,oBACAD,sBACAnB,0BACAphH,gBI/MR4mH,CAAev2J,KAFUuzJ,4BAAmBvzJ,KAAMmzJ,YAA1CK,cAGR9F,gBAAgBz/F,UAAU,OAAO94B,MAAM,QrB3H3B,QqB4HZ46D,SAASjC,yBACTiC,SAASujD,mBAAmBtzI,KAAKM,OAAOgJ,IAAI,SAAA/Q,GAAC,OAAIA,EAAE27B,MAC5Cw5H,gFAUUptJ,MAEjB,OAAA21J,8BADkBj2J,KAAKmB,YAENb,KAAKiD,+CAtIXpI,cACX,OAAO,IAAI46J,WAAW56J,kDAWtB,MrB1BY,sMsBZb,IAaMw7J,QAAU,UACVC,OAAS,SACTC,OAAS,SAOTC,MAAQ,QAURC,iCACT,SACA,SAGSC,iBAAeC,yBAAAC,oBAAA,GAAAjrJ,OARL,UAQK,KACT,EADS,KAAAA,OAlCP,SAmCgB+nJ,gCADTiD,yBAAAC,iBAAA,GAAAjrJ,OARL,UAQK,KAET,EAFS,KAAAA,OAhCR,QAkCgB+nJ,gCAFRiD,yBAAAC,iBAAA,GAAAjrJ,OARL,UAQK,KAGT,EAHS,KAAAA,OAjCP,SAoCgB+nJ,gCAHTiD,yBAAAC,iBAAA,GAAAjrJ,OARL,UAQK,KAIT,EAJS,KAAAA,OAlCP,SAsCiB+nJ,gCAJViD,yBAAAC,iBAAA,GAAAjrJ,OARL,UAQK,KAKT,EALS,KAAAA,OAjCP,SAsCiB+nJ,gCALViD,yBAAAC,iBAAA,GAAAjrJ,OARL,UAQK,KAMT,EANS,KAAAA,OAhCR,QAsCiB+nJ,gCANTiD,yBAAAC,iBAAA,GAAAjrJ,OATN,SASM,KAOV,EAPU,KAAAA,OAhCR,QAuCgB+nJ,gCAPRiD,yBAAAC,iBAAA,GAAAjrJ,OATN,SASM,KAQV,EARU,KAAAA,OAhCR,QAwCe+nJ,gCARPiD,yBAAAC,iBAAA,GAAAjrJ,OATN,SASM,KASV,EATU,KAAAA,OAjCP,SA0CgB+nJ,gCATTiD,yBAAAC,iBAAA,GAAAjrJ,OATN,SASM,KAUV,EAVU,KAAAA,OAlCP,SA4Ce8pJ,wBAVRkB,yBAAAC,iBAAA,GAAAjrJ,OATN,SASM,KAWV,EAXU,KAAAA,OAlCP,SA6CgBmpJ,gCAXT8B,suCCrBrB,IAAMC,gBAAQ,SAARA,QAAQ,QAAApzF,KAAAj9D,UAAAxH,OAAIkgI,KAAJ,IAAAv1H,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAIw7D,KAAJx7D,MAAAl9D,UAAAk9D,MAAA,OAAAozF,oBAAiBj4B,cAAjBk4B,4BAAiC73B,KAAKl2H,IAAI,SAAAygJ,UAAQ,OAAI,IAAIpqB,0BAAeoqB,eAqCvF,SAAShyE,eAAMu/E,SAKlB,IAJA,IAAIC,SAAW,GACTC,MAAK1wJ,UAAAxH,QAAA,IAAAwH,UAAAxH,OAAA,EACPrH,EAAI,EAEDA,EAAIu/J,QAASv/J,EAChBs/J,UAAYD,QAAQr/J,IAAUA,EAAlB,KAAA6O,UAAAxH,QAAkBrH,EAAlB,OAAAu7B,EAAA1sB,UAAkB7O,EAAlB,IAEhBs/J,UAAYD,QAAQr/J,GAEpB,IAAMw/J,KAAO/jI,SAASgkI,yBAChBrjI,QAAUX,SAASkJ,cAAc,OAEvC66H,KAAKv4H,YAAY7K,SACjBA,QAAQO,UAAY2iI,SA3CxB,SAASI,cAAe3rI,MACpB,GAAIA,KAAK4rI,WAAaC,KAAKC,aAE3B,IAA6E,IAAzEf,gCAAgCpvJ,QAAQqkB,KAAK+rI,QAAQt0J,eACrDuoB,KAAK0Q,WAAWlZ,YAAYwI,UACzB,KAAArQ,2BAAA,EAAAq8I,mBAAA,EAAAC,oBAAAzkI,EAAA,IACH,QAAA0kI,MAAAC,UAAwBnsI,KAAKosI,WAA7Bp/J,OAAA6c,cAAA8F,2BAAAu8I,MAAAC,UAAAjlJ,QAAA6C,MAAA4F,2BAAA,EACIg8I,cADqCO,MAAAh/J,OADtC,MAAAm/J,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAA18I,2BAAA,MAAAw8I,UAAAniJ,QAAAmiJ,UAAAniJ,SAAA,WAAAgiJ,kBAAA,MAAAC,kBAwCPN,CAActjI,SAhBsB,IAiB5BO,UAAcP,QAAdO,UAER,OAAO,kBAAMA,2SC3EjB,IAiBM0jI,4BAAiB,SAAjBA,eAAkBC,SAAU5mB,WAAY6mB,KAC1CD,SAAS/4J,QAAQ,SAACi5J,QACCA,OAAO7zE,cAAc8zE,YAAYC,iBAAiBz/J,MAC1DypC,KAAK,SAAAk7B,MAAI,OAAI8zE,WAAW9zE,KAAK7gD,UAAU+yE,cAC9CyoE,KAAOA,IAAIC,QAEOA,OAAOG,WAEfzyD,2BAA2Bz5C,aAAYG,gBAbtC,SAAb+e,WAAc6sF,OAAQv7I,IAAT,OAAgB,WACXu7I,OAAO7zE,cAAc8zE,YAAYC,iBAAiBz/J,MAC1DypC,KAAK,SAAAk7B,MAAI,OAAI3gD,GAAG2gD,KAAK7gD,UAAU+yE,eAYnCnkB,CAAW6sF,OAAQ9mB,gBAsWlBknB,YAAqB,eArV9B,SAAAC,yKAAeC,CAAA/4J,KAAA84J,aACX94J,KAAKg5J,yTAWW,QAAAj1F,KAAAj9D,UAAAxH,OAAZ+5I,WAAY,IAAApvI,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAZq1E,WAAYr1E,MAAAl9D,UAAAk9D,MAEhB,OADAhkE,KAAKg5J,uBAAyB3f,WACvBr5I,6EAsCcohB,QAOrB,OANAk3I,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAAS3E,wBAAwBhqE,SAClC,SAACq3I,QACAA,OAAO1oE,WAAW3E,wBAAwBhqE,UAGvCphB,qFAuC6B,QAAAkkE,MAAAp9D,UAAAxH,OAATuoB,QAAS,IAAA5d,MAAAi6D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAATt8C,QAASs8C,OAAAr9D,UAAAq9D,OAOpC,OANAm0F,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAAS/E,2BAA2BnjE,UACrC,SAAC4wI,QACAA,OAAO1oE,WAAW/E,2BAA2BnjE,WAG1C7nB,2FAiCqBsJ,KAM5B,OALAgvJ,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAAS7E,+BAA+B5hF,MACzC,SAACmvJ,QACAA,OAAO1oE,WAAW7E,+BAA+B5hF,OAE9CtJ,6FAqBsBsJ,KAO7B,OANAgvJ,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAASkpE,gCAAgC3vJ,MAC1C,SAACmvJ,QACAA,OAAO1oE,WAAWkpE,gCAAgC3vJ,OAG/CtJ,2DA+BKsJ,KAMZ,OALAgvJ,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAAShF,eAAezhF,MACzB,SAACmvJ,QACAA,OAAO1oE,WAAWhF,eAAezhF,OAE9BtJ,uEAyB0B,QAAAsrE,MAAAxkE,UAAAxH,OAAb+oF,YAAa,IAAAp+E,MAAAqhE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAb8c,YAAa9c,OAAAzkE,UAAAykE,OAMjC,OALA+sF,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzCA,SAAS9E,oBAAoB5C,cAC9B,SAACowE,QACAA,OAAO1oE,WAAW9E,oBAAoB5C,eAEnCroF,uEAgBmB,QAAAk5J,MAAApyJ,UAAAxH,OAANulJ,KAAM,IAAA56I,MAAAivJ,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAANtU,KAAMsU,OAAAryJ,UAAAqyJ,OAM1B,OALAb,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzC80D,KAAKrlJ,QAAQ,SAAAY,KAAG,OAAI2vF,SAASqpE,oBAAoBh5J,IAAI,GAAIA,IAAI,OAC9D,SAACq4J,QACA5T,KAAKrlJ,QAAQ,SAAAY,KAAG,OAAIq4J,OAAO1oE,WAAWqpE,oBAAoBh5J,IAAI,GAAIA,IAAI,QAEnEJ,yEAgBoB,QAAAq5J,MAAAvyJ,UAAAxH,OAANulJ,KAAM,IAAA56I,MAAAovJ,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAANzU,KAAMyU,OAAAxyJ,UAAAwyJ,OAM3B,OALAhB,4BAAet4J,KAAKg5J,uBAAwB,SAACjpE,UACzC80D,KAAKrlJ,QAAQ,SAAAY,KAAG,OAAI2vF,SAASwpE,qBAAqBn5J,IAAI,GAAIA,IAAI,OAC/D,SAACq4J,QACA5T,KAAKrlJ,QAAQ,SAAAY,KAAG,OAAIq4J,OAAO1oE,WAAWwpE,qBAAqBn5J,IAAI,GAAIA,IAAI,QAEpEJ,iFA6C4B,IAAbw5J,OAAa1yJ,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAC7B2yJ,sBAAwBz5J,KAAKg5J,uBAC7BU,aAAe5vF,eAAeA,kBAtXtB,SAAhBwgD,cAAiBmvC,uBACnB,IAAME,QAAUF,sBAAsBnwJ,IAAI,SAAAswJ,MAAI,OAAIA,KAAK9uC,UACvD,OACIp/B,YACImuE,IAAK,SAAA/6I,EAACg7I,oBACF,IAAMC,kBAAoBD,mBAAmBllB,aAC7C,OAAOmlB,oBAA4D,IAAxCJ,QAAQhyJ,QAAQoyJ,sBAgXIzvC,CAAcmvC,wBAAyBD,QAM9F,OAJAC,sBAAsBj6J,QAAQ,SAACi5J,QAC3BA,OAAO1oE,WAAWiqE,uBAAuBN,gBAGtC15J,yBC9XFi+G,6BACT9nB,YAAa,OACb/B,aACIjI,WAAY,cAEhB8tE,QACIp8H,SAAU,QACV8R,OACI4oD,MAAM,EACNv6D,QAAS,EACT66D,OAAQ,EACRiwD,OAAQ,EACR5xH,OAAQ,GACRD,MAAO,IAEX+kE,OACIzD,MAAM,EACNv6D,QAAS,EACT66D,OAAQ,EACRiwD,OAAQ,EACR5xH,OAAQ,GACRD,MAAO,IAEXnB,MACIyiE,MAAM,EACNv6D,QAAS,EACT66D,OAAQ,EACRiwD,OAAQ,EACR5xH,OAAQ,GACRD,MAAO,KAGfuvH,aAAa,EACbjtH,SAAU,IACV2gI,UAAW,IACX1zB,OACIvsH,MACIkgJ,cAAe,GAEnBnhJ,SACIohJ,SAAU,EACVC,cAAe,SACfF,cAAe,IAGvBrR,QACI3zH,MAAO,QACPwa,MAAO,UACP1Y,MAAO,EACPqjI,UAAU,EACV3sG,QAAS,GAEbqyF,aACIzmD,UAAU,IClCHghE,aACXj6J,MACIpH,MAAO,KACP0V,MACIo6D,UAAW,SAAAA,UAAAzwE,GAAC,OAAIA,aAAawF,uBAGrCk5B,OACI/9B,MAAO,EACP0V,MACIm6D,aAAcX,aACdY,UAAW5xD,OAAOojJ,YAG1BtjI,QACIh+B,MAAO,EACP0V,MACIm6D,aAAcX,aACdY,UAAW5xD,OAAOojJ,YAG1BC,cACIvhK,MAAO,GACP0V,MACIm6D,aAAcX,aACdY,UAAW5xD,OAAOojJ,YAG1BE,eACIxhK,MAAO,GACP0V,MACIm6D,aAAcX,aACdY,UAAW5xD,OAAOojJ,YAG1BvrJ,QACI/V,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC95D,OAAQ8hG,WAEnB,IAAM4pD,QAAU7wF,kBAA8B,OAAX76D,UAAuB8hG,WACpDluF,UAAYinD,eAAe6wF,QAAS18C,6BAE1C,OADgBn0C,eAAejnD,UAAW5T,YClD7C2rJ,kBACTj5G,EAAG,MACHojF,EAAG,SACH81B,EAAG,UAGMC,qBACTn5G,EAAG,OACHojF,EAAG,SACH81B,EAAG,SAuKME,sBAAQ,QA0CRC,uBAAS,SAGTjzD,+BAAM,MACNC,yBAAO,OACPC,0BAAQ,QACRH,kCAAS,SACTmzD,iBAAS,SAETC,SAAW,UACXC,UAAY,WACZC,cAAgB,YAChBC,WAAa,SAEbC,SAAW,UACXC,SAAW,UACXC,SAAW,UACXC,YAAc,kXCzONC,wCAYjB,SAAAA,cAAajqI,WAAYioE,YAAazqF,OAAQ9T,2KAAcwgK,CAAA37J,KAAA07J,eACxD17J,KAAK0qF,WACL1qF,KAAKgrH,gBACLhrH,KAAK47J,aAGL57J,KAAKqxG,cAAgBl2G,aAErB6E,KAAK05F,YAAYA,aACjB15F,KAAKyxB,WAAWA,YAChBzxB,KAAKiP,OAAOA,0TAQZ,OACIyqF,YAAa15F,KAAK05F,cAClBzqF,OAAQjP,KAAKiP,SACbw8H,SAAUzrI,KAAKyrI,kDASfx8H,SACJ,OAAIA,SACAjP,KAAK0qF,QAAU5gB,eAAe9pE,KAAK0qF,YAAez7E,SAC3CjP,MAEJA,KAAK0qF,wDAQHgP,cACT,OAAIA,cACA15F,KAAKgrH,aAAelhD,eAAe9pE,KAAKgrH,iBAAoBtxB,cAErD15F,MAEJA,KAAKgrH,uDAQNygB,WACN,OAAIA,WACAzrI,KAAK47J,UAAYt3F,oBAAoByjC,+BAAKkzD,iBAAQnzD,mCAAS2jC,WAEpDzrI,MAEJA,KAAK47J,sDAQLlkH,QACP,OAAIA,QACA13C,KAAKokJ,WAAa1sG,OACX13C,MAEJA,KAAKokJ,6DAQF1sG,QACV,OAAIA,QACA13C,KAAKqkJ,cAAgB3sG,OACd13C,MAEJA,KAAKqkJ,gEAQF3sG,QACV,OAAIA,QACA13C,KAAK67J,cAAgBnkH,OACd13C,MAEJA,KAAK67J,4DAQJpqI,aACR,OAAIA,aACAzxB,KAAK87J,YAAcrqI,YAEZzxB,MAEJA,KAAK87J,yNCzIb,IAAMC,uBAAqBC,oCAAAC,yBFgCZ,UEhCYD,oCAAAE,sBF6Kb,QE3KO,SAFMF,oCAAAE,mBFkLb,QE/KO,WAHMF,oCAAAE,mBAIzBC,sBAAmB,GAJMH,oCAAAE,mBF4LV,YEvLO,GALGF,oCAAAE,mBFiMX,UE3LO,GANIA,qBAAAF,oCAAAC,sBF2MP,eEnMKhiJ,QAAUjB,aARRgjJ,oCAAAC,sBFsMN,gBE7LKhiJ,QAAUjB,aATTgjJ,oCAAAC,sBFgNR,aEtMKhiJ,QAAUjB,aAVPgjJ,oCAAAC,sBF+CD,kBEpCG,GAXFD,oCAAAC,sBFoDE,qBExCG,GAZLD,oCAAAC,sBF0CJ,gBE7BG,GAbCD,oCAAAC,sBFqCP,aEvBG,GAdIA,uBAqBrBG,sBAAoBJ,oCAAAK,yBFCP,QEAG,KADIL,oCAAAK,sBFMN,SEJG,KAFGL,oCAAAK,sBF8IP,YE3IG,KAHIL,oCAAAK,sBFmJN,aE/IG,KAJGA,uBAOpBC,cAAgB,0fCrB7B,IAAMC,wBAAe,SAAfA,aAAgBC,QAASC,OAAQ/kH,OAAQstF,KAAMjqI,MACjD,IAAM2hK,YAAchlH,OAAOstF,KAAO,GAC5B23B,WAAajlH,OAAOstF,MAG1B,GAAIjqI,OAASmgK,SAAU,CACnB,IAAKwB,YACD,OAAOF,QAGX,IADA,IAAIvkK,EAAI,EACFA,GAAKwkK,QACHE,WAAW1kK,GAAG+kB,YAAc0/I,YAAYzkK,GAAG+kB,UADhC/kB,GAAK,GAKxB,OAAQA,EAAI,IAAMwkK,OAAU,KAAOD,QAChC,GAAIzhK,OAASogK,UAAW,CAC3B,IAAKuB,aAA0B,IAAXD,OAChB,OAAOD,QAGX,IADA,IAAIliJ,EAAImiJ,OACDniJ,EAAIqiJ,WAAWr9J,QACdo9J,YAAYpiJ,GAAG0C,YAAc2/I,WAAWriJ,GAAG0C,UADrB1C,GAAK,GAKnC,OAAQA,IAAMqiJ,WAAWr9J,OAAU,KAAOk9J,QACvC,GAAIzhK,OAASqgK,cAAe,CAC/B,GAAa,IAATp2B,KACA,OAAOw3B,QAEX,IAAMI,SAAWD,WAAWF,OAAS,GACrC,GAAIG,SAAU,CACV,GAAIA,SAAS5/I,YAAcw/I,QAAQx/I,UAAW,CAC1C,IAAM6/I,QAAUnlH,OAAOstF,KAAO,GAC9B,OAAK63B,QAGDA,QAAQJ,QAAQz/I,YAAc6/I,QAAQJ,OAAS,GAAGz/I,UAC3C,KAEJw/I,QALI,KAOf,OAAOA,QAEX,OAAOA,QACJ,GAAIzhK,OAASsgK,WAAY,CAC5B,GAAIr2B,OAASttF,OAAOp4C,OAAS,GAAKo4C,OAAOp4C,OAAS,EAC9C,OAAOk9J,QAEX,IAAMI,UAAWD,WAAWF,OAAS,GACrC,GAAIG,WAAaA,UAAS5/I,YAAcw/I,QAAQx/I,UAAY,CACxD,IAAM8/I,QAAUplH,OAAOstF,KAAO,GAC9B,OAAI83B,QACIA,QAAQL,QAAQz/I,YAAc8/I,QAAQL,OAAS,GAAGz/I,UAC3C,KAEJw/I,QAEJ,KAEX,OAAOA,QAEX,OAAOA,SAcLO,YAAc,SAAdA,YAAeP,QAASC,OAAQ/kH,OAAQstF,MAC1C,IAAIpwH,MAAQ,EAGZ,IAAK4nJ,SAAwC,iBAAtBA,QAAQx/I,UAC3B,OAAO,EAGX,IADA,IAAIggJ,QAAS,GACLA,QACAtlH,OAAOstF,KAAOpwH,QAA2C,OAAjC8iC,OAAOstF,KAAOpwH,OAAO6nJ,QAC7C7nJ,OAAS,EAETooJ,QAAS,EAGjB,OAAOpoJ,OAaLqoJ,YAAc,SAAdA,YAAeT,QAASC,OAAQ/kH,OAAQstF,MAC1C,IAAIpwH,MAAQ,EAGZ,IAAK4nJ,SAAwC,iBAAtBA,QAAQx/I,UAC3B,OAAO,EAGX,IADA,IAAIggJ,QAAS,GACLA,QACiC,OAAjCtlH,OAAOstF,MAAMy3B,OAAS7nJ,OACtBA,OAAS,EAETooJ,QAAS,EAGjB,OAAOpoJ,OAKLsoJ,gBAAO,SAAPA,KAAiBxlH,OAAQ38C,MAC3B,OAAO28C,OAAOpuC,IAAI,SAACkR,IAAKwqH,MACpB,GAAIjqI,OAASmgK,UAAYngK,OAASogK,UAAW,CAIzC,IAHA,IAAMgC,aAAc3iJ,IAAIlR,IAAI,SAACqhE,IAAKyiE,UAAN,OAAmBmvB,wBAAa5xF,IAAKyiE,SAAU11F,OAAQstF,KAAMjqI,QACnF+oE,SACA/3D,KAAOyO,IAAIlb,OAAS69J,aAAY79J,OAC7BrH,EAAI,EAAGA,EAAI8T,KAAM9T,GAAK,EAC3B6rE,MAAKtiE,KAAK,MAEd,OAAIzG,OAASogK,WACTr3F,MAAKj6D,QAAL/I,MAAAgjE,MAAIs5F,6BAAYD,eACTr5F,QAEXA,MAAKtiE,KAALV,MAAAgjE,MAAIs5F,6BAASD,eACNr5F,OAGX,IAAMq5F,YAAc3iJ,IAAIlR,IAAI,SAACqhE,IAAKyiE,UAAN,OAAmBmvB,wBAAa5xF,IAAKyiE,SAAU11F,OAAQstF,KAAMjqI,QACnF+oE,QAEN,OADAA,KAAKtiE,KAALV,MAAAgjE,KAAIs5F,6BAASD,cACNr5F,QAcR,SAASu5F,cAAe3lH,OAAQ38C,KAAMiJ,OAEzC,GAAIjJ,OAASgtG,gCAAOhtG,OAAS+sG,kCAAQ,CAEjC,IAAMw1D,WAAaJ,gBAAKxlH,OADjB38C,OAASgtG,+BAAMszD,WAAaD,eAE7BmC,MAAQD,WAAWh0J,IAAI,SAACkR,IAAKgjJ,MAAN,OAAehjJ,IAAIlR,IAAI,SAACqhE,IAAK1yE,GAAN,OAAYglK,YAAYtyF,IAAK1yE,EAAGqlK,WAAYE,QAC/En/I,OAAO,SAAAssD,KAAG,OAAY,IAARA,QAC/B,OAAS2yF,sBAAYC,aAClB,GAAc,IAAVv5J,OAAyB,IAAVA,MAAa,CAEnC,IAAMs5J,YAAaJ,gBAAKxlH,OADP,IAAV1zC,MAAck3J,SAAWC,WAE1BoC,UAUN,OATAD,YAAW99J,QAAQ,SAACgb,IAAKgjJ,MACrBD,OAAMC,MAAQD,OAAMC,UACpBhjJ,IAAIhb,QAAQ,SAACmrE,IAAK1yE,GACd,GAAIqlK,YAAWE,MAAMvlK,GAAI,CACrB,IAAMwlK,SAAWV,YAAYpyF,IAAK1yE,EAAGqlK,YAAYE,MACjDC,UAAYF,OAAMC,MAAMh8J,KAAKi8J,gBAIhCH,uBAAYC,cAEzB,OAASD,WAAY5lH,QCpJzB,SAASgmH,sBAAc9gG,MAAOksF,OAAQ/tJ,KAAMiJ,OAAO,IAE3CizB,MAMA6xH,OANA7xH,MACA9B,MAKA2zH,OALA3zH,MACAwa,MAIAm5G,OAJAn5G,MACA+7F,eAGAod,OAHApd,eACAC,eAEAmd,OAFAnd,eACAC,iBACAkd,OADAld,iBAEEqiB,YAAW,GAAAhiJ,OAAMgrB,MAAN,OAAAhrB,OAAiBkpB,OAE9Bp6B,OAASkgK,kBAAoB,IAAVj3J,OAClB+jG,+BAAKD,kCAAQE,yBAAMC,2BAAOzoG,QAAQ,SAACm+J,YAChC/gG,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAtB,GAAA1xJ,OAAuCgiJ,YAAvC,KAAAhiJ,OAAsD2/H,iBAAiB+xB,YACnEhuH,MAAQ2sH,kBAETvhK,OAASkgK,iBAtCxB,SAAS2C,yBAAiBhhG,MAAOqxF,YAAa4P,YAAaluH,QACtDo4D,+BAAKD,mCAAQtoG,QAAQ,SAACm+J,YACnB,IAAMxoI,MAAK,GAAAlpB,OAAMgiJ,YAAN,KAAAhiJ,OAAqB4xJ,YAAYF,YAAchuH,MAAQ2sH,eAClE1/F,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAcxoI,SAoCpCyoI,CAAgBhhG,MAAOqxF,YAAaviB,eAAgB/7F,OACnC,IAAV3rC,OAjCf,SAAS85J,yBAAiBlhG,MAAOqxF,YAAa4P,YAAaluH,QACtDq4D,yBAAMC,2BAAOzoG,QAAQ,SAACm+J,YACnB,IAAMxoI,MAAK,GAAAlpB,OAAMgiJ,YAAN,KAAAhiJ,OAAqB4xJ,YAAYF,YAAchuH,MAAQ2sH,eAClE1/F,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAcxoI,SA+BpC2oI,CAAgBlhG,MAAOqxF,YAAatiB,eAAgBh8F,OAY5D,SAASouH,sBAActyB,SAAUh6G,WAAY12B,KAAMgrB,WAAYowE,aAC3Ds1C,SAASjsI,QAAQ,SAACk4C,OAAQ1zC,OAEtB,IAAMg6J,mBAAqBx7E,YAAY/wD,WAAY,OAAQ,GAArB,GAAAxlB,OAA4BkqF,YAA5B,UAAAlqF,OAAgDlR,KAAhD,KAAAkR,OAAwDjI,MAAQ,IACrGyzE,QAD0B,GAAAxrE,OACfkqF,YADe,UAAAlqF,OACKlR,OAAQ,GACvC08E,QAF0B,GAAAxrE,OAEfkqF,YAFe,UAEK,GAJA8nE,eAS5BZ,cAAc3lH,OAAQ38C,KAAMiJ,OAF5Bs5J,WAP4BW,eAO5BX,WACAC,MAR4BU,eAQ5BV,MAII3gG,MA5EhB,SAASshG,qBAAahvI,MAAOmN,UAAW8hI,SACpC,IAAM3gE,MAAQhb,YAAYtzD,MAAO,SAAU,UAAlB,GAAAjjB,OAAgCowB,UAAhC,WACnB4C,KAAOujD,YAAYgb,MAAO,SAAU,UAAlB,GAAAvxF,OAAgCowB,UAAhC,UAClBpiB,KAAOuoE,YAAYvjD,KAAM,KAAMk/H,QAAb,GAAAlyJ,OAAyBowB,UAAzB,QAIxB,OAASmhE,YAAOv+D,UAAMhlB,UAAM2iD,MAHd4lB,YAAYvoE,KAAM,KAAM,SAAC1hB,EAAGN,GAAJ,OAAUM,EAAE8lB,OAAO,SAAAlkB,GAAC,OAAU,OAANA,GAAcA,EAAE8U,SAASspF,OAAMjvF,IAAI,SAAAnP,GAAC,OACnE+nJ,YAAa/nJ,EAAGoqI,SAAUtsI,MADhC,GAAAgU,OAC0CowB,UAD1C,UAC8D,SAAA7iC,KAAG,OAAIA,IAAI0oJ,YAAYhuH,MAuExFgqI,CAAYF,mBAAD,GAAA/xJ,OAAwBkqF,YAAxB,SAA4CmnE,YAAjE1gG,MAEJ7hE,OAASkgK,kBAAUsC,MACnB3gG,MAAMrO,KAAK+sG,SAAU,SAAUz9F,KAAMuvE,UACjC,IAAM9lB,KAAOi2C,MAAM1/F,KAAK0mE,UAAU6I,UAC5B8U,YAAcrkF,KAAKqkF,YAKzB,OAJA5/D,6BAActiF,MAAMm1B,MAAM,SAA1B,GAAAlpB,OAAuCi2I,YAAY50C,cAAgBvnF,WAAW+iI,OAAO7xH,MAArF,OACIqwF,KAAO,GACP46B,YAAYyB,kBAAkBzB,YAAY70C,aAAc60C,YAAY50C,cAAgBga,MAEjFA,OAEHvsH,OAASgtG,gCAAOhtG,OAAS+sG,mCAAqB,IAAV9jG,OAC5C44D,MAAMrO,KAAKgtG,SAAU,SAAU19F,KAAMuvE,UACjC,IAAM9lB,KAAOi2C,MAAM1/F,KAAK0mE,UAAU6I,UAC5B8U,YAAcrkF,KAAKqkF,YAKzB,OAJI56B,KAAO,GACP46B,YAAYyB,kBAAkBzB,YAAY70C,aAAeia,KAAM46B,YAAY50C,eAE/EhrB,6BAActiF,MAAMm1B,MAAM,SAA1B,GAAAlpB,OAAuCi2I,YAAY50C,cAAnD,OACOga,OAIf1qD,MAAMj6B,KAAK,SAAUk7B,MACjBA,KAAKqkF,aAAerkF,KAAKqkF,YAAYtjD,OAAO5+F,QAC7CouD,OAAOzrB,KAAK,SAACk7B,MACZA,KAAKqkF,aAAerkF,KAAKqkF,YAAYt/G,WAGzC86H,sBAAa9gG,MAAO72C,WAAW+iI,OAAQ/tJ,KAAMiJ,woBCnHrD,IAAMk/B,WAAO0qC,QAAQ1qC,KA2Bfk7H,WAAa,SAAbA,WAAcnmK,EAAGomK,MACnB,IAAIzpJ,MAAQ,EACZ,IAAK,IAAMR,KAAKiqJ,KACZ,GAAIpmK,EAAIomK,KAAKjqJ,GAAI,CACbQ,MAAQR,EACR,MAGR,OAAOQ,OAUE0pJ,gBAAkB,SAAlBA,gBAAmB5mH,OAAQzoC,QAAW,IACvCsvJ,aAAiBtvJ,OAAjBsvJ,aACJC,aAAe9mH,OAAO,GAAGp4C,OAAS,EAAIo4C,OAAO,GAAKA,OAAO,GAgB7D,OAfI6mH,cACAC,aAAe9mH,OAAO,GAAGp4C,OAAS,EAAnBm/J,wBAA2B/mH,OAAO,OACjD8mH,aAAe9mH,OAAO,GAAGp4C,OAAS,KAAnB2M,OAAAwyJ,wBAA2BD,cAA3BC,wBAA4C/mH,OAAO,KAAM8mH,cAExEA,aAAeA,aAAal1J,IAAI,SAACkR,IAAK+pH,UAClC,IAAI45B,WAOJ,OANIzmH,OAAO,GAAGp4C,OAAS,IACnB6+J,QAAUM,wBAAI/mH,OAAO,GAAG6sF,YAExB7sF,OAAO,GAAGp4C,OAAS,IACnB6+J,WAAOlyJ,OAAAwyJ,wBAAON,SAAPM,wBAAmB/mH,OAAO,GAAG6sF,aAEjC45B,UAGRK,cAyKEE,0BAAsB,SAAtBA,sBAA0D,IAAnCvzJ,KAAmCrE,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAAxBmI,OAAwBnI,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAhBmrI,YAAgB73J,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAAorI,qBACpB3vJ,OAAvCsvJ,+BAD2D,IAAAK,2CACrCC,aAAiB5vJ,OAAjB4vJ,aADqCC,gBAjOhD,SAAjBC,eAAkBR,cACpB,OAAIA,cAEIS,aAAchE,uBACdiE,cAAelE,wBAInBiE,aAAcjE,sBACdkE,cAAejE,wBA0NqB+D,CAAeR,cAA/CS,aAF2DF,gBAE3DE,aAAcC,cAF6CH,gBAE7CG,cACdtiJ,OAAWxR,KAAXwR,OACFuiJ,YA/DoB,SAAjBC,eAAkBZ,aAAcM,cACzC,OAAKN,cAODrnI,OAAQ,EACRD,MAAO4nI,aAAa5nI,QANhBC,OAAQ2nI,aAAa3nI,OACrBD,MAAO,GA2DKkoI,CAAeZ,aAAcM,cACjD,GAAIliJ,OAAO,GAAGnjB,IAAK,KAAA4lK,cACTluD,cAAYmuD,qBAAAD,iBAAMJ,aAAe,GAArBK,qBAAAD,cAAyBH,cAAgB,GAAzCG,eAYlB,OAVAziJ,OAAOnd,QAAQ,SAAC8/J,WAEZ,IAAM/uF,MAAQmuF,oBAAoBY,UAAWrwJ,OAAQ0vJ,aAErDztD,aAAa8tD,cAAgBp+J,KAAKG,IAAImwG,aAAa8tD,cAAezuF,MAAMyuF,cACpEE,YAAYF,eAEhB9tD,aAAa+tD,iBAAmB1uF,MAAM0uF,iBAE1C9zJ,KAAKolE,MAAQ2gC,aACNA,aAEX,OAzD2B,SAAlBo2C,gBAAmBn8I,KAAM6a,SAAUk5I,aAAiC,IAAAj/J,KAApBs/J,WAAoBz4J,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MACrEk4J,aAAgCh5I,SAAhCg5I,aAAcC,cAAkBj5I,SAAlBi5I,cAClBO,kBAAoB,EACpBC,mBAAqB,EAmBzB,OAlBAt0J,KAAKwR,OAAOnd,QAAQ,SAACkgK,YAAe,IAAAC,YAC5BC,SAAW,EACXC,SAAW,EACfH,WAAWlgK,QAAQ,SAAC0iJ,YAAa9U,UAC7B8U,YAAYyB,oBACZ,IAAMpzE,MAAQ2xE,YAAYoF,kBAE1BuY,SAAWj/J,KAAKG,IAAI8+J,UAAWtvF,MAAM0uF,eAAgBC,YAAYD,gBACjEM,WAAWnyB,UAAYxsI,KAAKG,IAAIw+J,WAAWnyB,WAAa,EAAG78D,MAAMyuF,eACjEY,WAAaL,WAAWnyB,YAE5BqyB,oBAAsBI,SACtBL,kBAAoB5+J,KAAKG,IAAIy+J,kBAAmBI,UAChDz0J,KAAKolE,OAAL8uF,qBAAAM,eACKV,cAAgBr+J,KAAK68B,KAAKgiI,qBAD/BJ,qBAAAM,YAEKX,aAAep+J,KAAK68B,KAAK+hI,oBAF9BG,eAKJN,qBAAAp/J,QACKg/J,cAAgBQ,oBADrBJ,qBAAAp/J,KAEK++J,aAAeQ,mBAFpBv/J,KAmCOqnJ,CAAgBn8I,MAAQ6zJ,0BAAcC,6BAAiBC,YAAaP,cAoDlEmB,sBAAwB,SAAxBA,sBAAyB30J,KAAMozJ,cACxC,GAAIpzJ,KAAKwR,OAAO,GAAGnjB,IAAK,CACpB,IAAMqS,OAaN,OAZAV,KAAKwR,OAAOnd,QAAQ,SAACgP,OACZ+vJ,aAGiBuB,sBAAsBtxJ,MAAO+vJ,cACrC/+J,QAAQ,SAACrF,EAAGlC,GAAM,IAAA8nK,OACxBl0J,IAAI5T,GAAK4T,IAAI5T,QACb8nK,OAAAl0J,IAAI5T,IAAGuJ,KAAPV,MAAAi/J,OAAAtB,wBAAetkK,MALnB0R,IAAIrK,KAAJV,MAAA+K,IAAG4yJ,wBAASqB,sBAAsBtxJ,MAAO+vJ,kBASjDpzJ,KAAKusC,OAAS7rC,IACPA,IAOX,OAFIV,KAAKusC,OAHJ6mH,aAGapzJ,KAAKwR,OAAO,GAAGrT,IAAI,SAACqhE,IAAKyiE,UAAN,OAAmBjiI,KAAKwR,OAAOrT,IAAI,SAAAkR,KAAG,OAAIA,IAAI4yH,cAFjEjiI,KAAKwR,OAIhBxR,KAAKusC,QAwIHsoH,kBAAoB,SAApBA,kBAAqBn0J,IAAKo0J,IAAKtgK,KAAX,OAAmBkM,IAAI0O,MAAM0lJ,KAAMtgK,MCldvDkxG,2BACT5hG,QACI85D,aAAc,SAAAA,aAACjxC,QAAS5+B,OAAV,OAAoB4wE,eAAehyC,QAAQ4yD,YAAexxF,SAE5EylK,eACAnyD,kBACA0E,iBCHS1yF,4CACT0hJ,gBACA/pE,YAAa,OACb0zC,qBAAqB,EACrBg1B,cACI3nI,OAAQ,IACRD,MAAO,IACP6xH,OAAQ,GAEZyV,cAAc,EACd/3B,MP0OmB,UOzOnB25B,0TCDiBC,sCAQjB,SAAAA,aAAa1oH,QAAqB,IAAbzoC,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,kKAAAu5J,CAAArgK,KAAAogK,cAE9BpgK,KAAKsgK,cAAgB,EACrBtgK,KAAKugK,eAAiB7oH,OAAO,OAC7B13C,KAAKwgK,iBAAmB9oH,OAAO,OAC/B13C,KAAKygK,gBACLzgK,KAAK0gK,mBAGLt3F,sBAAsBppE,KAAM6wG,2BAC5B,IAAMY,OAAS94G,OAAOmgB,UAAW9Y,KAAK4W,YAAY4H,iBAClDxe,KAAKiP,OAAO66D,eAAe2nC,OAAQxiG,SAEnCjP,KAAK2gK,cAAgBrC,iBAAiB5mH,OAAO,OAAUA,OAAO,QAAW13C,KAAKiP,4UAU9E,MAAM,IAAIoB,MAAMu5D,UAAUC,sFAI1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,4EAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,0FAI1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wEAY1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,gFAa1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wFAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8EAW1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,sEAW1B,OAAI/iE,UAAOxH,OACAU,KAEJA,KAAKugK,yEAIZ,OAAIz5J,UAAOxH,OACAU,KAEJA,KAAKwgK,qDAIZ,OAAI15J,UAAOxH,OACAU,KAEJA,KAAK4gK,sDAOF,IAAAC,aHnEQ,SAAbC,WAAchpI,SACvB,IAAIipI,cACAC,aAAe,EACfx6B,MLwKe,UKvKbjjB,OAASrgF,aACT17B,QACAy5J,aAAenpI,QAAQ6oI,cACvBO,cAAgBppI,QAAQopI,gBACxBC,gBAAkBrpI,QAAQqpI,kBARG7xD,gBASCx3E,QAAQ7oB,SAApCsvJ,aAT2BjvD,gBAS3BivD,aAAc6C,UATa9xD,gBASb8xD,UAEtB,GAAK7C,aAsCE,CAQH,GANI/3B,MADyB,IAAzB06B,cAAc5hK,OLyHH,UKvHuB,IAA3B6hK,gBAAgB7hK,OLwHV,YKrHL4hK,cAAc5hK,QAAU6hK,gBAAgB7hK,OLoHrC,UACE,YKnHb4hK,cAAc5hK,OAAS,EAAG,CAC1B,IAAK,IAAIrH,IAAI,EAAGA,IAAIipK,cAAc5hK,OAAS,EAAGrH,MAC1CuP,KAAKhG,KAAKvJ,KAGduP,KAAKhG,KAAK0/J,cAAc5hK,OAAS,GL8GpB,cK5GTknI,QACAw6B,aAAeE,cAAc5hK,OAAS,GAG9C,GAAI6hK,gBAAgB7hK,OAAS,EAAG,CAE5B,IADA,IAAM+hK,oBAAsBH,cAAc5hK,OACjCrH,IAAIkpK,gBAAgB7hK,OAAS,EAAGrH,IAAI,EAAGA,MAC5CuP,KAAKhG,KAAKvJ,IAAIopK,qBAGlB75J,KAAKhG,KAAK6/J,qBLiGC,YK/FP76B,QACAw6B,aAAeK,qBAUvB,IAAIC,UAPJ95J,KAAKhI,QAAQ,SAAChG,KACV,IAAIssI,SAAW,EACf,OAAOviB,OAAO/pH,IAAI,SAACjB,GAEf,OADAutI,UACA,GAAA75H,OAAU1T,EAAEiB,KAAKwjB,UAAjB,KAAA/Q,OAA8BmyJ,WAAWt4B,QAASs7B,gBAI1DE,UAAYL,aAAa,GAAG33J,IAAI,SAACqhE,IAAKyiE,UAAN,OAAmB6zB,aAAa33J,IAAI,SAAAkR,KAAG,OAAIA,IAAI4yH,cAC/E2zB,WAAax9C,OAAOhuG,QAAQ+rJ,eA9Eb,CAQf,GANI96B,MADyB,IAAzB06B,cAAc5hK,OL+JH,UK7JuB,IAA3B6hK,gBAAgB7hK,OL8JV,YK3JL4hK,cAAc5hK,QAAU6hK,gBAAgB7hK,OL0JrC,UACE,YKzJb4hK,cAAc5hK,OAAS,EAAG,CAC1B,IAAK,IAAIrH,EAAI,EAAGA,EAAIipK,cAAc,GAAG5hK,OAAS,EAAGrH,IAC7CuP,KAAKhG,KAAKvJ,GAEduP,KAAKhG,KAAK0/J,cAAc,GAAG5hK,OAAS,GLqJvB,cKpJTknI,OAAkD,IAA3B26B,gBAAgB7hK,SACvC0hK,aAAeE,cAAc,GAAG5hK,OAAS,GAGjD,GAAI6hK,gBAAgB7hK,OAAS,EAAG,CAE5B,IADA,IAAMiiK,UAAYL,cAAc5hK,OAAS,EAAI4hK,cAAc,GAAG5hK,OAAS,EAC9DrH,GAAIkpK,gBAAgB,GAAG7hK,OAAS,EAAGrH,GAAI,EAAGA,KAC/CuP,KAAKhG,KAAKvJ,GAAIspK,WAElB/5J,KAAKhG,KAAK+/J,WL0IC,YKxIP/6B,QACAw6B,aAAeO,gBAGnBP,aAAeE,cAAc5hK,OAAS,EAAI4hK,cAAc,GAAG5hK,OAAS,EAAI,EAE5EkI,KAAKhI,QAAQ,SAAChG,KACV,IAAIssI,SAAW,EACf,OAAOviB,OAAO/pH,IAAI,SAACjB,GAEf,OADAutI,UACA,GAAA75H,OAAU1T,EAAEiB,KAAKwjB,UAAjB,KAAA/Q,OAA8BmyJ,WAAWt4B,QAASs7B,gBAG1DL,WAAax9C,OAAOhuG,QAAQ0rJ,cA2ChC,OAAS7kG,KAAM2kG,WAAYC,2BGvBQF,CAAW9gK,MAAlCo8D,KADEykG,aACFzkG,KAAM4kG,aADJH,aACIG,aAEd,OADAhhK,KAAKsgK,cAAgBU,aACd5kG,+DAUP,OAAOp8D,KAAKkxG,2EAUGj6E,MAAOC,QACtBl3B,KAAKwsG,gBAAiBv1E,YAAOC,gBAC7B,IAAMklC,KAAOp8D,KAAKo8D,OACZolG,eAAiBxhK,KAAKyhK,oBAAoBzG,uBAAQ5+F,MAClDslG,cAAgB1hK,KAAKyhK,oBAAoB1G,sBAAO3+F,MAChDh5B,MAAQpjC,KAAK2hK,eAAeD,cAAeF,gBAIjD,OAFAxhK,KAAK4hK,eAAiB5hK,KAAK6hK,qBAAqBz+H,OAChDpjC,KAAK8hK,iBAAmB9hK,KAAK+hK,mBAAmB9qI,MAAOC,QAChDl3B,qEAYUjF,KAAMgmK,YAAsC,IAAAt/J,MAAAzB,KAA1BojC,MAA0Bt8B,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,GAAlB,EAAGkf,SAAelf,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAE7D,GADAkf,SAASod,OAASxiC,KAAKG,IAAIilB,SAASod,QAAU,EAAG29H,WAAWxwF,MAAMx1E,OAC9DgmK,WAAWpkJ,OAAQ,CACnB,IAAMqlJ,WAAa5+H,MAAQ,EAC3B29H,WAAWpkJ,OAAOnd,QAAQ,SAACgP,OACnBA,MAAM+hE,QACNvqD,SAAWvkB,MAAKggK,oBAAoB1mK,KAAMyT,MAAOwzJ,WAAYh8I,aAIzE,OAAOA,uEAUP,OAAOhmB,KAAK8hK,mFAUZ,OAAO9hK,KAAK4hK,iFAUMx+H,OAClB,IAAMv3B,OAEN,OHsP6B,SAAxBo2J,wBAAiE,IAAxCp2J,IAAwC/E,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,MAA9Bs8B,MAA8Bt8B,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAvB0uI,WAAuBp7J,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EAAX2uI,OAAWr7J,UAAAxH,OAAA,EAAAwH,UAAA,QAAA0sB,EACpE4uI,aAAeD,OAAOE,cAGxB9D,aAFW4D,OAAOlzJ,SAElBsvJ,aAGAniG,KAEA8lG,WAFA9lG,KACA6kG,aACAiB,WADAjB,aAGJ,GAAc,IAAV79H,MAAa,CACb,IAAMk/H,aAnJa,SAAdC,YAAe7qH,OAAQ6mH,aAAc6D,cAC9C,IAAMlB,iBACAC,mBAsBN,OArBI5C,aACA7mH,OAAOl4C,QAAQ,SAACgb,IAAK+pH,UACbA,UAAY69B,aACZjB,gBAAgB3/J,KAAKgZ,KAErB0mJ,cAAc1/J,KAAKgZ,OAI3Bk9B,OAAOl4C,QAAQ,SAACgb,IAAK+pH,UACjB/pH,IAAIhb,QAAQ,SAACqb,OAAQ2pH,aACbA,aAAe49B,cACfjB,gBAAgB58B,UAAY48B,gBAAgB58B,cAC5C48B,gBAAgB58B,UAAU/iI,KAAKqZ,UAE/BqmJ,cAAc38B,UAAY28B,cAAc38B,cACxC28B,cAAc38B,UAAU/iI,KAAKqZ,cAKrCqmJ,cAAeC,iBA2HEoB,CAAYnmG,KAAK1kB,OAAQ6mH,aAAc6D,cAO5D,OANAv2J,IAAIrK,MACAk2C,OAAQ0kB,KAAK1kB,OACbwpH,cAAeoB,aAAa,GAC5BnB,gBAAiBmB,aAAa,GAC9B/xF,MAAOnU,KAAKmU,QAET1kE,IAEX,IAAM22J,UAAYp/H,MAAQ,EAO1B,OANAg5B,KAAKz/C,OAAOnd,QAAQ,SAACrF,GACjB8nK,sBAAsBp2J,IAAK22J,WACvBpmG,KAAMjiE,EACN8mK,2BACDkB,UAEAt2J,IGnRHo2J,CAAsBp2J,IAAKu3B,MAAOpjC,KAAKyiK,mBAAoBziK,MACpD6L,4DA1FP,OAAO2S,sxCC7HMkkJ,mDAQjB,SAAAA,gBAAahrH,QAAqB,IAAAj2C,MAAbwN,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,qKAAA67J,CAAA3iK,KAAA0iK,kBAC9BjhK,MAAAmhK,qCAAA5iK,KAAA6iK,0BAAAH,iBAAAtqK,KAAA4H,KAAM03C,OAAQzoC,UAETozJ,cAAiB3qH,OAAO,GAAGp4C,OAAS,EAAIo4C,OAAO,GAAG,GAAGp4C,OAAS,EACnEmC,MAAKk/J,cAAgBrC,iBAAiB5mH,OAAO,OAAUA,OAAO,QAAWj2C,MAAKwN,UAG9ExN,MAAKm/J,OACDpnK,IAAKgiK,SACL7+I,OAAQlb,MAAKq/J,cAEjBr/J,MAAK29J,cAAgB39J,MAAKi9J,sBAXIj9J,uYARO2+J,iVA6BrC,IAAMW,WAAa/gK,KAAKo8D,OAExB,OADA0jG,sBAAsBiB,YAAY,GAC3BrC,0BAAoBqC,WAAY/gK,KAAKiP,SAAUjP,KAAK2+J,mFAGxC34I,UAAU,IAAAxQ,OAAAxV,KAEzB8iK,WAGA98I,SAHA88I,WACAC,UAEA/8I,SAFA+8I,UACA7rI,OACAlR,SADAkR,OAEJ,OAAOl3B,KAAK4hK,eAAet4J,IAAI,SAAC05J,WAAY/qK,GACxC,IAAMgrK,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAajrK,GAD3BkrK,sBAED3tJ,OAAK4tJ,kBAAkBH,gBAA5DI,OAFsCF,sBAEtCE,OAAQC,WAF8BH,sBAE9BG,WAAYC,aAFkBJ,sBAElBI,aACtB/B,gBAAkBtqI,OAAQA,QAC1ByqG,eAAiB0hC,OAEvB,OACIC,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5BrsI,QACIssI,QAAShC,eAAe,GACxBiC,UAAWjC,eAAe,IAE9BvqI,OACIusI,QAAS7hC,eAAe,GACxB8hC,UAAW9hC,eAAe,mEAYtB,IAAA3+B,aAIZhjG,KAAKiP,SAFLsvJ,aAFYv7D,aAEZu7D,aACA4B,iBAHYn9D,aAGZm9D,iBAEEzoH,OAAS13C,KAAK2gK,cACdvkG,KAAO0N,kBAAmB9pE,KAAKo8D,QAC/BsnG,WAAavD,iBAAiB,GAC9BwD,WAAaxD,iBAAiB,IAAM/oJ,OAAOE,kBAC3C2pJ,aAAgB1C,aACtB7mH,OAAOn9B,MAAM,GAAGjR,IAAI,SAAAnP,GAAC,OAAI6lK,kBAAkB7lK,EAAGupK,WAAYC,cADrB3D,kBAAkBtoH,OAAQgsH,WAAYC,YAM3E,OAHAvnG,KAAKz/C,OAASqjJ,kBAAkB5jG,KAAKz/C,OAAQ+mJ,WAAYC,YACzDvnG,KAAK1kB,OAASsoH,kBAAkB5jG,KAAK1kB,OAAQgsH,WAAYC,aAGrDvnG,UACA6kG,mGAIiBj7I,UACrB,IAAI49I,qBACAC,gBACAC,WACAC,cACAC,iBAAmB,EAEnBtsH,OAKA1xB,SALA0xB,OACOusH,eAIPj+I,SAJAiR,MACa8rI,UAGb/8I,SAHA24I,YACUuF,aAEVl+I,SAFAqS,SACAnB,OACAlR,SADAkR,OAEE8/C,SAAWh3E,KAAKiP,SAAS+nE,SACzBqqF,oBAAsBrhK,KAAKkhK,gBAAgB5hK,OAASU,KAAKkhK,gBAAgB,GAAG5hK,OAAS,EAErFsyG,QAENgyD,qBAAuBK,eACvBJ,gBAAkBK,cAGdH,WADa,IAAb/sF,UACcqqF,oBAAsB,EAAGA,qBAGb,IAAbrqF,UAAkBqqF,oBAAsB,IAAMA,sBAGpD7hK,QAAQ,SAACvH,GAChB25G,KAAK35G,GAAK8qK,UAAU9qK,GACpB+rK,kBAAoBjB,UAAU9qK,GAC9B2rK,sBAAwBhyD,KAAK35G,GAC7B4rK,iBAAmBjyD,KAAK35G,KAE5By/C,OAAO,GAAGl4C,QAAQ,SAACrF,EAAGlC,IACa,IAA3B8rK,WAAWp8J,QAAQ1P,KACnB25G,KAAK35G,GAAK2rK,sBAAwBb,UAAU9qK,GAAK4rK,oBAGzDnsH,OAAOl4C,QAAQ,SAAAgb,KAAG,OAAIA,IAAIhb,QAAQ,SAACmrE,IAAKw6D,OACF,IAA9B4+B,WAAWp8J,QAAQw9H,OACnBx6D,IAAIg5E,kBAAkB/xC,KAAKuzB,MAAOjuG,QAElC4sI,QAAQ3+B,MAAQvkI,KAAKG,IAAI+iK,QAAQ3+B,OAAS,EAAGvkI,KAAKgR,MAAM+4D,IAAI28E,kBAAkBrwH,SAE9E6sI,QAAQ3+B,MAAQ,MAIxB,IAAMg/B,cAAgBF,eAAiBH,QAAQ9wJ,OAAO,SAAC7Z,EAAGO,GAAJ,OAAUP,EAAIO,IAQpE,OAPIyqK,cAAgB,EAChBL,QAAUA,QAAQx6J,IAAI,kBAAM,IAE5By6J,WAAWvkK,QAAQ,SAACvH,GAChB6rK,QAAQ7rK,GAAK2I,KAAKgR,MAAMuyJ,eAAiBvyD,KAAK35G,GAAK+rK,kBAAoB,MAGxEF,8DAWKpC,cAAeF,gBAC3B,IAAIvpK,EACIi/B,OAAWl3B,KAAKwsG,iBAAhBt1E,OAER,IAAKj/B,EAAI,EAAGA,EAAIupK,eAAeliK,UACvBkiK,eAAevpK,IAAMi/B,QADUj/B,KAIvC,OAAO2I,KAAKC,IAAI6gK,cAAcpiK,OAAS,EAAGrH,iEAY1Bg/B,MAAOC,QAAQ,IAAAzG,OAAAzwB,KAC3B8iK,cACAC,aACEpE,YAAc3+J,KAAK2+J,cAEnBtmI,SAAWsmI,YAAY3rJ,OAAO,SAAC7Z,EAAGO,GAEpC,OADAP,GAAKO,IAGH0qK,cAAgBpkK,KAAKqkK,yBACvB3sH,OAAQ13C,KAAK2gK,cACbtoI,kBACAsmI,wBACA1nI,YACAC,gBAYJ,OATAl3B,KAAK4hK,eAAepiK,QAAQ,SAACwjK,YACzB,IAGM76J,SAAYm8J,OAFH,EAEWC,QADV,EACmB7sH,OAHpBsrH,WAAWtrH,OAGiBzgB,YAAOC,cAAQ4rI,sBAAYC,oBAAWqB,6BAC3Ep+I,SAAWyK,OAAK+zI,uBAAuBr8J,SAC7C46J,UAAY/8I,SAAS+8I,UACrBD,WAAa98I,SAAS88I,aAEnB9iK,KAAKykK,uBAAwBvtI,cAAQD,YAAO6rI,sBAAYC,4FAS3C/8I,UACpB,IACI0+I,SACAH,QAFAT,WAGEnF,YAAc3+J,KAAK2+J,cAJK1pD,cAW1Bj1G,KAAKiP,SAJL46H,oBAP0B50B,cAO1B40B,oBACAq2B,aAR0BjrD,cAQ1BirD,aACA3B,aAT0BtpD,cAS1BspD,aACAoG,OAV0B1vD,cAU1B0vD,OAEIjtH,OAAyD1xB,SAAzD0xB,OAAQxgB,OAAiDlR,SAAjDkR,OAAQ4rI,WAAyC98I,SAAzC88I,WAAYC,UAA6B/8I,SAA7B+8I,UAAWqB,cAAkBp+I,SAAlBo+I,cAC/CG,QJyC0B,SAArBK,mBAAsBltH,OAAQ01F,UACvC,IAAIl2G,OAAS,EACTD,MAAQ,EAOZ,OANAygB,OAAOl4C,QAAQ,SAACgb,KACZ,IACMqqJ,OADMrqJ,IAAI4yH,UACGka,kBACnBrwH,MAAQr2B,KAAKG,IAAIk2B,MAAO4tI,OAAO5tI,OAC/BC,QAAU2tI,OAAO3tI,UAGjBD,YACAC,eIpDU0tI,CAAmBltH,OAAQ13C,KAAKsgK,eAAeppI,OAEzD,IAAMmB,SAAWsmI,YAAY3rJ,OAAO,SAAC7Z,EAAGO,GAEpC,OADAP,GAAKO,IAGTssB,SAAS24I,YAAcA,YACvB34I,SAASqS,SAAWA,SAEhByrI,QADAzrI,SAAW,EACD+rI,cAEAzF,YAAYr1J,IAAI,kBAAM,IAEpCo7J,SJ2J4B,SAAvBI,qBAAwBhtI,SACjC,IAEIitI,oBAFAC,QAAU,EACVC,UAAY,EAGZ1G,aAQAzmI,QARAymI,aACA2B,aAOApoI,QAPAooI,aACAgF,gBAMAptI,QANAotI,gBACAhuI,OAKAY,QALAZ,OACA2yG,oBAIA/xG,QAJA+xG,oBACA86B,OAGA7sI,QAHA6sI,OACAjtH,OAEA5f,QAFA4f,OACAytF,KACArtG,QADAqtG,KAGA+6B,mBAAoC1sI,IAApB0sI,aAAa,KAC7B8E,QAAU9E,aAAaltJ,OAAO,SAAC7Z,EAAGO,GAE9B,OADAP,GAAKO,KAITirK,aAAwBnxI,IAAdmxI,OAAO,KACjBM,UAAYN,OAAO3xJ,OAAO,SAAC7Z,EAAGO,GAE1B,OADAP,GAAKO,KAIbqrK,oBAAsBG,gBAAkBtkK,KAAKgR,MAAMszJ,gBAAkBD,WAErE,IAAME,OAASztH,OAAOp4C,OACtB,OAAOo4C,OAAOpuC,IAAI,SAACkR,IAAKwqH,MACpB,IACMz0D,MADM/1D,IAAI2qH,MACEmiB,kBAAkBpwH,OAChCkuI,WAAc70F,MAA0CA,MAAQr5C,QAAzC6tI,oBAAsB7tI,QASjD,OAPKqnI,eACG2B,aAAa5gK,OAAS,GAAK6lK,SAAWjF,aAAa5gK,OACnD8lK,WAAcL,oBAAsB7E,aAAal7B,MAAQggC,SAClDn7B,qBAA0C,IAAnB/xG,QAAQZ,UACtCkuI,WAAcL,oBAAsBI,SAGrCvkK,KAAKgR,MAAMwzJ,cIrMPN,EACPptH,cACAytF,KAAMnlI,KAAKsgK,cACXppI,OAAQqtI,QACRW,gBAAiBhuI,OACjB2yG,wCACAq2B,0BACA3B,0BACAoG,gBAEA5B,UAAUzjK,OAAS,IACnBwkK,QAAUA,QAAQx6J,IAAI,SAACnP,EAAGlC,GAAJ,OAAU2I,KAAKG,IAAI5G,EAAG4oK,UAAU,GAAG9qK,IAAM,MAEnE8qK,UAAUvhK,KAAKsiK,SACf,IAAK,IAAI1vJ,EAAI,EAAGA,EAAI2uJ,UAAUzjK,OAAQ8U,IAClC2uJ,UAAU3uJ,GAAK0vJ,QAGnB,OADAhB,WAAWthK,KAAKkjK,WACP3B,oBAAWD,mFAUL98I,UAAU,IAAA6K,OAAA7wB,KAInBqlK,YADFrlK,KAAKiP,SADL4vJ,aAE6B/V,OACzBka,WAAmDh9I,SAAnDg9I,WAAYD,UAAuC/8I,SAAvC+8I,UAAWD,WAA4B98I,SAA5B88I,WAAYI,YAAgBl9I,SAAhBk9I,YACrCxrH,OAASsrH,WAAWtrH,OACpB4rH,aAAe,IAAK,IACpBC,eAAiB,IAAK,IAEtBF,QAAU,EAAG,GACbjB,aAAepiK,KAAKqiK,cAsB1B,OApBA3qH,OAAOl4C,QAAQ,SAACgb,IAAKwqH,MACjBxqH,IAAIhb,QAAQ,SAACq+D,KAAMsnE,MACf,IAAMmgC,UAAYxC,WAAWI,aAAal+B,OAAS,EAC7CugC,SAAWxC,UAAUG,aAAa/9B,MAExCtnE,KAAK8lF,kBAAkB4hB,SAAUD,UAAYD,aAEhC,IAATrgC,MAAcG,KAAOi9B,cACrBmB,aAAa,GAAGp+B,MAAQogC,SACxBlC,OAAO,IAAMA,OAAO,IAAM,GAAKkC,UACf,IAATvgC,MAAcG,MAAQi9B,eAC7BmB,aAAa,GAAGp+B,KAAOi9B,cAAgBmD,SACvClC,OAAO,IAAMA,OAAO,IAAM,GAAKkC,UAE/BpgC,OAASt0G,OAAKyvI,gBACdgD,WAAW,GAAGt+B,MAAQsgC,UACtBhC,WAAW,GAAGt+B,MAAQsgC,gBAK9BE,SAzBa,EAAG,GA0BhBnC,cACAC,sBACAC,uyCCrTSkC,yDAQjB,SAAAA,mBAAa/tH,QAAqB,IAAAj2C,MAAbwN,OAAanI,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,GAAAA,UAAA,wKAAA4+J,CAAA1lK,KAAAylK,qBAC9BhkK,MAAAkkK,wCAAA3lK,KAAA4lK,6BAAAH,oBAAArtK,KAAA4H,KAAM03C,OAAQzoC,UAETozJ,cAAgB3qH,OAAO,GAAGp4C,OAG/BmC,MAAKm/J,OACDpnK,IAAKiiK,YACL9+I,OAAQlb,MAAKq/J,cAEjBr/J,MAAK29J,cAAgB39J,MAAKi9J,sBAVIj9J,gZARU2+J,6VA4BxC,IAAMW,WAAa/gK,KAAKo8D,OAExB,OADA0jG,sBAAsBiB,YAAY,GAC3BrC,0BAAoBqC,WAAY/gK,KAAKiP,SAAUjP,KAAK2+J,mFAGxC34I,UAAU,IAAAxQ,OAAAxV,KAEzB8iK,WAIA98I,SAJA88I,WACAC,UAGA/8I,SAHA+8I,UACA7rI,OAEAlR,SAFAkR,OACAD,MACAjR,SADAiR,MAGJ,OAAOj3B,KAAK4hK,eAAet4J,IAAI,SAAC05J,WAAY/qK,GACxC,IAAMgrK,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAajrK,EAAGi/B,eAD9BisI,sBAM1C3tJ,OAAK4tJ,kBAAkBH,gBAHvBuC,QAH0CrC,sBAG1CqC,QACAlC,WAJ0CH,sBAI1CG,WACAC,aAL0CJ,sBAK1CI,aAEE/B,eAAiBgE,QACjB7jC,gBAAkB1qG,MAAOA,OAE/B,OACIqsI,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5BrsI,QACIssI,QAAShC,eAAe,GACxBiC,UAAWjC,eAAe,IAE9BvqI,OACIusI,QAAS7hC,eAAe,GACxB8hC,UAAW9hC,eAAe,mEAYtB,IAAA3+B,aAIZhjG,KAAKiP,SAFLsvJ,aAFYv7D,aAEZu7D,aACA4B,iBAHYn9D,aAGZm9D,iBAEEzoH,OAAS13C,KAAK2gK,cACdvkG,KAAO0N,kBAAmB9pE,KAAKo8D,QAC/BsnG,WAAavD,iBAAiB,GAC9BwD,WAAaxD,iBAAiB,IAAM/oJ,OAAOE,kBAC3C2pJ,aAAgB1C,aACtB7mH,OAAOn9B,MAAM,GAAGjR,IAAI,SAAAnP,GAAC,OAAI6lK,kBAAkB7lK,EAAGupK,WAAYC,cADrB3D,kBAAkBtoH,OAAQgsH,WAAYC,YAO3E,OAJAvnG,KAAKz/C,OAASqjJ,kBAAkB5jG,KAAKz/C,OAAQ+mJ,WAAYC,YAEzDvnG,KAAK1kB,OAAS0kB,KAAK1kB,OAAOpuC,IAAI,SAAAnP,GAAC,OAAI6lK,kBAAkB7lK,EAAGupK,WAAYC,eAGhEvnG,UACA6kG,mGAIiBj7I,UAAU,IAE3BkR,OAEAlR,SAFAkR,OACA4rI,WACA98I,SADA88I,WAEA+C,iBAAmB3uI,OACnB4uI,cACA/B,cACAgC,QAAU,EACR/uF,SAAWh3E,KAAKiP,SAAS+nE,SACzBqqF,oBAAsBrhK,KAAKkhK,gBAAgB5hK,OA0BjD,OAxBiB,IAAb03E,UACA+sF,YAAc1C,oBAAsB,EAAGA,qBACvC0E,QAAU,IAEVhC,WAA0B,IAAb/sF,UAAkBqqF,oBAAsB,IAAMA,qBAC3D0E,QAAU,GAEdjD,WAAWtjK,QAAQ,SAACrF,EAAGlC,IACY,IAA3B8rK,WAAWp8J,QAAQ1P,KACnB6tK,WAAW7tK,GAAKkC,EAChB0rK,kBAAoB1rK,KAGxB0rK,iBAAmB,EACnBC,WAAaA,WAAWx8J,IAAI,kBAAM,IAElCy6J,WAAWvkK,QAAQ,SAACrF,GACZ0rK,iBAAmBE,QAAUjD,WAAW3oK,GACxC2rK,WAAW3rK,GAAK,EAEhB2rK,WAAW3rK,GAAKyG,KAAKC,IAAIiiK,WAAW3oK,GAAK0rK,iBAAoBE,WAIlED,iEAWKpE,eACZ,IAAIpnJ,EACI2c,MAAUj3B,KAAKwsG,iBAAfv1E,MAER,IAAK3c,EAAI,EAAGA,EAAIonJ,cAAcpiK,UACtBoiK,cAAcpnJ,IAAM2c,OADU3c,KAGtC,OAAO1Z,KAAKC,IAAI6gK,cAAcpiK,OAAS,EAAGgb,iEAY1B2c,MAAOC,QAAQ,IAAAzG,OAAAzwB,KAC3B8iK,cACAC,aAYJ,OAVA/iK,KAAK4hK,eAAepiK,QAAQ,SAACwjK,YACzB,IAGM76J,SAAYm8J,OAFH,EAEWC,QADV,EACmB7sH,OAHpBsrH,WAAWtrH,OAGiBzgB,YAAOC,cAAQ4rI,sBAAYC,qBAChEpE,YAAcluI,OAAK+zI,uBAAuBr8J,SAChD46J,UAAYpE,YAAYoE,UACxBD,WAAanE,YAAYmE,aAGtB9iK,KAAKykK,uBAAwBvtI,cAAQD,YAAO6rI,sBAAYC,4FAS3C/8I,UACpB,IAAI0+I,YAEAhtH,OAIA1xB,SAJA0xB,OACAzgB,MAGAjR,SAHAiR,MACA6rI,WAEA98I,SAFA88I,WACAC,UACA/8I,SADA+8I,UAEEsC,YAAcrlK,KAAKiP,SAAS4vJ,aAAa/V,OAEzCwb,OLoDiB,SAAlB0B,gBAAmBxrJ,KAC5B,IAAI0c,OAAS,EACTD,MAAQ,EAMZ,OALAzc,IAAIhb,QAAQ,SAACmrE,KACT,IAAMk6F,OAASl6F,IAAI28E,kBACnBpwH,OAASt2B,KAAKG,IAAIm2B,OAAQ2tI,OAAO3tI,QACjCD,OAAS4tI,OAAO5tI,SAGhBA,YACAC,eK9De8uI,CAAgBtuH,OAAO13C,KAAKsgK,gBAAgBrpI,MACrD6sI,QLgKqB,SAAtBmC,oBAAuBnuI,QAASouI,cAAiB,IAEtDjC,eAGAnsI,QAHAmsI,eACAhtI,MAEAa,QAFAb,MACAzc,IACAsd,QADAtd,IAGAqvH,oBAGAq8B,aAHAr8B,oBACA00B,aAEA2H,aAFA3H,aACA2B,aACAgG,aADAhG,aAEA8E,QAAU,EAOd,OANI9E,cAAgBA,aAAa,KAC7B8E,QAAU9E,aAAaltJ,OAAO,SAAC7Z,EAAGO,GAE9B,OADAP,GAAKO,KAIN8gB,IAAIlR,IAAI,SAACqhE,IAAKyiE,UACjB,IAAM78D,MAAQ5F,IAAI28E,kBAAkBrwH,MAChCkvI,UAAa51F,MAAoCA,MAAQt5C,OAAnCgtI,eAAiBhtI,OAC3C,GAAIsnI,aACA,GAAI2B,aAAa5gK,OAAS,EACtB6mK,UAAalC,eAAiB/D,aAAa9yB,UAAY43B,aACpD,GAAIn7B,qBAAiC,IAAV5yG,MAAa,CAC3C,IAAMmvI,OAAS5rJ,IAAIlb,OACnB6mK,UAAalC,eAAiBmC,OAGtC,OAAOxlK,KAAKgR,MAAMu0J,aK7LFF,EACZzrJ,IAAKk9B,OAAO13C,KAAKsgK,eACjBrpI,MAAOqtI,OACPL,eAAgBhtI,OACjBj3B,KAAKiP,UAERyoC,OAAOl4C,QAAQ,SAACgb,IAAKwqH,MAAN,OAAexqH,IAAIhb,QAAQ,SAACmrE,IAAKw6D,MAC5C,IAAMkhC,gBAAkB17F,IAAI28E,kBAE5B38E,IAAIg5E,kBAAkBmgB,QAAQ3+B,MAAQkgC,YAAagB,gBAAgBnvI,QACnEwtI,SAAS1/B,MAAQpkI,KAAKG,IAAI2jK,SAAS1/B,OAAS,EAAGpkI,KAAKgR,MAAM+4D,IAAI28E,kBAAkBpwH,aAEhF4rI,WAAWxjK,OAAS,IACpBolK,SAAWA,SAASp7J,IAAI,SAACnP,EAAGlC,GAAJ,OAAU2I,KAAKG,IAAI5G,EAAG2oK,WAAW,GAAG7qK,OAEhE6qK,WAAWthK,KAAKkjK,UAChB,IAAK,IAAItwJ,EAAI,EAAGA,EAAI0uJ,WAAWxjK,OAAQ8U,IACnC0uJ,WAAW1uJ,GAAKswJ,SAGpB,OADA3B,UAAUvhK,KAAKsiK,UACNhB,sBAAYC,iFAUN/8I,UAAU,IAAA6K,OAAA7wB,KAInBqlK,YADFrlK,KAAKiP,SADL4vJ,aAE6B/V,OACzBka,WAA2Dh9I,SAA3Dg9I,WAAY9rI,OAA+ClR,SAA/CkR,OAAQ6rI,UAAuC/8I,SAAvC+8I,UAAWD,WAA4B98I,SAA5B88I,WAAYI,YAAgBl9I,SAAhBk9I,YAC7CxrH,OAASsrH,WAAWtrH,OACpB4rH,aAAe,IAAK,IACpBC,eAAiB,IAAK,IACtBiC,SAAW,EAAG,GAEdpD,aAAepiK,KAAKqiK,cAEpBiE,mBAAqBtmK,KAAKqkK,yBAA0BntI,cAAQ4rI,WAAYA,WAAW,SAsBzF,OApBAprH,OAAOl4C,QAAQ,SAACgb,IAAKwqH,MACjBxqH,IAAIhb,QAAQ,SAACq+D,KAAMsnE,MACf,IAAMmgC,UAAYgB,mBAAmBthC,OAAS,EACxCugC,SAAWxC,UAAUG,aAAa/9B,MAExCtnE,KAAK8lF,kBAAkB4hB,SAAWF,YAAaC,WAElC,IAATngC,MAAcH,KAAOo9B,cACrBkB,WAAW,GAAGt+B,MAAQsgC,UACtBE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WACjB,IAATngC,MAAcH,MAAQo9B,eAC7BkB,WAAW,GAAGt+B,KAAOo9B,cAAgBkD,UACrCE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WAEjCtgC,OAASn0G,OAAKyvI,gBACdiD,aAAa,GAAGp+B,MAAQogC,SACxBhC,aAAa,GAAGp+B,MAAQogC,eAKhCC,gBACAnC,QA3BY,EAAG,GA4BfC,sBACAC,wlDC5PZ,IAAM5f,+BAAoB,SAApBA,kBAAqBjsG,OAAQ2rH,OAAQmC,SACvC9tH,OAAOl4C,QAAQ,SAACgb,IAAKwqH,MACjBxqH,IAAIhb,QAAQ,SAAC0iJ,YAAa/c,MACtB+c,YAAYyB,kBAAkB0f,OAAOl+B,MAAOqgC,QAAQxgC,YAK1DuhC,cAAgB,SAAhBA,cAAiBpE,OAAQqE,YAAaC,YACxC,IAAIC,QAAUvE,OAAOlzJ,SAAP,GAAAhD,OAAmBu6J,YAAnB,YAKd,OAJIC,WAAWnnK,OAAS,EAAIonK,UACxBA,QAAU,EACVvE,OAAOlzJ,uLAAP03J,IAAA,GAAA16J,OAAoBu6J,YAApB,WAA2CE,WAExCA,mrDC5BUE,2CAUjB,SAAAA,WAAan7B,SAAUh6G,WAAYioE,YAAazqF,QAAQ,IAAAxN,MAAA,2JAAAolK,CAAA7mK,KAAA4mK,aACpDnlK,MAAAqlK,iCAAA9mK,KAAA+mK,sBAAAH,YAAAxuK,KAAA4H,KAAMyxB,WAAYioE,YAAazqF,UAC1Bw8H,SAASA,UACdhqI,MAAKwN,OAAOxN,MAAKmV,YAAY4H,iBAC7B/c,MAAKulK,UAAYv7J,cACjBhK,MAAKwlK,UAAYxlK,MAAKmV,YAAYswJ,kBALkBzlK,0XAVpBi6J,0SAyE1BjwB,WACN,OAAIA,WACAzrI,KAAK47J,UC3FqB,SAAzBuL,uBAA0BrvI,QAAS2zG,UAE5C,IAII27B,YACAC,YALA/jB,cACAC,eACAC,aACAC,gBALqDn0C,gBAgBrDx3E,QAAQ7oB,SAPRmxI,eATqD9wC,gBASrD8wC,eACAC,kBAVqD/wC,gBAUrD+wC,kBACAinB,YAXqDh4D,gBAWrDg4D,YACApH,aAZqD5wD,gBAYrD4wD,aACApX,OAbqDx5C,gBAarDw5C,OACAsY,UAdqD9xD,gBAcrD8xD,UACApqF,SAfqDs4B,gBAerDt4B,SAfqD68E,qBAoBrD/7H,QAAQ4hE,cAFRghE,cAlBqD7G,qBAkBrD6G,cACAD,aAnBqD5G,qBAmBrD4G,aAEI38H,IAAwB2tG,SAAxB3tG,IAAKgwB,OAAmB29E,SAAnB39E,OAAQf,OAAW0+E,SAAX1+E,OArBoCw6G,KAAAC,4BAsBjB1pI,IAtBiB,GAsBlD4oH,QAtBkD6gB,KAAA,GAsBzCr7B,WAtByCq7B,KAAA,GAsB7B5gB,SAtB6B4gB,KAAA,GAAAE,QAAAD,4BAuBd15G,OAvBc,GAuBlDi+E,SAvBkD07B,QAAA,GAuBxC57B,YAvBwC47B,QAAA,GAuB3Bz7B,UAvB2By7B,QAAA,GAAAC,QAAAF,4BAwBRz6G,OAxBQ,GAwBlDi5F,WAxBkD0hB,QAAA,GAwBtCv7B,cAxBsCu7B,QAAA,GAwBvBzhB,YAxBuByhB,QAAA,GAqFzD,OA3DI37B,SAASzsI,OAAS,IAElBgkJ,cAAUr3I,OAAA07J,gCAAOjhB,SAAPihB,gCAAmB57B,UAAnB47B,gCAAgC3hB,cAE1Cha,UAAU1sI,OAAS,IAEnBikJ,eAAWt3I,OAAA07J,gCAAOhhB,UAAPghB,gCAAoB37B,WAApB27B,gCAAkC1hB,eAE7C/Z,WAAW5sI,OAAS,GAAK4sI,WAAW,GAAG5sI,OAAS,IAEhDkkJ,UAAYtX,WAAW5iI,IAAI,SAAC/Q,EAAGN,GAAJ,SAAAgU,OAAA07J,gCAAcjhB,QAAQzuJ,IAAtB0vK,gCAA6BpvK,GAA7BovK,gCAAmChhB,SAAS1uJ,QAEvEk0I,cAAc7sI,OAAS,GAAK6sI,cAAc,GAAG7sI,OAAS,IAEtDmkJ,aAAetX,cAAc7iI,IAAI,SAAC/Q,EAAGN,GAAJ,SAAAgU,OAAA07J,gCAAc3hB,WAAW/tJ,IAAzB0vK,gCAAgCpvK,GAAhCovK,gCAAsC1hB,YAAYhuJ,QAGvF6/B,QAAQ8rH,UAAU,IAAIgkB,4BAAWtkB,WAAYC,cACzC1Z,oBAAqBuW,eACrB8f,aAAcA,aAAajmJ,KAC3B0qJ,OAAQ2C,YAAYrtJ,KACpB4kJ,cACI5nI,MAAOwjI,aACPvjI,OAAQwjI,cACR5R,OAAQA,OAAO7xH,OAEnB+/C,SAAUA,SAASx8D,IACnB4mJ,UAAWA,UAAUnnJ,KAAK3Q,IAAI,SAAAnP,GAAC,OAAIA,EAAIyG,KAAKG,IAAI2lJ,QAAQpnJ,OAAQqnJ,SAASrnJ,UACzE6gK,kBAAmBzZ,QAAQpnJ,OAAQ0mJ,WAAW1mJ,WAI9C8nK,YADA1gB,QAAQpnJ,OAAS,EACHonJ,QAAQ,GAAGpnJ,OAEX0mJ,WAAW1mJ,OAAS,EAAI0mJ,WAAW,GAAG1mJ,OAAS,EAI7D+nK,YADA1gB,SAASrnJ,OAAS,EACJqnJ,SAAS,GAAGrnJ,OAEZ2mJ,YAAY3mJ,OAAS,EAAI2mJ,YAAY,GAAG3mJ,OAAS,EAGnEw4B,QAAQ+rH,aAAa,IAAIgkB,kCAAcrkB,UAAWC,eAC9C5Z,oBAAqBwW,kBACrB6f,aAAcA,aAAalnJ,QAC3B2rJ,OAAQ2C,YAAYtuJ,QACpBulJ,cAAc,EACdM,cACI5nI,MAAOwjI,aACPvjI,OAAQwjI,cACR5R,OAAQA,OAAO7xH,OAEnB+/C,SAAUA,SAASrM,IACnBy2F,UAAWA,UAAUpoJ,QACrBmnJ,kBAAmBiH,YAAaC,gBAEpCvvI,QAAQgwI,aAAaj8B,aAEdJ,SDMkB07B,CAAuBnnK,KAAMyrI,WACvCzrI,MAEX+nK,WAAAhB,sBAAAH,WAAA7sK,WAAA,WAAAiG,MAAA5H,KAAA4H,KAAsByrI,iEAatB,ODrDiC,SAA5Bu8B,0BAA6B7F,QAAW,IAAAliK,KAAAmiB,MAAAf,MAAA0kG,MAAAW,MAC3Ck9B,UAAYue,OAAOve,YACnBC,aAAese,OAAOte,eACtBikB,aAAe3F,OAAO2F,eAHqBG,oBAO7C9F,OAAOzoE,cAFPziE,MAL6CgxI,oBAK7ChxI,MACAC,OAN6C+wI,oBAM7C/wI,OAGA4xH,OACAqZ,OAAOlzJ,SADP65I,OAEErd,SAAW02B,OAAO12B,WAEpB3tG,IAEA2tG,SAFA3tG,IACAivB,OACA0+E,SADA1+E,OAIEm7G,eAlEH,SAASC,qBAAsBzwH,OAAQ38C,MAC1C,OAAI28C,OACOA,OAAO4vG,kBAAkBvsJ,MAE7B,EA8DgBotK,CAAqBvkB,UAAWmX,uBACjDqN,kBAAoBxnK,KAAKC,IAAIqnK,eAAgBjxI,MAAQ,GAGrDouI,YAAcvc,OAAO7xH,MAGrBoxI,kBAAoBpxI,MAAQmxI,kBAAoB/C,YAEhDiD,sBAAwB1nK,KAAKC,IAAIgjJ,aAAayD,kBAAkBpwH,OAAQA,OAAS,GAEvF2sH,aAAaF,kBAAkB0kB,kBAAmBC,uBAClD,IAAMC,gBAAkB1kB,aAAa2kB,oBAErCjC,cAAcpE,OX+II,SW/IYoG,iBAG9B,IAAME,gBAAkBF,gBAAgBpG,OAAOlzJ,SAASy5J,eAGlDC,mBAAqBF,gBAAgBvxI,OAAOssI,QAAUiF,gBAAgBvxI,OAAOusI,UAG7EmF,gBAAkB1xI,OAASyxI,mBAEjC/kB,UAAUD,kBAAkBykB,kBAAmBQ,iBAE/C,IAAMC,kBAAoBjlB,UAAU4kB,oBACpCjC,cAAcpE,OXkIC,MWlIY0G,mBAC3B,IAAMvF,YAAarjK,SAAGgM,OAAHnL,MAAAb,KAAA6oK,+BAAaD,kBAAkBv/J,IAAI,SAAAnP,GAAC,OAAIA,EAAEmpK,WAAWE,YAClEuF,kBAAmB3mJ,UAAGnW,OAAHnL,MAAAshB,MAAA0mJ,+BAAaD,kBAAkBv/J,IAAI,SAAAnP,GAAC,OAAIA,EAAEopK,aAAaC,YAC1EwF,oBAAqB3nJ,UAAGpV,OAAHnL,MAAAugB,MAAAynJ,+BAAaD,kBAAkBv/J,IAAI,SAAAnP,GAAC,OAAIA,EAAEopK,aAAaE,cAC5EwF,qBAAuBplB,aAAa2kB,oBAEpCjF,cAAex9C,UAAG95G,OAAHnL,MAAAilH,MAAA+iD,+BAAaG,qBAAqB3/J,IAAI,SAAAnP,GAAC,OAAIA,EAAEopK,aAAaC,YACzE0F,qBAAuBD,qBAAqB,GAAG3F,WAAWE,QAE1D2F,wBAAyBziD,UAAGz6G,OAAHnL,MAAA4lH,MAAAoiD,+BAAaG,qBAAqB3/J,IAAI,SAAAnP,GAAC,OAAIA,EAAEmpK,WAAWG,cAGvFqE,aAAatoK,QAAQ,SAACk4C,OAAQstF,MAC1BttF,OAAOl4C,QAAQ,SAAC0iJ,YAAa/c,MACzB+c,YAAYyB,kBAAkB4f,aAAap+B,MAAQkgC,YAAa/B,WAAWt+B,MAAQqgC,iBAG3F1hB,+BAAkB7lH,IAAI,GAAIirI,iBAAkBG,sBAC5CvlB,+BAAkB7lH,IAAI,GAAIkrI,mBAAoBE,sBAC9CvlB,+BAAkB52F,OAAO,GAAIg8G,iBAAkBI,wBAC/CxlB,+BAAkB52F,OAAO,GAAIi8G,mBAAoBG,wBCf7CnB,CAA0BhoK,MAC1BA,KAAKopK,qBACEppK,+CAGDjF,KAAMsuK,YACZ,IAAMC,SAAWvuK,KAAK0I,cAEhB8lK,WADuBvpK,KAAKwpK,WAA1BC,iBAC2B,GAAAx9J,OAAIq9J,SAAJ,UAC7B5C,QAAU9lK,KAAKC,IAAID,KAAKG,IAAI,EAAGsoK,YAAaE,YAMlD,OALAvpK,KAAKiP,iLAALy6J,IAAA,GAAAz9J,OACQq9J,SADR,WAC4B5C,QAAU,IAEtC1mK,KAAKopK,qBACLppK,KAAK2pK,aACE3pK,yCAGJjF,MAAM,IACD0uK,iBAAqBzpK,KAAKwpK,WAA1BC,iBACFH,SAAWvuK,KAAK0I,cACtB,OACI8lK,WAAYE,iBAAgB,GAAAx9J,OAAIq9J,SAAJ,UAC5BM,YAAa5pK,KAAKiP,SAAL,GAAAhD,OAAiBq9J,SAAjB,YAAsC,+CAKvD,OAAIxiK,UAASxH,QACTU,KAAKinK,UAALngK,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKinK,0EASM,IAAAhyD,cAKdj1G,KAAKiP,SAHL46J,WAFc50D,cAEd40D,WACAnB,cAHczzD,cAGdyzD,cACA5f,OAJc7zC,cAId6zC,OAEE2gB,iBDdiB,SAAlBK,gBAAmB3H,OAAQ0H,WAAYnB,eAYhD,IAXA,IAAM9kB,UAAYue,OAAOve,YACnBC,aAAese,OAAOte,eACtBikB,aAAe3F,OAAO2F,eACtBr8B,SAAW02B,OAAO12B,WAClBs+B,YAAcnmB,UAAUomB,sBACxBC,eAAiBpmB,aAAammB,sBAC9BE,sBACF1vJ,IAAK,EACLK,OAAQ,GAGH5iB,EAAI4xK,WAAa,EAAG5xK,GAAK,EAAGA,IAAK,CACtC,IAAMqH,OAASsB,KAAKG,IAAIgpK,YAAY9xK,GAAGipK,cAAc5hK,OACjDyqK,YAAY9xK,GAAGkpK,gBAAgB7hK,QACnC4qK,qBAAqB1vJ,KAAOlb,OAGhC,IAAK,IAAIrH,GAAIywK,cAAgB,EAAGzwK,IAAK,EAAGA,KAAK,CACzC,IAAMy/C,OAASuyH,eAAehyK,IACtBipK,cAAmCxpH,OAAnCwpH,cAAeC,gBAAoBzpH,OAApBypH,gBACjB7hK,QAASsB,KAAKG,IAAImgK,cAAc,GAAKA,cAAc,GAAG5hK,OAAS,EACjE6hK,gBAAgB,GAAKA,gBAAgB,GAAG7hK,OAAS,GACrD4qK,qBAAqBrvJ,QAAUvb,QAGnCmsI,SAAS3tG,IAAI,GAAKmsI,eAAevB,eAAexH,cAChDz1B,SAAS1+E,OAAO,GAAKk9G,eAAevB,eAAevH,gBAEnD11B,SAAS39E,OAAO,GAAKi8G,YAAYF,YAAY3I,cAC7Cz1B,SAAS39E,OAAO,GAAKi8G,YAAYF,YAAY1I,gBAE7C,IAAMgJ,aAAevpK,KAAKG,IAAI0qI,SAAS39E,OAAO,GAAGxuD,OAAQmsI,SAAS39E,OAAO,GAAGxuD,QAEtE8qK,gBAAkBxpK,KAAKG,IAAI0qI,SAAS3tG,IAAI,GAAG,GAAK2tG,SAAS3tG,IAAI,GAAG,GAAGx+B,OAAS,EAAGmsI,SAAS1+E,OAAO,GAAG,GAChG0+E,SAAS1+E,OAAO,GAAG,GAAGztD,OAAS,GAIvC,OAHAmsI,SAAS39E,OAAO,GAAKg6G,aAAavtJ,MAAM2vJ,qBAAqB1vJ,IAAK0vJ,qBAAqB1vJ,IAAM2vJ,cACxF7gK,IAAI,SAAAouC,QAAM,OAAIA,OAAOn9B,MAAM2vJ,qBAAqBrvJ,OAAQqvJ,qBAAqBrvJ,OAASuvJ,oBAGvF3+B,kBACA4+B,SAAUN,YAAYzqK,OACtBgrK,YAAaL,eAAe3qK,QC5BHwqK,CAAgB9pK,KAAM6pK,WAAYnB,eACrD6B,iBDoCqB,SAAtBC,oBAAuBrI,QAChC,IAAMve,UAAYue,OAAOve,YACnBC,aAAese,OAAOte,eAFe4mB,gBAMvCtI,OAAOlzJ,SAFPy5J,cAJuC+B,gBAIvC/B,cACAmB,WALuCY,gBAKvCZ,WAGEa,UAAY9mB,UAAU4kB,oBAAoBqB,YAC1C3B,eAAiBwC,UAAUzzI,MAChB0zI,UAAqCzC,eAA9C1E,QAA+BoH,WAAe1C,eAA1BzE,UAEtBoH,UAAYhnB,aAAa2kB,oBAAoBE,eAE7CC,mBAAqBkC,UAAU3zI,OACpB4zI,UAAuCnC,mBAAhDnF,QAA+BuH,aAAiBpC,mBAA5BlF,UAEtBuH,aAAeN,UAAUpH,WAAWE,QAAQxwJ,OAAO,SAAC7Z,EAAGO,GAAJ,OAAUP,EAAIO,IAGvE,OACIuxK,WAAYN,UAHIE,UAAUtH,aAAaC,QAAQxwJ,OAAO,SAAC7Z,EAAGO,GAAJ,OAAUP,EAAIO,IAGhCkxK,YACpCM,YAAaJ,UAAWE,aAAcD,eC1DbP,CAAoBxqK,MAM7C,OALAuqK,iBAAiBzhB,OAASA,OAC1B9oJ,KAAKwpK,UACDC,kCACAc,oCAEGvqK,mDASCyxB,YAER,GADAzxB,KAAKyxB,WAAWA,aACXzxB,KAAKyxB,aACN,OAAOzxB,KAEX,IAAMwpK,SAAWxpK,KAAKwpK,WAEdC,iBAEAD,SAFAC,iBACAc,iBACAf,SADAe,iBAIR,ORlDD,SAASY,eAAgBrzI,QAAS2zG,SAAU8+B,kBAAkB,IAE7DzsI,IAGA2tG,SAHA3tG,IACAgwB,OAEA29E,SAFA39E,OACAf,OACA0+E,SADA1+E,OAGAopC,YACAr+D,QAAQ7oB,SADRknF,YAGAl/D,MACAa,QAAQ4hE,cADRziE,MAEE/H,MAAQ4I,QAAQrG,aAOtB+wD,YAAYtzD,MAAO,QAJbn0B,KAAMgtG,+BAAKrwD,OAAQ5Z,MACnB/iC,KAAMkgK,iBAAQvjH,OAAQoW,SACtB/yD,KAAM+sG,kCAAQpwD,OAAQqV,SAEjB,GAAA9gD,OAAwBkqF,YAAxB,qBACMxzD,KAAK,SAAUpqC,EAAGN,GACf,IAAMuiB,IAAM8nE,6BAActiF,MAC1Bwa,IAAIi9D,QAAJ,GAAAxrE,OAAekqF,YAAf,qBAAAlqF,OAA8ChU,IAAK,GACnD8lK,sBAAaxlK,EAAEm/C,OAAQl9B,IAAKjiB,EAAEwC,KAAMwvK,iBAAkBp0E,eAEzDhhE,MAAM4lI,sBANvB,GAAA9uJ,OAMiCrL,KAAK68B,KAAKxG,OAN3C,OQ8BIk0I,CAAenrK,KAAMypK,iBAAiBh+B,SAAU8+B,kBACzCvqK,iEAjJP,OAAOrH,OAAOmgB,WACVyxJ,kBACIzhB,OAAQ9oJ,KAAKwe,gBAAgBsqI,OAC7BoiB,YAAa,EAAG,EAAG,GACnBD,WAAY,EAAG,EAAG,IAEtBxB,kBACIa,YAAa,EACbD,SAAU,EACV5+B,UAAY3tG,OAASgwB,UAAYf,8EAazC,OAAOqvG,2EAWP,OAAOL,8DAWP,OAAO,IAAI6K,WAAW,KAAM,KAAM5mK,KAAKyvJ,qBAAsBzvJ,KAAKwe,8UE7ErD4sJ,wkBAKb,MAAM,IAAI/6J,MAAMu5D,UAAUyhG,sDAO1B,MAAM,IAAIh7J,MAAMu5D,UAAUyhG,wDAO1B,MAAM,IAAIh7J,MAAMu5D,UAAUyhG,wDAO1B,MAAM,IAAIh7J,MAAMu5D,UAAUyhG,gOCvB3B,ICJMrjE,qCAAO,OACPC,sCAAQ,QACRH,uCAAS,SACTC,oCAAM,MAENujE,4CAAc,OASdC,iBAAS,SAGTC,qBAAO,OACPC,qBAAO,OACPC,0BAAkB,gBAClBC,iBAAS,SACTC,0BAAY,YACZC,UAAY,WACZC,2BAAS,SACTC,cAAgB,eCzBhBC,eAAO,OAEPC,eAAO,OAEPC,KAAO,OAEPC,MAAQ,6UCsHNC,uBArGX,SAAAA,WAAan9J,kKAAQo9J,CAAArsK,KAAAosK,YACjBpsK,KAAKw/E,IAAM/zE,cAEX,IAAMoX,UAAYinD,kBAAmB9pE,KAAK4W,YAAY4H,iBACtDxe,KAAK0qF,QAAU5gB,eAAejnD,UAAW5T,YAEzCjP,KAAKu9F,OAAS,uSA8Bd,MAAM,IAAIltF,MAAMu5D,UAAUC,gDAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8DAS1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,0EAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,8EAW1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wDAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,wDAU1B,MAAM,IAAIx5D,MAAMu5D,UAAUC,iDAhF1B,MDzCc,iECoDd,6MC3CD,gCAAMo0C,+BAAcquD,8BAAAC,mBHPL,UGOKD,8BAAAE,qBAElBC,qCAAiB,GAFCH,8BAAAE,kBAGlBC,sCAAkB,GAHAH,8BAAAE,kBAIlBC,oCAAgB,GAJEH,8BAAAE,kBAKlBC,uCAAmB,GALDD,oBAAAF,8BAAAC,gBHFA,aGSE,GAPFD,8BAAAC,gBHEF,YGME,GARAD,8BAAAC,gBHAG,gBGSE,MATLD,8BAAAC,gBHCD,YAKJ,UGNKD,8BAAAC,gBHKP,QGME,GAXKD,8BAAAC,gBHmBF,WGPE,GAZAD,8BAAAC,gBHoBF,gBGPE,GAbAD,8BAAAC,gBHqBH,WGPE,MAdCA,8LCP3B,IAAMG,eACFx9I,SACAo+E,eACAD,cACAp+F,QACI85D,aAAc,SAAAA,aAACjxC,QAAS5+B,OAAV,OAAoB4wE,eAAehyC,QAAQ4yD,QAASxxF,SAEtEg4G,gBACAy7D,cACA/qJ,WAoBSivF,sCAAK+7D,yBAAAC,+BACbX,KAAOpiG,gBAjBRxpE,QACAwsK,WACA79J,UACAijF,MACInpB,aAAc,SAAAA,aAACjxC,QAAS5+B,OAAV,OAAoBP,OAAOmgB,OAAOgf,QAAQ8sH,MAAO1rJ,SAEnE87I,iBACAhrI,UACAmtC,aACA2tD,YACAzJ,iBAOkCqxE,gBADpBE,yBAAAC,4BAEbb,eAAOliG,gBAJRijG,cAIkCL,gBAFpBE,yBAAAC,4BAGbZ,eAAOS,eAHME,yBAAAC,4BAIbV,MAAQO,eAJKG,0lCCdlB,IA6Me9uB,gCArKX,SAAAA,SAAa9uI,QAAQ,IAAAxN,MAAA,8JAAAurK,CAAAhtK,KAAA+9I,WACjBt8I,iLAAAwrK,CAAAjtK,KAAAktK,yBAAAnvB,UAAA3lJ,KAAA4H,KAAMiP,UAED6iG,MAAQ,KACbrwG,MAAK0rK,aAAe,KACpB1rK,MAAK2rK,YAAc,KACnB3rK,MAAK29J,cAAgB,KAErBh2F,sBAAsBikG,gEAAA5rK,QAAMovG,qCAAMo7D,iBARjBxqK,8XARF2qK,gSAoCf,OAAOpsK,KAAK4hB,SAASsS,iDAoBrB,OACIn5B,KAAMkxK,eACN9+G,KAAMntD,KAAK4hB,SAASkmD,uEAyBxB,OAHK9nE,KAAKkxG,gBACNlxG,KAAKkxG,aAjHQ,SAAnBo8D,iBAAoBx1I,SACtB,IAAIy1I,aACAC,cACErgH,KAAOr1B,QAAQlW,SAHa0tF,gBAO9Bx3E,QAAQ7oB,SAFRw+J,WAL8Bn+D,gBAK9Bm+D,WACA50E,OAN8ByW,gBAM9BzW,OAN8B60E,sBAW9BvgH,KAAKm6F,kBAFLrwH,MAT8By2I,sBAS9Bz2I,MACAC,OAV8Bw2I,sBAU9Bx2I,OAWJ,OANa,IADLi2B,KAAKl+C,SADLspF,MAGJi1E,cAAgB5sK,KAAKgR,MAAMslB,OAAS2hE,OAAO/6D,IAAM+6D,OAAO9rC,OAAS0gH,YACjEF,aAAe3sK,KAAKgR,MAAMqlB,MAAQ4hE,OAAO53D,KAAO43D,OAAO33D,MAAQusI,cAE9DF,aAAgCt2I,MAAlBu2I,cAAyBt2I,SAGxCD,MAAOs2I,aACPr2I,OAAQs2I,eA0FcF,CAAiBttK,OAEhCA,KAAKkxG,2EAYGj6E,MAAOC,QACtBl3B,KAAKqtG,WAAWp2E,OAChBj3B,KAAKstG,YAAYp2E,QAFa,IAAA8rE,aAM1BhjG,KAAKiP,SAFL4pF,OAJ0BmK,aAI1BnK,OACA0U,SAL0BvK,aAK1BuK,SAUJ,OAPIt2E,OAASC,QACTl3B,KAAK4hB,SAAS+hI,kBAAkB1sH,MAAOC,OAAQ2hE,OAAQ0U,UACvDvtG,KAAK4hB,SAASsvF,aAAa,OAE3BlxG,KAAK4hB,SAAS+rI,oBAElB3tJ,KAAKkxG,aAAa,MACXlxG,2CAUuBkvB,OAC9B,IAAKA,MACD,OAAOlvB,KAEX,IAAMmtD,KAAOntD,KAAK4hB,SACZ0rF,YAActtG,KAAKstG,cACnBD,WAAartG,KAAKqtG,aAEpBxU,OACA74F,KAAKiP,SADL4pF,OAGA/6D,IAIA+6D,OAJA/6D,IACAivB,OAGA8rC,OAHA9rC,OACA9rB,KAEA43D,OAFA53D,KACAC,MACA23D,OADA33D,MAGAq3D,KACAprC,KAAKl+C,SADLspF,KAEEo1E,WAAanrF,YAAYF,6BAAcpzD,OAAQ,OAAQlvB,MAA/B,GAAAiM,OAAyCq/J,4CAAzC,KAAAr/J,OL3Jb,cK4JX8hD,UAAYy0B,YAAYmrF,WAAY,OAAQ,GAArB,GAAA1hK,OAA4Bq/J,4CAA5B,oBAiB7B,OAfAtrK,KAAKkvB,MAAMA,OACQ,IAAfm+E,YAAqBA,YACrBt/C,UAAUQ,KL9KD,QK8KT,GAAAtiD,OAAyB,EAAzB,OAEgB,IAAhBqhG,aAAsBA,aACtBv/C,UAAUQ,KLlLA,SKkLV,GAAAtiD,OAA0B,EAA1B,OAEJ0hK,WAAWx4I,MLnLE,QKmLb,GAAAlpB,OAA2BssF,KAAO33F,KAAKgR,MAAMy7F,YAAc,EAA3D,OACiBl4E,MLrLH,SKoLd,GAAAlpB,OACkCssF,KAAO33F,KAAKgR,MAAM07F,aAAe,EADnE,OAEiBn4E,MAAM,aAAc2I,KACpB3I,MAAM,gBAAiB43B,QACvB53B,MAAM,cAAe8L,MACrB9L,MAAM,eAAgB+L,OAEvCisB,KAAKj+B,MAAM6+B,UAAU/hC,QACd+hC,kDAYP,OAFA/tD,KAAK4hB,UAAY5hB,KAAK4hB,SAASghB,SAC/B5iC,KAAKkvB,SAAWlvB,KAAKkvB,QAAQ0T,SACtB5iC,sCA/IP,OAAOisK,8CAoBP,OAAOjsK,KAAKw/E,4DAwBZ,OAAOy+B,unCCqCA+/B,iCAjIX,SAAAA,UAAa/uI,QAAQ,IAAAxN,MAAA,+JAAAmsK,CAAA5tK,KAAAg+I,WACjBv8I,oLAAAosK,CAAA7tK,KAAA8tK,0BAAA9vB,WAAA5lJ,KAAA4H,KAAMiP,SAENm6D,sBAAsB2kG,kEAAAtsK,QAAMovG,qCAAMs7D,QAHjB1qK,iYAPD2qK,oSA8BhB,OAAOpsK,KAAKk0B,iDAgCZ,OACIn5B,KAAMoxK,iEAYV,OAAKnsK,KAAKkxG,eAMHlxG,KAAKkxG,gBAJJj6E,MAAOj3B,KAAKi3B,OAAS,EACrBC,OAAQl3B,KAAKk3B,QAAU,+DAchBD,MAAOC,QAItB,OAHAl3B,KAAKqtG,WAAWp2E,OAChBj3B,KAAKstG,YAAYp2E,QACjBl3B,KAAKkxG,aAAa,MACXlxG,2CAWuBkvB,OAC9B,GAAIA,MAAO,KACCiG,MAAUn1B,KAAKiP,SAAfkmB,MAERn1B,KAAKkvB,MAAMA,OACX,IAAMiF,UAAYmuD,6BAAcpzD,OAC1B5J,KAAOk9D,YAAYruD,UAAW,OAAQn0B,KAAKk0B,KACjD5O,KAAKmyD,QAAL,GAAAxrE,OAAgBq/J,4CAAhB,KAAAr/J,ONnGc,eMmG+B,GAC7CqZ,KAAK6P,MAAM,QAAX,GAAAlpB,OAAuBjM,KAAKqtG,aAA5B,OACA/nF,KAAK6P,MAAM,SAAX,GAAAlpB,OAAwBjM,KAAKstG,cAA7B,OACAhoF,KAAKyyD,KAAK,IAEN5iD,OACAguD,WAAW79D,KAAM6P,OAEvB,OAAOn1B,6CAWT,OADAA,KAAKkvB,SAAWlvB,KAAKkvB,QAAQ0T,SACtB5iC,sCAjHP,OAAOmsK,qCAgCP,OAAOnsK,KAAKw/E,4DAXZ,OAAOy+B,ooCC5Cf,IAAM+vD,aAAe,SAAfA,aAAgBl2I,SAClB,IAAMlW,OAASkW,QAAQlW,SADOqsJ,oBAK1Bn2I,QAAQ60I,aAFAuB,eAHkBD,oBAG1B/2I,OACOi3I,cAJmBF,oBAI1Bh3I,MAJ0Bq4E,gBAS3Bx3E,QAAQ7oB,SAFR4pF,OAP2ByW,gBAO3BzW,OACA2R,SAR2B8E,gBAQ3B9E,SAGCvpE,KAIC43D,OAJD53D,KACAC,MAGC23D,OAHD33D,MAIEktI,aADDv1E,OAFD/6D,IAEC+6D,OADD9rC,OAEgCmhH,eAC9BG,YAAcptI,KAAOC,MAAQitI,cAC7B7gE,YAAcx1E,QAAQw1E,cAAgB8gE,aACtC/gE,WAAav1E,QAAQu1E,aAAeghE,YACpCnjE,aAAepzE,QAAQ38B,eAAe+vG,aAO5C,OALAA,aAAa11E,SAASsC,QAAQ43H,iBAE7BllD,UAAY1yE,QAAQi1I,UAAU7hE,aAAa9yE,aAAaxW,OAAQyrF,WAAYC,aAAa,IAC1F9C,UAAY1yE,QAAQi1I,UAAU7hE,aAAa9yE,aAAaxW,OAAQ0rF,YAAaD,YAAY,IAElFv1E,SAiQI0yG,oCArLX,SAAAA,SAAav7H,OAAQ9T,cAAc,IAAAsG,8JAAA6sK,CAAAtuK,KAAAwqI,WAC/B/oI,iLAAA8sK,CAAAvuK,KAAAwuK,yBAAAhkC,UAAApyI,KAAA4H,KAAMiP,UAEDoiG,cAAgBl2G,aACrBsG,MAAKgtK,WAAahtK,MAAKipF,QAAQruD,YAClB56B,MAAKipF,QAAQ3vF,OAASwwK,iBAAtB,GAAAt/J,OAAkCq/J,4CAAlC,KAAAr/J,OAAiDs/J,iBAAjD,YAAAt/J,OAAoEq/J,4CAApE,KAAAr/J,OAAmF+/J,eAAnF,UACbvqK,MAAKiuJ,eAAiBzrE,qCAAsB3B,6BAAc,QAAS7gF,MAAKgtK,YACxEhtK,MAAK4vG,cAAcnG,aAAa11E,SAAS/zB,MAAKiuJ,gBAC9CtmF,sBAAsBslG,gEAAAjtK,QAAMovG,qCAAMm7D,iBAClC,IAAMz7F,MAAQ9uE,MAAK4vG,cAAcnG,aAAa3vE,WAAW,KAT1B,OAU/B95B,MAAKkrK,YAAa11I,MAAOr2B,KAAKgR,MAAoB,EAAd2+D,MAAMt5C,MAAY,GAAIC,OAAQt2B,KAAKgR,MAAM2+D,MAAMr5C,OAAS,KAC5F82I,aAAaU,gEAAAjtK,SAXkBA,8XARhB2qK,gSAuCf,OAAOpsK,KAAK4hB,6DAqBZ,OAAO5hB,KAAKqxG,4DAUZ,OACI/uG,KAAMtC,KAAK4hB,SACX7mB,KAAMixK,0EA0BV,OAHKhsK,KAAKkxG,gBACNlxG,KAAKkxG,aA1JQ,SAAnBy9D,iBAAoB72I,SAAY,IAC1BozE,aAAiBpzE,QAAQ38B,eAAzB+vG,aAD0B0jE,qBAK9B92I,QAAQ60I,aAFAuB,eAHsBU,qBAG9B13I,OACOi3I,cAJuBS,qBAI9B33I,MAJ8Bw2E,iBAW/B31E,QAAQ7oB,SAJR4pF,OAP+B4U,iBAO/B5U,OACAN,KAR+BkV,iBAQ/BlV,KACA6hE,SAT+B3sD,iBAS/B2sD,SACAD,cAV+B1sD,iBAU/B0sD,cAGAl5H,KAIC43D,OAJD53D,KACAC,MAGC23D,OAHD33D,MAIGktI,aADFv1E,OAFD/6D,IAEC+6D,OADD9rC,OAEiCmhH,eAC9BG,YAAcptI,KAAOC,MAAQitI,cAC7B7gE,YAAcx1E,QAAQw1E,cAAgB8gE,aACtC/gE,WAAav1E,QAAQu1E,aAAeghE,YACpCzsJ,OAASkW,QAAQlW,SACjB2uD,MAAQz4C,QAAQi1I,YAChB8B,QAAU,IAAI5kK,MAAMkwJ,eAAetgH,KAAK,KAAK/0C,KAAK,IAClDgqK,cAAgB5jE,aAAa3vE,WAAWszI,SAS9C,GAPA/2I,QAAQ7oB,QAASu7F,UAAU,IACvBj6B,MAAMt5C,OAASo2E,YAAc,IAAM+sD,WACnC7pF,MAAMr5C,OAASq5C,MAAMr1C,cAAgBk/H,UAErC/sD,YAAcA,WAAa98B,MAAMt5C,QACjCs5C,MAAMt5C,MAAQ63I,cAAc73I,OAE5Bo2E,YAAcA,WAAazsG,KAAKC,IAAIiuK,cAAc73I,MAAOs5C,MAAMt1C,cAAe,CAC9E,IAAM8zI,WAAa7jE,aAAa9yE,aAAaxW,OAAQ0rF,YAAawhE,cAAc53I,QAAQ,GACxFq5C,MAAMt5C,MAAQ83I,WAAW73I,OACzBq5C,MAAMr5C,OAAS63I,WAAW93I,MAC1Ba,QAAQ7oB,QAASu7F,UAAU,IAC3B1yE,QAAQi1I,UAAUgC,YAGtB,OAAIx2E,MAEIthE,MAAOr2B,KAAK68B,KAAK8yC,MAAMt5C,OAASo3I,YAChCn3I,OAAQt2B,KAAK68B,KAAK8yC,MAAMr5C,QAAUk3I,eAGtCn3I,MAAO,EACPC,OAAQ,GAyGcy3I,CAAiB3uK,OAEhCA,KAAKkxG,2EAWGj6E,MAAOC,QAKtB,OAJAl3B,KAAKqtG,WAAWp2E,OAChBj3B,KAAKstG,YAAYp2E,QACjB82I,aAAahuK,MACbA,KAAKkxG,aAAa,MACXlxG,2CAWHkvB,OACJ,IAAMm+E,WAAartG,KAAKqtG,aAClBC,YAActtG,KAAKstG,cAFdtK,aASPhjG,KAAKiP,SALL4pF,OAJOmK,aAIPnK,OACAN,KALOyK,aAKPzK,KACA8hE,cANOr3D,aAMPq3D,cACA2U,UAPOhsE,aAOPgsE,UACAxkE,SAROxH,aAQPwH,SAIJ,GADAxqG,KAAKkvB,MAAMA,OACPqpE,KAAM,CACN,IAAMpkE,UAAYmuD,6BAAcpzD,OAC1B5J,KAAOk9D,YAAYruD,UAAW,OAAQn0B,KAAKk0B,IAAzB,GAAAjoB,OAAiCq/J,4CAAjC,KAAAr/J,OP3NX,cO4NPgjK,OAAS5U,eAAiB7vD,SAAW,SAAW,MAHhD0kE,gBAOFlvK,KAAK+sK,YAFL91I,MALEi4I,gBAKFj4I,MACAC,OANEg4I,gBAMFh4I,OAGQg3I,eACRluK,KAAK2sK,aADLz1I,OAEEi4I,aACFrxI,IAAK7G,MAAQi3I,eAAiB,EAC9BkB,OAAQn4I,MAAQ,EAAIi3I,eACpBnhH,OAAQmhH,gBAGZ/5I,UAAUgB,MAAM,iBAAkB85I,QAGlC3pJ,KAAKmyD,QAAQz3E,KAAKyuK,YAAY,GAG9BnpJ,KAAK6P,MAAM,aAAc65I,WACzB1pJ,KAAK6P,MAAM,UAAW,UACtB7P,KAAK6P,MAAM,YAAaq1E,SAAQ,aAAAv+F,OAAgBirB,OAAS,EAAzB,yBAAAjrB,OAC1BkjK,YAAYF,QADc,sBACgB,IAChD3pJ,KAAK6P,MPjQI,QOiQSk4E,WAAU,GAAAphG,OAAMohG,WAAN,MAAuB,SAClDtF,oCAAKD,uCAAQE,qCAAMC,uCAAOzoG,QAAQ,SAACzE,MAChCuqB,KAAK6P,MAAL,WAAAlpB,OAAsBlR,MAAtB,GAAAkR,OAAiC4sF,OAAO99F,MAAxC,SAEJuqB,KAAK6P,MAAM,aAAc65I,WACzB1pJ,KAAK6P,MAAM,UAAW,UAEtBn1B,KAAKqxG,cAAcnG,aAAa11E,SAASx1B,KAAK0vJ,gBAC9CpqI,KAAKyyD,KAAK/3E,KAAKqxG,cAAcnG,aAAa9yE,aAAap4B,KAAK4hB,SAAUyrF,WAAYC,aAAa,GAAMhrG,MAEzG,OAAOtC,6CAWP,OADAA,KAAKkvB,SAAWlvB,KAAKkvB,QAAQ0T,SACtB5iC,sCA5JP,OAAOgsK,8CAqBP,OAAOhsK,KAAKw/E,4DAkCZ,OAAOy+B,2mCC9Kf,0BAwMew+B,gCAnLX,SAAAA,SAAaxtI,QAAQ,IAAAxN,MAAA,8JAAA4tK,CAAArvK,KAAAy8I,WACjBh7I,iLAAA6tK,CAAAtvK,KAAAuvK,yBAAA9yB,UAAArkJ,KAAA4H,KAAMiP,UAEDugK,MAAQ,KACb/tK,MAAK6kG,QAAU,KACf7kG,MAAKmjJ,SACLnjJ,MAAKguK,cACLhuK,MAAKiuK,kBACLjuK,MAAKmpI,QAAU,KACfnpI,MAAKkuK,WAAa,KAClBluK,MAAKmuK,SAAW,KAEhBxmG,sBAAsBymG,gEAAApuK,QAAMovG,qCAAMq7D,OAZjBzqK,8XAPF2qK,gSAuCf,OAAOpsK,KAAK4hB,uDAsBZ,OACI7mB,KAAMmxK,KACN7qK,KAAMrB,KAAK4hB,SAASkmD,YACpBglG,QAAS9sK,KAAK8sK,6DAqBP,IAAAt3J,OAAAxV,KACLqB,KAAOrB,KAAK4hB,SAMlB,OALAvgB,KAAKyuK,aACJjE,UAAWD,0BAAWH,qBAAME,iBAAQG,2BAAQN,qBAAMC,qBAAMC,0BAAiBK,eAAevsK,QAAQ,SAACkwB,MAC9Fla,OAAKka,SAAWruB,KAAKquB,MAAMla,OAAKka,WAEpCruB,KAAK0uK,cACE/vK,+DAUP,IAAM8sK,QAAU9sK,KAAK8sK,UAEjBkD,cAAiB/4I,MAAO,EAAGC,OAAQ,GAIvC,OAHI41I,UACAkD,aAAelD,QAAQxlB,mBAEpB0oB,uEAaP,OAHKhwK,KAAKkxG,gBACNlxG,KAAKkxG,aArIQ,SAAnB++D,iBAAoBn4I,SACtB,IAAM7oB,OAAS6oB,QAAQlW,SAAS3S,SACxBgoB,MAAkBhoB,OAAlBgoB,MAAOC,OAAWjoB,OAAXioB,OACf,OACID,MAAOr2B,KAAK68B,KAAKxG,OACjBC,OAAQt2B,KAAK68B,KAAKvG,OAASY,QAAQo4I,kBAAkBh5I,SAgI/B+4I,CAAiBjwK,OAEhCA,KAAKkxG,2EAYGj6E,MAAOC,QACtB,IAAM71B,KAAOrB,KAAK4hB,SAQlB,OANA5hB,KAAKqtG,WAAWp2E,OAChBj3B,KAAKstG,YAAYp2E,QACjB71B,KAAKyuK,YACLzuK,KAAK41B,MAAMA,OAAOC,OAAOA,OAASl3B,KAAKkwK,kBAAkBh5I,QACzD71B,KAAK0uK,cACL/vK,KAAKkxG,aAAa,MACXlxG,2CAUHkvB,OACJ,GAAIA,MAAO,CACPlvB,KAAKkvB,MAAMA,OACX,IAAMo+E,YAActtG,KAAKstG,cACnBD,WAAartG,KAAKqtG,aAClBy/D,QAAU9sK,KAAK8sK,UACfa,WAAanrF,YAAYF,6BAAcpzD,OAAQ,OAAQ,GAA/B,GAAAjjB,OAAsCq/J,4CAAtC,KAAAr/J,ORhKjB,cQkKb,GAAI6gK,QAAS,CACT,IAAMqD,WAAa3tF,YAAYmrF,WAAY,OAAQb,SAArB,GAAA7gK,OAAkCq/J,4CAAlC,kBAA8Dt/I,OAC5F8gJ,QAAQluE,OAAOuxE,YAEnB,IAAMpiH,UAAYy0B,YAAYmrF,WAAY,OAAQ,GAArB,GAAA1hK,OAA4Bq/J,4CAA5B,UAC7BqC,WAAWx4I,MRtLF,QQsLT,GAAAlpB,OAA2BohG,WAA3B,OAA2Cl4E,MRvLjC,SQuLV,GAAAlpB,OAA4DqhG,YAA5D,OACAv/C,UAAU54B,MRvLD,QQuLT,GAAAlpB,OAA0BohG,WAA1B,OACiBl4E,MRzLP,SQwLV,GAAAlpB,OACkCqhG,YAActtG,KAAKkwK,kBAAkBh5I,OADvE,OAEAl3B,KAAK4hB,SAASsN,MAAM6+B,UAAU/hC,QAElC,OAAOhsB,6CAYP,OAFAA,KAAKkvB,SAAWlvB,KAAKkvB,QAAQ0T,SAC7B5iC,KAAK4hB,SAASghB,SACP5iC,sCAzJP,OAAOksK,oCAqBP,OAAOlsK,KAAK4hB,SAASsS,6DA0BrB,OAAO+pF,8NCzGR,IAAMmyD,sBAAoBC,4BAAAC,yBCRN,aDSElE,aADIiE,4BAAAC,sBCPR,WDSE9lC,eAFM6lC,4BAAAC,sBCNR,WDSEvyB,WAHMsyB,4BAAAC,sBCJR,WDQE7zB,WAJM4zB,4BAAAC,sBCLP,YDUEtyB,YALKsyB,uBEYlBnnB,cAZM,SAAfA,eACF,IAAMpsB,IAAMqzC,qBACZ,OACI19J,IAAK,SAAAA,IAAClZ,IAAKqjB,KAIP,OAHIrjB,OAAOujI,MACPA,IAAIvjI,KAAOqjB,KAERssI,cAEXrwJ,IAAK,SAAAA,MAAA,OAAMikI,OCgDbwzC,cAAgB,SAAhBA,cAAiBthK,OAAQlU,KAAMmwG,aAAc0xD,UAC/C,OAAK3tJ,OAxCa,SAAhBq7H,cAAiBr7H,OAAQuhK,SAAUtlE,aAAc0xD,UAAa,IAE5D9jE,QAGA7pF,OAHA6pF,QACA3C,YAEAlnF,OAFAknF,YACAikE,SACAnrJ,OADAmrJ,SAEEv8F,KAAO++F,UAAY,IAAIpyB,eAErBzvI,KAAmB,UAAby1K,SAAuB,SAAW,OACxCn0I,UAAS,GAAApwB,OAAKkqF,YAAL,KAAAlqF,OAAoBukK,SAApB,WAETtlE,4BAENj8F,QAASmrJ,oBAAYuS,YAAa11I,MAAO,EAAGC,OAAQ,IAEtD2mC,KAAKj8C,OAAOk3E,SACZj7B,KAAK4yG,cAAiBv5I,OAAQ,EAAGD,MAAO,GACxC,IAAI4hE,UAOJ,OALIA,OjCcW,QiCfX5pF,OAAO4uB,UACIC,IAAK,EAAGivB,OAAQ99C,OAAO+uB,UAEvBF,IAAK7uB,OAAO+uB,QAAS+uB,OAAQ,GAE5C8Q,KAAK5uD,QAAS4pF,iBAEV3hE,OAAQ2mC,KAAKypF,kBAAkBpwH,OAC/B2mC,WAgBGysE,CACHr7H,OACAlU,KACAmwG,aACA0xD,UANkB,ICpBb8T,+BAAoB,SAApBA,kBAAqBC,aAAclY,OAAQ/+D,YAAak3E,aACjE,IAAMC,WAEF35I,OAGAwiE,YAHAxiE,OACAD,MAEAyiE,YAFAziE,MACA65I,aACAp3E,YADAo3E,aAGAjzI,SAEA8yI,aAFA9yI,SACA4G,MACAksI,aADAlsI,MAoDJ,OA/FyB,SAAhBssI,cAAiBtY,QAC1B,IAAIuY,UACEC,WACA/+E,KAAOumE,OAAOpO,iBAmBpB,OAjBA1xJ,OAAO4c,QAAQ28E,MAAM1yF,QAAQ,SAACikI,UAC1B,IAAMniI,MAAQmiI,SAAS,GAAG,GACpB8qB,UAAY9qB,SAAS,GACrBytC,WAAazY,OAAOlK,aAE1B,GAAI2iB,WAAWnkK,OAASzL,MAAO,KAAA6vK,cAIvB7vK,MAAM2N,SAFNlU,KAFuBo2K,cAEvBp2K,KACA0mC,KAHuB0vI,cAGvB1vI,KAGE2vI,WAA6B,kBAAT3vI,MAAqBA,KAC/CuvI,UAAYha,gBAAe,GAAA/qJ,OAAIlR,KAAJ,KAAAkR,OAAYmlK,WAAZ,KAAAnlK,OAA0BsiJ,YACrD0iB,QAAQzvK,MAAOF,YAAOm3J,cAAQt3J,UAAW+vK,WAAWnkK,MAAOikK,oBAAWziB,yBAIvE0iB,QAwBYF,CAActY,QAEtBj5J,QAAQ,SAAC6xK,SAAUrtK,OAC1B,IAAIi2J,UAEEqX,kBAEEN,UAIAK,SAJAL,UACA1vK,MAGA+vK,SAHA/vK,MACAH,UAEAkwK,SAFAlwK,UACAotJ,UACA8iB,SADA9iB,UAEFt/I,OAAS0hK,aAAapiB,eACtBX,MAAQ3+I,OAAO2+I,UACrBA,MAAMtrJ,KAAOsrJ,MAAMtrJ,MAAQnB,UACvB8N,OAAOspF,OACPtpF,OAAO4uB,SAAWA,SAClB5uB,OAAOw1B,MAAQA,MAGXw1H,OADA2W,YAAY5sK,OACH4sK,YAAY5sK,OAAOi2J,OAEnB+W,UAAUz3K,QACf2xG,aAAcutD,OAAOpnD,cAAc37E,WACnCknC,OACImhF,mBAAUvT,0BAItB8mC,eAAeh5I,UlCtBH,akCsBemM,MAAsBvN,OAAS45I,aAAyB,GAAT55I,OAC1Eo6I,eAAej5I,SlCtBD,ekCsBYoM,MAAuBxN,MAAgB,GAARA,MACzDq6I,eAAer6I,MAAQr2B,KAAKC,IAAIywK,eAAej5I,SAAUppB,OAAOgoB,OAChEq6I,eAAep6I,OAASt2B,KAAKC,IAAIywK,eAAeh5I,UAAWrpB,OAAOioB,SAEjEy/H,QAASC,OAAQC,QAAQr3J,QAAQ,SAACrF,GAC/Bm3K,eAAen3K,GAAK8U,OAAO9U,KAE/B8/J,OAAO34J,MAAMA,OACIssJ,MAAMA,OACNzsJ,UAAUA,WACV8N,OAAOA,QACP45I,SAAS4P,OAAO7zE,cAAc8zE,YAAY6Y,iBAAiBvxJ,SAAS7e,aACpEu4F,YAAY43E,gBACZjmB,YAAYoN,OAAO3tC,SACnB0mD,oBAEjBX,QAAQrvK,MAAOi3J,cAAQwB,cAAQ1L,yBAGhCsiB,gTC3GUY,2BACjB,SAAAA,gBAAaj5K,KAAMutB,WAAYoG,oKAAMulJ,CAAA1xK,KAAAyxK,iBACjCzxK,KAAKutB,MAAQpB,KACbnsB,KAAK2xK,WACDz6I,OAAQnR,WAAWmR,OACnBD,MAAOlR,WAAWkR,MAClB6G,IAAK,KACLmD,KAAM,MAEVjhC,KAAK4xK,UAAY,KACjB5xK,KAAK6xK,WAAa,KAClB7xK,KAAK8xK,WAAa,KAClB9xK,KAAK6+F,QAAU,KACf7+F,KAAKggG,UAAY,KACjBhgG,KAAK+xK,eAAiBv5K,KACtBwH,KAAKyuK,WAAa,wUAIlB,MAAM,IAAIp+J,MAAM,8FAIhB,MAAM,IAAIA,MAAM,oEAGdzH,OAIF,OAHIA,QACA5I,KAAK+xK,eAAiBnpK,OAEnB5I,KAAK+xK,qDAGRnpK,OAIJ,OAHIA,QACA5I,KAAK6+F,QAAUj2F,OAEZ5I,KAAK6+F,kDAGNj2F,OAIN,OAHIA,QACA5I,KAAKggG,UAAYp3F,OAEd5I,KAAKggG,sDAGLp3F,OAIP,OAHIA,QACA5I,KAAK8xK,WAAalpK,OAEf5I,KAAK8xK,uDAGLlpK,OAIP,OAHIA,QACA5I,KAAK6xK,WAAajpK,OAEf5I,KAAK6xK,qDAGNjpK,OAIN,OAHIA,QACA5I,KAAK4xK,UAAYhpK,OAEd5I,KAAK4xK,oDAGNhpK,OAIN,OAHIA,OACAjQ,OAAOmgB,OAAO9Y,KAAK2xK,UAAW/oK,OAE3B5I,KAAK2xK,sDAGL/oK,OAIP,OAHIA,QACA5I,KAAKyuK,WAAa7lK,OAEf5I,KAAKyuK,+CAIZ,MAAM,IAAIp+J,MAAM,uzCCtDT2hK,8vBA3BcP,4UAErB,OACIx6I,MAAOj3B,KAAKihG,WAAWhqE,MACvBC,OAAQl3B,KAAKihG,WAAW/pE,kEAIdhX,MAOd,OANAlgB,KAAKihG,UAAWnjE,IAAK5d,KAAK3a,EAAG07B,KAAM/gB,KAAK9L,IACxCpU,KAAKiyK,eACDh7I,MAAO/W,KAAK+W,MACZC,OAAQhX,KAAKgX,QAEjBl3B,KAAKkyK,SAAShyJ,KAAKgyJ,UACZlyK,yCAIP,IAAKA,KAAKmyK,UACN,MAAM,IAAI9hK,MAAJ,yBAAApE,OAAmCjM,KAAKoyK,gBAGlD,OADApyK,KAAKmyK,UAAUjjJ,MAAMwE,SAASgB,eAAe10B,KAAKkyK,WAC3ClyK,2BCvBTqyK,cAAgB,IAChBC,eAAiB,IACjBC,mBAAkB,GAAAtmK,OAAMgyG,4BAAe9nB,YAArB,+BAClBq8E,YAAW,GAAAvmK,OAAMgyG,4BAAe9nB,YAArB,4TCLIs8E,2BACjB,SAAAA,gBAAaxjK,sKAAQyjK,CAAA1yK,KAAAyyK,iBACjBzyK,KAAK2yK,MAAQ1jK,OAAO2jK,MAAQ,KAC5B5yK,KAAK6yK,KAAO5jK,OAAO6jK,KAAO,KAC1B9yK,KAAK+yK,aAAsC,IAAvB9jK,OAAO+jK,YAAoB,EAAI/jK,OAAO+jK,aAAe,EACzEhzK,KAAKizK,WAAahkK,OAAOikK,YAAa,EACtClzK,KAAKmzK,OAASlkK,OAAOmkK,UACrBpzK,KAAKqzK,iBAAmB,EACxBrzK,KAAKszK,gBAAkB,6SAGrBV,OAIF,OAHIA,QACA5yK,KAAK2yK,MAAQC,OAEV5yK,KAAK2yK,kDAGLO,YAIP,OAHIA,aACAlzK,KAAKizK,WAAaC,YAEflzK,KAAKizK,2CAGXH,MAID,OAHIA,OACA9yK,KAAK6yK,KAAOC,MAET9yK,KAAK6yK,qDAGHG,cAIT,OAHIA,eACAhzK,KAAK+yK,aAAeC,cAEjBhzK,KAAK+yK,iDAGTK,QAIH,OAHIA,SACApzK,KAAKmzK,OAASC,QAEXpzK,KAAKmzK,+DAGCI,kBAIb,OAHIA,mBACAvzK,KAAKqzK,iBAAmBE,kBAErBvzK,KAAKqzK,uEAGAG,iBAIZ,OAHIA,kBACAxzK,KAAKszK,gBAAkBE,iBAEpBxzK,KAAKszK,uCCvCb,IAAMG,UAAa,WACtB,IAAIC,KAAO,EACX,OAAO,oBAAAznK,OAASumK,YAAT,KAAAvmK,SAA0BynK,OAFX,GAKnB,SAASC,YAAa3nJ,MACzB,IAAI4nJ,eAAiB,EACrB,GAA0B,MAAtB5nJ,KAAK6nJ,aACLD,eAmBD,SAASE,gCAAiC9nJ,MAC7C,IAAI4nJ,eAAiBx8J,OAAO28J,iBAO5B,OANA/nJ,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrB,IAAM6hC,EAAIsjI,YAAYnlK,OAClB6hC,EAAIujI,iBACJA,eAAiBvjI,KAGlBujI,eA3BcE,CAAgC9nJ,WAC9C,GAA0B,MAAtBA,KAAK6nJ,aACZ7nJ,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrBolK,gBAAkBD,YAAYnlK,cAE/B,GAAIwd,KAAKnQ,QAAQ+2J,QAAU5mJ,KAAKnQ,QAAQ+2J,OAAOtrB,gBAAiB,CACnE,IAAM0sB,gBAAkBhoJ,KAAKi1E,WAAW/pE,OAClC+8I,WAAajoJ,KAAKnQ,QAAQ+2J,OAAOtrB,kBAAkBpwH,QAEzD08I,eAAiBI,gBAAkBC,YACd,IACjBL,eAAiB,QAGrBA,eAAiB,EAErB,OAAOA,eAcJ,SAASM,YAAaloJ,MACzB,IAAImoJ,cAAgB,EACpB,GAA0B,MAAtBnoJ,KAAK6nJ,aACLM,cAkBD,SAASC,6BAA8BpoJ,MAC1C,IAAImoJ,cAAgB/8J,OAAO28J,iBAO3B,OANA/nJ,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrB,IAAM4zC,EAAI8xH,YAAY1lK,OAClB4zC,EAAI+xH,gBACJA,cAAgB/xH,KAGjB+xH,cA1BaC,CAA6BpoJ,WAC1C,GAA0B,MAAtBA,KAAK6nJ,aACZ7nJ,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrB2lK,eAAiBD,YAAY1lK,cAE9B,GAAIwd,KAAKnQ,QAAQ+2J,QAAU5mJ,KAAKnQ,QAAQ+2J,OAAOtrB,gBAAiB,CACnE,IAAM+sB,eAAiBroJ,KAAKi1E,WAAWhqE,MACjCq9I,UAAYtoJ,KAAKnQ,QAAQ+2J,OAAOtrB,kBAAkBrwH,OACxDk9I,cAAgBE,eAAiBC,WACb,IAChBH,cAAgB,QAGpBA,cAAgB,EAEpB,OAAOA,cA0DJ,SAASI,2BAA4Br9I,OAAQD,MAAO4G,UACvD,IAAM+7H,KAAO,IAAIoY,gBAAe,GAAK96I,cAAQD,cAG7C,OAFA2iI,KAAKphK,KAAK,eACVohK,KAAK/7H,SAASA,UACP+7H,KAGJ,SAAS4a,eAAgBC,gBAAiBtC,WAAyD,IAGlGuC,6BAHoDC,YAA8C7tK,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,IAAAA,UAAA,GAAzB8tK,gBAAyB9tK,UAAAxH,OAAA,QAAAk0B,IAAA1sB,UAAA,IAAAA,UAAA,GAClGgsK,IAAM,GACN+B,oBAAsB,EAEtBC,WAAa,EACbnK,UAAY,EAEhB,IAAKwH,UACD,OAASz9J,MAAO+/J,gBAAiBl2H,OAAQk2H,iBARyD,IAAAM,sBAW3C5C,UAAU7qB,kBAArD0tB,gBAXsFD,sBAW9F79I,OAAgC+9I,eAX8DF,sBAWrE99I,MAC3B4G,SAAWs0I,UAAUt0I,WACV,QAAbA,UAAmC,WAAbA,UACtBi1I,IAAM,IACN+B,oBAAsBG,gBAAkBP,gBAAgBlB,kBACxDuB,WAAaL,gBAAgBlB,kBAAoByB,gBACjDrK,UAAY8J,gBAAgBjB,mBAE5BV,IAAM,IACN+B,oBAAsBI,eAAiBR,gBAAgBjB,iBACvD7I,UAAY8J,gBAAgBjB,iBAAmByB,eAC/CH,WAAaL,gBAAgBlB,mBAEjCmB,6BAA+B,EAAIG,oBAGnCJ,gBAAgB3B,IAAIA,KACpB,IAAMoC,iBACFtC,KAAMT,UAAU35K,OAChBs6K,IAAK,KACLE,YAAa6B,oBACb3B,WAAW0B,iBAA0BD,YACrCvB,UAEE+B,UAAY,IAAI1C,gBAAgByC,iBACtCC,UAAU5B,gBAAgByB,iBAC1BG,UAAU3B,eAAeyB,gBAEzB,IAOMG,WAAa,IAAI3C,iBANnBG,KAAM,KACNE,IAAK,KACLE,YAAa0B,6BACbxB,WAAW0B,kBAA2BD,YACtCvB,WAYJ,OATAgC,WAAW7B,gBAAgBuB,YAC3BM,WAAW5B,eAAe7I,WACtBgK,YACAF,gBAAgBrB,OAAO+B,YACH,QAAbt3I,UAAmC,SAAbA,SAC7B42I,gBAAgBrB,OAAO+B,UAAWC,aAElCX,gBAAgBrB,OAAOgC,WAAYD,aAE9BzgK,MAAOygK,UAAW52H,OAAQ62H,0vBChDxBvd,kCA/IX,SAAAA,KAAav3J,yJAAM+0K,CAAAr1K,KAAA63J,MACf73J,KAAKo9F,OAAS98F,KACdN,KAAK6gB,QAAU,KACf7gB,KAAKuO,aACLvO,KAAKs1K,WAAa,KAClBt1K,KAAK2xK,WACD7zI,IAAK,KACLmD,KAAM,KACN/J,OAAQ,KACRD,MAAO,MAGXj3B,KAAKw/E,IAAMx/E,KAAKo9F,OAAOw1E,iBAAkBnB,iBAAmBzxK,KAAKo9F,OAAOw1E,OAAOV,WACnElyK,KAAKo9F,OAAOw1E,OAAOV,WACnBuB,yRAGHl+J,SAAS,IAAAggK,gBAAA9zK,MAAAzB,MAClBu1K,gBAAAv1K,KAAKuO,WAAU/M,KAAfV,MAAAy0K,gBAAAC,uBAAuBjgK,UACvBA,QAAQ/V,QAAQ,SAACrF,GAAQA,EAAEwpB,OAAOliB,iDAIlC,OAAwB,OAAjBzB,KAAK6gB,gDAIZ,OAAQ7gB,KAAKuO,UAAUjP,uDAIvB,OAAOU,KAAKo9F,OAAO01E,wDAInB,QAAS9yK,KAAKo9F,OAAO81E,sDAGfhgJ,WAIN,OAHIA,YACAlzB,KAAKuO,UAAY2kB,WAEdlzB,KAAKuO,gDAGRoV,SAIJ,OAHIA,UACA3jB,KAAK6gB,QAAU8C,SAEZ3jB,KAAK6gB,oDAGL40J,YAIP,OAHIA,aACAz1K,KAAKs1K,WAAaG,YAEfz1K,KAAKs1K,yCAGZphJ,KAIA,OAHIA,MACAl0B,KAAKw/E,IAAMtrD,KAERl0B,KAAKw/E,wCAGT3jE,QAIH,OAHIA,SACA7b,KAAKo9F,OAASvhF,QAEX7b,KAAKo9F,iDAGNs4E,OASN,OARIA,QACA11K,KAAK2xK,WACD7zI,IAAK43I,MAAM53I,IACXmD,KAAMy0I,MAAMz0I,KACZ/J,OAAQw+I,MAAMx+I,OACdD,MAAOy+I,MAAMz+I,QAGdj3B,KAAK2xK,wDAMJgE,YAAY,IAAAngK,OAAAxV,KAChBA,KAAKw/E,MAAQm2F,WAAWn2F,KACxBx/E,KAAKo9F,OAAO01E,IAAI6C,WAAW7C,KAC3B9yK,KAAKo9F,OAAO41E,YAAY2C,WAAW3C,cAEnChzK,KAAKuO,UAAU/O,QAAQ,SAACwsB,MACpB,GAAIA,KAAKwzD,MAAQm2F,WAAWn2F,IAGxB,OAFAxzD,KAAKnQ,MAAMi3J,IAAI6C,WAAW7C,UAC1B9mJ,KAAKnQ,MAAMm3J,YAAY2C,WAAW3C,aAGtCx9J,OAAKogK,WAAW5pJ,KAAM2pJ,4DAMtB3pJ,KAAM2pJ,YAAY,IAAAllJ,OAAAzwB,KAC1BgsB,KAAKkH,WAAW1zB,QAAQ,SAACq2K,WACjBA,UAAU3hJ,OAASyhJ,WAAWn2F,KAC9Bq2F,UAAUh6J,QAAQi3J,IAAI6C,WAAW7C,KACjC+C,UAAUh6J,QAAQm3J,YAAY2C,WAAW3C,cAEzCviJ,OAAKmlJ,WAAWC,UAAWF,qDAS/BG,QAAQ,IAAAjlJ,OAAA7wB,KACZA,KAAKuO,UAAU/O,QAAQ,SAACwsB,MACpB,GAAIA,KAAKkI,OAAS4hJ,OAAQ,CACtB,IAAM9xK,MAAQ6sB,OAAKtiB,UAAU5G,QAAQqkB,MACrC6E,OAAKusE,OAAOg2E,QAAQtqK,OAAO9E,MAAO,GAEtC6sB,OAAKklJ,iBAAiB/pJ,KAAM8pJ,oEAKlB9pJ,KAAM8pJ,QAAQ,IAAA7xG,OAAAjkE,KAC5BgsB,KAAKkH,WAAW1zB,QAAQ,SAACq2K,WACrB,GAAIA,UAAU3hJ,OAAS4hJ,OAAQ,CAC3B,IAAM9xK,MAAQgoB,KAAKkH,WAAWvrB,QAAQkuK,WACtC7pJ,KAAKnQ,QAAQu3J,QAAQtqK,OAAO9E,MAAO,QAEnCigE,OAAK8xG,iBAAiBF,UAAWC,0TCtI5BE,oCACjB,SAAAA,YAAaC,aAAchnK,mKAAQinK,CAAAl2K,KAAAg2K,aAC/Bh2K,KAAKm2K,cAAgBF,aACrBj2K,KAAK0qF,QAAUz7E,OACfjP,KAAKo2K,MAAQp2K,KAAK8gK,WAAW9gK,KAAK0qF,QAAS,MAC3C1qF,KAAKq2K,wTAGGpnK,OAAQ0U,QAChB,IAAMqI,KAAO,IAAI6rI,uBAAK5oJ,QAClB0U,QACAqI,KAAKypJ,UAAU9xJ,OAAOkwJ,cACtBlwJ,OAAO2yJ,aAAatqJ,QAEpBhsB,KAAKo2K,MAAQpqJ,KANO,IAAArQ,2BAAA,EAAAq8I,mBAAA,EAAAC,oBAAAzkI,EAAA,IAQxB,QAAA0kI,MAAAC,UAAmBlpJ,OAAOmkK,QAA1Bp6K,OAAA6c,cAAA8F,2BAAAu8I,MAAAC,UAAAjlJ,QAAA6C,MAAA4F,2BAAA,EAAmC,KAAxB46J,KAAwBre,MAAAh/J,MAC/B8G,KAAK8gK,WAAWyV,KAAMvqJ,OATF,MAAAqsI,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAA18I,2BAAA,MAAAw8I,UAAAniJ,QAAAmiJ,UAAAniJ,SAAA,WAAAgiJ,kBAAA,MAAAC,gBAYxB,OAAOj4J,KAAKo2K,wDAIZp2K,KAAKo2K,MAAMn1E,UACPnjE,IAAK,EACLmD,KAAM,EACNhK,MAAOj3B,KAAKm2K,cAAcl/I,MAC1BC,OAAQl3B,KAAKm2K,cAAcj/I,SF6OhC,SAASs/I,oBAAqBxqJ,MACjC,IAAMyqJ,YAAczqJ,KAAKkH,WACA5pB,IAAI,SAAAkF,OAAK,OAAIA,MAAMqN,QAAQm3J,gBAC3BhgK,OAAO,SAACmB,MAAO/T,KAAR,OAAgB+T,MAAQ/T,KAAK,GAE7D4rB,KAAKkH,WAAW1zB,QAAQ,SAACgP,MAAOvW,EAAGi7B,UAC/B,IAAMwjJ,YAAcxjJ,SAASj7B,EAAI,GAC3B0+K,MAAQnoK,MAAMqN,QAAQm3J,cAAgByD,YAElB,MAAtBjoK,MAAMinK,YACNjnK,MAAMyyF,UACFnjE,IAAK7lC,EAAIy+K,YAAYz1E,WAAWnjE,IAAM44I,YAAYz1E,WAAW/pE,OAAS,EACtE+J,KAAMzyB,MAAMmV,SAASs9E,WAAWhgE,KAChC/J,OAAQ1oB,MAAMmV,SAASs9E,WAAW/pE,OAASy/I,MAC3C1/I,MAAOzoB,MAAMmV,SAASs9E,WAAWhqE,QAGrCzoB,MAAMyyF,UACFnjE,IAAKtvB,MAAMmV,SAASs9E,WAAWnjE,IAC/BmD,KAAMhpC,EAAIy+K,YAAYz1E,WAAWhgE,KAAOy1I,YAAYz1E,WAAWhqE,MAAQ,EACvEC,OAAQ1oB,MAAMmV,SAASs9E,WAAW/pE,OAClCD,MAAOzoB,MAAMmV,SAASs9E,WAAWhqE,MAAQ0/I,QAGjDH,oBAAoBhoK,SEnQpBgoK,CAAoBx2K,KAAKo2K,+DAGZpqJ,MAAM,IAAAvqB,MAAAzB,KACnBgsB,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrBwnK,YAAYY,qBAAqBpoK,OACjC/M,MAAKo1K,gBAAgBroK,uDAsBzB,OFyJD,SAASsoK,mBAAoB9qJ,MAQhC,IAPA,IAAIknJ,UAEA6D,WACAC,cAFAC,uBAAyB,EAIvBC,eAAiBlrJ,KAAKkH,WAAW5zB,OAE9B0E,MAAQ,EAAGA,MAAQkzK,eAAgBlzK,QAAS,CACjD,IACImzK,cADAj6J,QAAE,EAEA1O,MAAQwd,KAAKkH,WAAWlvB,OAEJ,MAAtBwK,MAAMinK,aACNv4J,GAAKy2J,YACLoD,WAAa,SACbC,cAAgB,UAEhB95J,GAAKg3J,YACL6C,WAAa,QACbC,cAAgB,UAIhBxoK,MAAMmmK,cAENzB,UAAY1kK,OAKhByoK,wBAA2BE,cAAgBj6J,GAAG1O,OAC9CA,MAAMyyF,WAAW81E,aAAeI,cAEhC3oK,MAAMyyF,WAAW+1E,eAAiBxoK,MAAMmV,SAASs9E,WAAW+1E,eAE5DF,mBAAmBtoK,QAGnB0kK,YACAA,UAAUjyE,WAAW81E,aAAeE,uBACpC/D,UAAUjyE,WAAW+1E,eAAiB9D,UAAUvvJ,SAASs9E,WAAW+1E,eACpEF,mBAAmB5D,YErMnB4D,CAAmB92K,KAAKo2K,OFyMzB,SAASgB,gBAAiBprJ,MAC7BA,KAAKkH,WAAW1zB,QAAQ,SAACgP,MAAOvW,EAAGi7B,UAC/B,IAAM+tE,SAlLP,SAASo2E,kBAAmBC,GAAIr/K,EAAG4T,IAAKm/F,UAC3C,GAAI/yG,EAAG,CAEH,IAFGs/K,sBAEiB1rK,IAAI5T,EAAI,GACmDgpG,WAAlEsmE,MAHVgQ,sBAGKz5I,IAAiB05I,OAHtBD,sBAGgBt2I,KAAqBw2I,QAHrCF,sBAG6BrgJ,OAAwBwgJ,OAHrDH,sBAG8CtgJ,MACjD,OACIA,MAAOqgJ,GAAGrgJ,MACVC,OAAQogJ,GAAGpgJ,OAEX4G,IAA8B,MAAzBktE,SAASyqE,YAChBlO,MAAOkQ,QAAUlQ,MAEftmI,KAA+B,MAAzB+pE,SAASyqE,YACjB+B,OAAQA,OAAQE,QAb+B,IAAAC,sBAiBlB3sE,SAASrnF,SAASs9E,WAAxCsmE,KAjBwCoQ,sBAiB7C75I,IAAiB05I,MAjB4BG,sBAiBlC12I,KACnB,OACIhK,MAAOqgJ,GAAGrgJ,MACVC,OAAQogJ,GAAGpgJ,OACX4G,IAAKypI,KACLtmI,KAAMu2I,OA4JWH,CAAkB7oK,MAAMyyF,WAAYhpG,EAAGi7B,SAAU1kB,OAClEA,MAAMyyF,SAASA,UACfm2E,gBAAgB5oK,SE5MhB4oK,CAAgBp3K,KAAKo2K,OACdp2K,mDAKP,OADAA,KAAK62K,gBAAgB72K,KAAKo2K,OACnBp2K,yCAIP,OAAOA,KAAKo2K,0EA3BapqJ,MACzB,IAAMsrJ,GAAKtrJ,KAAKi1E,WACV2xE,KAAO5mJ,KAAKnQ,QAAQ+2J,OAC1B,GAAIA,MAAQA,KAAKgF,iBAAkB,CAC/B,IAAM13J,MACF9L,EAAGkjK,GAAGr2I,KACN17B,EAAG+xK,GAAGx5I,IACN7G,MAAOqgJ,GAAGrgJ,MACVC,OAAQogJ,GAAGpgJ,OACXg7I,SAAUlmJ,KAAKkI,MAEnB0+I,KAAKgF,iBAAiB13J,mTCxD3B,IAAM23J,MAAb,oBAAAA,4JAAA3qJ,CAAAltB,KAAA63K,OAAA,2NAAAC,CAAAD,MAAA,OAAAr+K,IAAA,eAAAN,MAAA,SAAA6+K,aACyBx1F,SACjB,OAAOA,mBAAmByzC,WAFlCx8H,IAAA,QAAAN,MAAA,SAAA8+K,MAKkBz1F,SACV,OAAOA,QAAQruD,MANvB16B,IAAA,aAAAN,MAAA,SAAA++K,WASuB/jJ,IACf,OAAOR,SAASgB,eAAeR,OAVvC16B,IAAA,gBAAAN,MAAA,SAAAg/K,cAa0B53K,MAClB,OAAOA,KAAK+d,OAAO,SAAA85J,YAAU,OAAyB,MAArBA,WAAWx0J,SAAgB,MAdpEnqB,IAAA,YAAAN,MAAA,SAAAk/K,UAoBsBC,OACyB,OAAnC3kJ,SAASgB,eAAe2jJ,QAAmB3kJ,SAASgB,eAAe2jJ,OAAOz1I,aArBtFi1I,MAAA,qSCCqBS,gCACjB,SAAAA,UAAatsJ,+JAAMusJ,CAAAv4K,KAAAs4K,WACft4K,KAAKuvB,MAAQvD,KACbhsB,KAAKyuK,WAAaziJ,KAAKnQ,QAAQ+2J,iBAAkBnB,gBAC7BzlJ,KAAKnQ,QAAQ+2J,OAAOv2I,YAAck2I,2SAItD,OAAOvyK,KAAKuvB,gDAIZ,OAAOvvB,KAAKuvB,MAAM1T,QAAQ+2J,iBAAkBnB,8DAI5C,OAAOzxK,KAAKyuK,YAAc8D,mUCjB3B,IAAMiG,uBAAb,WACI,SAAAA,WAAal4K,gKAAMm4K,CAAAz4K,KAAAw4K,YACfx4K,KAAKkjE,MAAQ5iE,KAFrB,6OAAAo4K,CAAAF,aAAAh/K,IAAA,wBAAAN,MAAA,SAAAy/K,wBAMQ,IAAMC,cAEN,OCRqB,SAAhBC,cAAiB7sJ,KAAM4sJ,YAChC,IAAME,UAAY,IAAIR,qBAAUtsJ,MAChC4sJ,WAAWp3K,KAAKs3K,WAChB9sJ,KAAKkH,WAAW1zB,QAAQ,SAACgP,OACrBqqK,cAAcrqK,MAAOoqK,cDGrBC,CAAc74K,KAAKkjE,MAAO01G,YACnBA,eARfJ,WAAA,mtDEAO,IAAMO,gBAAb,SAAAC,aAAA,SAAAD,kBAAA,8JAAAE,CAAAj5K,KAAA+4K,iBAAAG,oCAAAl5K,KAAAm5K,yBAAAJ,iBAAAj4K,MAAAd,KAAA8G,YAAA,8WAAAsyK,CAAAL,gBAAqCP,wPAArCa,CAAAN,kBAAAv/K,IAAA,iBAAAN,MAAA,SAAAogL,iBAEQ,OAAAC,cAAAJ,yBAAAJ,gBAAAh/K,WAAA,wBAAAiG,MAAA5H,KAAA4H,UAFR+4K,gBAAA,+RCFO,IAAMS,SAAb,oBAAAA,kKAAAC,CAAAz5K,KAAAw5K,UAAA,oOAAAE,CAAAF,WAAAhgL,IAAA,eAAAN,MAAA,SAAAygL,aAEkB3tJ,KAAMowC,MAChBpwC,KAAK4tJ,cAAgBx9G,SAH7Bo9G,SAAA,i3ECIO,IAAMK,2BAAb,SAAAC,WACI,SAAAD,aAAav5K,MAAM,IAAAmB,MAAA,kKAAAs4K,CAAA/5K,KAAA65K,eACfp4K,MAAAu4K,wCAAAh6K,KAAAi6K,6BAAAJ,cAAAzhL,KAAA4H,QACKkjE,MAAQ5iE,KACbmB,MAAKy4K,aAAe,IAAInB,gBAAgBt3K,MAAKyhE,OAAOo2G,iBAHrC73K,MADvB,sXAAA04K,CAAAN,aAAkCL,sPAAlCY,CAAAP,eAAArgL,IAAA,aAAAN,MAAA,SAAAmhL,WAOgBnrJ,MAAOmN,WAAW,IAAA7mB,OAAAxV,KACpBs6K,QAAUprJ,MAChBqrJ,kBAAAN,6BAAAJ,aAAA9/K,WAAA,eAAAiG,MAAA5H,KAAA4H,KAAmBs6K,QAASt6K,KAAKkjE,OACjCljE,KAAKw6K,UAAYx6K,KAAKy6K,yBAAyBp+I,WAC/Cr8B,KAAKk6K,aAAa16K,QAAQ,SAACwsB,MACvB,GAAIA,KAAK0uJ,UAAW,CAChB,IAAM9H,KAAO5mJ,KAAKA,OAClBxW,OAAKglK,UAAUt7I,YAAY1pB,OAAKmlK,qBAALC,iBAA+BhI,KAAK3xE,YAC3D/sE,GAAI0+I,KAAK1+I,KACTmI,UAAWrQ,KAAKqQ,mBAG5Bi+I,QAAQp7I,YAAYl/B,KAAKw6K,cAnBjChhL,IAAA,uBAAAN,MAAA,SAAAyhL,qBAsB0B1rK,QAAQ,IAClB6uB,IAA4C7uB,OAA5C6uB,IAAKmD,KAAuChyB,OAAvCgyB,KAAM/J,OAAiCjoB,OAAjCioB,OAAQD,MAAyBhoB,OAAzBgoB,MAAOoF,UAAkBptB,OAAlBotB,UAAWnI,GAAOjlB,OAAPilB,GAEvC2mJ,IADcnnJ,SAASgB,eAAeR,KACjBR,SAASkJ,cAAc,OAQlD,OAPAi+I,IAAI1lJ,MAAM0I,SAAW,WACrBg9I,IAAI1lJ,MAAM8L,KAAV,GAAAh1B,OAAoBg1B,KAApB,MACA45I,IAAI1lJ,MAAM2I,IAAV,GAAA7xB,OAAmB6xB,IAAnB,MACA+8I,IAAI1lJ,MAAM+B,OAAV,GAAAjrB,OAAsBirB,OAAtB,MACA2jJ,IAAI1lJ,MAAM8B,MAAV,GAAAhrB,OAAqBgrB,MAArB,MACA4jJ,IAAI3mJ,GAAKA,GACT2mJ,IAAIx+I,UAAYA,UACTw+I,OAjCfrhL,IAAA,2BAAAN,MAAA,SAAAuhL,yBAoC8Bp+I,WACtB,IAAMlI,UAAY0jJ,MAAMK,cAAcl4K,KAAKk6K,cACrCtH,KAAOz+I,UAAUnI,OACjBwuJ,UAAYx6K,KAAK26K,qBAALC,iBAA+BhI,KAAK3xE,YAClD/sE,GAAI0+I,KAAK1+I,KACTmI,UAAWlI,UAAUkI,eAGzB,OAFAm+I,UAAUn+I,UAAYA,UACtBm+I,UAAUrlJ,MAAM0I,SAAW,WACpB28I,aA5CfhhL,IAAA,cAAAN,MAAA,SAAA4hL,cAgDQ,OAAO96K,KAAKk6K,iBAhDpBL,aAAA,GCEakB,SAAW,SAAXA,SAAYjjJ,QAASkjJ,QAAV,OACAljJ,QAAQmjJ,WAAWH,cAAclzJ,KAAK,SAAAksC,OAAK,OAAIA,MAAM9nC,OAAOkI,OAAS8mJ,UAEhFE,kBAAa,SAAbA,WAAcpjJ,SACvBA,QAAQmjJ,SAAS,IAAIpB,2BAAa/hJ,QAAQx3B,SAC1Cw3B,QAAQmjJ,WAAWZ,WAAWviJ,QAAQ5I,QAAS4I,QAAQuE,iTCRpD,IAAM8+I,+BAAb,WACI,SAAAA,eAAa76K,KAAM26K,SAAU9mJ,yKAAWinJ,CAAAp7K,KAAAm7K,gBACpCn7K,KAAKkjE,MAAQ5iE,KAAK87D,KAClBp8D,KAAKq7K,cAAgB/6K,KAAKg7K,aAC1Bt7K,KAAKu7K,iBAAmBj7K,KAAKk7K,gBAC7Bx7K,KAAKy7K,UAAYR,SACjBj7K,KAAKu9F,OAASs6E,MAAME,aAAa5jJ,WAAaA,UAAY0jJ,MAAMI,WAAW9jJ,WANnF,yPAAAunJ,CAAAP,iBAAA3hL,IAAA,OAAAN,MAAA,SAAAs8D,OAaQ,ODFkB,SAAbmmH,WAAc7jJ,SACvB,OAAQA,QAAQmjJ,YAChB,IAAK,OACDC,kBAAWpjJ,SACX,MACJ,QACIojJ,kBAAWpjJ,UCPX6jJ,CAAW37K,MDyBY,SAAlB47K,gBAAmB9jJ,QAAS+jJ,eACrCA,cAAc3oJ,WAAW1zB,QAAQ,SAAC2yK,WAC9B,IAAMS,KAAOT,UAAUt2J,QAAQ+2J,OAC/B,GAAIA,gBAAgBnB,iBAAmBmB,KAAKkJ,YAAa,CACrD,IAAIC,iBACEjoH,MAAQinH,SAASjjJ,QAASq6I,UAAUj+I,MAAMlI,OAC1CA,KAAO8nC,MAAMmtC,WACb+6E,QAAUjB,SAASjjJ,QAASA,QAAQwjJ,eAAexiL,IAAI85K,KAAKkJ,aAAa5J,YAC1DlmJ,OACAi1E,WACrB,OAAQ2xE,KAAKqJ,aACb,IAAK,OACDF,eACIj+I,IAAK9R,KAAK8R,IACVmD,KAAM+6I,QAAQ/6I,KACd/J,OAAQlL,KAAKkL,OACbD,MAAOr2B,KAAKuL,IAAI6f,KAAKiL,MAAQr2B,KAAKuL,IAAI6vK,QAAQ/6I,KAAOjV,KAAKiV,QAE9D,MAEJ,IAAK,QACD86I,eACIj+I,IAAK9R,KAAK8R,IACVmD,KAAMjV,KAAKiV,KACX/J,OAAQlL,KAAKkL,OACbD,MAAOr2B,KAAKuL,IAAI6f,KAAKiL,MAAQr2B,KAAKuL,IAAI6f,KAAKiV,KAAOjV,KAAKiL,OAAS+kJ,QAAQ/6I,KAAO+6I,QAAQ/kJ,UAE3F,MAEJ,IAAK,MACD8kJ,eACIj+I,IAAKk+I,QAAQl+I,IACbmD,KAAMjV,KAAKiV,KACX/J,OAAQt2B,KAAKuL,IAAI6f,KAAKkL,OAASt2B,KAAKuL,IAAI6vK,QAAQl+I,IAAM9R,KAAK8R,MAC3D7G,MAAOjL,KAAKiL,OAEhB,MAEJ,IAAK,SACD8kJ,eACIj+I,IAAK9R,KAAK8R,IACVmD,KAAMjV,KAAKiV,KACX/J,OAAQt2B,KAAKuL,IAAI6f,KAAK8R,IAAMk+I,QAAQl+I,IAAMk+I,QAAQ9kJ,QAClDD,MAAOjL,KAAKiL,OAEhB,MAEJ,IAAK,WACD8kJ,eACIj+I,IAAK9R,KAAK8R,IACVmD,KAAM+6I,QAAQ/6I,KACd/J,OAAQlL,KAAKkL,OACbD,MAAO+kJ,QAAQ/kJ,OAEnB,MAEJ,IAAK,WACD8kJ,eACIj+I,IAAKk+I,QAAQl+I,IACbmD,KAAMjV,KAAKiV,KACX/J,OAAQ8kJ,QAAQ9kJ,OAChBD,MAAOjL,KAAKiL,OAOpBt+B,OAAOmgB,OAAOijK,eAAiB7nJ,GAAI4/B,MAAM5/B,KAAMmI,UAAWu2I,KAAKv2I,cAC/DvE,QAAQmjJ,WAAWN,qBAAqBoB,eACxCjkJ,QAAQwjJ,eAAexiL,IAAI85K,KAAKp6K,QAAQ05K,SAASC,UAAUj+I,MAC3D4D,QAAQwjJ,eAAexiL,IAAI85K,KAAKp6K,QAAQyoG,UACpC/pE,OAAQ6kJ,cAAc7kJ,OACtBD,MAAO8kJ,cAAc9kJ,QAI7B2kJ,gBAAgB9jJ,QAASq6I,aCrGzByJ,CAAgB57K,KAAMA,KAAKkjE,ODUN,SAAhBg5G,cAAiBL,eAC1BA,cAAc3oJ,WAAW1zB,QAAQ,SAACwsB,MAC9B,IAAM4mJ,KAAO5mJ,KAAKnQ,QAAQ+2J,OACtBA,gBAAgBnB,iBAChBmB,KAAKp9G,OAET0mH,cAAclwJ,QCfdkwJ,CAAcl8K,KAAKkjE,OACZljE,QAbfxG,IAAA,OAAAN,MAAA,SAAAoH,KAgBUA,OAIF,OAHIA,QACAN,KAAKkjE,MAAQ5iE,OAEVN,KAAKkjE,SApBpB1pE,IAAA,eAAAN,MAAA,SAAAoiL,aAuBkB1yK,OAIV,OAHIA,QACA5I,KAAKq7K,cAAgBzyK,OAElB5I,KAAKq7K,iBA3BpB7hL,IAAA,YAAAN,MAAA,SAAAmjC,UA8BezzB,OAIP,OAHIA,QACA5I,KAAKu7K,iBAAmB3yK,OAErB5I,KAAKu7K,oBAlCpB/hL,IAAA,WAAAN,MAAA,SAAA+hL,SAqCcryK,OAIN,OAHIA,QACA5I,KAAKy7K,UAAY7yK,OAEd5I,KAAKy7K,aAzCpBjiL,IAAA,QAAAN,MAAA,SAAAg2B,MA4CWtmB,OAIH,OAHIA,QACA5I,KAAKu9F,OAAS30F,OAEX5I,KAAKu9F,WAhDpB49E,eAAA,6SCAqBgB,gDACjB,SAAAA,kBAAab,aAAc32I,SAAUk8D,YAAaC,6KAAYs7E,CAAAp8K,KAAAm8K,mBAC1Dn8K,KAAKq7K,cAAgBC,aACrBt7K,KAAKq8K,kBAAoB13I,SACzB3kC,KAAKs8K,aAAez7E,YACpB7gG,KAAKu8K,YAAcz7E,WACnB9gG,KAAKw8K,oBAAsB,4VZ0G5B,SAASC,0BAA2B3kJ,SACvCA,QAAQ4kJ,mBAAmB,IAAIrqK,KAC/BylB,QAAQwjJ,eAAe97K,QAAQ,SAACtG,OAC5B,GAAI4+B,QAAQ4kJ,qBAAqBjqK,IAAIvZ,MAAM2/C,UACvC/gB,QAAQ4kJ,qBAAqB5jL,IAAII,MAAM2/C,UAAUr3C,KAAKtI,WACnD,CACH,IAAM4qE,QACNA,KAAKtiE,KAAKtI,OACV4+B,QAAQ4kJ,qBAAqBhqK,IAAIxZ,MAAM2/C,SAAUirB,SY7GrD24G,CAA0Bz8K,MAC1B,IAAM28K,gBAAkB38K,KAAKw8K,oBAAoB1jL,IAAI,UAC/C27K,gBAAkB,IAAIhC,oBACxBmK,aAAenI,gBACnBA,gBAAgBlB,gBAAgBvzK,KAAKs8K,cACrC7H,gBAAgBjB,eAAexzK,KAAKu8K,aAEpC,IAAIM,aAAe,KAUnB,OARA78K,KAAKq8K,kBAAkB78K,QAAQ,SAAChH,MAC5BqkL,aZwGL,SAASC,aAAcH,gBAAiBvK,eAC3C,IAAMxY,KAAO+iB,gBAAgB/0J,KAAK,SAAAuqJ,WAAS,OAAIA,UAAU35K,SAAW45K,gBACpE,OAAQxY,OAAkB,IAAVA,KAAeA,KAAO,KY1GfkjB,CAAaH,gBAAiBnkL,MAEzCokL,aADS,SAATpkL,KACeg8K,eAAeoI,aAAcC,cAAct+H,OZ4KnE,SAASw+H,mBAAoBtI,gBAAiBuI,gBAMjD,IALA,IAAIJ,aAAenI,gBACbx6J,KAAO+iK,eAAe19K,OACtBub,OAASZ,KAAO+iK,eAAe,GAAG19K,OAAS,EAC3C43B,OAAS8lJ,eAAehqK,OAAO,SAACC,IAAK7S,KAAN,OAAe6S,IAAM7S,IAAI,GAAGknJ,kBAAkBpwH,QAAS,GAEnFj/B,EAAI,EAAGA,EAAI4iB,OAAQ5iB,IAAK,CAC7B,IAAMglL,kBAAoBhlL,IAAM4iB,OAAS,EADZqiK,gBAIH1I,eAAeoI,aAFNrI,2BAA2Br9I,OAClB8lJ,eAAe,GAAG/kL,GAAGqvJ,kBAAkBrwH,MAAO,QACPgmJ,mBAA3EvoK,MAJqBwoK,gBAIrBxoK,MAAO6pC,OAJc2+H,gBAId3+H,OACfq+H,aAAeloK,MACf,IAAK,IAAI4F,EAAI,EAAGA,EAAIL,KAAMK,IAAK,CAC3B,IAAM6iK,YAAc7iK,IAAOL,KAAO,EAClC2iK,aAAepI,eAAeoI,aAAcI,eAAe1iK,GAAGriB,GAAIklL,aAAa,GAAM5+H,OAEzFq+H,aAAer+H,QY1LQw+H,CAAmBH,aAAcC,aAAa1K,aAG9DsC,kEAGG7rK,OAIV,OAHIA,QACA5I,KAAKq7K,cAAgBzyK,OAElB5I,KAAKq7K,4EAGIzyK,OAIhB,OAHIA,QACA5I,KAAKw8K,oBAAsB5zK,OAExB5I,KAAKw8K,2UC3Cb,IAAMY,qBAAb,WACI,SAAAA,qKAAeC,CAAAr9K,KAAAo9K,WACXp9K,KAAKq7K,cAAgB,IAAIhpK,IACzBrS,KAAKs9K,kBAAoB,KAHjC,0OAAAC,CAAAH,YAAA5jL,IAAA,eAAAN,MAAA,SAAAskL,aAMkBrL,WACVnyK,KAAKq7K,cAAc3oK,IAAIy/J,UAAU35K,OAAQ25K,cAPjD34K,IAAA,mBAAAN,MAAA,SAAAukL,iBAUsB5gK,KAId,OAHIA,MACA7c,KAAKs9K,kBAAoBzgK,KAEtB7c,KAAKs9K,qBAdpB9jL,IAAA,uBAAAN,MAAA,SAAAwkL,qBAiB0BC,gBAAgB,IAAAl8K,MAAAzB,KAClC29K,eAAen+K,QAAQ,SAACo6J,MACpBn4J,MAAK+7K,aAAa5jB,WAnB9BpgK,IAAA,sBAAAN,MAAA,SAAA0kL,sBAyBQ,OCzBD,SAASC,eAAgB/lJ,QAASgmJ,SACrC,IAAMC,OAASD,QAAQlL,OACnBkL,QAAQ1K,SAAW0K,QAAQ1K,QAAQ9zK,QACnCw+K,QAAQ1K,QAAQ5zK,QAAQ,SAAAw+K,WAAS,OAAIH,eAAe/lJ,QAASkmJ,aAEnD,MAAVD,QAAsC,iBAAZA,aACiBvqJ,IAAvCsE,QAAQwjJ,eAAexiL,IAAIilL,SAC3BD,QAAQlL,KAAK96I,QAAQwjJ,eAAexiL,IAAIilL,SDiB5CF,CAAe79K,KAAMA,KAAKs9K,mBACnBt9K,KAAKy9K,sBAzBpBjkL,IAAA,eAAAN,MAAA,SAAAoiL,eA6BQ,OAAOt7K,KAAKq7K,iBA7BpB7hL,IAAA,oBAAAN,MAAA,SAAA+kL,oBAgCQj+K,KAAKq7K,cAAcx4I,YAhC3Bu6I,UAAA,ySEYqBc,wCACjB,SAAAA,cAAah+J,mKAAMi+J,CAAAn+K,KAAAk+K,eACfl+K,KAAK4xK,UAAY1xJ,KAAKgyJ,SACtBlyK,KAAKu7K,iBAAmBr7J,KAAKmc,UAC7Br8B,KAAKo+K,YACDnnJ,MAAO/W,KAAK+W,OAASo7I,cACrBn7I,OAAQhX,KAAKgX,QAAUo7I,gBAG3BtyK,KAAKq+K,cAAgBn+J,KAAKo+J,cAAgB,OAC1Ct+K,KAAKs9K,kBAAoB,KACzBt9K,KAAKu+K,WAAa,IAAInB,qBACtBp9K,KAAKw+K,gBAAkB,KACvBx+K,KAAKq8K,qBACLr8K,KAAKo8D,KAAO,KACZp8D,KAAKy+K,YAAc,qTAGZ71K,OAIP,OAHIA,QACA5I,KAAKu+K,WAAa31K,OAEf5I,KAAKu+K,qEAGE31K,OAId,OAHIA,QACA5I,KAAKq8K,kBAAoBzzK,OAEtB5I,KAAKq8K,8DAGLzzK,OAIP,OAHIA,OACAjQ,OAAOmgB,OAAO9Y,KAAKo+K,WAAYx1K,OAE5B5I,KAAKo+K,6DAGFjM,WACVnyK,KAAKu+K,WAAWf,aAAarL,6EAGXwL,gBAClB39K,KAAKu+K,WAAWb,qBAAqBC,4DAG9B3xJ,MACHhsB,KAAK0+K,KACL1+K,KAAK0+K,IAAIC,UAAU3yJ,oDAQf/c,QACRjP,KAAKo8D,KAAKwiH,WAAW3vK,QACrBjP,KAAKs9K,kBAAoBt9K,KAAKo8D,KAAKvgD,MACnC7b,KAAK6+K,oDAKDhH,MAAME,aAAa/3K,KAAK4xK,WACxB5xK,KAAK4xK,UAAUkN,QAAU9+K,KAEzB0zB,SAASgB,eAAe10B,KAAK4xK,WAAWkN,QAAU9+K,KAGtDA,KAAKs9K,kBDvEN,SAASyB,aAAcjnJ,SAAS,IAAAknJ,mBACTlnJ,QAAQwgE,YAA1BphE,OAD2B8nJ,mBAC3B9nJ,OAAQD,MADmB+nJ,mBACnB/nJ,MAMhB,OALmB,IAAIklJ,qCAAkBrkJ,QAAQmnJ,YAAY3D,eACnBxjJ,QAAQonJ,mBACRhoJ,OACAD,OACVkoJ,sBCiEHJ,CAAa/+K,MACtCA,KAAKu+K,WAAWd,iBAAiBz9K,KAAKs9K,mBACtCt9K,KAAKs9K,kBAAoBt9K,KAAKu+K,WAAWX,sBACzC59K,KAAK8+K,QAAU,IAAI9I,0BACf/+I,MAAOj3B,KAAKo+K,WAAWnnJ,MACvBC,OAAQl3B,KAAKo+K,WAAWlnJ,QAExBl3B,KAAKs9K,mBACTt9K,KAAKo8D,KAAOp8D,KAAK8+K,QAAQM,YAAYhjH,OACrCp8D,KAAK8+K,QAAQO,YACbr/K,KAAKw+K,gBAAkB,IAAIrD,gCACvB/+G,KAAMp8D,KAAKo8D,KACXk/G,aAAct7K,KAAKu+K,WAAWjD,eAC9BE,gBAAiBx7K,KAAKu7K,kBACvBv7K,KAAKq+K,cAAer+K,KAAK4xK,WAExB5xK,KAAKy+K,YACLz+K,KAAKo8D,KAAKloC,GAAGl0B,KAAKy+K,aAElBz+K,KAAKy+K,YAAcz+K,KAAKo8D,KAAKloC,KAGjCl0B,KAAKw+K,gBAAgBhpH,6DAIrB,OAAOx1D,KAAKy+K,0EAOIa,kBAAkB,IAAA79K,MAAAzB,KAgBlC,OAfAA,KAAKq8K,kBAAkB/8K,OAAS,EAChCU,KAAKu+K,WAAWN,oBAChBqB,iBAAiB9/K,QAAQ,SAAC20B,WAClBA,YACA1yB,MAAK46K,kBAAkB76K,KAAK2yB,UAAU37B,QACtCiJ,MAAK+7K,aAAarpJ,WACO,SAArBA,UAAU37B,QACV27B,UAAUg+I,UAAU3yK,QAAQ,SAAC+/K,cACzBA,aAAa//K,QAAQ,SAACggL,OAClB/9K,MAAK+7K,aAAagC,cAM/Bx/K,uDAGGoyK,eACV,OAAOpyK,KAAKu+K,WAAWjD,eAAexiL,IAAIs5K,yDAGpCljJ,OAIN,OAHIA,QACAlvB,KAAK4xK,UAAY1iJ,OAEdlvB,KAAK4xK,01CC/IC6N,ixBAAsBhO,0VACpB,IAAAiO,eACW1/K,KAAKihG,WAC/B,OAAShqE,MAFMyoJ,eACPzoJ,MACQC,OAFDwoJ,eACAxoJ,kEAIDhX,MACdlgB,KAAKihG,UAAWnjE,IAAK5d,KAAK3a,EAAG07B,KAAM/gB,KAAK9L,IACxCpU,KAAKiyK,eACDh7I,MAAO/W,KAAK+W,MACZC,OAAQhX,KAAKgX,QAEjBl3B,KAAKkyK,SAAShyJ,KAAKgyJ,4DAInB,OAAOlyK,KAAKihG,iEAIZ,MAAM5wF,MAAM,2EAIZ,MAAMA,MAAM,+zCCtBCsvK,yDACjB,SAAAA,gBAAa3wK,QAAQ,IAAAvN,MAAA,oKAAAm+K,CAAA5/K,KAAA2/K,kBACjBl+K,MAAAo+K,0CAAA7/K,KAAA8/K,+BAAAH,iBAAAvnL,KAAA4H,KAAMgP,OAAOxW,KAAMwW,OAAOmjK,UAAU7qB,kBAAmB,KAClDy4B,UAAU/wK,QAFEvN,iZADoBg+K,mUAM3BtrJ,WACV,IAAM+xI,aAAelmK,KAAKgP,OAAOC,OACjCklB,UAAYmuD,6BAAcnuD,WAFL,IAGbsQ,MAAUyhI,aAAVzhI,MACFwlC,IAAM91C,UACT85B,UADS,IAAAhiD,OACKi6J,aAAa/vE,YADlB,qBAET71F,MAAMN,KAAKxH,OACdyxE,IAAI7b,OAAOxrB,SACX,IAEMo9I,KAFW/1G,IAAI3b,QAAQl+B,OAAO,OAEdplB,MAAMi/D,KAC5B+1G,KAAKvoG,QAAL,GAAAxrE,OAAgBi6J,aAAa/vE,YAA7B,qBAA4D,GAXvC,IAAAupF,eAYK1/K,KAAKihG,WAAvB/pE,OAZawoJ,eAYbxoJ,OAAQD,MAZKyoJ,eAYLzoJ,MAChBj3B,KAAKmyK,UAAUxuB,kBAAkB1sH,MAAOC,QAExCl3B,KAAKmyK,WAAanyK,KAAKmyK,UAAUvzE,OAAOohF,KAAKh0J,QAE7Cg0J,KAAK/xH,UAAU,OAAOwpB,QAAtB,GAAAxrE,OAAiCi6J,aAAa/vE,YAA9C,mBAA2E,GAC3E6pF,KAAK7qJ,MAAM,QAAX,GAAAlpB,OAAuB,IAAvB,MAEIi6J,cAAgBlmK,KAAKmyK,WACrB6N,KAAK7qJ,MAAM,QxDyBH,QwDxBSA,MAAM,aAAcsP,yCAKvCtQ,WACFn0B,KAAKigL,aAAa9rJ,WAAaT,SAASgB,eAAe10B,KAAKkyK,iEAGjDljK,QAGX,OAFAhP,KAAKxH,KAAKwW,OAAOxW,MACjBwH,KAAKihG,SAASjyF,OAAOmjK,UAAU7qB,mBACxBtnJ,iDAGAgP,QACPhP,KAAKmyK,UAAYnjK,OAAOmjK,UACxBnyK,KAAKgP,OAASA,OACdhP,KAAK64C,OAAO7pC,OAAOC,OAAO4pC,QAC1B74C,KAAK69B,SAAS7uB,OAAOC,OAAO4uB,UAC5B79B,KAAKq8B,UAAUrtB,OAAOC,OAAOotB,WAC7Br8B,KAAK87K,UAAU9sK,OAAOC,OAAO6sK,WAC7B97K,KAAKi8K,UAAUjtK,OAAOC,OAAOgtK,2yCChDhBiE,yDACjB,SAAAA,gBAAalxK,QAAQ,IAAAvN,MAAA,oKAAA0+K,CAAAngL,KAAAkgL,kBACjBz+K,MAAA2+K,0CAAApgL,KAAAqgL,+BAAAH,iBAAA9nL,KAAA4H,KAAMgP,OAAOxW,KAAMwW,OAAOC,OAAOyqF,YAAY4mF,YAAa,KACrDP,UAAU/wK,QAFEvN,iZADoBg+K,mUAM3BtrJ,WACVA,UAAYmuD,6BAAcnuD,WAC1B,IAAMosJ,qBAFeC,sBAGkBxgL,KAAKgP,OAAOC,OAAOyqF,YAAlD4mF,YAHaE,sBAGbF,YAAappJ,OAHAspJ,sBAGAtpJ,OAAQD,MAHRupJ,sBAGQvpJ,MAHRwpJ,oBAIazgL,KAAKgP,OAAOC,OAAtC4uB,SAJa4iJ,oBAIb5iJ,SAAUs4D,YAJGsqF,oBAIHtqF,YACZuqF,YAAcl+F,YAAYruD,UAAW,OAAQn0B,KAAKq5I,YAAzB,GAAAptI,OACIkqF,YADJ,qBACqC,SAAA59F,GAAC,OAAIA,IACzEmoL,YAAYjpG,QAAZ,GAAAxrE,OAAuBkqF,YAAvB,YAA6C,GAC7C,IAAM1xD,MzDoCM,SyDpCG5G,UzDqCF,UyDrCuBA,SzD6CpB,WACE,ayD7CZ8iJ,SzD4CU,ayD5CCl8I,MAAqB67I,YAAYrpJ,MAAQA,MACpD2pJ,UzD2CU,ayD3CEn8I,MAAqBvN,OAASopJ,YAAYppJ,OAQ5D,IANC/C,UAAWusJ,aAAalhL,QAAQ,SAAC8lB,MAC9BA,KAAK6P,MAAM,QAAX,GAAAlpB,OAAuBrL,KAAKgR,MAAM+uK,UAAlC,OACiBxrJ,MAAM,SADvB,GAAAlpB,OACoC20K,UADpC,OAEiBzrJ,MAAM,QzD6Bf,UASI,ayDnCZsP,MAAoB,CACpB,IAAIo8I,UAAY,EACZC,WAAaF,UACbG,UAAY,EAEhB/gL,KAAKq5I,WAAW75I,QAAQ,SAACwhL,YACrB,IAAMC,IAAMD,WAAW/mB,OACnBgnB,IAAIvnF,cAAcxiE,OAAS4pJ,YAC3BD,WACAE,UAAY,EACZD,WAAaF,WAEbC,SAAW,GAAKA,WAEpBN,kBAAkBM,UAAYN,kBAAkBM,cAChDC,YAAclgL,KAAKC,IAAIogL,IAAIvnF,cAAcxiE,OAAQ4pJ,YACjDC,UAAYngL,KAAKG,IAAIH,KAAKC,IAAIogL,IAAIvnF,cAAcziE,MAAOgqJ,IAAIvnF,cAAcrhE,UAAW0oJ,WACpFR,kBAAkBM,UAAUr/K,MACxBy4J,OAAQgnB,IACRC,aAAcN,UACdO,YAAaJ,cAIrB,IAAM7xJ,MAAQszD,YAAYk+F,aAAc,OAAQH,kBAAvB,GAAAt0K,OAA6CkqF,YAA7C,oBAEzBjnE,MAAMuoD,QAAN,GAAAxrE,OAAiBkqF,YAAjB,6BAAwD,GACvChhE,MAAM,QAAS,SAAA58B,GAAC,SAAA0T,OAAO1T,EAAE,GAAG4oL,YAAZ,QACjC3+F,YAAYtzD,OAAQ,OAAQ,SAAA32B,GAAC,OAAIA,GAAtB,GAAA0T,OAA4BkqF,YAA5B,yBAAiE,SAAA59F,GAAC,OAAIA,EAAE0hK,OAAO/lI,OACzEyO,KAAK,SAAUpqC,GACZA,EAAE0hK,OAAO/qI,MAAMlvB,QAElBm1B,MAAM,QAAS,SAAA58B,GAAC,SAAA0T,OAAO1T,EAAE4oL,YAAT,YAC9B,CACH,IAAMjyJ,OAAQszD,YAAYk+F,YAAa,OAAQ,GAAtB,GAAAz0K,OAA6BkqF,YAA7B,oBACzBjnE,OAAMuoD,QAAN,GAAAxrE,OAAiBkqF,YAAjB,+BAA0D,GAC1DjnE,OAAMuoD,QAAN,GAAAxrE,OAAiBkqF,YAAjB,mBAA+C,IAAK,GACnChhE,MAAM,QADvB,GAAAlpB,OACmC00K,SADnC,OAGAn+F,YAAYtzD,OAAO,MAAOlvB,KAAKq5I,WAApB,GAAAptI,OAAmCkqF,YAAnC,yBAAwE,SAAA59F,GAAC,OAAIA,EAAE0hK,OAAO/lI,OAChFyO,KAAK,SAAUpqC,GAAKA,EAAE0hK,OAAO/qI,MAAMlvB,QACnCm1B,MAAM,QAAS,SAAA58B,GAAC,SAAA0T,OAAO1T,EAAE0hK,OAAOvgE,cAAcziE,MAA9B,2CAInC9C,WACFn0B,KAAKohL,aAAajtJ,WAAaT,SAASgB,eAAe10B,KAAKkyK,iEAGjDljK,QAIX,OAHAhP,KAAKxH,KAAKwW,OAAOxW,MACjBwH,KAAKihG,SAASjyF,OAAOC,OAAOyqF,YAAY4mF,aACxCtgL,KAAK+/K,UAAU/wK,QACRhP,iDAGAgP,QACPhP,KAAKq5I,WAAarqI,OAAOmjK,UACzBnyK,KAAKgP,OAASA,OACdhP,KAAK64C,OAAO7pC,OAAOC,OAAO4pC,QAC1B74C,KAAK69B,SAAS7uB,OAAOC,OAAO4uB,UAC5B79B,KAAKq8B,UAAUrtB,OAAOC,OAAOotB,WAC7Br8B,KAAK87K,UAAU9sK,OAAOC,OAAO6sK,WAC7B97K,KAAKi8K,UAAUjtK,OAAOC,OAAOgtK,qzCCrFhBoF,0DAEjB,SAAAA,gBAAaryK,QAAQ,IAAAvN,MAAA,qKAAA6/K,CAAAthL,KAAAqhL,kBACjB5/K,MAAA8/K,2CAAAvhL,KAAAwhL,gCAAAH,iBAAAjpL,KAAA4H,KAAMgP,OAAOxW,KAAMwW,OAAOC,OAAO8W,WAAY,KACxCg6J,UAAU/wK,QACfvN,MAAK46B,UAAUrtB,OAAOC,OAAOotB,WAHZ56B,mZAFoBg+K,sUAQ3BhuJ,YAEV,IAAM0kE,YAAcn2F,KAAKgP,OAAOC,OAAOknF,YACjC37E,IAAMxa,KAAKgP,OAAOC,OAAOuL,IACzBK,OAAS7a,KAAKgP,OAAOC,OAAO4L,OAE5BiuI,OAAS9oJ,KAAKgP,OAAOC,OAAO65I,OAE5BkV,mBAAqBx7E,YAAY/wD,WAAY,OAAQ,GAArB,GAAAxlB,OAA4BkqF,YAA5B,UAAAlqF,OAAgDuO,IAAhD,KAAAvO,OAAuD4O,OAAS,IAC7F48D,QADkB,GAAAxrE,OACPkqF,YADO,UAAAlqF,OACauO,MAAO,GACtCi9D,QAFkB,GAAAxrE,OAEPkqF,YAFO,UAEa,GAVlB8nE,eAYQZ,cAAcr9J,KAAKmyK,UAAW33J,IAAKK,QAAzDyiJ,WAZcW,eAYdX,WAAYC,MAZEU,eAYFV,MAChB/iJ,MAAQygJ,mBACR+C,mBAAmB7oI,MAAM4lI,sBAAzB,GAAA9uJ,OAAmCjM,KAAKsnJ,kBAAkBrwH,MAA1D,OACA+mI,mBAAmB7oI,MAAM6lI,uBAAzB,GAAA/uJ,OAAoCjM,KAAKsnJ,kBAAkBpwH,OAA3D,QAfkB,IAmBd0lC,MAAU58D,KAAKk+J,YAAYF,mBAAjB,GAAA/xJ,OAAwCkqF,YAAxC,SAA4DmnE,YAAtE1gG,MAEJpiD,MAAQygJ,kBAAUsC,MAClB3gG,MAAMrO,KAAK+sG,SAAU,SAAUz9F,KAAMuvE,UACjC,IAAM8U,YAAcrkF,KAAKqkF,YAEzB,OADA5/D,6BAActiF,MAAMm1B,MAAM,SAA1B,GAAAlpB,OAAuCi2I,YAAY50C,cAAgBw7C,OAAO7xH,MAA1E,OACOsmI,MAAM1/F,KAAK0mE,UAAU6I,YAExB5yH,MAAQutF,gCAAOvtF,MAAQstF,mCAAsB,IAAXjtF,QAC1C+hD,MAAMrO,KAAKgtG,SAAU,SAAU19F,KAAMuvE,UACjC,IAAM9lB,KAAOi2C,MAAM1/F,KAAK0mE,UAAU6I,UAC5B8U,YAAcrkF,KAAKqkF,YAKzB,OAJI56B,KAAO,GACP46B,YAAYyB,kBAAkBzB,YAAY70C,aAAekwD,MAAOrb,YAAY50C,eAEhFhrB,6BAActiF,MAAMm1B,MAAM,SAA1B,GAAAlpB,OAAuCi2I,YAAY50C,cAAnD,OACOga,OAIf1qD,MAAMj6B,KAAK,SAAUk7B,MACjBA,KAAKqkF,aAAerkF,KAAKqkF,YAAYtjD,OAAO5+F,QAC7CouD,OAAOzrB,KAAK,SAACk7B,MACZA,KAAKqkF,aAAerkF,KAAKqkF,YAAYt/G,WAEzC5iC,KAAK09J,aAAa9gG,MAAOksF,OAAQtuI,IAAKK,0DAG5B+hD,MAAOksF,OAAQ/tJ,KAAMiJ,OAAO,IAEpCizB,MAMA6xH,OANA7xH,MACA9B,MAKA2zH,OALA3zH,MACAwa,MAIAm5G,OAJAn5G,MACA+7F,eAGAod,OAHApd,eACAC,eAEAmd,OAFAnd,eACAC,iBACAkd,OADAld,iBAEIqiB,YAAW,GAAAhiJ,OAAMgrB,MAAN,OAAAhrB,OAAiBkpB,OAE9Bp6B,OAASkgK,kBAAoB,IAAVj3J,OAClB+jG,+BAAKD,kCAAQE,yBAAMC,2BAAOzoG,QAAQ,SAACm+J,YAChC/gG,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAtB,GAAA1xJ,OAAuCgiJ,YAAvC,KAAAhiJ,OAAsD2/H,iBAAiB+xB,YACrEhuH,MAAQ2sH,kBAEPvhK,OAASkgK,iBAChBj7J,KAAK49J,gBAAgBhhG,MAAOqxF,YAAaviB,eAAgB/7F,OACxC,IAAV3rC,OACPhE,KAAK89J,gBAAgBlhG,MAAOqxF,YAAatiB,eAAgBh8F,uDAIpDzgB,MAAOmN,UAAW8hI,SAC3B,IAAM3gE,MAAQhb,YAAYtzD,MAAO,SAAU,UAAlB,GAAAjjB,OAAgCowB,UAAhC,WACnB4C,KAAOujD,YAAYgb,MAAO,SAAU,UAAlB,GAAAvxF,OAAgCowB,UAAhC,UAClBpiB,KAAOuoE,YAAYvjD,KAAM,KAAMk/H,QAAb,GAAAlyJ,OAAyBowB,UAAzB,QAIxB,OAASmhE,YAAOv+D,UAAMhlB,UAAM2iD,MAHd4lB,YAAYvoE,KAAM,KAAM,SAAC1hB,EAAGN,GAAJ,OAAUM,EAAE8lB,OAAO,SAAAlkB,GAAC,OAAU,OAANA,IAAYmP,IAAI,SAAAnP,GAAC,OAClD+nJ,YAAa/nJ,EAAGoqI,SAAUtsI,MAD9B,GAAAgU,OACwCowB,UADxC,UAC4D,SAAA7iC,KAAG,OAAIA,IAAI0oJ,YAAYhuH,8DAK/F0oC,MAAOqxF,YAAa4P,YAAaluH,QAC7Co4D,+BAAKD,mCAAQtoG,QAAQ,SAACm+J,YACnB,IAAMxoI,MAAK,GAAAlpB,OAAMgiJ,YAAN,KAAAhiJ,OAAqB4xJ,YAAYF,YAAchuH,MAAQ2sH,eAClE1/F,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAcxoI,iEAI3BynC,MAAOqxF,YAAa4P,YAAaluH,QAC7Cq4D,yBAAMC,2BAAOzoG,QAAQ,SAACm+J,YACnB,IAAMxoI,MAAK,GAAAlpB,OAAMgiJ,YAAN,KAAAhiJ,OAAqB4xJ,YAAYF,YAAchuH,MAAQ2sH,eAClE1/F,MAAMznC,MAAN,UAAAlpB,OAAsB0xJ,YAAcxoI,2CAItChB,WACFn0B,KAAK+9J,aAAa5pI,WAAaT,SAASgB,eAAe10B,KAAKkyK,iEAGjDljK,QAIX,OAHAhP,KAAKxH,KAAKwW,OAAOxW,MACjBwH,KAAKihG,SAASjyF,OAAOC,OAAO8W,YAC5B/lB,KAAK+/K,UAAU/wK,QACRhP,iDAGAgP,QACPhP,KAAKmyK,UAAYnjK,OAAOmjK,UACxBnyK,KAAKgP,OAASA,OACdhP,KAAK64C,OAAO7pC,OAAOC,OAAO4pC,QAC1B74C,KAAK69B,SAASkqE,gCACd/nG,KAAKq8B,UAAUrtB,OAAOC,OAAOotB,iyCC1HhBolJ,sDAEjB,SAAAA,cAAazyK,QAAQ,IAAAvN,MAAA,mKAAAigL,CAAA1hL,KAAAyhL,gBACjBhgL,MAAAkgL,yCAAA3hL,KAAA4hL,8BAAAH,eAAArpL,KAAA4H,KAAMgP,OAAOxW,KAAMwW,OAAOC,OAAO8W,WAAY,KACxCi3J,kBACLv7K,MAAKs+K,UAAU/wK,QAHEvN,6YAFkBg+K,gUAanC,IAJA,IAAIvoJ,OAAS,EACTD,MAAQ,EAFA4qJ,sBAGmC7hL,KAAKmyK,UAAU3I,WAAtDC,iBAHIoY,sBAGJpY,iBAAkBc,iBAHdsX,sBAGctX,iBAEjBtyK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAClB+H,KAAKg9K,eAAe19K,QAAUU,KAAKg9K,eAAe/kL,aAAcgS,QAClEjK,KAAKg9K,eAAe/kL,OAExB,IAAK,IAAIqiB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMwnK,WAAc5qJ,OAAQqzI,iBAAiBW,WAAWjzK,GAAIg/B,MAAOszI,iBAAiBU,UAAU3wJ,IACxFo9B,OAAS+xH,iBAAiBh+B,SAAjB,GAAAx/H,OAA6B2uJ,iBAAiB3iK,KAAMqiB,GAC7DynK,WAAU,GAAA91K,OAAM2uJ,iBAAiB3iK,GAAvB,KAAAgU,OAA6B6uJ,oBAAoBxgJ,IAC3DstI,cACF7hI,WAAY+7J,UACZh5B,OAAQyhB,iBAAiBzhB,OACzB3yD,YAAan2F,KAAKgP,OAAOC,OAAOknF,YAChC37E,IAAKogJ,iBAAiB3iK,GACtB4iB,OAAQP,GAEZ,GAAIta,KAAKg9K,eAAe/kL,GAAGqiB,aAAcmlK,cACrCz/K,KAAKg9K,eAAe/kL,GAAGqiB,GAAG0nK,eACtBxpL,KAAMupL,WACN5P,UAAWz6H,OACXzoC,OAAQ24I,mBAET,CACH,IAAMq6B,cAAgB,IAAIZ,kCACtB7oL,KAAMupL,WACN5P,UAAWz6H,OACXzoC,OAAQ24I,eAEZ5nJ,KAAKg9K,eAAe/kL,GAAGuJ,KAAKygL,eAEtB,IAANhqL,IACAg/B,OAAS6qJ,UAAU7qJ,OAEb,IAAN3c,IACA4c,QAAU4qJ,UAAU5qJ,SAIhCl3B,KAAKihG,UAAW/pE,cAAQD,cACxBj3B,KAAKmyK,UAAYnyK,KAAKg9K,iEAGX,IAAAkF,sBACWliL,KAAKmyK,UAAU,GAAG,GAAGlxE,WAAnCnjE,IADGokJ,sBACHpkJ,IAAKmD,KADFihJ,sBACEjhJ,KADFy+I,eAEe1/K,KAAKihG,WAC/B,OACInjE,QACAmD,UACA/J,OANOwoJ,eAEHxoJ,OAKJD,MAPOyoJ,eAEKzoJ,2DASLjoB,QAIX,OAHAhP,KAAKxH,KAAKwW,OAAOxW,MACjBwH,KAAKihG,SAASjyF,OAAOC,OAAO8W,YAC5B/lB,KAAK+/K,UAAU/wK,QACRhP,iDAGAgP,QACPhP,KAAKmyK,UAAYnjK,OAAOmjK,UACxBnyK,KAAKgP,OAASA,OACdhP,KAAK64C,OAAO7pC,OAAOC,OAAO4pC,QAC1B74C,KAAKq8B,UAAUrtB,OAAOC,OAAOotB,WAC7Br8B,KAAKmiL,oCC/EAC,cACTvkJ,SAAU,MACV4G,MAAO,OACPzG,QAAS,EACT3B,UAAS,GAAApwB,O5D6Bc,O4D7Bd,qBAGAo2K,kBACTxkJ,SAAU,MACV4G,MAAO,OACPzG,QAAS,GACTo8H,SAAU,EACV/9H,UAAS,GAAApwB,O5DqBc,O4DrBd,wBAOAq2K,kBAEH,unBCNH,iCAiCMC,8BAAmB,SAAnBA,iBAAoBzqJ,QAAS5I,OACtC,IAAIg3I,aAAep8F,kBAAmBhyC,QAAQ7oB,UADEuzK,sBAGxBtzJ,MAAMkqD,wBAAxBliD,OAH0CsrJ,sBAG1CtrJ,OAAQD,MAHkCurJ,sBAGlCvrJ,MACRwrJ,WAAa3qJ,QAAQZ,SACrBwrJ,UAAY5qJ,QAAQb,QACpB0rJ,SAAW7qJ,QAAQ8sD,cAAc8zE,YANSkqB,sBAc5CD,SAASr6B,kBANTjI,kBAR4CuiC,sBAQ5CviC,kBACAD,eAT4CwiC,sBAS5CxiC,eACAppE,SAV4C4rG,sBAU5C5rG,SACA/8D,KAX4C2oK,sBAW5C3oK,KACAjB,QAZ4C4pK,sBAY5C5pK,QACA2D,OAb4CimK,sBAa5CjmK,OAb4C2yF,gBAqB5Cx3E,QAAQ7oB,SALRsqB,SAhB4C+1E,gBAgB5C/1E,SACA2gI,UAjB4C5qD,gBAiB5C4qD,UACA/jE,YAlB4CmZ,gBAkB5CnZ,YACAqwD,YAnB4Cl3C,gBAmB5Ck3C,YACAyT,OApB4C3qD,gBAoB5C2qD,OAGE4oB,YAAc/qJ,QAAQ81H,QAAQ,GAE9Bk1B,eAAiBhrJ,QAAQirJ,WAAW,GAEpCC,eAAiB/oB,OAAOp8H,SAExBolJ,kBzCvEuB,SAApBC,kBAAqBprJ,SAAY,IAAAqrJ,cACpCxS,aAAe74I,QAAQ7oB,SAASgrJ,OAChC4oB,YAAc/qJ,QAAQ81H,QAAQ,GAC9Bk1B,eAAiBhrJ,QAAQirJ,WAAW,GACpCK,cAAYC,kCAAAF,iBAAA,GAAAl3K,OpB+CH,MoB/CG,KAAAA,OpB+CH,QoB9CS6qJ,MpBeH,WAgCJ,UoBhDCusB,kCAAAF,cAAA,GAAAl3K,OpB8CA,SoB9CA,KAAAA,OpB8CA,WAED,QAhCI,WoBd2B6qJ,QAF9BusB,kCAAAF,cAAA,GAAAl3K,OpB+CH,MoB/CG,KAAAA,OpB8CA,WoB3CS6qJ,MpB6CV,QAhCI,aoBhBHusB,kCAAAF,cAAA,GAAAl3K,OpB8CA,SoB9CA,KAAAA,OpB+CH,QA/BM,WAgCJ,QoB5C4B6qJ,QAJ3BqsB,eAMZG,gBpBQY,SAmCA,oBAnCA,WoBJZC,cAAgBV,YAAYhlJ,UpBqCnB,MoBpCT2lJ,iBAAmBV,eAAejlJ,UpBoCzB,MoBlCf,OACIrlB,QAAS4qK,aAAY,GAAAn3K,OAAIs3K,cAAJ,KAAAt3K,OAAqBu3K,mBAC1C3S,QpB6BY,SoB7BHF,aAAa9yI,UpBgCX,QoBhCgC8yI,aAAa9yI,SACxDylJ,cAAc,GAAKA,cAAc,IyCmDXJ,CAAkBprJ,SAE5CZ,OAASt2B,KAAKgR,MAAMslB,QACpBD,MAAQr2B,KAAKgR,MAAMqlB,OAEnB,IAAMwsJ,yBAA2B7iL,KAAKG,IAAI0hL,WAAa,EAAIA,WAAavrJ,OAAQgjI,WAC1EwpB,wBAA0B9iL,KAAKG,IAAI2hL,UAAY,EAAIA,UAAYzrJ,MAAOsC,UAnC5BoqJ,e5B+BvB,SAAhB/6B,cAAiB9wH,QAAS8rJ,aAAcC,aACjD,IAAI/S,aAAe,EACbt4J,WAsBN,OApBAorK,cAAgB,KAAOC,aAAe,MAAQ,QAAS,YAAYrkL,QAAQ,SAACzE,MACxE,IAAM+oL,cAAgBhsJ,QAAQ/8B,QACxB+9F,QA7EsB,SAA9BirF,4BAA+BC,YACjC,MAA0B,mBAAfA,YAA8BA,WAAWC,UvTyxCrC,SAAbC,WAAc54K,KAChB,IAAM64K,aACFC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAGT,MAAO,GAAAx4K,OAAIX,KAAO/I,QADE,YACmB,SAAAmH,OAAK,OAAIy6K,YAAYz6K,SuThyCrDw6K,CAAWF,cAFPA,aA2ESD,CAA4BD,cAAc,IAC1D,GAAIhrF,QAAQx5F,OAAQ,CAChB,IAAM2P,OAAS60K,cAAc,GAE7B70K,OAAOgoB,MAAQa,QAAQb,QACvBhoB,OAAOioB,OAASY,QAAQZ,SACxBjoB,OAAOknF,YAAcr+D,QAAQ7oB,SAASknF,YACtClnF,OAAO6pF,QAAUA,QACjB7pF,OAAOknF,YAAcr+D,QAAQ7oB,SAASknF,YAPtB,IAAAuuF,eASSnU,cAActhK,OAAQlU,KAAM+8B,QAAQ38B,eAAeu6B,WACxEoC,QAAO,GAAA7rB,OAAIlR,KAAJ,UADHm8B,OATQwtJ,eASRxtJ,OAAQ2mC,KATA6mH,eASA7mH,KAGhBrlD,QAAO,GAAAvM,OAAIlR,KAAJ,SAAkB8iE,KACzB/lC,QAAQ4vH,aAAa3sJ,MAAQ8iE,KAC7BizG,cAAgB55I,OAASjoB,OAAO+uB,YAG/B8yI,0BAAct4J,iB4BjBWowI,CAAc9wH,QAAS2rJ,yBAA0BC,yBAA3ElrK,QAtCwCmrK,eAsCxCnrK,QAASs4J,aAtC+B6S,eAsC/B7S,aAGXD,Q3BmEkB,SAAf8T,aAAgB7sJ,QAASg5I,aAAc55I,OAAQD,OACxD,IAAMyiE,aACFxiE,cACAD,YACA65I,2BAEI7W,OAAWniI,QAAQ7oB,SAAnBgrJ,OACA1hE,KAAmB0hE,OAAnB1hE,KAAM16D,SAAao8H,OAAbp8H,SAEdo8H,OAAO9jE,YAAcr+D,QAAQ7oB,SAASknF,YACtC,IAAM1xD,MlChHU,SkCgHD5G,UlC/GE,UkC+GmBA,SlCvGhB,WACE,akC0GtB,OAFAo8H,OAAO1hE,KAAOA,KlCzGM,akCyGG9zD,OAAsBxN,MAAQ,KlCxG/B,ekCwGwCwN,OAAwBvN,OAAS,IAAQqhE,KACvG0hE,OAAOx1H,MAAQA,MACRisI,+BAAkBzW,OAAQniI,QAAS4hE,YAAa5hE,QAAQ+4I,a2BjF/C8T,CAAa7sJ,QAASg5I,aAAc2S,yBAA0BC,yBAC9E5rJ,QAAQ4vH,aAAauS,UACrB4W,QAAQrxK,QAAQ,SAACrF,GACb29B,QAAQ4vH,aAAauS,OAAO9/J,EAAEo0J,WAAap0J,EAAE8/J,SAGjD,IAAMqmB,Y3BsBoB,SAAjBsE,eAAkB/T,QAASF,aAAczL,gBAAiBjB,gBACnE,IACMqc,aAAgBrpJ,MAAO,EAAGC,OAAQ,GA2BxC,OA5BuB25I,QAAQvnK,IAAI,SAAA03K,YAAU,OAAIA,WAAW/mB,OAAOvgE,gBAGpDl6F,QAAQ,SAAC+wE,OACpB,IAAIr5C,OACAD,MACJA,MAAQr2B,KAAKC,IAAI0vE,MAAMt5C,MAAOs5C,MAAMl4C,UACpCnB,OAASt2B,KAAKC,IAAI0vE,MAAMr5C,OAAQq5C,MAAMj4C,WlC7DpB,ekC+Ddq4I,aAAalsI,MACT67I,YAAYrpJ,MAAQA,MAAQgtI,gBAC5Bqc,YAAYrpJ,MAAQgtI,eACpBqc,YAAYppJ,QAAUA,SAEtBopJ,YAAYrpJ,OAASA,MACrBqpJ,YAAYppJ,OAASt2B,KAAKG,IAAIu/K,YAAYppJ,OAAQA,SAE/CopJ,YAAYppJ,OAASA,OAASguI,iBACrCob,YAAYppJ,OAASA,OACrBopJ,YAAYrpJ,OAASA,QAErBqpJ,YAAYppJ,QAAUA,OACtBopJ,YAAYrpJ,MAAQr2B,KAAKG,IAAIu/K,YAAYrpJ,MAAOA,UlC5ElC,ekC+ElB05I,aAAalsI,QACb67I,YAAYrpJ,MAAQgtI,gBAEjBqc,Y2BnDasE,CAAe/T,QAAS5W,OAAQwpB,yBAA0BC,yBACxEvC,Y7D1CU,S6D0CK6B,gB7DzCJ,U6DyC+BA,eAA4B1C,YAAYrpJ,MAAQ,EAC1FiqJ,a7DxCS,Q6DwCO8B,gB7DzCJ,W6DyC8BA,eAA6B1C,YAAYppJ,OAAS,EAG5FmiH,YACF7gI,gBACAq4J,gBACAtY,UAAWzgI,SACX7d,UACAjB,gBACA2D,cACAgsI,eAAgBg6B,SAASh6B,kBAEvBjvD,aACFmrF,YACI3tJ,cACAD,aAEJ65I,0BACAwP,wBACAuD,YAAaH,wBACbE,aAAcH,yBACdxsJ,MAAOysJ,wBAA0BvC,YACjCjqJ,OAAQusJ,yBAA2B3S,aAAeoQ,aAClDxmB,cAAe5iI,QAAQ4iI,gBACvBD,aAAc3iI,QAAQ2iI,gBAe1B,OACIyL,aAdJA,aAAep8F,eAAeo8F,cAC1B/vE,wBACAqwD,wBACAsC,OAAQh/E,eAAe64G,SAAS95B,WAAWC,OAAQhxH,QAAQ7oB,SAAS65I,QACpEm6B,oCACAhpB,cACArM,MAAOi1B,YACPE,SAAUD,eACVziC,oCACAD,8BACAlxH,YACA8nD,oBAIAqiE,sBACA3/C,kNC3GD,IAAMq+C,cAAY+sC,oCAAAC,iB9D7BL,Q8D+BZ7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,WALD67G,oCAAAC,c9D5BF,W8DqCf7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,WAZD67G,oCAAAC,c9D1BJ,S8D0Cb7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC95D,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BlC,MAAOkC,QAGRA,WA1BE61K,oCAAAC,c9DzBJ,S8DwDb7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC95D,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BlC,MAAOkC,QAGRA,WAzCE61K,oCAAAC,c9DxBL,Q8DsEZ7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC95D,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BlC,MAAOkC,QAGRA,WAxDE61K,oCAAAC,c9DvBH,U8DoFd7rL,SACA0V,MACIo6D,UAAW,cACXC,aAAc,WAhED67G,oCAAAC,c9DtBH,U8D2Fd7rL,SACA0V,MACIo6D,UAAW,cACXC,aAAc,WAxED67G,oCAAAC,c9DrBA,a8DiGjB7rL,MAAO,KACP0V,MACIo6D,UAAW,cACXC,aAAc,YA/ED87G,eAoFZC,eAAaF,oCAAAG,kBACrBnuB,OACG59J,OAAQ,KAAM,MACd0V,MACIo6D,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAAC6kF,OACZ,GAAqB,iBAAVA,MAAoB,CAC3B,IAAMz0J,EAAI,SAAJA,IAAI,OAAMy0J,OAEhB,OADAz0J,EAAE+rL,YAAa,EACR/rL,EAEX,OAAOy0J,OACR,SAACi1B,aACA,IAAMhgK,UAAYinD,kBAAmBs4G,cACrC,OAAOt4G,eAAejnD,UAAWggK,kBAhBvBiC,oCAAAG,e9D1FD,Y8D+GjB/rL,OAAQ,KAAM,MACd0V,MACIo6D,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAACg6G,UACZ,GAAwB,iBAAbA,SAAuB,CAC9B,IAAMoC,IAAM,SAANA,MAAM,OAAMpC,UAElB,OADAoC,IAAID,YAAa,EACVC,IAEX,OAAOpC,UACR,SAACD,gBACA,IAAMjgK,UAAYinD,kBAAmBu4G,kBACrC,OAAOv4G,eAAejnD,UAAWigK,qBAnCvBmC,ikCCvGnB,IAiIMG,2BAAsB,SAAtBA,oBAAuBttJ,SAChC,IAAM/tB,MAAQ+tB,QAAQmzF,OAEhBo6D,WAAa1sL,OAAO6O,KAAKswB,QAAQwtJ,aACjC31J,SAAK1jB,OAAAs5K,gCAAOF,YAAPE,gCAAsB5sL,OAAO6O,KAAKw9K,iBACvCQ,kBAAiBv5K,OAAAs5K,gCAAIF,YAAJE,gCAAmB5sL,OAAO6O,KAAKw9K,iBAAgB17K,IAAI,SAAAomB,MAAI,SAAAzjB,OACvEm6F,0BAAiB95C,uBADsD,KAAArgD,OAC5ByjB,QAClD3lB,MAAM+/G,uBAAuB07D,eAAgB,WAAe,QAAAzhH,KAAAj9D,UAAAxH,OAAX0P,OAAW,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXh1D,OAAWg1D,MAAAl9D,UAAAk9D,OA5FxC,SAAlByhH,gBAAmB91J,MAAO3gB,QAC5B,IAAI6O,QAAU,SAAAA,UAAA,OAAM,GACZ8R,MAAMlb,MAAM,SAACixK,OAAQztL,GACzB,OAAQytL,QACR,I/D1DY,O+D2DZ,I/D1De,U+D2Df,I/DtDc,S+DuDV7nK,QAAU0rD,qBAAQ,SAClB,MAEJ,I/D5Da,Q+D6Db,I/D5DY,O+D6DZ,I/D/Da,Q+DgEb,I/DjEY,O+DkEZ,I/DpDc,S+DqDV1rD,QAAU0rD,qBAAQ,UAClB,MACJ,QACI1rD,QAAU,SAAAA,UAAA,OAAM,GAGpB,IAAM2rD,OAASx6D,OAAO/W,GAAG,GACnBwxE,OAASz6D,OAAO/W,GAAG,GAEzB,OAAO4lB,QAAQ2rD,OAAQC,UAqELg8G,CAAgB91J,MAAO3gB,SAjE3B,SAAhB22K,cAAiBh2J,MAAO3gB,QAAR,OAAmB2gB,MAAMlb,MAAM,SAACixK,OAAQztL,GAC1D,IAAMmI,IAAM4O,OAAO/W,GAAG,GACtB,OAAQytL,QACR,I/DrFgB,O+DsFhB,I/DrFmB,U+DsFf,OAAe,OAARtlL,IAEX,I/DvFgB,O+DwFZ,OAAOA,MAAQA,IAAI2gG,UAEvB,QACI,OAAO,MAuDO4kF,CAAch2J,MAAO3gB,SAGhB8oB,QAAQ5I,WAnHN,SAAhB02J,cAAiB9tJ,SAC1B,IAAM4/G,iBAAmB5/G,QAAQ38B,eAAeu8I,iBAChDA,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,iBACnD,IAAMs3I,YAAc5gI,QAAQ8sD,cAAc8zE,YAEpC2sB,WAAavtJ,QAAQwtJ,YAC3B,IAAK,IAAM9rL,OAAO6rL,WAAY,CAC1B,IAAMnsL,MAAQ4+B,QAAQt+B,OACR,OAAVN,OACAw/J,YAAYl/J,MAAQk/J,YAAYl/J,KAAKN,OAG7Cw/J,YAAY/Q,iBACZ7vH,QAAQ+tJ,gBACRnuC,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,gBACnDs2H,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,YAqG3CwkK,CAAc9tJ,SACdA,QAAQ8mE,UAvDc,SAArBknF,mBAAsBhuJ,SAC/B,IAAMgwI,aAAehwI,QAAQqqI,SAASqH,WAAWC,iBAAiBh+B,SAAS39E,OAAO,OAC5Ei4H,YACNje,aAAatoK,QAAQ,SAACwmL,SAClBA,QAAQxmL,QAAQ,SAACq+D,MACbkoH,SAASvkL,KAAKq8D,KAAK7gD,UAAUjH,YAGrC,IAAM2hI,iBAAmB5/G,QAAQmuJ,YAC7BF,SAASzmL,OACT0iF,QAAQixB,IAAI8yE,UAAUngG,KAAK,WAEvB8xD,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,UACnD,IAAM8kK,oBAENpe,aAAatoK,QAAQ,SAACwmL,SAClBA,QAAQxmL,QAAQ,SAACq+D,MACbA,KAAK7gD,UAAUy4E,SAASj2F,QAAQ,SAACk2F,OAC7BwwF,iBAAiB1kL,KAAKk0F,MAAMywF,wBAKvCruJ,QAAQ2sG,QAAS3sG,QAAQ4sG,SAASllI,QAAQ,SAAC4mL,UACxCA,QAAUA,aACF5mL,QAAQ,SAAC0yF,MACbA,KAAK1yF,QAAQ,SAACq+I,UACVqoC,iBAAiB1kL,KAAKq8I,SAASsoC,uBAK3CnkG,QAAQixB,IAAIizE,kBAAkBtgG,KAAK,WAC/B8xD,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,qBAI3Ds2H,iBAAiBtG,QAASrrD,OAAQjuD,QAAS1W,OAAQ,iBAoBnD0kK,CAAmBhuJ,WACpB,IAGMuuJ,uBAAyB,SAAzBA,uBAA0Bt2F,UACnC,IACM2oE,YADS3oE,SAASj4D,QACG8sD,cAAc8zE,YACzC,GAAIA,YAAa,CACb,IAAM7sB,YAAc6sB,YAAYC,iBAAiBz/J,OAEjDotL,EAD0Bv2F,SAASw2F,oBACjB16C,YAAa97C,UAC/B,IAAMiqE,uBAAyBjqE,SAASy2F,wBAClC96F,WAAasuE,uBAAuBtuE,WACpCrD,YAAc2xE,uBAAuB3xE,YAC3CwjD,YAAYlpG,KAAK,SAACk7B,MACd,IAAM4oH,aAAe5oH,KAAK7gD,UAAU+yE,WACpC,IAAK,IAAMv2F,OAAOkyF,WACd+6F,aAAaC,kCAAkCltL,IAAKkyF,WAAWlyF,MAEnE,IAAK,IAAMA,SAAO6uF,YACdo+F,aAAaE,mCAAmCntL,MAAK6uF,YAAY7uF,YAmDpEotL,2BAAsB,SAAtBA,sBAIT,OAHsB,IAAI1I,8BACtB7hJ,UAAW,+wDC9NnB,IAAMwqJ,0BAA2B,SAA3BA,yBAA4Bh7C,YAAa97C,UAAa,IAAA9vF,KAAAmiB,MAClD0kK,UAAY,SAAZA,UAAY/5K,OAAK,OAAIA,MAAMhS,SAAW6D,yBAAUC,SAEhD65J,YADS3oE,SAASj4D,QACG8sD,cAAc8zE,YACnCtpE,SAAUnvF,SAAGgM,OAAHnL,MAAAb,KAAA8mL,iCAAaruB,YAAYsuB,qBAAqB,OACxD33F,SAAUjtE,UAAGnW,OAAHnL,MAAAshB,MAAA2kK,iCAAaruB,YAAYsuB,qBAAqB,OACxDC,OAAS73F,QAAQ36E,MAAM,SAAA1H,OAAK,OAAIA,MAAMhS,SAAW6D,yBAAUE,YAC3DooL,SAAWxuB,YAAY7rI,WAAW7J,eAClCu6H,UAAY2pC,SAAS3pC,UACrBC,UAAY0pC,SAAS1pC,UAC3B3R,YAAYlpG,KAAK,SAACk7B,MACd,IAAM4oH,aAAe5oH,KAAK7gD,UAAU+yE,WACpC,IAAMX,QAAQ36E,MAAMqyK,aAAcz3F,QAAQ56E,MAAMqyK,WAAa,CACzD,IAGI/xC,WAHE7L,YAAcrrE,KAAK7gD,UAAUg4H,gBAAgB,GAC7CmyC,cAAgBj+C,YAAY7qH,OAAO,SAAA9lB,GAAC,OAA+C,IAA3CilJ,UAAU/5H,UAAU,SAAA7G,GAAC,OAAIA,EAAEwqK,OAAO7uL,OAC1E8uL,cAAgBn+C,YAAY7qH,OAAO,SAAA9lB,GAAC,OAA+C,IAA3CglJ,UAAU95H,UAAU,SAAA7G,GAAC,OAAIA,EAAEwqK,OAAO7uL,OAG5Ew8I,WADAkyC,OACaE,cAAc79K,IAAI,SAAA/Q,GAAC,SAAA0T,OAAO1T,KAE1B8uL,cAAc/9K,IAAI,SAAA/Q,GAAC,SAAA0T,OAAO1T,KAG3CkuL,aAAaa,cAAc,IAAKvyC,YAAY,OAKlDwyC,gCACF77F,YACImuE,IAAK,SAAA/6I,EAACg7I,mBAAoBhiI,SACtB,IAAM0vJ,uBAAyB1tB,mBAAmBllB,aAC5CyW,YAAcvzH,QAAQ+8G,cAC5B,OAAO2yC,wBAAyBn8B,cAAgBm8B,yBAGxDn/F,aACIgM,QAAS,SAAAA,QAACylE,mBAAoBhiI,SAC1B,IAAM2vJ,gBAAkB3tB,mBAAmBnlB,WACrColB,kBAAoBD,mBAAmBllB,aACvC2B,OAASz+G,QAAQ5D,KACjBm3H,YAAcvzH,QAAQ+8G,cAC5B,OAAIklB,oBACOA,oBAAsB1O,aAAqB9U,SAAWkxC,oBCpD9DC,oCD0EX,SAAAA,gBAAwB,IAAAlnF,iBAAA/+F,mKAAAkmL,CAAA3nL,KAAA0nL,eAAA,QAAA3jH,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MAAA,OACpBviE,MAAAmmL,yCAAA5nL,MAAAwgG,iBAAAqnF,8BAAAH,gBAAAtvL,KAAA0I,MAAA0/F,kBAAAxgG,MAAAiM,OAAS+C,WACJu3K,mBAAqB9kL,MAAKmV,YAAYiwK,2BAC3CplL,MAAKu4J,uBAAuBv4J,MAAKmV,YAAY2wK,iCAHzB9lL,6YADegoF,8UAgBnC,OAAI3iF,UAAOxH,QACPU,KAAKumL,oBAAqBz/K,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,KAAa9G,KAAK4W,YAAYiwK,2BACjD7mL,MAEJA,KAAKumL,2FAGmB,IAAA/wK,OAAAxV,KAC/B,GAAI8G,UAAOxH,OAAQ,CACfU,KAAKwmL,wBAA0B18G,eAAeA,kBAC1C9pE,KAAK4W,YAAY2wK,kCAAkCzgL,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,SACvD,IAAMgxB,QAAU93B,KAAK83B,QAKrB,OAJAuuJ,uBAAuBrmL,MACvB83B,QAAQ8gI,WAAWzyD,2BAA2Bz5C,aAAYG,gBAAiB,WACvEw5H,uBAAuB7wK,UAEpBxV,KAEX,OAAOA,KAAKwmL,oFA8CGj6F,UAAW/sE,SAC1B,IAAMw0H,YAAcr7I,OAAOmgB,OAAO0G,SAC5B7Q,SAAWqlI,YAAYrlI,SACvBrO,KAAON,KAAK83B,QAAQ8sD,cAAc8zE,YAAY6Y,iBAC9C/0J,aAAelc,KAAKmc,kBACpBZ,MAAQkvD,yCAA4BzqE,KAAMqO,UAC1Cm5K,kBAAoB9nL,KAAK+pF,SAASC,YAAYuC,WAEpD,GAAIu7F,kBAAmB,CACnB,IACMC,aADSp9J,eAAehc,UAAYhW,OAAO6O,KAAKmH,UAAaA,SAAWA,SAAS,OAC5D0P,OAAO,SAAAtR,OAAK,OAAIA,SAASyP,eAC9CuwE,QAAU+6F,kBAAkBlxK,YAAYm2E,UACxCtrE,YACFjC,QAASw0H,YACT5yH,OAAQmrE,UACR59E,SAAUkN,MACV6D,SAAU1f,KAAK83B,QAAQgzF,QACvBpjG,gBAAiBqlE,QACjBwoD,4BAA6BwyC,YAAYtzK,MAAM,SAAA1H,OAAK,OAAIyP,aAAazP,OAAO8P,IAAI9hB,OAC5E6D,yBAAUC,WAElByB,KAAK4sF,UAAUrxE,MAAO4F,YAAY,GAEtC,OAAOzhB,qEAGUqoF,aACjB,IAAK,IAAM7uF,OAAO6uF,YACdroF,KAAK4pF,uBAAuBvB,YAAY7uF,KAAKssF,cAAgBuC,YAAY7uF,KAE7E,OAAOwG,mFAtGP,OAAO6mL,gHAIP,OAAOU,oDEvFFS,mBACTC,KACI9sI,SACA2pF,SACArvC,UACAgjE,WAEJhtF,OACIgtF,UACAt9G,SACA2pF,SACArvC,olDCqBayyF,4CAUjB,SAAAA,OAAaC,oBAAoB,IAAA1mL,2JAAA2mL,CAAApoL,KAAAkoL,SAC7BzmL,wKAAA4mL,CAAAroL,KAAAsoL,sBAAAJ,QAAA9vL,KAAA4H,QAEKslL,YAAc3sL,OAAOmgB,UAAW3Q,YAAS4vI,cAC9Ct2I,MAAKwiJ,aACLxiJ,MAAKimJ,gBACLjmJ,MAAKokL,gBACLpkL,MAAKoqH,OAAS,KACdpqH,MAAK0sI,iBAAmB,KACxB1sI,MAAKysI,iBAAmB,IAAIlsD,QAAQ,SAAC57D,SACjC3kB,MAAK0sI,iBAAmB/nH,UAE5B3kB,MAAKimJ,aAAaya,OAAS,IAAIyE,kBAC/BnlK,MAAKwpH,OAAS,IAAIpjD,mBAAMmgH,mBAExBvmL,MAAKm3J,WAAa,IAAI/wF,6LAAJ0gH,IACb77H,aAAYG,gBAAiB,IAIlC,IAAM6a,UAAY0+B,0BAAiB95C,uBAC1BviD,MArBoBy+K,qBAqBXngH,wBAAWogH,0DAAAhnL,QAAM0G,YAAS1G,MAAKwpH,OAAOpvG,OACpD6rD,sBAtByB,aAwB7BW,wBAAWogH,0DAAAhnL,QAAMs2I,aAAchuI,OAC3B29D,sBAEJW,wBAAWogH,0DAAAhnL,QAAMujL,cAAej7K,OAC5B29D,sBAGJjmE,MAAKtG,aAAaxC,OAAOmgB,UAAWqvK,mBAAoB1mL,MAAK4vG,gBAC7D5vG,MAAKsuF,SAAS,IAAI23F,gBAAJe,0DAAAhnL,SACVuoF,YAAaoE,4BACbnE,SAAU2E,gBACVzD,2BACD9C,6BAAaqB,0CAChBjoF,MAAKqpH,MAAL,UAAA7+G,OAAqBR,gBACrBhK,MAAKmsJ,MAAM,OACXnsJ,MAAKshL,SAAS,OACdthL,MAAKw4J,WACLx4J,MAAKkuC,UACLluC,MAAKu6F,UACLv6F,MAAKq0B,SACLsvJ,2BAAoBqD,0DAAAhnL,SAEpBA,MAAKinL,eAAiB9B,6BA9COnlL,sXAVD2pK,8SAoE5B,OAAItkK,UAAOxH,OACAU,KAEJA,KAAK4kF,cAAcu9E,yDAoB1B,OAAIr7J,UAAOxH,OACAU,KAEJA,KAAK0nJ,iDAIZ,OAAO1nJ,KAAKkuI,uDAkBZ,GAAIpnI,UAAOxH,OAAQ,CACf,IAAMo5J,YAAc14J,KAAK4kF,cAAc8zE,YAGvC,OAFA14J,KAAK6rH,OAAL/kH,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACA4xJ,aAAeA,YAAY5tC,MAAM9qH,KAAK8qH,SAC/B9qH,KAEX,OAAOA,KAAK6rH,mDA4CZ,OAAI/kH,UAASxH,QACTU,KAAKg4I,UAALlxI,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAEJA,KAAKg4I,sDASK,QAAAj0E,KAAAj9D,UAAAxH,OAAR0P,OAAQ,IAAA/E,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARh1D,OAAQg1D,MAAAl9D,UAAAk9D,MACjB,GAAIh1D,OAAO1P,OAAQ,CACf,IAAM+5I,WAAa1gJ,OAAOmgB,UAAW9J,OAAO,GAAGqqI,YACzCmQ,qBAAuB7wJ,OAAOmgB,UAAW9J,OAAO,GAAGw6I,sBAEzDxpJ,KAAKikJ,WAAc5K,sBAAYmQ,2CAC/B,IAAMm/B,iBJ1MQ,SAAbC,WAAc9wJ,SAGvB,OAAQ,IAFIA,QAAQmsH,UAAU5K,WAEd+P,YAAYtxH,QAAQmsH,UAAWtrJ,OAAOmgB,QAClDkxG,UAAWlyF,QAAQ8gI,YACpB9gI,QAAQ38B,kBIqMsBytL,CAAW5oL,MAKpC,OAHAA,KAAK0nJ,aAAagR,YAAciwB,iBAAiB,GJD7B,SAAnBE,iBAAoB/wJ,SAAY,IAAAgxJ,uBAAAC,4BACP3/B,aAAY/9B,WADL,GAClCD,YADkC09D,uBAAA,GACrBE,WADqBF,uBAAA,GAEnC/+K,MAAQ+tB,QAAQmzF,OACtBlhH,MAAMqmB,OAAO,YAAag7F,aAC1BrhH,MAAMqmB,OAAO,cAAe44J,YIFpBH,CAAiB7oL,MACjBA,KAAK4kF,cAAc8zE,YAAY5tC,MAAM9qH,KAAK8qH,SAAS/gH,MAAM/J,KAAKirH,QACvDjrH,KAEX,OAAOA,KAAKikJ,8DAOZ,OAAIn9I,UAAMxH,QACNU,KAAKqxG,cAALvqG,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GACO9G,MAGJA,KAAKqxG,0DAUL7qB,YACP,IAAMkxD,iBAAmB13I,KAAK7E,eAAeu8I,iBAC7C,OAAIlxD,YACAkxD,iBAAiBuxC,SAASziG,YACnBxmF,MAEJ03I,yDAUP,OAAI5wI,UAAOxH,OACAU,KAEJA,KAAK4kF,cAAcq1E,yCAmBxBhyI,WAEF,OADyBjoB,KAAK7E,eAAeu8I,iBACrBtxD,SAASn+D,mDASjC,IAAMiH,MAAQlvB,KAAKkvB,QAEbwoH,iBAAmB13I,KAAK7E,eAAeu8I,iBAEvCwxC,cAAgB3G,8BAAiBviL,KAAMkvB,OAC7CwoH,iBAAiBtG,QAASrrD,OAAQ/lF,KAAMohB,OAAQ,eN3R3B,SAAhB+nK,cAAiBhnB,OAAQ+mB,eAAkB,IAC5C7vC,WAA0C6vC,cAA1C7vC,WAAY6sB,aAA8BgjB,cAA9BhjB,aAAcxsE,YAAgBwvF,cAAhBxvF,YAE9Bz/E,KAIAo/H,WAJAp/H,KACAjB,QAGAqgI,WAHArgI,QACA2D,OAEA08H,WAFA18H,OACAgsI,eACAtP,WADAsP,eAGAjC,QAIAiC,eAJAjC,QACAC,SAGAgC,eAHAhC,SACAX,WAEA2C,eAFA3C,WACAC,YACA0C,eADA1C,YAEAhsI,MAAQjB,SACRmpJ,OAAOzoE,YAAYA,aACFzqF,OAAOi3J,cACPz6B,UACG3tG,KAAM4oH,QAAS1tI,QAAQ,GAAI2tI,UAC3B74F,QAAS7zC,KAAK,GAAI0C,OAAQ1C,KAAK,IAC/B8yC,QAASi5F,WAAYhtI,QAAQ,GAAIitI,eAEpCmjC,gBMuQjBD,CAAcnpL,KAAKmiK,SAAU+mB,eAE7BlpL,KAAK0oL,eAAepwF,WAChBphE,OAAQgyJ,cAAcxvF,YAAYkqF,aAClC3sJ,MAAOiyJ,cAAcxvF,YAAYmqF,cAGrC7jL,KAAK0oL,eAAexW,SAAShjJ,ONnKT,SAAfm6J,aAAgBC,cAAeC,KAAML,eAAkB,IAGxD7vC,WAA0C6vC,cAA1C7vC,WAAY6sB,aAA8BgjB,cAA9BhjB,aAAcxsE,YAAgBwvF,cAAhBxvF,YAC5B7gD,QAAWA,ODnIC,UCqId2wI,aAAe,KACnB,GAAInwC,WAAW7gI,SAAW6gI,WAAW7gI,QAAQixK,UAAW,CACpD,IAAM77B,MAAQvU,WAAW7gI,QAAQixK,UAC7B5G,YAAc3c,aAAatY,MAC/Bi1B,YAAclqL,OAAOmgB,UAAW+pK,YAAlB6G,2BAAiCvzF,YAAa+vE,aAAa/vE,aAClEt9C,QACHijI,UAAS,GAAA7vK,OAAK2uJ,iBAAiB,GAAtB,KAAA3uJ,OAA4B6uJ,oBAAoB,IACzDmhB,UAAWqG,kBACXjmJ,UAAW+lJ,aAAa/lJ,aAExBmtJ,aADAF,cAAcxM,aAAahmB,OACZwyB,cACExM,aAAahmB,OACbkrB,eAAgBxpL,KAAMs+J,MAAOqb,UAAWvkB,MAAO3+I,OAAQ4zK,cAEzD,IAAIlD,iCAAkBnnL,KAAMs+J,MAAOqb,UAAWvkB,MAAO3+I,OAAQ4zK,cAKpF,IAAI8G,gBAAkB,KACtB,GAAItwC,WAAW7gI,SAAW6gI,WAAW7gI,QAAQoxK,aAAc,CACvD,IAAM7G,SAAW1pC,WAAW7gI,QAAQoxK,aAChC9G,eAAiB5c,aAAa6c,SAElCD,eAAiBnqL,OAAOmgB,UAAWgqK,eAAlB4G,2BAAoCvzF,YAAa+vE,aAAa/vE,aACxEt9C,QACHijI,UAAS,GAAA7vK,OAAK2uJ,iBAAiB,GAAtB,KAAA3uJ,OAA4B6uJ,oBAAoB,IACzDmhB,UAAWqG,kBACXjmJ,UAAWgmJ,iBAAiBhmJ,aAE5BstJ,gBADAL,cAAcxM,a7DzJD,Y6D0JKwM,cACGxM,a7D3JR,Y6D4JQkF,eAAgBxpL,K7D5JxB,W6D4JyC25K,UAAW4Q,SAAU9zK,OAAQ6zK,iBAEjE,IAAInD,iCAAkBnnL,K7D9J3B,W6D8J4C25K,UAAW4Q,SAAU9zK,OAAQ6zK,iBAK9F,IAAI+G,mBAAqB,KACzB,GAAIxwC,WAAWw3B,SAAWx3B,WAAWw3B,QAAQvxK,OAAQ,CACjD,IAAMqxK,aAAe+Y,6BAAKxjB,aAAajM,OAAWphH,QAAQ6gD,0BAGtDmwF,mBADAP,cAAcxM,a7DzKJ,U6D0KWwM,cACAxM,a7D3KX,U6D4KWkF,eACGxpL,K7D7Kd,S6D8Kc25K,UAAW94B,WAAWw3B,QACtB5hK,OAAQ0hK,eAEX,IAAIuP,iCACrB1nL,K7DlLM,S6DmLN25K,UAAW94B,WAAWw3B,QACtB5hK,OAAQ0hK,eAMpB,IAAImZ,YAAc,KAGdA,YADAR,cAAcxM,aDrMF,QCsMEwM,cACOxM,aDvMT,QCwMSkF,eACGxpL,KDzMZ,OC0MY25K,UAAWoX,KACXt6K,OAAQy6K,6BAAK7wI,QACTs9C,YAAa+vE,aAAa/vE,YAC1BpwE,YAAcmR,OAAQ,EAAGD,MAAO,OAG9C,IAAIwqJ,8BACdjpL,KDjNQ,OCkNR25K,UAAWoX,KACXt6K,OAAQy6K,6BAAK7wI,QACTs9C,YAAa+vE,aAAa/vE,YAC1BpwE,YAAcmR,OAAQ,EAAGD,MAAO,OAI5CqyJ,cAAcS,oBACVP,aACAG,gBACAE,mBACAC,cACDjL,UMyECwK,CAAarpL,KAAK0oL,eAAgB1oL,KAAKmiK,SAAU+mB,eJjSrB,SAAvBc,qBAAwBlyJ,SACjC,IAAMwxJ,cAAgBxxJ,QAAQ4wJ,eACxBznF,SAAWqoF,cAAcxM,aAAa,QAAQmN,cAC9Cp+C,YAAc/zG,QAAQ8sD,cAAc8zE,YAAYC,iBAAiBz/J,MACjEk8B,gBAAkBktD,6BAAa,IAAAr2E,OAAKq9K,cAAcY,kBAAmBl+J,OAC3E6/G,YAAYlpG,KAAK,SAACk7B,MACdA,KAAK7gD,UAAUk8H,oBACXv7C,GAAIvoE,gBACJrP,WAAYk7E,aI2RhB+oF,CAAqBhqL,MJ1HU,SAA1BmqL,wBAA2BryJ,SACpC,IAAI0yE,SAAW,EAETi6B,MAAQ3sG,QAAQ2sG,aAEtB,WACI,IAAK,IAAIxsI,EAAI,EAAGA,EAAIwsI,MAAMnlI,OAAQrH,IAC9B,IAAK,IAAIqiB,EAAI,EAAGA,EAAImqH,MAAMxsI,GAAGqH,OAAQgb,IACjC,GAAmD,IAA/CmqH,MAAMxsI,GAAGqiB,GAAG6wF,eAAeZ,OAAOC,SAElC,YADAA,SAAWi6B,MAAMxsI,GAAGqiB,GAAG6wF,eAAeZ,OAAOC,UAJ7D,GAWIA,UACAi6B,MAAMjlI,QAAQ,SAAC0yF,MACXA,KAAK1yF,QAAQ,SAAC2tD,MACVA,KAAKg+C,cAAeZ,QAAUC,qBAC9Br9C,KAAKs9C,WAAWt9C,KAAKglD,qBIyG7Bg4E,CAAwBnqL,4CAmBxB,OAAOA,KAAK4kF,cAAc8zE,YAAY0xB,QAAQ,2CAkB9C,OAAOpqL,KAAK4kF,cAAc8zE,YAAY0xB,QAAQ,6DAkB9C,OADoBpqL,KAAK4kF,cAAc8zE,YACpB0xB,QnEtTJ,iDmE0Tf,GAAItjL,UAAOxH,OAAQ,CACf,IAAIpG,MAAK4N,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GAKT,MAJyB,iBAArBA,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,MACA5N,MAAQopF,6BAAax7E,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,IAAYklB,QAErChsB,KAAKu9F,OAASrkG,MACP8G,KAEX,OAAOA,KAAKu9F,2DA1NK8sF,gBAAiBC,SAAUnC,oBAC5C,IAAMn9E,SAAW,IAAIk9E,OAAOC,oBAE5B,IAAK,IAAM3uL,OAAO6wL,gBACdr/E,SAASxxG,KAAK6wL,gBAAgB7wL,MAIlC,OADAwxG,SAAS/E,SAASqkF,UACXt/E,yDAWP,MAAO,uBCpLFu/E,YACTnhC,yBACA7R,mCAESizC,eACTrhC,2BACAtkD,cCTW,WACX,IAAMk4B,IAAMgB,eACN0sD,QACF/3K,IAAK,SAAAA,IAAClZ,IAAKqjB,KAEP,OADAkgH,IAAIvjI,KAAOqjB,IACJ4tK,QAEX3xL,IAAK,SAAAA,MAAA,OAAMikI,MAEf,OAAO0tD,wjBCuBX,IAAMC,eACAC,gBAAkBJ,WAElBK,4BAA8B,SAA9BA,4BAA+BC,iBAAkB5kF,UACnD,IAAK,IAAMv2E,QAAQm7J,iBACf5kF,SAASvzF,IAAIgd,KAAMm7J,iBAAiBn7J,QA+BtCo7J,UAAO,SAAPA,OAAa,IAAAC,aAAAC,mBAEY3iH,2BAAelgE,aAF3B,GAER8iL,IAFQF,aAAA,GAEHG,YAFGH,aAAA,GAGT1xC,WAAa1gJ,OAAOmgB,UAAWyxK,YAC/BY,wBAA0BxyL,OAAOmgB,OAAO0xK,eACxChhC,wBAEN,IAAK,IAAM95H,QAAQy7J,wBACf3hC,qBAAqB95H,MAAQy7J,wBAAwBz7J,QAgEzD,OA5DAu7J,IAAIxyB,OAAS,WAET,IAAM2yB,SAAWF,YAAYpjH,YACvB2wF,OAASyvB,cAAOmD,aAAaD,UAC/B/xC,sBACAmQ,2CACDyhC,IAAI9C,sBAKP,O5VixByB,SAA3BmD,yBAA4BC,iBAAkBC,oBAAqBC,kBACrEA,iBAAiBjsL,QAAQ,SAAA2L,MAAI,OAAIogL,iBAAiBrjH,GAAG/8D,KAAM,SAAAkW,OAAA,IAAIooD,OAAJiiH,eAAArqK,MAAA,aAAgBmqK,oBAAoBrgL,MAAMs+D,Y4VpxBjG6hH,CAAyBJ,YAAazyB,OAAQ9/J,OAAO6O,KAAK4jL,WAEnD3yB,QAIXwyB,IAAI9C,mBAAqB,WAIrB,OAHKuC,YAAYh1J,aACbg1J,YAAYh1J,WAAa,IAAIi2J,4BAAW,EAAG,UAG3Cj2J,WAAYg1J,YAAYh1J,WACxBgiH,iBAAkB,IAAI1yD,oBAM9BimG,IAAIG,SAAW,kBAAMF,YAAYpjH,aAEjCmjH,IAAIhlF,SAAW,WAAyB,QAAAliC,KAAAj9D,UAAAxH,OAArBurL,iBAAqB,IAAA5gL,MAAA85D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAArB6mH,iBAAqB7mH,MAAAl9D,UAAAk9D,MAEpC,GAAI6mH,iBAAiBvrL,OAAQ,CACzB,IAAK,IAAMowB,SAAQm7J,iBACXn7J,SAAQi7J,kBACRtxC,WAAW3pH,OAAQm7J,iBAAiBn7J,QAG5C,OAAOu7J,IAEX,OAAO5xC,YAGX4xC,IAAI9hC,aAAe,WACf,IAAMA,aAAeK,qBAAqBL,aAC1C,OAAIriJ,UAAiBxH,QACjBsrL,4BAA2B9jL,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GAAsBqiJ,cAC1C8hC,KAEJ9hC,aAAarwJ,OAGxBmyL,IAAIpmF,cAAgB,WAChB,IAAMA,cAAgB2kD,qBAAqB3kD,cAC3C,OAAI/9F,UAAiBxH,QACjBsrL,4BAA2B9jL,UAAAxH,QAAA,OAAAk0B,EAAA1sB,UAAA,GAAsB+9F,eAC1ComF,KAEJpmF,cAAc/rG,OAGlBmyL,KAGLW,aACFvjG,yCACAwjG,WACIt2F,wCACAM,kDACAV,4BAIF22F,YACF19F,+CACAy9F,WACI/7F,0CACA6B,mDACAb,+CAIRg6F,UAAK/sL,UAAYA,oBACjB+sL,UAAKrwL,QAAUwvB,aAAIxvB,QACnBqwL,UAAKc,YAAcA,YACnBd,UAAKhyB,YAAcA,YACnBgyB,UAAKnuD,aAAeA,kBACpBmuD,UAAKzhK,UAAY0iK,0BACjBjB,UAAKgB,WAAaA,WAClBhB,UAAKkB,OACDtoG,6CACAG,iCACArB,wBACAF,2CACAtgF,mDACAhE,Q5VgxCY,SAAVA,QAAWiuL,WAAYC,eAAb,OACZz+C,WAAY,SAAAA,WAAC1jI,OACT,IAAMoiL,aAAepiL,MAAMkiL,YACrBv+C,OAASw+C,cAAc3xK,MAAM,EAAG2xK,cAAc5sL,OAAS,GACvD4d,GAAKgvK,cAAcA,cAAc5sL,OAAS,GAE1C8sL,KAAO1+C,OAAOpkI,IAAI,SAAAgC,KAAG,OAAI6gL,aAAa7gL,OAC5C,OACI4R,GAAIA,GAAEpc,WAAF,EAAA6jE,mBAAMynH,OACV1+C,mB4VtxCGo9C","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    DISCRETE: 'discrete'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from '../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    constructor(partialFeild, rowDiff) {\n        this._ref = partialFeild;\n        this._rowDiff = rowDiff;\n    }\n\n    sanitize () {\n        return this._ref.sanitize();\n    }\n\n    parsed (val) {\n        return this._ref.parsed(val);\n    }\n\n    domain() {\n        let data = [];\n        let domain = null;\n        data = this.getData();\n        if (this._ref.fieldType === 'dimension' && this._ref.subType() !== DimensionSubtype.TEMPORAL) {\n            domain = [...new Set(data)];\n        } else {\n            let minD = Math.min.apply(null, data);\n            let maxD = Math.max.apply(null, data);\n            domain = [minD, maxD];\n        }\n\n        return domain;\n    }\n\n    parse (val) {\n        return this._ref.parse(val);\n    }\n\n\n    clone(datas) {\n        return this._ref.clone(datas);\n    }\n\n    fieldName() {\n        return this._ref.fieldName();\n    }\n\n    type() {\n        return this._ref.type();\n    }\n\n    description() {\n        return this._ref.description();\n    }\n\n    get name() {\n        return this._ref.name;\n    }\n\n    // set name(name) {\n    //     this._ref.name = name;\n    // }\n\n    get schema() {\n        return this._ref.schema;\n    }\n\n    // set schema(schema) {\n    //     this._ref.schema = schema;\n    // }\n\n    get data() {\n        return this._ref.data;\n    }\n\n    // set data(schema) {\n    //     throw new Error('Not yet implemented!');\n    // }\n\n    subType() {\n        return this._ref.subType();\n    }\n\n    getMinDiff () {\n        return this._ref.getMinDiff();\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this._ref.unit();\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this._ref.scale();\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this._ref.defAggFn();\n    }\n\n    getData() {\n        let data = [];\n        rowDiffsetIterator(this._rowDiff, (i) => {\n            data.push(this._ref.data[i]);\n        });\n        return data;\n    }\n\n    bins() {\n        return this._ref.bins();\n    }\n}\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultNumberParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\nexport const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function formatNumber(val) {\n    return val;\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n            fieldsObj () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    retObj[field.name] = field;\n                });\n                return retObj;\n            },\n            getMeasure () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.MEASURE) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n            getDimension () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema.type === FieldType.DIMENSION) {\n                        retObj[field.name] = field;\n                    }\n                });\n                return retObj;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/* eslint-disable default-case */\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * iterate the children and call the callback for each\n *\n * @param {DataModel} datamodel\n * @param {function} callback\n * @param {DM_DERIVATIVES} operation\n */\nfunction childIterator (datamodel, callback, operation) {\n    const children = datamodel._children;\n    children.forEach((child) => {\n        if (child._derivation\n            && child._derivation.length === 1) {\n            switch (operation) {\n            case DM_DERIVATIVES.SELECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.SELECT) {\n                    callback(child, child._derivation[0].criteria);\n                }\n                break;\n            case DM_DERIVATIVES.PROJECT:\n                if (child._derivation[0].op === DM_DERIVATIVES.PROJECT) {\n                    callback(child, child._derivation[0].meta.actualProjField);\n                }\n                break;\n            case DM_DERIVATIVES.GROUPBY:\n                if (child._derivation[0].op === DM_DERIVATIVES.GROUPBY) {\n                    callback(child,\n                        { groupByString: child._derivation[0].meta.groupByString,\n                            reducer: child._derivation[0].criteria });\n                }\n                break;\n            case DM_DERIVATIVES.CAL_VAR:\n                if (child._derivation[0].op === DM_DERIVATIVES.CAL_VAR) {\n                    let params = [child._derivation[0].meta.config, [child._derivation[0].meta.fields,\n                        child._derivation[0].criteria]];\n                    callback(child, ...params);\n                }\n                break;\n            }\n        }\n    });\n}\n\n/**\n * Invokes a callback for every child created by a selection operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each child. The parameters\n * provided to the callback are the child DataModel instance and the selection\n * function used to create it.\n */\nexport function selectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.SELECT);\n}\n\n/**\n * Invokes a callback for every measure child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each measure child. The parameters\n * provided to the callback are the child DataModel instance and the child params.\n */\nexport function calculatedVariableIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.CAL_VAR);\n}\n\n/**\n * Invokes a callback for every projected child of a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked on each projected child. The parameters\n * provided to the callback are the child DataModel instance and the\n * projection string.\n */\nexport function projectIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.PROJECT);\n}\n\n/**\n * Invokes a callback over the children created by a groupBy\n * operation on a DataModel.\n *\n * @param {DataModel} datamodel - The input DataModel instance.\n * @param {Function} callback - The callback to be invoked. The parameters\n * provided to the callback are the child DataModel instance and the groupBy string used to create it.\n */\nexport function groupByIterator (datamodel, callback) {\n    childIterator(datamodel, callback, DM_DERIVATIVES.GROUPBY);\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema.name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema.name) !== -1) {\n            retArr.push(field.schema.name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema);\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.data[i]);\n                userArg[dm1FieldStoreName][field.name] = field.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema.name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name] = field.data[ii];\n            });\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            }\n            else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { FieldType, DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case FieldType.MEASURE:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema);\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * Reducer function that takes care about the sum aggregation\n * @param  {Array} arr array of values\n * @return {number}     sum of the array\n */\nfunction sum (arr) {\n    let allNulls = true;\n    const isNestedArray = arr[0] instanceof Array;\n    const sumVal = arr.reduce((carry, a) => {\n        if (isNestedArray) {\n            return carry.map((x, i) => x + a[i]);\n        }\n        allNulls = allNulls && (a === null);\n        return carry + a;\n    }, isNestedArray ? Array(...Array(arr[0].length)).map(() => 0) : 0);\n    return allNulls ? null : sumVal;\n}\n\n/**\n * reducer function that takes care about the mean aggregation\n * @param  {Array} arr array of values\n * @return {number}     mean of the array\n */\nfunction avg (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length || 1;\n    const arrSum = sum(arr);\n    if (isNestedArray) {\n        return arrSum.map(x => x / len);\n    }\n    return arrSum === null ? null : arrSum / len;\n}\n\n/**\n * reducer function that gives the min value\n * @param  {Array} arr array of values\n * @return {number}     min of the array\n */\nfunction min (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.min(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.min(...arr);\n}\n\n/**\n * reducer function that gives the max value\n * @param  {Array} arr array of values\n * @return {number}     max of the array\n */\nfunction max (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.max(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => -Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.max(...arr);\n}\n\n/**\n * reducer function that gives the first value\n * @param  {Array} arr array of values\n * @return {number}     first value of the array\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * reducer function that gives the last value\n * @param  {Array} arr array of values\n * @return {number}     last value of the array\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * reducer function that gives the count value\n * @param  {Array} arr array of values\n * @return {number}     count of the array\n */\nfunction count (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length;\n    if (isNestedArray) {\n        return Array(...Array(arr[0].length)).map(() => len);\n    }\n    return len;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     *\n     * @param {string} [reducer='sum'] name of the default reducer. It picks up the definition from store by doing name\n     *      lookup. If no name is found then it takes `sum` as the default reducer.\n     *\n     * @return {ReducerStore} instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (params.length) {\n            let reducer = params[0];\n            if (typeof reducer === 'function') {\n                this.store.set('defReducer', reducer);\n            } else if (typeof reducer === 'string') {\n                if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                    this.store.set('defReducer', fnList[reducer]);\n                }\n            }\n            return this;\n        }\n\n        return this.store.get('defReducer');\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof name === 'string' && typeof reducer === 'function') {\n            this.store.set(name, reducer);\n        }\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema));\n        schemaNameArr.push(field.schema.name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { extend2 } from '../utils';\n\n /**\n  * The base class for every field type.\n  * It provides some common functionalities.\n  */\nclass PartialField {\n\n    /**\n     * Sets basic setups to each Field instance.\n     *\n     * @param {string} name - The name or identifier of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema of the data type.\n     */\n    constructor(name, data, schema) {\n        this.name = name;\n        this.data = data || [];\n        this.schema = schema;\n        this.fieldDescription = schema.description;\n        this.fieldType = schema.type;\n        this.sanitize();\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @return {PartialField} - Returns the instance of the current context for chaining.\n     */\n    sanitize () {\n        this.data = this.data.map(d => this.parsed(this.parse(d)));\n        return this;\n    }\n\n    /**\n     * The post parsing hook for field instance.\n     *\n     * @param {*} val - The value to be parsed.\n     * @return {*} Returns the parsed value.\n     */\n    parsed (val) {\n        return val;\n    }\n\n    /**\n     * Generates and returns the domain for the field.\n     *\n     * @abstract\n     */\n    domain() {\n        throw new Error('Not yet implemented!');\n    }\n\n    subType() {\n        return null;\n    }\n\n\n    /**\n     * Parse the input value before using.\n     *\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented!');\n    }\n\n    /**\n     * Creates brand new copy of current field instance. To avoid optimization issue\n     * pass the required data otherwise current data would be copied which might\n     * be expensive.\n     *\n     * @param {Array} data - The input data, if provided current data will not be cloned.\n     * @return {PartialField} Returns the cloned field instance.\n     */\n    clone(data) {\n        data = data || extend2([], this.data);\n        const schema = extend2({}, this.schema);\n        // Here call the constructor to create an instance of\n        // the current field class type e.g. Measure, Dimension etc.\n        return new this.constructor(this.name, data, schema);\n    }\n\n    /**\n     * @return {string} Name of the field\n     */\n    fieldName() {\n        return this.name;\n    }\n\n     /**\n     * @return {string} Type of the field\n     */\n    type() {\n        return this.fieldType;\n    }\n\n    /**\n     * @return {description} Name of the field\n     */\n    description() {\n        return this.fieldDescription;\n    }\n}\n\nexport default PartialField;\n","import PartialField from './partial-field';\nimport { generateMeasureDomain, formatNumber } from '../utils';\nimport { defaultReducerName } from '../operator/group-by-function';\n\n/**\n * Represents measure field type.\n *\n * @extends PartialField\n */\nclass Measure extends PartialField {\n\n    /**\n     * Creates new Measure field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.fieldUnit = schema.unit;\n        this.fieldScale = schema.scale;\n        this.fieldDefAggFn = schema.defAggFn || defaultReducerName;\n        this.fieldNumberformat = schema.numberFormat instanceof Function ? schema.numberFormat : formatNumber;\n    }\n\n    /**\n     * Returns the domain for the measure field.\n     *\n     * @override\n     * @return {Array} Returns min and max values from measure values.\n     */\n    domain() {\n        return generateMeasureDomain(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. NaN value.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {number | null} Returns the parsed number value of content of cell or null.\n     */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n\n    /**\n     * Getter for unit value of the field.\n     *\n     * @return {string} Returns unit of the field.\n     */\n    unit() {\n        return this.fieldUnit;\n    }\n\n    /**\n     * Getter for scale value of the field.\n     *\n     * @return {string} Returns scale of the field.\n     */\n    scale() {\n        return this.fieldScale;\n    }\n\n    /**\n     * Getter for number format value of the field.\n     *\n     * @return {string} Returns number format of the field.\n     */\n    numberFormat() {\n        const formatter = this.fieldNumberformat;\n        return val => formatter(val);\n    }\n\n    /**\n     * Getter for aggregation function of the field.\n     *\n     * @return {Function} Returns aggregation function of the field.\n     */\n    defAggFn() {\n        return this.fieldDefAggFn;\n    }\n}\n\nexport default Measure;\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","import PartialField from './partial-field';\nimport { uniqueValues } from '../utils';\n\n/**\n * Represents dimension field type.\n *\n * @extends PartialField\n */\nclass Dimension extends PartialField {\n\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @return {Array} Returns the unique values from dimension values.\n     */\n    domain() {\n        return uniqueValues(this.data);\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    /**\n     * Saves the cardinality of the dimensional values after parsing the data.\n     *\n     * @param {string} val - The parsed value.\n     * @return {string} Returns the input val.\n     */\n    parsed (val) {\n        this._unique = this._unique || {};\n        const unique = this._unique;\n        if (val in unique) {\n            unique[val]++;\n        } else {\n            unique[val] = 1;\n        }\n        return val;\n    }\n}\n\nexport default Dimension;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Dimension\n */\nclass Categorical extends Dimension {\n\n    /**\n     * Creates new Categorical field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default Categorical;\n","import { DimensionSubtype } from '../enums';\nimport Dimension from './dimension';\nimport { DateTimeFormatter, getMinDiff } from '../utils';\n\n\n/**\n * Represents datetime field subtype.\n *\n * @extends Dimension\n */\nclass DateTime extends Dimension {\n\n    /**\n     * Creates new DateTime field instance.\n     *\n     * @param {string} name - The name of the field.\n     * @param {Array} data - An array containing the field data.\n     * @param {Object} schema - The schema for the field.\n     */\n    constructor(name, data, schema) {\n        super(name, data, schema);\n        this.subtype = DimensionSubtype.TEMPORAL;\n        this.minDiff = getMinDiff(this.data);\n    }\n\n    /**\n     * Getter for subType value of the field.\n     *\n    * @return {string} Returns subType of the field.\n    */\n    subType() {\n        return this.subtype;\n    }\n\n    getMinDiff () {\n        return this.minDiff;\n    }\n    /**\n    * A hook which is called for every entry(cell) of the column.\n    *\n    * @param {*} val - The current entry present in the column while iteration.\n    * @return {number} Returns the total timestamps in millisecond.\n    */\n    parse(val) {\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present then it means the value is such that the it could be directly passed to date\n        // constructor\n        return +new Date(val);\n    }\n}\n\nexport default DateTime;\n","import Measure from './measure';\n\n/**\n * Represents categorical field subtype.\n *\n * @extends Measure\n */\nclass DiscreteMeasure extends Measure {\n    constructor(name, data, schema, bin) {\n        super(name, data, schema);\n        this.bin = bin;\n        this.subtype = 'discrete';\n    }\n\n    /**\n     * A hook which is called for every entry(cell) of the column.\n     *\n     * @todo Fix the null data e.g. undefined or null etc.\n     *\n     * @param {*} val - The current entry present in the column while iteration.\n     * @return {string} Returns the string representation of the value.\n     */\n    parse (val) {\n        val = (val === undefined || val === null) ? '' : val.toString();\n        return val.trim();\n    }\n\n    bins() {\n        return this.bin;\n    }\n    subType() {\n        return this.subtype;\n    }\n}\n\nexport default DiscreteMeasure;\n","import { FieldType, DimensionSubtype } from './enums';\nimport { Measure, Categorical, DateTime, DiscreteMeasure } from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @todo Add logic for GEO dimension subtype.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField (data, schema) {\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case 'discrete':\n            return new DiscreteMeasure(schema.name, data, schema, schema.bins);\n        default:\n            return new Measure(schema.name, data, schema);\n        }\n    case FieldType.DIMENSION:\n    default:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(schema.name, data, schema);\n        case DimensionSubtype.TEMPORAL:\n            return new DateTime(schema.name, data, schema);\n        case DimensionSubtype.GEO:\n            return new Categorical(schema.name, data, schema);\n        default:\n            return new Categorical(schema.name, data, schema);\n        }\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nfunction createFields (dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n\nexport default createFields;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { isArray, isObject, isString } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    let converter;\n\n    if (isString(data)) {\n        converter = DSVStr;\n    } else if (isArray(data) && isArray(data[0])) {\n        converter = DSVArr;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        converter = FlatJSON;\n    } else {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converter(data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode } from './enums';\nimport Field from './fields/field';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator,\n    groupByIterator,\n    projectIterator,\n    selectIterator,\n    calculatedVariableIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport createFields from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name] = new Value(field.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => new Field(partialFieldMap[coll], rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let checker = index => selectFn(prepareSelectionData(fields, index), index);\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectFn(prepareSelectionData(fields, index));\n    }\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (propModels === null) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\nexport const propagateIdentifiers = (dataModel, propModel, config = {}, nonTraversingModel, grouped) => {\n    // function to propagate to target the DataModel instance.\n    const forwardPropagation = (targetDM, propagationData, hasGrouped) => {\n        propagateIdentifiers(targetDM, propagationData, config, nonTraversingModel, hasGrouped);\n    };\n\n    dataModel !== nonTraversingModel && dataModel.handlePropagation({\n        payload: config.payload,\n        data: propModel,\n        sourceIdentifiers: config.sourceIdentifiers,\n        sourceId: config.propagationSourceId,\n        groupedPropModel: !!grouped\n    });\n\n    // propagate to children created by SELECT operation\n    selectIterator(dataModel, (targetDM, criteria) => {\n        if (targetDM !== nonTraversingModel) {\n            const selectionModel = propModel[0].select(criteria, {\n                saveChild: false\n            });\n            const rejectionModel = propModel[1].select(criteria, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [selectionModel, rejectionModel], grouped);\n        }\n    });\n    // propagate to children created by PROJECT operation\n    projectIterator(dataModel, (targetDM, projField) => {\n        if (targetDM !== nonTraversingModel) {\n            const projModel = propModel[0].project(projField, {\n                saveChild: false\n            });\n            const rejectionProjModel = propModel[1].project(projField, {\n                saveChild: false\n            });\n\n            forwardPropagation(targetDM, [projModel, rejectionProjModel], grouped);\n        }\n    });\n\n    // propagate to children created by groupBy operation\n    groupByIterator(dataModel, (targetDM, conf) => {\n        if (targetDM !== nonTraversingModel) {\n            const {\n                    reducer,\n                    groupByString\n                } = conf;\n                // group the filtered model based on groupBy string of target\n            const selectionGroupedModel = propModel[0].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            const rejectionGroupedModel = propModel[1].groupBy(groupByString.split(','), reducer, {\n                saveChild: false\n            });\n            forwardPropagation(targetDM, [selectionGroupedModel, rejectionGroupedModel], true);\n        }\n    });\n\n    calculatedVariableIterator(dataModel, (targetDM, ...params) => {\n        if (targetDM !== nonTraversingModel) {\n            const entryModel = propModel[0].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            const exitModel = propModel[1].clone(false, false).calculateVariable(...params, {\n                saveChild: false,\n                replaceVar: true\n            });\n            forwardPropagation(targetDM, [entryModel, exitModel], grouped);\n        }\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, config) => {\n    let criteria;\n    let propModel;\n    const propagationNameSpace = config.propagationNameSpace;\n    const payload = config.payload;\n    const propagationSourceId = config.propagationSourceId;\n\n    if (identifiers === null) {\n        criteria = null;\n    } else {\n        const filteredCriteria = Object.entries(propagationNameSpace.mutableActions)\n            .filter(d => d[0] !== propagationSourceId)\n            .map(d => Object.values(d[1]).map(action => action.criteria));\n        criteria = [].concat(...[...filteredCriteria, identifiers]);\n    }\n\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const propConfig = {\n        payload,\n        propagationSourceId,\n        sourceIdentifiers: identifiers\n    };\n\n    if (rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: true\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    propModel = filterPropagationModel(rootModel, criteria, {\n        filterByMeasure: !rootGroupByModel\n    });\n    propagateIdentifiers(rootModel, propModel, propConfig, rootGroupByModel);\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationSourceId) => {\n    const rootGroupByModel = rootModels.groupByModel;\n    const rootModel = rootModels.model;\n    const immutableActions = propagationNameSpace.immutableActions;\n    for (const sourceId in immutableActions) {\n        const actions = immutableActions[sourceId];\n        for (const action in actions) {\n            const criteriaModel = actions[action].criteria;\n            propagateToAllDataModels(criteriaModel, {\n                groupByModel: rootGroupByModel,\n                model: rootModel\n            }, {\n                propagationNameSpace,\n                payload: actions[action].payload,\n                propagationSourceId\n            });\n        }\n    }\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema);\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects an predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n     *      ```\n     *          function (row, i)  { ... }\n     *      ```\n     * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n     *      DataModel instance\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n     *\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name] = {\n                index: i,\n                def: { name: fieldDef._ref.name, type: fieldDef._ref.fieldType, subtype: fieldDef._ref.subType() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport createFields from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    addField (field) {\n        const fieldName = field.fieldName();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.fieldName()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n     /**\n     * Creates a new variable calculated from existing variable. This method expects the defination of the newly created\n     * variable and a function which resolves the value of the new variable from existing variables.\n     *\n     * Can create a new measure based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const newDm = dataModel.calculateVariable({\n     *      name: 'powerToWeight',\n     *      type: 'measure'\n     *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n     *\n     *\n     * Can create a new dimension based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const child = dataModel.calculateVariable(\n     *     {\n     *       name: 'Efficiency',\n     *       type: 'dimension'\n     *     }, ['horsepower', (hp) => {\n     *      if (hp < 80) { return 'low'; },\n     *      else if (hp < 120) { return 'moderate'; }\n     *      else { return 'high' }\n     *  }]);\n     *\n     * @public\n     *\n     * @param {Schema} schema: Schema of newly defined variable\n     * @param {VariableResolver} resolver: Resolver format to resolve the current variable\n     *\n     * @return {DataModel} Instance of DataModel with the new field\n     */\n    calculateVariable (schema, dependency, config = { saveChild: true, replaceVar: false }) {\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in model.`);\n        }\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        let clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, fs);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, payload, config = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        propagateToAllDataModels(identifiers, rootModels, {\n            propagationNameSpace,\n            payload,\n            propagationSourceId\n        });\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, propagationSourceId);\n        }\n        return this;\n    }\n\n    addToPropNamespace (sourceId, config = {}) {\n        let sourceNamespace;\n        const actionName = config.actionName;\n        const payload = config.payload;\n        const isMutableAction = config.isMutableAction;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const criteria = config.criteria;\n\n        if (isMutableAction) {\n            !propagationNameSpace.mutableActions[sourceId] && (propagationNameSpace.mutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.mutableActions[sourceId];\n        } else {\n            !propagationNameSpace.immutableActions[sourceId] && (propagationNameSpace.immutableActions[sourceId] = {});\n            sourceNamespace = propagationNameSpace.immutableActions[sourceId];\n        }\n\n        if (criteria === null) {\n            delete sourceNamespace[actionName];\n        } else {\n            sourceNamespace[actionName] = {\n                criteria,\n                payload\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, payload));\n    }\n\n    /**\n     * Perfoms binning on a measure field based on a binning configuration. This method does not aggregate the number of\n     * rows present in DataModel instance after binning, it just adds a new field with the binned value. Refer binning\n     * {@link example_of_binning | example} to have a intuition of what binning is and the use case.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non uniform buckets\n     * - providing bin count\n     * - providing each bin size\n     *\n     * When custom buckets are provided as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const buckets = {\n     *      start: 30\n     *      stops: [80, 100, 110]\n     *  };\n     *  const config = { buckets, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\\\n     *\n     * @text\n     * When `binCount` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binCount: 5, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binSize: 200, name: 'binnedHorsepower' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {String} name Name of measure which will be used to create bin\n     * @param {Object} config Config required for bin creation\n     * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n     *      are picked and a range is created. The first number from range is inclusive and the second number from range\n     *      is exclusive.\n     * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n     *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n     *      the first value of the stop.\n     * @param {Number} config.binSize Bucket size for each bin\n     * @param {Number} config.binCount Number of bins which will be created\n     * @param {String} config.name Name of the new binned field to be created\n     *\n     * @returns {DataModel} Instance of new DataModel with the newly created bin.\n     */\n    bin (measureName, config = { }) {\n        const clone = this.clone();\n        const binFieldName = config.name || `${measureName}_binned`;\n        if (this.getFieldsConfig()[binFieldName] || !this.getFieldsConfig()[measureName]) {\n            throw new Error(`Field ${measureName} already exists.`);\n        }\n        const field = this._partialFieldspace.fields.find(currfield => currfield.name === measureName);\n        const dataSet = createBinnedFieldData(field, this._rowDiffset, config);\n        const binField = createFields([dataSet.data], [\n            {\n                name: binFieldName,\n                type: FieldType.MEASURE,\n                subtype: 'discrete', // @todo : DimensionSubtype\n                bins: {\n                    range: dataSet.range,\n                    mid: dataSet.mid\n                }\n            }], [binFieldName])[0];\n        clone.addField(binField);\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureName, config, binFieldName }, null);\n        return clone;\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getPartialFieldspace();\n    const dimensions = fieldStore.getDimension();\n    const measures = fieldStore.getMeasure();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    Object.entries(measures).forEach(([key]) => {\n        if (measures[key].subType() === 'discrete') {\n            if (fieldArr && fieldArr.length) {\n                if (fieldArr.indexOf(key) !== -1) {\n                    retArr.push(key);\n                }\n            } else {\n                retArr.push(key);\n            }\n        }\n    });\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getPartialFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getPartialFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema));\n            if (value.schema.type === 'measure' && value.schema.subtype !== 'discrete') {\n                measureArr.push(key);\n            } else if (value.schema.type === 'dimension' || value.schema.subtype === 'discrete') {\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].data[i]);\n            });\n        }\n    });\n    // reduction\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_]);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\n/**\n * Creates bin f from the data and the supplied config.\n *\n * @param {Array} data - The input data.\n * @param {Object} config - The config object.\n * @param {number} config.binSize - The size of the bin.\n * @param {number} config.numOfBins - The number of bins to be created.\n * @return {Array} Returns an array of created bins.\n */\nexport function createBinnedFieldData (field, rowDiffset, config) {\n    let { buckets, binCount, binSize, start } = config;\n    let dataStore = [];\n    let binnedData = [];\n    let [min, max] = field.domain();\n    let oriMax = max;\n    let stops = [];\n    let binEnd;\n    let prevEndpoint;\n    let mid;\n    let range;\n\n    // create dataStore with index according to rowDiffSet\n    rowDiffsetIterator(rowDiffset, (i) => {\n        dataStore.push({\n            data: field.data[i],\n            index: i\n        });\n    });\n\n    // create buckets if buckets not given\n    if (!buckets) {\n        max += 1;\n        binSize = binSize || (max - min) / binCount;\n\n        const extraBinELm = (max - min) % binSize;\n        if (!binCount && extraBinELm !== 0) {\n            max = max + binSize - extraBinELm;\n        }\n        binEnd = min + binSize;\n        while (binEnd <= max) {\n            stops.push(binEnd);\n            binEnd += binSize;\n        }\n        start = start || min;\n        buckets = { start, stops };\n    }\n\n    // initialize intial bucket start\n    prevEndpoint = buckets.start === 0 ? 0 : buckets.start || min;\n\n    // mark each data in dataStore to respective buckets\n    buckets.stops.forEach((endPoint) => {\n        let tempStore = dataStore.filter(datum => datum.data >= prevEndpoint && datum.data < endPoint);\n        tempStore.forEach((datum) => { binnedData[datum.index] = `${prevEndpoint}-${endPoint}`; });\n        prevEndpoint = endPoint;\n    });\n\n    // create a bin for values less than start\n    dataStore.filter(datum => datum.data < buckets.start)\n                    .forEach((datum) => { binnedData[datum.index] = `${min}-${buckets.start}`; });\n\n    // create a bin for values more than end\n    dataStore.filter(datum => datum.data >= buckets.stops[buckets.stops.length - 1])\n                    .forEach((datum) =>\n                    { binnedData[datum.index] = `${buckets.stops[buckets.stops.length - 1]}-${oriMax}`; });\n\n    // create range and mid\n    // append start to bucket marks\n    buckets.stops.unshift(buckets.start);\n    range = new Set(buckets.stops);\n\n    // Add endpoints to buckets marks if not added\n    if (min < buckets.start) { range.add(min); }\n    if (oriMax > buckets.stops[buckets.stops.length - 1]) { range.add(oriMax); }\n\n    range = [...range].sort((a, b) => a - b);\n    mid = [];\n\n    for (let i = 1; i < range.length; i++) {\n        mid.push((range[i - 1] + range[i]) / 2);\n    }\n    return { data: binnedData, mid, range };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da <= tau - epsilon && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    createSelection\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatters = formatter => ({\n    [DimensionSubtype.TEMPORAL]: (value, interval) => {\n        const nearestInterval = getNearestInterval(interval);\n        return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n    [DimensionSubtype.CATEGORICAL]: value => value\n});\n\nconst getDefaultTooltipFormatterFn = (formatter = formatters()[DimensionSubtype.CATEGORICAL]) => formatter;\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat)[fieldObj.subtype]);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val)[type]);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(datum) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        formatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    formatter && axis.tickFormat(formatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice, domain: userDom } = context.config();\n    if (userDom) {\n        domain = userDom;\n    }\n    if (domain.length && domain[0] === domain[1]) {\n        domain = [0, +domain[0] * 2];\n    }\n    context.scale().domain(domain);\n    nice && context.scale().nice();\n    context._domain = context.scale().domain();\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            value = mergeRecursive(oldConfig, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            if (value.orientation !== oldConfig.orientation) {\n                context.axis(context.createAxis(value));\n            }\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let dom = domain[0];\n            const userDom = this.config().domain;\n            if (userDom) {\n                dom = userDom;\n            }\n            this.scale().domain(dom);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (tickFormat, numberFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.formatter;\n        const scale = this.scale();\n        return formatter ? formatter(axisTicks)(text, index) : (scale.tickFormat ? scale.tickFormat()(text) : text);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat, numberFormat);\n\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } else if (domain) {\n            this._domain = [];\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, setContinousAxisDomain } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat);\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (tickFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, fieldsConfig, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES, createSelection } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}