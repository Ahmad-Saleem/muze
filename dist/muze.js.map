{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","presentYear","Math","trunc","getFullYear","Number","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","len","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","totalSum","curr","isNaN","avg","fnList","min","filteredValues","filter","num","max","first","last","count","std","sqrt","mean","pow","defaultReducerName","ae","ReducerStore","TypeError","defReducer","entries","_this","reducer","_this2","__unregister","delete","reducerStore","ue","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","ve","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ne","CategoricalParser","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","xe","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","He","dataFormat","DSVArr","assign","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","clone","select","fn","saveChild","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","et","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","mt","_fieldspace","updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","bt","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","T","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","pkg","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","undefined","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","retrieveNearestGroupByReducers","nearestReducers","getDerivations","groupDerivation","getParent","filteredReducers","_len4","measureFieldNames","_key4","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","formatters","strategy_defineProperty","nearestInterval","getNearestInterval","getDefaultTooltipFormatterFn","buildTooltipData","fieldValues","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","PROPS","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","getTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","_ref6","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","_layout$config2","actualMeasure","scrollInfo","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","computeLayoutMeasurements","_layout$measurement","_layout$config3","actualBuffer","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config4","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","createScrollBarWrapper","scrollBarType","grid","scrollBarWrapper","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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CA,yDACA,+DACA,sEACArS,IAAIsuC,gCCESgX,gBAZK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArS,IAAIsuC,gCCESgX,gBAZK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArS,IAAIsuC,gCCESgX,kBAZK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArS,IAAIsuC,gCCASgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,gBAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,gBAVK,IAAI1kD,MAAM,GAAGyR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArS,IAAIsuC,gCCESgX,cAVK,IAAI1kD,MAAM,GAAGyR,OAC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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentYear = Math.trunc(((new Date()).getFullYear()) / 100);\n                if (parsedVal instanceof Number) {\n                    parsedVal = (presentYear * 100) + parsedVal;\n                } else {\n                    parsedVal = `${presentYear}${parsedVal}`;\n                }\n                return parsedVal;\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\n\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr)) {\n        const totalSum = arr.reduce((acc, curr) =>\n            ((curr === null || curr === undefined) ? acc : acc + +curr)\n        , null);\n\n        return Number.isNaN(totalSum) ? null : totalSum;\n    }\n    return null;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum === null) ? null : totalSum / len;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return null;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                data.push(null);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum === null) {\n            binnedData.push(null);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    retrieveNearestGroupByReducers,\n    createSelection\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatters = formatter => ({\n    [DimensionSubtype.TEMPORAL]: (value, interval) => {\n        const nearestInterval = getNearestInterval(interval);\n        return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n    [DimensionSubtype.CATEGORICAL]: value => value\n});\n\nconst getDefaultTooltipFormatterFn = (formatter = formatters()[DimensionSubtype.CATEGORICAL]) => formatter;\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat)[fieldObj.subtype]);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val)[type]);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return domain;\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.getTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let domainValue = domain[0];\n            domainValue = getValidDomain(this, domainValue);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            if (Array.isArray(domain) && domain.length) {\n                domain = getValidDomain(this, domain);\n                domain = this._interpolator.sanitizeDomain(domain);\n                setContinousAxisDomain(this, domain);\n                this.setAxisComponentDimensions();\n                this.logicalSpace(null);\n            } else {\n                this._domain = [];\n            }\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = this._tickFormatter();\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return () => text => this.scale().tickFormat()(text);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            domain = getValidDomain(this, domain);\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = this._tickFormatter();\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import {\n    FieldType\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n            rowDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${measurement.width}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n                    title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${measurement.width}px`)\n                    .style(HEIGHT, '100%')\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .node();\n};\n\n                                /**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure) => {\n    const {\n        pagination,\n        buffer\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType);\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure - buffer, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure);\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border,\n        buffer,\n        pagination\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    const actualBuffer = pagination === HOLISTIC ? 0 : buffer;\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - border.width;\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix);\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    const maxHeightAvailableForRowMatrix = height - maxColumnMatrixHeight;\n\n    // Set height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix);\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - actualBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix: maxWidthAvailableForColumnMatrix - actualBuffer\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${RIGHT}-${LEFT}`]: NO_BORDERS,\n    [`${RIGHT}-${MIDDLE}`]: COLUMN,\n    [`${RIGHT}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW_X, OVERFLOW_Y } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW_X, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW_Y, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n        if (layoutManager.getComponent(headerType)) {\n            wrapper = layoutManager\n                      .getComponent(headerType)\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    if (layoutManager.getComponent(componentName)) {\n        scrollBarWrapper = layoutManager\n                                .getComponent(componentName)\n                                .updateWrapper(wrapperParams);\n        if (viewLength >= totalLength) {\n            layoutManager\n                            .getComponent(componentName)\n                            .remove();\n        }\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n    if (viewLength >= totalLength) {\n        return null;\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            legendWrapper = layoutManager\n                       .getComponent(LEGEND)\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                    .getComponent(GRID)\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}