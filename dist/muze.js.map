{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","year","getFullYear","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","Math","round","random","isArrEqual","arr1","arr2","formatNumber","field_store","data","createNamespace","fieldArr","dataId","fieldsObj","retObj","field","getMeasure","schema","getDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","tupleObj","cellVal","iii","len","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","allNulls","isNestedArray","sumVal","carry","x","avg","arrSum","fnList","min","Infinity","every","max","first","last","count","std","sqrt","mean","pow","num","reducer_store_ReducerStore","TypeError","entries","_this","ne","reducer","_this2","__unregister","delete","reducer_store","ie","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","dimension","_cachedDomain","calculateDataDomain","ve","categorical","hash","Set","domain","add","temporal","currIdx","prevDatum","minDiff","Number","POSITIVE_INFINITY","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","Ee","continuous","NEGATIVE_INFINITY","field_parser","ke","categorical_parser","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","xe","continuous_parser","parseFloat","isNaN","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","Ue","dataFormat","Le","assign","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","Ke","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","ze","fieldSeparator","dsv","dsv_arr","Xe","insertionIndex","$e","converter","dsv_str","flat_json","prepareSelectionData","resp","_iteratorNormalCompletion","helper_persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","propField","valueOf","propModel","clone","select","fn","saveChild","helper_cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","newRowDiffSet","lastInsertedValue","li","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_cloneWithProject","projField","allFields","projectionSet","filter","actualProjField","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","Qe","formattedData","nameSpace","_partialFieldspace","_","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","fieldStore","sortingDetails","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","pReducers","measures","defaultReducer","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","ht","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","dimensionName","binFieldName","dataSet","createBinnedFieldData","buckets","binCount","binSize","dataStore","binnedData","T","oriMax","stops","binEnd","prevEndpoint","extraBinELm","endPoint","currfield","binField","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","St","mt","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","undefined","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","serialize","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","sel","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","selection_classCallCheck","_data","_idMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","_this6","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","getSchema","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","defaultTooltipFormatters","_formatters","strategy_defineProperty","nearestInterval","getNearestInterval","buildTooltipData","fieldValues","formatters","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","setContinousAxisDomain","_context$config6","userDom","_domain","PROPS","axisComponentDimensions","oldConfig","createAxis","_renderConfig","logicalSpace","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_scale","_axis","_animationDonePromises","setAxisComponentDimensions","axisClass","getTickFormatter","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","setOffset","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","_this$config2","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","domainValue","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","measureField","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","createSelection","appendObj","idFn","dataSelect","mergedSelection","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","_gridbands","_gridlines","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","_len4","_key4","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","colData","colIdx","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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ACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCES6W,cAZK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCES6W,cAZK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCES6W,gBAZK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCES6W,gBAZK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCES6W,kBAZK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAnS,IAAIyuC,gCCAS6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,gBAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IAAIyuC,gCCES6W,cAVK,IAAI1kD,MAAM,GAAGuR,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAnS,IA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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultNumberParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\nexport const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function formatNumber(val) {\n    return val;\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n            fieldsObj () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    retObj[field.name()] = field;\n                });\n                return retObj;\n            },\n            getMeasure () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema().type === FieldType.MEASURE) {\n                        retObj[field.name()] = field;\n                    }\n                });\n                return retObj;\n            },\n            getDimension () {\n                const retObj = {};\n                this.fields.forEach((field) => {\n                    if (field.schema().type === FieldType.DIMENSION) {\n                        retObj[field.name()] = field;\n                    }\n                });\n                return retObj;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            }\n            else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { FieldType, DimensionSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case FieldType.MEASURE:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * Reducer function that takes care about the sum aggregation\n * @param  {Array} arr array of values\n * @return {number}     sum of the array\n */\nfunction sum (arr) {\n    let allNulls = true;\n    const isNestedArray = arr[0] instanceof Array;\n    const sumVal = arr.reduce((carry, a) => {\n        if (isNestedArray) {\n            return carry.map((x, i) => x + a[i]);\n        }\n        allNulls = allNulls && (a === null);\n        return carry + a;\n    }, isNestedArray ? Array(...Array(arr[0].length)).map(() => 0) : 0);\n    return allNulls ? null : sumVal;\n}\n\n/**\n * reducer function that takes care about the mean aggregation\n * @param  {Array} arr array of values\n * @return {number}     mean of the array\n */\nfunction avg (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length || 1;\n    const arrSum = sum(arr);\n    if (isNestedArray) {\n        return arrSum.map(x => x / len);\n    }\n    return arrSum === null ? null : arrSum / len;\n}\n\n/**\n * reducer function that gives the min value\n * @param  {Array} arr array of values\n * @return {number}     min of the array\n */\nfunction min (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.min(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.min(...arr);\n}\n\n/**\n * reducer function that gives the max value\n * @param  {Array} arr array of values\n * @return {number}     max of the array\n */\nfunction max (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    if (isNestedArray) {\n        return arr.reduce((carry, a) => carry.map((x, i) => Math.max(x, a[i])),\n        Array(...Array(arr[0].length)).map(() => -Infinity));\n    }\n    return arr.every(d => d === null) ? null : Math.max(...arr);\n}\n\n/**\n * reducer function that gives the first value\n * @param  {Array} arr array of values\n * @return {number}     first value of the array\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * reducer function that gives the last value\n * @param  {Array} arr array of values\n * @return {number}     last value of the array\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * reducer function that gives the count value\n * @param  {Array} arr array of values\n * @return {number}     count of the array\n */\nfunction count (arr) {\n    const isNestedArray = arr[0] instanceof Array;\n    const len = arr.length;\n    if (isNestedArray) {\n        return Array(...Array(arr[0].length)).map(() => len);\n    }\n    return len;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @param {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     *\n     * @param {string} [reducer='sum'] name of the default reducer. It picks up the definition from store by doing name\n     *      lookup. If no name is found then it takes `sum` as the default reducer.\n     *\n     * @return {ReducerStore} instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (params.length) {\n            let reducer = params[0];\n            if (typeof reducer === 'function') {\n                this.store.set('defReducer', reducer);\n            } else if (typeof reducer === 'string') {\n                if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                    this.store.set('defReducer', fnList[reducer]);\n                }\n            }\n            return this;\n        }\n\n        return this.store.get('defReducer');\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof name === 'string' && typeof reducer === 'function') {\n            this.store.set(name, reducer);\n        }\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        const hash = new Set();\n        let currIdx = 0;\n        let prevDatum;\n        let minDiff = Number.POSITIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n\n            if (hash.has(datum)) {\n                return;\n            }\n            hash.add(datum);\n\n            if (!currIdx++) {\n                prevDatum = datum;\n                return;\n            }\n\n            minDiff = Math.min(minDiff, datum - prevDatum);\n            prevDatum = datum;\n        });\n\n        if (currIdx <= 1) {\n            return null;\n        }\n\n        return minDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain() {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit() {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn() {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat() {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain() {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*(\\d+)\\s*-\\s*(\\d+)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${matched[1]}-${matched[2]}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { isArray, isObject, isString } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    let converter;\n\n    if (isString(data)) {\n        converter = DSVStr;\n    } else if (isArray(data) && isArray(data[0])) {\n        converter = DSVArr;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        converter = FlatJSON;\n    } else {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converter(data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let checker = index => selectFn(prepareSelectionData(fields, index), index);\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectFn(prepareSelectionData(fields, index));\n    }\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects an predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n     *      ```\n     *          function (row, i)  { ... }\n     *      ```\n     * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n     *      DataModel instance\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n     *\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n     /**\n     * Creates a new variable calculated from existing variable. This method expects the defination of the newly created\n     * variable and a function which resolves the value of the new variable from existing variables.\n     *\n     * Can create a new measure based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const newDm = dataModel.calculateVariable({\n     *      name: 'powerToWeight',\n     *      type: 'measure'\n     *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n     *\n     *\n     * Can create a new dimension based on existing variables\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable;\n     *  const child = dataModel.calculateVariable(\n     *     {\n     *       name: 'Efficiency',\n     *       type: 'dimension'\n     *     }, ['horsepower', (hp) => {\n     *      if (hp < 80) { return 'low'; },\n     *      else if (hp < 120) { return 'moderate'; }\n     *      else { return 'high' }\n     *  }]);\n     *\n     * @public\n     *\n     * @param {Schema} schema: Schema of newly defined variable\n     * @param {VariableResolver} resolver: Resolver format to resolve the current variable\n     *\n     * @return {DataModel} Instance of DataModel with the new field\n     */\n    calculateVariable (schema, dependency, config = { saveChild: true, replaceVar: false }) {\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in model.`);\n        }\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        let clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, fs);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Perfoms binning on a measure field based on a binning configuration. This method does not aggregate the number of\n     * rows present in DataModel instance after binning, it just adds a new field with the binned value. Refer binning\n     * {@link example_of_binning | example} to have a intuition of what binning is and the use case.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non uniform buckets\n     * - providing bin count\n     * - providing each bin size\n     *\n     * When custom buckets are provided as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const buckets = {\n     *      start: 30\n     *      stops: [80, 100, 110]\n     *  };\n     *  const config = { buckets, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\\\n     *\n     * @text\n     * When `binCount` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binCount: 5, name: 'binnedHP' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration\n     * @example\n     *  // DataModel already prepared and assigned to dm vairable\n     *  const config = { binSize: 200, name: 'binnedHorsepower' }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {String} name Name of measure which will be used to create bin\n     * @param {Object} config Config required for bin creation\n     * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n     *      are picked and a range is created. The first number from range is inclusive and the second number from range\n     *      is exclusive.\n     * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n     *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n     *      the first value of the stop.\n     * @param {Number} config.binSize Bucket size for each bin\n     * @param {Number} config.binCount Number of bins which will be created\n     * @param {String} config.name Name of the new binned field to be created\n     *\n     * @returns {DataModel} Instance of new DataModel with the newly created bin.\n     */\n    bin (dimensionName, config = { }) {\n        const clone = this.clone();\n        const binFieldName = config.name || `${dimensionName}_binned`;\n        if (this.getFieldsConfig()[binFieldName] || !this.getFieldsConfig()[dimensionName]) {\n            throw new Error(`Field ${dimensionName} already exists.`);\n        }\n        const field = this._partialFieldspace.fields.find(currfield => currfield.name() === dimensionName);\n        const dataSet = createBinnedFieldData(field, this._rowDiffset, config);\n        const binField = createFields([dataSet.data], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins: {\n                    range: dataSet.range,\n                    mid: dataSet.mid\n                }\n            }], [binFieldName])[0];\n        clone.addField(binField);\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { dimensionName, config, binFieldName }, null);\n        return clone;\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getPartialFieldspace();\n    const dimensions = fieldStore.getDimension();\n    // const measures = fieldStore.getMeasure();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    // Object.entries(measures).forEach(([key]) => {\n    //     if (measures[key].subtype === MeasureSubtype.DISCRETE) {\n    //         if (fieldArr && fieldArr.length) {\n    //             if (fieldArr.indexOf(key) !== -1) {\n    //                 retArr.push(key);\n    //             }\n    //         } else {\n    //             retArr.push(key);\n    //         }\n    //     }\n    // });\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getPartialFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getPartialFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n            if (value.schema().type === FieldType.MEASURE) {\n                measureArr.push(key);\n            } else if (value.schema().type === FieldType.DIMENSION) {\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n    // reduction\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_]);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\n/**\n * Creates bin f from the data and the supplied config.\n *\n * @param {Array} data - The input data.\n * @param {Object} config - The config object.\n * @param {number} config.binSize - The size of the bin.\n * @param {number} config.numOfBins - The number of bins to be created.\n * @return {Array} Returns an array of created bins.\n */\nexport function createBinnedFieldData (field, rowDiffset, config) {\n    let { buckets, binCount, binSize, start } = config;\n    let dataStore = [];\n    let binnedData = [];\n    let [min, max] = field.domain();\n    let oriMax = max;\n    let stops = [];\n    let binEnd;\n    let prevEndpoint;\n    let mid;\n    let range;\n\n    // create dataStore with index according to rowDiffSet\n    rowDiffsetIterator(rowDiffset, (i) => {\n        dataStore.push({\n            data: field.partialField.data[i],\n            index: i\n        });\n    });\n\n    // create buckets if buckets not given\n    if (!buckets) {\n        max += 1;\n        binSize = binSize || (max - min) / binCount;\n\n        const extraBinELm = (max - min) % binSize;\n        if (!binCount && extraBinELm !== 0) {\n            max = max + binSize - extraBinELm;\n        }\n        binEnd = min + binSize;\n        while (binEnd <= max) {\n            stops.push(binEnd);\n            binEnd += binSize;\n        }\n        start = start || min;\n        buckets = { start, stops };\n    }\n\n    // initialize intial bucket start\n    prevEndpoint = buckets.start === 0 ? 0 : buckets.start || min;\n\n    // mark each data in dataStore to respective buckets\n    buckets.stops.forEach((endPoint) => {\n        let tempStore = dataStore.filter(datum => datum.data >= prevEndpoint && datum.data < endPoint);\n        tempStore.forEach((datum) => { binnedData[datum.index] = `${prevEndpoint}-${endPoint}`; });\n        prevEndpoint = endPoint;\n    });\n\n    // create a bin for values less than start\n    dataStore.filter(datum => datum.data < buckets.start)\n                    .forEach((datum) => { binnedData[datum.index] = `${min}-${buckets.start}`; });\n\n    // create a bin for values more than end\n    dataStore.filter(datum => datum.data >= buckets.stops[buckets.stops.length - 1])\n                    .forEach((datum) =>\n                    { binnedData[datum.index] = `${buckets.stops[buckets.stops.length - 1]}-${oriMax}`; });\n\n    // create range and mid\n    // append start to bucket marks\n    buckets.stops.unshift(buckets.start);\n    range = new Set(buckets.stops);\n\n    // Add endpoints to buckets marks if not added\n    if (min < buckets.start) { range.add(min); }\n    if (oriMax > buckets.stops[buckets.stops.length - 1]) { range.add(oriMax); }\n\n    range = [...range].sort((a, b) => a - b);\n    mid = [];\n\n    for (let i = 1; i < range.length; i++) {\n        mid.push((range[i - 1] + range[i]) / 2);\n    }\n    return { data: binnedData, mid, range };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.keys(this._idMap).map(e => this._idMap[e]);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e) => {\n            fn(this._idMap[e]);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            this._idMap[params[0]] = fn(this._idMap[params[0]], ...params);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\nconst defaultTooltipFormatters = (type, formatter) => {\n    const formatters = {\n        [DimensionSubtype.TEMPORAL]: (value, interval) => {\n            const nearestInterval = getNearestInterval(interval);\n            return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n        },\n        [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n        [DimensionSubtype.CATEGORICAL]: value => value\n    };\n    return formatters[type];\n};\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = defaultTooltipFormatters(fieldObj.subtype || fieldObj.type, numberFormat);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const formatters = config.formatters;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = (formatters && formatters[field]) || defaultTooltipFormatters(type, val => val);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                                fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        formattedValue = defaultTooltipFormatters(MeasureSubtype.CONTINUOUS,\n                            fieldspace.fields[measureIndex].numberFormat())(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(datum) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        formatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    formatter && axis.tickFormat(formatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice, domain: userDom } = context.config();\n    if (userDom) {\n        domain = userDom;\n    }\n    if (domain.length && domain[0] === domain[1]) {\n        domain = [0, +domain[0] * 2];\n    }\n    context.scale().domain(domain);\n    nice && context.scale().nice();\n    context._domain = context.scale().domain();\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            value = mergeRecursive(oldConfig, value);\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            if (value.orientation !== oldConfig.orientation) {\n                context.axis(context.createAxis(value));\n            }\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let dom = domain[0];\n            const userDom = this.config().domain;\n            if (userDom) {\n                dom = userDom;\n            }\n            this.scale().domain(dom);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (tickFormat, numberFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.formatter;\n        const scale = this.scale();\n        return formatter ? formatter(axisTicks)(text, index) : (scale.tickFormat ? scale.tickFormat()(text) : text);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            numberFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat, numberFormat);\n\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain && domain.length) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } else if (domain) {\n            this._domain = [];\n        } return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof BandAxis\n     */\n    createScale (range) {\n        const scale = super.createScale(range);\n        const { padding } = this.config();\n        if (typeof padding === 'number') {\n            scale.padding(padding);\n        }\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, setContinousAxisDomain } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const {\n            tickFormat,\n            orientation\n        } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            this.formatter = this.getTickFormatter(tickFormat);\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (tickFormat) {\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        return null;\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        } return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, fieldsConfig, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as CONSTANTS from './enums/constants';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [CONSTANTS.AREA_LAYER]: AreaLayer,\n    [CONSTANTS.ARC_LAYER]: ArcLayer,\n    [CONSTANTS.LINE_LAYER]: LineLayer,\n    [CONSTANTS.TEXT_LAYER]: TextLayer,\n    [CONSTANTS.POINT_LAYER]: PointLayer,\n    [CONSTANTS.TICK_LAYER]: TickLayer,\n    [CONSTANTS.BAR_LAYER]: BarLayer,\n    [CONSTANTS.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, dataSelect, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nexport const createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport { GRIDLINEPARENTGROUPCLASS, GRIDBANDPARENTGROUPCLASS } from '../enums/constants';\nimport { TIMEDIFFS } from '../enums/reactive-props';\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === 'band' ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === 'band' && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === 'band') {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== 'band') {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === 'band' ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    ['band', 'line'].forEach((type) => {\n        let mark;\n        let config;\n        let instances;\n        if (type === 'band') {\n            mark = 'bar';\n            config = vuConf.gridBands;\n            instances = context._gridbands;\n        } else {\n            mark = 'tick';\n            config = vuConf.gridLines;\n            instances = context._gridlines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        definitions.forEach((atomicDef, i) => {\n            let layer;\n            const definition = atomicDef.definition;\n            const axesObj = atomicDef.axes;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            sConf.mark = mark;\n            if (!instances[i]) {\n                layer = layerFactory.getLayerInstance(sConf);\n                layer.dependencies(context._layerDeps);\n            } else {\n                layer = instances[i];\n            }\n\n            layer\n                            .metaInf({\n                                unitRowIndex: metaInf.rowIndex,\n                                unitColIndex: metaInf.colIndex,\n                                namespace: `${metaInf.namespace}${type}${i}`\n                            })\n                            .store(context.store())\n                            .config(sConf)\n                            .dataProps({\n                                timeDiffs: context.store().get(TIMEDIFFS)\n                            })\n                            .axes(axesObj);\n            instances[i] = layer;\n        });\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...context._gridbands, ...context._gridlines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const axes = context.axes();\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n\n    if (axes && ((axes.x && axes.x.length) || (axes.y && axes.y.length))) {\n        [[context._gridlines, `${classPrefix}-${GRIDLINEPARENTGROUPCLASS}`],\n            [context._gridbands, `${classPrefix}-${GRIDBANDPARENTGROUPCLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(container, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n    }\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const GRIDBANDPARENTGROUPCLASS = 'grid-bands';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const TIMEDIFFS = 'timeDiffs';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridlines = [];\n        this._gridbands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    createSelection,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${Math.min(measurement.maxWidth, measurement.width)}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${Math.min(measurement.maxWidth, measurement.width)}px`)\n                    .style(MAXWIDTH, `${Math.min(measurement.maxWidth, measurement.width)}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                /* Checking if modified width for label is less than require width.\n                 in that case returning the Actual width else modified width */\n                labelSpaces[i].width = (labelSpaces[i].width <= (maxItemSpaces.width - maxIconWidth)) ?\n                    (maxItemSpaces.width - maxIconWidth) : labelSpaces[i].width;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + padding + 2}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                const oldConf = mergeRecursive({}, oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n\n        this.mount(mount);\n        if (availWidth === 0 || !availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (availHeight === 0 || !availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}