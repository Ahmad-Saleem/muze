{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/layout/src/grid-layout/renderer.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","substring","year","getFullYear","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","unshift","Function","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","Math","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","len","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","sum","totalSum","curr","Number","isNaN","avg","fnList","min","filteredValues","filter","num","max","first","last","count","std","sqrt","mean","pow","ReducerStore","TypeError","defReducer","entries","_this","re","reducer","_this2","__unregister","delete","reducerStore","oe","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","he","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ne","CategoricalParser","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","Me","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","Le","dataFormat","DSVArr","assign","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","We","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","config","criteriaFn","derivative","op","meta","criteria","_derivation","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","clone","select","fn","saveChild","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","Ze","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","vt","_fieldspace","updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","pReducers","measures","defaultReducer","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","yt","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","T","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","pkg","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","undefined","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","timeFormats","timeDurations","formatters","strategy_defineProperty","nearestInterval","getNearestInterval","getDefaultTooltipFormatterFn","buildTooltipData","fieldValues","fieldspace","dimensionMeasureMap","detailFields","containsDetailField","timeDiffs","dataLen","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","PROPS","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","getTickFormatter","_scale","_axis","createAxis","sanitizedTickFormatter","updateAxisPadding","fetchTickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","defaultTickFormat","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","numVal","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getValidTransform","layerConfig","encodingFieldInf","groupByField","groupByFieldMeasure","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","_loop","textValue","text_slicedToArray","text-anchor","drawSymbols","mergedGroups","symbolGroups","symbolEnter","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroups","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","_context$encodingFiel","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","filterData","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","groupAxes","axisKey","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","_fields","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref7","_ref8","transformDataModels","transformVal","_ref11","_ref12","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","showHeaders","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","titleSpaces","_this$measurement2","titleCreator","titleContainer","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","_len4","_key4","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","legend","minHeight","minCharacters","maxLines","verticalAlign","collapse","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","WIDTH","HEIGHT","CENTER","ROW_LEFT","ROW_RIGHT","COLUMN_BOTTOM","COLUMN_TOP","ROW_SPAN","COL_SPAN","ROW_ROOT","COLUMN_ROOT","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","FieldNames","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","BLANK_BORDERS","columnFilter","previousRow","currentRow","prevCell","nextRow","prevRow","calcRowSpan","isNull","calcColSpan","mask","filteredRow","span_maker_toConsumableArray","cellSpanMaker","viewMatrix","spans","ridx","currSpan","applyBorders","borderType","applyRowBorders","showBorders","applyColBorders","renderMatrix","containerForMatrix","_cellSpanMaker","renderTable","rowData","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","createTree","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","layout","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","_top","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","centerMatrix","layout_get","computeLayoutMeasurements","_layout$measurement","rowMatrixWidth","getMatrixMeasurement","maxRowMatrixWidth","columnMatrixWidth","maxColumnMatrixHeight","columnViewPages","getViewableSpaces","columnViewSpace","columnPointer","columnMatrixHeight","rowMatrixHeight","rowViewableSpaces","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnViewableSpaces","columnHeightsPrimary","columnHeightsSecondary","setViewInformation","pageNumber","pageType","totalPages","viewInfo","viewMatricesInfo","layout_defineProperty","renderGrid","currentPage","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config3","rowSpaces","leftWidth","rightWidth","colSpaces","topHeight","bottomHeight","centerHeight","viewWidth","viewHeight","renderMatrices","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","createHeading","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config$m","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","legendInfo","leg","legendHeight","legendWidth","renderLegend","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","_this$component$0$0$b","sanitizeGrid","TITLE_CONFIG","SUB_TITLE_CONFIG","LAYOUT_ALIGN","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","titleConfig","subtitleConfig","subtitle","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","headerOptions","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","_createHeading","createLegend","getLegendSpace","mountSpace","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","sub","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","_layoutManager","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","renderDetails","prepareLayout","triggerReflow","renderLayout","layoutManager","grid","titleWrapper","titleCell","layout_maker_objectSpread","subtitleWrapper","subtitleCell","colorLegendWrapper","gridWrapper","registerComponents","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","_slicedToArray","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser (val) {\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n\n                return DateTimeFormatter.defaultNumberParser()(val);\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    return dtParamArr;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    if (dateTimeStamp instanceof Date) {\n        return dateTimeStamp;\n    } else if (isFinite(dateTimeStamp) && !!this.format) {\n        return new Date(dateTimeStamp);\n    }\n\n    const dtParams = this.dtParams = this.parse(dateTimeStamp);\n\n    dtParams.unshift(null);\n    this.nativeDate = new (Function.prototype.bind.apply(Date, dtParams))();\n    return this.nativeDate;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\n\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr)) {\n        const totalSum = arr.reduce((acc, curr) =>\n            ((curr === null || curr === undefined) ? acc : acc + +curr)\n        , null);\n\n        return Number.isNaN(totalSum) ? null : totalSum;\n    }\n    return null;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum === null) ? null : totalSum / len;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = arr.filter(num =>\n            !(num === undefined || num === null || Number.isNaN(+num)));\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : null;\n    }\n    return null;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return null;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                data.push(null);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum === null) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        return (val === undefined || val === null) ? null : String(val).trim();\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = null;\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        if (this.schema.format) {\n            this._dtf = this._dtf || new DateTimeFormatter(this.schema.format);\n            return this._dtf.getNativeDate(val).getTime();\n        }\n\n        // If format is not present which means the value is such that\n        // it could be directly passed to Date constructor.\n        return +new Date(val);\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        if (val === null || val === undefined) {\n            return null;\n        }\n\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n\n        const matched = val.match(regex);\n        if (!matched) {\n            return null;\n        }\n\n        return `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`;\n    }\n}\n","import FieldParser from '../field-parser';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        val = parseFloat(val, 10);\n        return Number.isNaN(val) ? null : val;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and selector function\n    if (cloneConfig.saveChild) {\n        persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    // Store reference to child model and projection fields\n    if (config.saveChild) {\n        persistDerivation(\n            cloned,\n            DM_DERIVATIVES.PROJECT,\n            { projField, config, actualProjField: projectionSet },\n            null\n        );\n    }\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    if (model._parent) {\n        return getRootDataModel(model._parent);\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    if (model._parent !== null) {\n        path.push(model);\n        getPathToRootModel(model._parent, path);\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(schema, data);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(schema, data);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(schema, data);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n            persistDerivation(\n                newDataModel,\n                DM_DERIVATIVES.GROUPBY,\n                { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n                reducers\n            );\n        }\n\n        newDataModel._parent = this;\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        if (config.saveChild) {\n            persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        }\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const pReducers = reducers;\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    let reducer = reducerStore.defaultReducer();\n    if (typeof reducers === 'function') {\n        reducer = reducers;\n    }\n    Object.entries(measures).forEach(([key]) => {\n        if (typeof reducers[key] === 'string') {\n            pReducers[key] = reducerStore.resolve(pReducers[key]) ? reducerStore.resolve(pReducers[key]) : reducer;\n        }\n        if (typeof reducers[key] !== 'function') {\n            pReducers[key] = undefined;\n        }\n        retObj[key] = pReducers[key] || reducerStore.resolve(measures[key].defAggFn()) || reducer;\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum === null) {\n            binnedData.push(null);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.filter(d => !isNaN(d[field])).map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    let domArr;\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        domArr = data.map((arr) => {\n            const firstMin = getMin(arr, fields[0]);\n            const secondMin = getMin(arr, fields[1]);\n            const firstMax = getMax(arr, fields[0]);\n            const secondMax = getMax(arr, fields[1]);\n            return [Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)];\n        });\n        domain = [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain;\n    domains = domains.filter(dom => dom && dom.length);\n    if (fieldType === DimensionSubtype.CATEGORICAL) {\n        domain = domain = [].concat(...domains);\n    } else {\n        domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nexport {\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    createSelection\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.constructor.type() === 'band' ? xAxis.scale().invertExtent(stPos.x, endPos.x) :\n        xAxis.invert(stPos.x, endPos.x);\n    const yRange = yAxis.constructor.type() === 'band' ? yAxis.scale().invertExtent(stPos.y, endPos.y) :\n        yAxis.invert(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId } from 'muze-utils';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    getClosestIndexOf,\n    DateTimeFormatter,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType\n} from 'muze-utils';\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatters = formatter => ({\n    [DimensionSubtype.TEMPORAL]: (value, interval) => {\n        const nearestInterval = getNearestInterval(interval);\n        return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => formatter(value ? value.toFixed(2) : value),\n    [DimensionSubtype.CATEGORICAL]: value => value\n});\n\nconst getDefaultTooltipFormatterFn = (formatter = formatters()[DimensionSubtype.CATEGORICAL]) => formatter;\n\nconst getTabularData = (data, schema, fieldspace, timeDiffs) => {\n    const rows = [];\n    rows.push(schema.map(d => d.name));\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat)[fieldObj.subtype]);\n            const value = formatterFn(d[i], interval);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const dimensionMeasureMap = context.dimensionMeasureMap;\n    const axes = context.axes;\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    // const containsRetinalField = schema.find(d => d.name in dimensionMeasureMap);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const timeDiffs = context.timeDiffs;\n    const dataLen = data.length;\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ?\n                timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val)[type]);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        values.push([icon, `${key}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value, interval);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value, interval);\n                        values.push([icon, {\n                            value: `${key}${separator}`,\n                            className: `${config.classPrefix}-tooltip-key`\n                        }, {\n                            value: `${formattedValue}`,\n                            className: `${config.classPrefix}-tooltip-value`\n                        }]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value, interval);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData(data, schema, fieldspace, timeDiffs);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    if (fixedBaseline) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const domain = axisInstance.domain() || [];\n    const {\n        _axisNameStyle,\n        _tickLabelStyle,\n        sanitizedTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n    if (!show || !domain.length) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(_tickLabelStyle);\n\n    axis.tickFormat(sanitizedTickFormatter);\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(_axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth;\n                if (availWidth - axisNameHeight - namePadding <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return domain;\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.getTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n            if (context._scale) {\n                const scale = context._scale;\n                const labelFunc = scale.ticks || scale.quantile || scale.domain;\n                context.sanitizedTickFormatter = tickFormatter ?\n                    tickFormatter(context.tickValues || context.axis().tickValues() || labelFunc()) :\n                    null;\n                // This method is used to set the padding between plots.\n                context.updateAxisPadding = (padding) => {\n                    if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n                        context._scale.padding(padding);\n                    }\n                };\n            }\n            context.fetchTickFormatter = tickFormatter;\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {}\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { BAND } from '../enums/constants';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            let domainValue = domain[0];\n            domainValue = getValidDomain(this, domainValue);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    getTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), i, ticks);\n        }\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this.fetchTickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] : values;\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        let p1;\n        let p2;\n        let extent;\n        const {\n            type\n        } = this.config();\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        if (type === BAND) {\n            extent = scale.invertExtent(v1, v2);\n            p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n            p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n            return [p1, p2];\n        }\n        return [v1, v2];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            if (Array.isArray(domain) && domain.length) {\n                domain = getValidDomain(this, domain);\n                domain = this._interpolator.sanitizeDomain(domain);\n                setContinousAxisDomain(this, domain);\n                this.setAxisComponentDimensions();\n                this.logicalSpace(null);\n            } else {\n                this._domain = [];\n            }\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, tickFormat, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n        const tickFormatter = tickFormat || (val => val);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        this.updateAxisPadding(padding);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (...value) {\n        const values = value.map(d => this.scale().invert(d)) || [];\n        return value.length === 1 ? values[0] && values[0].toString() : values.map(d => d.toString());\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    getTickFormatter (value) {\n        const { tickFormat } = value;\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, i, ticks);\n        }\n        const defaultTickFormat = this.scale().tickFormat;\n        return () => text => (defaultTickFormat ? defaultTickFormat()(text) : text);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (domain) {\n        if (domain) {\n            domain = getValidDomain(this, domain);\n            setContinousAxisDomain(this, domain);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickFormat, tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n        const scale = this.scale();\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n        const tickFormatter = tickFormat || scale.tickFormat();\n         // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i, values), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n\n            if (typeof color === 'string') {\n                const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                return rgbToHsv(...col);\n            }\n            return [...color];\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return interpolator(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale) => scale(domainValue);\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    return nestCollection({\n        keys: groupByIndices,\n        data\n    });\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} layerConfig\n * @param {*} fieldsConfig\n *\n */\nexport const getValidTransform = (layerConfig, fieldsConfig, encodingFieldInf) => {\n    let transformType;\n    const {\n        transform\n    } = layerConfig;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const groupByField = transform.groupBy;\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    transformType = transform.type;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        transformType = IDENTITY;\n    }\n    return transformType;\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getValidTransform, getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.transformType(getValidTransform(config, fieldsConfig, encodingFieldsInf));\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    transformType (...transformType) {\n        if (transformType.length) {\n            this._transformType = transformType[0];\n            return this;\n        }\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(d => d.update.y !== null);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: d.y === null ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport { getAxesScales, positionPoints, getLayerColor, getIndividualClassName } from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yAxis.getScaleValue(0),\n                    y0: d.y0 === null ? d.y0 : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: d.y === null ? d.y : yPx,\n                    y0: d.y0 === null ? d.y0 : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter ? textFormatter(textValue) : textValue,\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            if (d.x !== null && d.y !== null) {\n                points.push(point);\n            }\n\n            point.className = getIndividualClassName(d, i, data, this);\n        }\n\n        points = positionPoints(this, points);\n\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem) {\n    const groupElement = selectElement(elem);\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, elem);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    let mergedGroups;\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    const symbolGroups = mount.selectAll('g').data(points, params.keyFn);\n    const symbolEnter = symbolGroups.enter().append('g').attr('transform', d => `translate(${d.enter.x},${d.enter.y})`);\n    mergedGroups = symbolGroups.merge(symbolEnter)\n                    .each(function (d) {\n                        createShape(d, this);\n                    });\n    mergedGroups = disabled ? mergedGroups :\n        mergedGroups.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    mergedGroups.attr('transform', d => `translate(${d.update.x},${d.update.y})`)\n                    .each(function (d) {\n                        const style = d.style;\n                        const element = selectElement(this);\n                        objectIterator(style, key => element.style(key, style[key]));\n                        element.attr('class', `${className}`);\n                        element.classed(d.className, true);\n                    });\n\n    const exitGroups = symbolGroups.exit();\n    if (!disabled) {\n        exitGroups.transition().ease(easeFns[effect])\n                        .duration(duration)\n                        .on('end', function () {\n                            selectElement(this).remove();\n                        })\n                        .style('fill-opacity', 0)\n                        .style('stroke-opacity', 0);\n    } else {\n        exitGroups.remove();\n    }\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: d => d._id\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getClosestIndexOf,\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let index;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            index = getClosestIndexOf(filterData, value);\n            value = filterData[index];\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, groupAxes) => {\n    let axisKey;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, axis === X ? xAxes : yAxes);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, labelManager) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({ type: HEADER }, { labelManager })\n                    .source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    getClosestIndexOf,\n    toArray,\n    MeasureSubtype\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = filterData[getClosestIndexOf(filterData, key)];\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { DimensionSubtype, STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axisFields = context.fields();\n            const axesObj = context.axes();\n            if (dataModel && axisFields && axesObj) {\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n                ['x', 'y'].forEach((type) => {\n                    const field = axisFields[type][0];\n                    if (field && field.subtype() === DimensionSubtype.TEMPORAL) {\n                        timeDiffs[type] = field.getMinDiff();\n                        timeDiffsByField[field] = timeDiffs[type];\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiffs[type]));\n                    }\n                });\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {},\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} callback List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, callback) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return callback(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [callback(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} callback Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, callback) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            facetInfo.push([rowFacets, val]);\n            rowDataModels.push(...projectRows(selectedDataModel, fieldInfo));\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, callback);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, callback);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport { getObjProp, FieldType, STATE_NAMESPACES, createSelection } from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], aggregationFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], config.showHeaders ? TextCell : BlankCell, labelManager),\n            right: headerCreator(rightRows, rowHeaders[1], config.showHeaders ? TextCell : BlankCell, labelManager)\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.value);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.value) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: val => val\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${measurement.width}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n                    title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${measurement.width}px`)\n                    .style(HEIGHT, '100%')\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .node();\n};\n\n                                /**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (data, prop, labelManager, formatter) => {\n    const space = [];\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth) + effPadding;\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = maxItemSpaces.width - maxIconWidth;\n                totalWidth = Math.max(totalWidth, itemSpace.width) + effPadding;\n            }\n        }\n    });\n    totalWidth = Math.max(totalWidth, titleWidth);\n    totalHeight += titleHeight + effPadding;\n\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this.data(), VALUE, this._labelManager, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n           width,\n           height,\n           maxWidth,\n           maxHeight,\n           padding,\n           margin,\n           border\n       } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                 `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor\n        } = this.config();\n        const {\n           maxWidth,\n           maxHeight,\n           width,\n           height,\n           margin,\n           border\n       } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style('margin', `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.value]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    container.each(function (d) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1]));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const type = this.metaData().getData().schema[0].type;\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            if (type === 'measure') {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                value = domainForLegend[i];\n                range = [domainForLegend[i]];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${height}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    }\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","import { ROW_LEFT, ROW_RIGHT, COLUMN_BOTTOM, COLUMN_TOP, TOP, BOTTOM } from '../enums/constants';\n/**\n * This callback is used to filter the array of\n * placeholder cells and filter out cells which have\n * appeared in a previous row.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @param {string} type The type of matrix it is (rowLeft, rowRight, colTop, colBottom)\n * @return {boolean} flag to keep/remove element.\n */\nconst columnFilter = (colData, colIdx, matrix, rIdx, type) => {\n    const previousRow = matrix[rIdx - 1];\n    const currentRow = matrix[rIdx];\n\n    // Row Span for left\n    if (type === ROW_LEFT) {\n        if (!previousRow) {\n            return colData;\n        }\n        let i = 0;\n        for (;i <= colIdx; i += 1) {\n            if (currentRow[i].valueOf() !== previousRow[i].valueOf()) {\n                break;\n            }\n        }\n        return (i - 1 === colIdx) ? null : colData;\n    } else if (type === ROW_RIGHT) {\n        if (!previousRow || colIdx === 0) {\n            return colData;\n        }\n        let j = colIdx;\n        for (; j < currentRow.length; j += 1) {\n            if (previousRow[j].valueOf() !== currentRow[j].valueOf()) {\n                break;\n            }\n        }\n        return (j === currentRow.length) ? null : colData;\n    } else if (type === COLUMN_BOTTOM) {\n        if (rIdx === 0) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell) {\n            if (prevCell.valueOf() === colData.valueOf()) {\n                const nextRow = matrix[rIdx + 1];\n                if (!nextRow) {\n                    return null;\n                }\n                if (nextRow[colIdx].valueOf() === nextRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return colData;\n        }\n        return colData;\n    } else if (type === COLUMN_TOP) {\n        if (rIdx === matrix.length - 1 && matrix.length > 1) {\n            return colData;\n        }\n        const prevCell = currentRow[colIdx - 1];\n        if (prevCell && (prevCell.valueOf() === colData.valueOf())) {\n            const prevRow = matrix[rIdx - 1];\n            if (prevRow) {\n                if (prevRow[colIdx].valueOf() === prevRow[colIdx - 1].valueOf()) {\n                    return null;\n                }\n                return colData;\n            }\n            return null;\n        }\n        return colData;\n    }\n    return colData;\n};\n\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcRowSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx + count] && matrix[rIdx + count][colIdx] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n/**\n * This callback is used to calculate the rowspan\n * by checking for repeating entries in subsequent rows\n * at the specified column.\n *\n * @param {Placeholder} colData Instance of placeholder.\n * @param {number} colIdx The index of the placeholder in the array.\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {number} rIdx The index of the row of the placeholder in array.\n * @return {number} The row span.\n */\nconst calcColSpan = (colData, colIdx, matrix, rIdx) => {\n    let count = 1;\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData || typeof colData.valueOf() !== 'string') {\n        return 1;\n    }\n    let isNull = false;\n    while (!isNull) {\n        if (matrix[rIdx][colIdx + count] === null) {\n            count += 1;\n        } else {\n            isNull = true;\n        }\n    }\n    return count;\n};\n\n// create a masking matrix to strip out repeating columns\n// and calculate rowspan.\nconst mask = function (matrix, type) {\n    return matrix.map((row, rIdx) => {\n        if (type === ROW_LEFT || type === ROW_RIGHT) {\n            const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n            const temp = [];\n            const diff = row.length - filteredRow.length;\n            for (let i = 0; i < diff; i += 1) {\n                temp.push(null);\n            }\n            if (type === ROW_RIGHT) {\n                temp.unshift(...filteredRow);\n                return temp;\n            }\n            temp.push(...filteredRow);\n            return temp;\n        }\n\n        const filteredRow = row.map((col, colIndex) => columnFilter(col, colIndex, matrix, rIdx, type));\n        const temp = [];\n        temp.push(...filteredRow);\n        return temp;\n    });\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let span = '';\n    if (type === TOP || type === BOTTOM) {\n        span = type === TOP ? COLUMN_TOP : COLUMN_BOTTOM;\n        const viewMatrix = mask(matrix, span);\n        const spans = viewMatrix.map((row, ridx) => row.map((col, i) => calcColSpan(col, i, viewMatrix, ridx))\n                        .filter(col => col !== 1));\n        return { viewMatrix, spans };\n    } else if (index === 0 || index === 2) {\n        span = index === 0 ? ROW_LEFT : ROW_RIGHT;\n        const viewMatrix = mask(matrix, span);\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = calcRowSpan(col, i, viewMatrix, ridx);\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return { viewMatrix, spans };\n    }\n    return { viewMatrix: matrix };\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport { cellSpanMaker } from './span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, WIDTH, ROW_SPAN, COL_SPAN\n} from '../enums/constants';\nimport { BLANK_BORDERS } from './defaults';\n\n/**\n * Creates a table element of the layout\n *\n * @param {Object} mount Mount point for table elements\n * @param {string} className defines class name\n * @param {Array} rowData set of rows for the table\n * @return {Selection} set of selections for the table\n */\nfunction renderTable (mount, className, rowData) {\n    const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n    const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n    const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n    const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null && e.config().show).map(e =>\n                                ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n    return { table, body, rows, cells };\n}\n\nfunction applyRowBorders (cells, borderStyle, showBorders, color) {\n    [TOP, BOTTOM].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\nfunction applyColBorders (cells, borderStyle, showBorders, color) {\n    [LEFT, RIGHT].forEach((borderType) => {\n        const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n        cells.style(`border-${borderType}`, style);\n    });\n}\n\n/**\n * Applies borders to the cells in a matrix\n *\n * @param {Selection} cells Set of cells made from the matrix\n * @param {Object} border Border info for layout\n * @param {string} type Type of matrix(top/center/bottom)\n * @param {number} index Column index of matrix in the row\n */\nfunction applyBorders (cells, border, type, index) {\n    const {\n        width,\n        style,\n        color,\n        showRowBorders,\n        showColBorders,\n        showValueBorders\n    } = border;\n    const borderStyle = `${width}px ${style}`;\n\n    if (type === CENTER && index === 1) {\n        [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n            cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                color : BLANK_BORDERS}`);\n        });\n    } else if (type === CENTER) {\n        applyRowBorders(cells, borderStyle, showRowBorders, color);\n    } else if (index === 1) {\n        applyColBorders(cells, borderStyle, showColBorders, color);\n    }\n}\n\n/**\n * Renders a set of matrices in a row\n *\n * @param {Array} matrices Set of matrices in a row\n * @param {Selection} mountPoint Mount point for the row\n * @param {string} type top/center/bottom\n * @param {Object} dimensions dimensions of the matrix\n */\nfunction renderMatrix (matrices, mountPoint, type, dimensions, classPrefix) {\n    matrices.forEach((matrix, index) => {\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${type}-${index + 1}`)\n        .classed(`${classPrefix}-grid-${type}`, true)\n        .classed(`${classPrefix}-grid`, true);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(matrix, type, index);\n\n        // Rendering the table components\n        const { cells } = renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (type === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + dimensions.border.width}px`);\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth(), placeholder.availHeight() * span);\n                }\n                return span;\n            });\n        } else if ((type === TOP || type === BOTTOM) && index === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * span, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n\n        applyBorders(cells, dimensions.border, type, index);\n    });\n}\n\n/**\n * Renders all the matrices of the layout\n *\n * @export\n * @param {Array} matrices Set of matrices in the layout\n * @param {Array} mountPoints Mount points for each row of matrix\n * @param {Array} layoutDimensions Dimensions(height/width) of all the matrices\n */\nexport function renderMatrices (context, matrices, layoutDimensions) {\n    const {\n        top,\n        center,\n        bottom\n    } = matrices;\n    const {\n        classPrefix\n    } = context.config();\n    const {\n        width\n    } = context.measurement();\n    const mount = context.mountPoint();\n\n    const data = [\n        { type: TOP, matrix: top },\n        { type: CENTER, matrix: center },\n        { type: BOTTOM, matrix: bottom }\n    ];\n    makeElement(mount, 'div', data, `${classPrefix}-grid-layout-row`)\n                    .each(function (d, i) {\n                        const row = selectElement(this);\n                        row.classed(`${classPrefix}-grid-layout-row-${i}`, true);\n                        renderMatrix(d.matrix, row, d.type, layoutDimensions, classPrefix);\n                    })\n                    .style(WIDTH, `${Math.ceil(width)}px`);\n}\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { HEIGHT, WIDTH, COLUMN, ROW } from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const {\n        width,\n        height\n    } = layout.measurement();\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth, width / 2);\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Set width for column matrix\n    const columnMatrixWidth = width - maxRowMatrixWidth - borderWidth;\n\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    setViewSpaces(layout, COLUMN, columnViewPages);\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    // Set height for row matrix\n    const rowMatrixHeight = height - columnMatrixHeight;\n\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth, rowMatrixHeight);\n    // Get heights of each cell of row matrix\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n    // Get widths of each cell of column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n\n    return {\n        rowMatrixHeight,\n        rowMatrixWidth,\n        columnMatrixHeight,\n        columnMatrixWidth\n    };\n};\n\n/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const rowMatrixWidth = rowSpaces.width;\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const columnMatrixHeight = colSpaces.height;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = rowSpaces.rowHeights.primary.reduce((t, n) => t + n);\n    const centerWidth = colSpaces.columnWidths.primary.reduce((t, n) => t + n);\n\n    return {\n        viewWidth: [leftWidth, centerWidth, rightWidth],\n        viewHeight: [topHeight, centerHeight, bottomHeight]\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport {\n    renderMatrices\n} from './renderer';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements, getViewMeasurements, getViewMatrices } from './computations';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        computeLayoutMeasurements(this);\n        this.setViewInformation();\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation () {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n\n    /**\n     * Renders the layout\n     *\n     * @return {Object} current instance\n     * @memberof GridLayout\n     */\n    renderGrid (mountPoint) {\n        this.mountPoint(mountPoint);\n        if (!this.mountPoint()) {\n            return this;\n        }\n        const viewInfo = this.viewInfo();\n        const {\n                viewMatricesInfo,\n                layoutDimensions\n            } = viewInfo;\n            // Render matrices\n        renderMatrices(this, viewMatricesInfo.matrices, layoutDimensions);\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                elem.style(`padding-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n    let margin = {};\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.classPrefix = context.config().classPrefix;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height + config.padding;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.height,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).renderAt(component.id());\n            context.componentMap().get(host.name()).boundBox({\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n            });\n            // context.renderer().parentDiv.appendChild(childNode);\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL\n} from '../../constants';\n\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { legendSpace, height, width } = this.params.config.measurement;\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = align === VERTICAL ? legendSpace.width : width;\n        const legHeight = align === VERTICAL ? height : legendSpace.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n}\n","import { selectElement, makeElement } from 'muze-utils';\nimport { cellSpanMaker } from '../../../../layout/src/grid-layout/span-maker';\nimport {\n     TOP, LEFT, RIGHT, BOTTOM, CENTER, HEIGHT, WIDTH, ROW_SPAN, COL_SPAN\n} from '../../../../layout/src/enums/constants';\nimport { BLANK_BORDERS } from '../../../../layout/src/grid-layout/defaults';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        // const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n                .classed(`${classPrefix}-grid-${row}`, true)\n                .classed(`${classPrefix}-grid`, true);\n\n        const { viewMatrix, spans } = cellSpanMaker(this.component, row, column);\n        if (row !== CENTER) {\n            containerForMatrix.style(WIDTH, `${this.getLogicalSpace().width}px`);\n            containerForMatrix.style(HEIGHT, `${this.getLogicalSpace().height}px`);\n        }\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        if (row === CENTER && spans) {\n            cells.attr(ROW_SPAN, function (cell, colIndex) {\n                const placeholder = cell.placeholder;\n                selectElement(this).style('height', `${placeholder.availHeight() + border.width}px`);\n                return spans[cell.rowIndex][colIndex];\n            });\n        } else if ((row === TOP || row === BOTTOM) && column === 1) {\n            cells.attr(COL_SPAN, function (cell, colIndex) {\n                const span = spans[cell.rowIndex][colIndex];\n                const placeholder = cell.placeholder;\n                if (span > 1) {\n                    placeholder.setAvailableSpace(placeholder.availWidth() * spans, placeholder.availHeight());\n                }\n                selectElement(this).style('height', `${placeholder.availHeight()}px`);\n                return span;\n            });\n        }\n        // Rendering content within placeholders\n        cells.each(function (cell) {\n            cell.placeholder && cell.placeholder.render(this);\n        }).exit().each((cell) => {\n            cell.placeholder && cell.placeholder.remove();\n        });\n        this.applyBorders(cells, border, row, column);\n    }\n\n    applyBorders (cells, border, type, index) {\n        const {\n          width,\n          style,\n          color,\n          showRowBorders,\n          showColBorders,\n          showValueBorders\n      } = border;\n        const borderStyle = `${width}px ${style}`;\n\n        if (type === CENTER && index === 1) {\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((borderType) => {\n                cells.style(`border-${borderType}`, `${borderStyle} ${showValueBorders[borderType] ?\n                  color : BLANK_BORDERS}`);\n            });\n        } else if (type === CENTER) {\n            this.applyRowBorders(cells, borderStyle, showRowBorders, color);\n        } else if (index === 1) {\n            this.applyColBorders(cells, borderStyle, showColBorders, color);\n        }\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    applyRowBorders (cells, borderStyle, showBorders, color) {\n        [TOP, BOTTOM].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    applyColBorders (cells, borderStyle, showBorders, color) {\n        [LEFT, RIGHT].forEach((borderType) => {\n            const style = `${borderStyle} ${showBorders[borderType] ? color : BLANK_BORDERS}`;\n            cells.style(`border-${borderType}`, style);\n        });\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n        this.component = this.gridComponents;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n    }\n}\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 3,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT, TITLE, SUB_TITLE, LEGEND } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../layout/src/enums/constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend\n    } = context.config();\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n// const _getLegendOf = (legends, type) => legends.find(legend => legend.scaleType === type);\n\nexport const renderLayout = (layoutManager, grid, renderDetails) => {\n    // generate component wrappers\n\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n    // title;\n    let titleWrapper = null;\n    if (components.headers && components.headers.titleCell) {\n        const title = components.headers.titleCell;\n        let titleConfig = layoutConfig.title;\n        titleConfig = Object.assign({}, titleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: TITLE_CONFIG.className });\n        if (layoutManager.getComponent(TITLE)) {\n            titleWrapper = layoutManager\n                            .getComponent(TITLE)\n                            .updateWrapper({ name: TITLE, component: title, config: titleConfig });\n        } else {\n            titleWrapper = new HeaderComponent({ name: TITLE, component: title, config: titleConfig });\n        }\n    }\n\n     // subtitle\n    let subtitleWrapper = null;\n    if (components.headers && components.headers.subtitleCell) {\n        const subtitle = components.headers.subtitleCell;\n        let subtitleConfig = layoutConfig.subtitle;\n\n        subtitleConfig = Object.assign({}, subtitleConfig, { classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: SUB_TITLE_CONFIG.className });\n        if (layoutManager.getComponent(SUB_TITLE)) {\n            subtitleWrapper = layoutManager\n                                .getComponent(SUB_TITLE)\n                                .updateWrapper({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        } else {\n            subtitleWrapper = new HeaderComponent({ name: SUB_TITLE, component: subtitle, config: subtitleConfig });\n        }\n    }\n\n    // color legend\n    let colorLegendWrapper = null;\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n\n        if (layoutManager.getComponent(LEGEND)) {\n            colorLegendWrapper = layoutManager\n                                .getComponent(LEGEND)\n                                .updateWrapper({\n                                    name: LEGEND,\n                                    component: components.legends,\n                                    config: legendConfig });\n        } else {\n            colorLegendWrapper = new LegendComponent({\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig });\n        }\n    }\n\n    // grid components\n\n    let gridWrapper = null;\n\n    if (layoutManager.getComponent(GRID)) {\n        gridWrapper = layoutManager\n                            .getComponent(GRID)\n                            .updateWrapper({\n                                name: GRID,\n                                component: grid,\n                                config: { ...target,\n                                    classPrefix: layoutConfig.classPrefix,\n                                    dimensions: { height: 0, width: 0 } }\n                            });\n    } else {\n        gridWrapper = new GridComponent({\n            name: GRID,\n            component: grid,\n            config: { ...target,\n                classPrefix: layoutConfig.classPrefix,\n                dimensions: { height: 0, width: 0 } }\n        });\n    }\n\n    layoutManager.registerComponents([\n        titleWrapper,\n        subtitleWrapper,\n        colorLegendWrapper,\n        gridWrapper\n    ]).compute();\n};\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","import { isEqual, STATE_NAMESPACES, selectElement } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                if (xAxes[i][j].renderConfig().labels.rotation !== 0) {\n                    rotation = xAxes[i][j].renderConfig().labels.rotation;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits } from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this._layoutManager, this.layout(), renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}